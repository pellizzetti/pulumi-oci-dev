// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.AiAnomalyDetection
{
    public static class GetDataAssets
    {
        /// <summary>
        /// This data source provides the list of Data Assets in Oracle Cloud Infrastructure Ai Anomaly Detection service.
        /// 
        /// Returns a list of DataAssets.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var testDataAssets = Output.Create(Oci.AiAnomalyDetection.GetDataAssets.InvokeAsync(new Oci.AiAnomalyDetection.GetDataAssetsArgs
        ///         {
        ///             CompartmentId = @var.Compartment_id,
        ///             DisplayName = @var.Data_asset_display_name,
        ///             ProjectId = oci_ai_anomaly_detection_project.Test_project.Id,
        ///             State = @var.Data_asset_state,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetDataAssetsResult> InvokeAsync(GetDataAssetsArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetDataAssetsResult>("oci:aianomalydetection/getDataAssets:getDataAssets", args ?? new GetDataAssetsArgs(), options.WithVersion());
    }


    public sealed class GetDataAssetsArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the compartment in which to list resources.
        /// </summary>
        [Input("compartmentId", required: true)]
        public string CompartmentId { get; set; } = null!;

        /// <summary>
        /// A filter to return only resources that match the entire display name given.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("filters")]
        private List<Inputs.GetDataAssetsFilterArgs>? _filters;
        public List<Inputs.GetDataAssetsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetDataAssetsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The ID of the project for which to list the objects.
        /// </summary>
        [Input("projectId")]
        public string? ProjectId { get; set; }

        /// <summary>
        /// &lt;b&gt;Filter&lt;/b&gt; results by the specified lifecycle state. Must be a valid state for the resource type.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        public GetDataAssetsArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetDataAssetsResult
    {
        /// <summary>
        /// The OCID of the compartment containing the DataAsset.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// The list of data_asset_collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDataAssetsDataAssetCollectionResult> DataAssetCollections;
        /// <summary>
        /// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
        /// </summary>
        public readonly string? DisplayName;
        public readonly ImmutableArray<Outputs.GetDataAssetsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The Unique project id which is created at project creation that is immutable on creation.
        /// </summary>
        public readonly string? ProjectId;
        /// <summary>
        /// The lifecycle state of the Data Asset.
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetDataAssetsResult(
            string compartmentId,

            ImmutableArray<Outputs.GetDataAssetsDataAssetCollectionResult> dataAssetCollections,

            string? displayName,

            ImmutableArray<Outputs.GetDataAssetsFilterResult> filters,

            string id,

            string? projectId,

            string? state)
        {
            CompartmentId = compartmentId;
            DataAssetCollections = dataAssetCollections;
            DisplayName = displayName;
            Filters = filters;
            Id = id;
            ProjectId = projectId;
            State = state;
        }
    }
}
