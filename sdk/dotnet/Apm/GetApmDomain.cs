// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Apm
{
    public static class GetApmDomain
    {
        /// <summary>
        /// This data source provides details about a specific Apm Domain resource in Oracle Cloud Infrastructure Apm service.
        /// 
        /// Gets details of APM Domain by identifier
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var testApmDomain = Output.Create(Oci.Apm.GetApmDomain.InvokeAsync(new Oci.Apm.GetApmDomainArgs
        ///         {
        ///             ApmDomainId = oci_apm_apm_domain.Test_apm_domain.Id,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetApmDomainResult> InvokeAsync(GetApmDomainArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetApmDomainResult>("oci:apm/getApmDomain:getApmDomain", args ?? new GetApmDomainArgs(), options.WithVersion());
    }


    public sealed class GetApmDomainArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// OCID of the APM Domain
        /// </summary>
        [Input("apmDomainId", required: true)]
        public string ApmDomainId { get; set; } = null!;

        public GetApmDomainArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetApmDomainResult
    {
        public readonly string ApmDomainId;
        /// <summary>
        /// The OCID of the compartment corresponding to the APM Domain.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Where APM Agents upload their observations and metrics.
        /// </summary>
        public readonly string DataUploadEndpoint;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> DefinedTags;
        /// <summary>
        /// Description of the APM Domain.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// APM Domain display name, can be updated.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> FreeformTags;
        /// <summary>
        /// Unique identifier that is immutable on creation.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Indicates if this is an Always Free resource.
        /// </summary>
        public readonly bool IsFreeTier;
        /// <summary>
        /// The current lifecycle state of the APM Domain.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The time the the APM Domain was created. An RFC3339 formatted datetime string
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The time the APM Domain was updated. An RFC3339 formatted datetime string
        /// </summary>
        public readonly string TimeUpdated;

        [OutputConstructor]
        private GetApmDomainResult(
            string apmDomainId,

            string compartmentId,

            string dataUploadEndpoint,

            ImmutableDictionary<string, object> definedTags,

            string description,

            string displayName,

            ImmutableDictionary<string, object> freeformTags,

            string id,

            bool isFreeTier,

            string state,

            string timeCreated,

            string timeUpdated)
        {
            ApmDomainId = apmDomainId;
            CompartmentId = compartmentId;
            DataUploadEndpoint = dataUploadEndpoint;
            DefinedTags = definedTags;
            Description = description;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            Id = id;
            IsFreeTier = isFreeTier;
            State = state;
            TimeCreated = timeCreated;
            TimeUpdated = timeUpdated;
        }
    }
}
