// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.ContainerEngine.Outputs
{

    [OutputType]
    public sealed class GetClustersClusterResult
    {
        /// <summary>
        /// Available Kubernetes versions to which the clusters masters may be upgraded.
        /// </summary>
        public readonly ImmutableArray<string> AvailableKubernetesUpgrades;
        /// <summary>
        /// The OCID of the compartment.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// The network configuration for access to the Cluster control plane.
        /// </summary>
        public readonly Outputs.GetClustersClusterEndpointConfigResult EndpointConfig;
        /// <summary>
        /// Endpoints served up by the cluster masters.
        /// </summary>
        public readonly Outputs.GetClustersClusterEndpointsResult Endpoints;
        /// <summary>
        /// The OCID of the cluster.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The image verification policy for signature validation.
        /// </summary>
        public readonly Outputs.GetClustersClusterImagePolicyConfigResult ImagePolicyConfig;
        /// <summary>
        /// The OCID of the KMS key to be used as the master encryption key for Kubernetes secret encryption.
        /// </summary>
        public readonly string KmsKeyId;
        /// <summary>
        /// The version of Kubernetes running on the cluster masters.
        /// </summary>
        public readonly string KubernetesVersion;
        /// <summary>
        /// Details about the state of the cluster masters.
        /// </summary>
        public readonly string LifecycleDetails;
        /// <summary>
        /// Metadata about the cluster.
        /// </summary>
        public readonly Outputs.GetClustersClusterMetadataResult Metadata;
        /// <summary>
        /// The name to filter on.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Optional attributes for the cluster.
        /// </summary>
        public readonly Outputs.GetClustersClusterOptionsResult Options;
        /// <summary>
        /// A cluster lifecycle state to filter on. Can have multiple parameters of this name.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The OCID of the virtual cloud network (VCN) in which the cluster exists.
        /// </summary>
        public readonly string VcnId;

        [OutputConstructor]
        private GetClustersClusterResult(
            ImmutableArray<string> availableKubernetesUpgrades,

            string compartmentId,

            Outputs.GetClustersClusterEndpointConfigResult endpointConfig,

            Outputs.GetClustersClusterEndpointsResult endpoints,

            string id,

            Outputs.GetClustersClusterImagePolicyConfigResult imagePolicyConfig,

            string kmsKeyId,

            string kubernetesVersion,

            string lifecycleDetails,

            Outputs.GetClustersClusterMetadataResult metadata,

            string name,

            Outputs.GetClustersClusterOptionsResult options,

            string state,

            string vcnId)
        {
            AvailableKubernetesUpgrades = availableKubernetesUpgrades;
            CompartmentId = compartmentId;
            EndpointConfig = endpointConfig;
            Endpoints = endpoints;
            Id = id;
            ImagePolicyConfig = imagePolicyConfig;
            KmsKeyId = kmsKeyId;
            KubernetesVersion = kubernetesVersion;
            LifecycleDetails = lifecycleDetails;
            Metadata = metadata;
            Name = name;
            Options = options;
            State = state;
            VcnId = vcnId;
        }
    }
}
