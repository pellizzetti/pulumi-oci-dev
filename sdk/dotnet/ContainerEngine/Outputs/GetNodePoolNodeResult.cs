// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.ContainerEngine.Outputs
{

    [OutputType]
    public sealed class GetNodePoolNodeResult
    {
        /// <summary>
        /// The name of the availability domain in which this node is placed.
        /// </summary>
        public readonly string AvailabilityDomain;
        /// <summary>
        /// An error that may be associated with the node.
        /// </summary>
        public readonly Outputs.GetNodePoolNodeErrorResult Error;
        /// <summary>
        /// The fault domain of this node.
        /// </summary>
        public readonly string FaultDomain;
        /// <summary>
        /// The OCID of the compute instance backing this node.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The version of Kubernetes this node is running.
        /// </summary>
        public readonly string KubernetesVersion;
        /// <summary>
        /// Details about the state of the node.
        /// </summary>
        public readonly string LifecycleDetails;
        /// <summary>
        /// The name of the node.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The OCID of the node pool.
        /// </summary>
        public readonly string NodePoolId;
        /// <summary>
        /// The private IP address of this node.
        /// </summary>
        public readonly string PrivateIp;
        /// <summary>
        /// The public IP address of this node.
        /// </summary>
        public readonly string PublicIp;
        /// <summary>
        /// The state of the node.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The OCID of the subnet in which this node is placed.
        /// </summary>
        public readonly string SubnetId;

        [OutputConstructor]
        private GetNodePoolNodeResult(
            string availabilityDomain,

            Outputs.GetNodePoolNodeErrorResult error,

            string faultDomain,

            string id,

            string kubernetesVersion,

            string lifecycleDetails,

            string name,

            string nodePoolId,

            string privateIp,

            string publicIp,

            string state,

            string subnetId)
        {
            AvailabilityDomain = availabilityDomain;
            Error = error;
            FaultDomain = faultDomain;
            Id = id;
            KubernetesVersion = kubernetesVersion;
            LifecycleDetails = lifecycleDetails;
            Name = name;
            NodePoolId = nodePoolId;
            PrivateIp = privateIp;
            PublicIp = publicIp;
            State = state;
            SubnetId = subnetId;
        }
    }
}
