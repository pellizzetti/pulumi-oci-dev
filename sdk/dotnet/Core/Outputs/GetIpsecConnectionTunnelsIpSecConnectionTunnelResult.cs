// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Core.Outputs
{

    [OutputType]
    public sealed class GetIpsecConnectionTunnelsIpSecConnectionTunnelResult
    {
        /// <summary>
        /// Information for establishing a BGP session for the IPSec tunnel.
        /// </summary>
        public readonly Outputs.GetIpsecConnectionTunnelsIpSecConnectionTunnelBgpSessionInfoResult BgpSessionInfo;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the tunnel.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// The IP address of the CPE's VPN headend.  Example: `203.0.113.22`
        /// </summary>
        public readonly string CpeIp;
        /// <summary>
        /// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Configuration information used by the encryption domain policy.
        /// </summary>
        public readonly Outputs.GetIpsecConnectionTunnelsIpSecConnectionTunnelEncryptionDomainConfigResult EncryptionDomainConfig;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the tunnel.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Internet Key Exchange protocol version.
        /// </summary>
        public readonly string IkeVersion;
        /// <summary>
        /// The type of routing used for this tunnel (either BGP dynamic routing or static routing).
        /// </summary>
        public readonly string Routing;
        /// <summary>
        /// The tunnel's lifecycle state.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The status of the tunnel based on IPSec protocol characteristics.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// The date and time the IPSec connection tunnel was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// When the status of the tunnel last changed, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
        /// </summary>
        public readonly string TimeStatusUpdated;
        /// <summary>
        /// The IP address of Oracle's VPN headend.  Example: `203.0.113.21`
        /// </summary>
        public readonly string VpnIp;

        [OutputConstructor]
        private GetIpsecConnectionTunnelsIpSecConnectionTunnelResult(
            Outputs.GetIpsecConnectionTunnelsIpSecConnectionTunnelBgpSessionInfoResult bgpSessionInfo,

            string compartmentId,

            string cpeIp,

            string displayName,

            Outputs.GetIpsecConnectionTunnelsIpSecConnectionTunnelEncryptionDomainConfigResult encryptionDomainConfig,

            string id,

            string ikeVersion,

            string routing,

            string state,

            string status,

            string timeCreated,

            string timeStatusUpdated,

            string vpnIp)
        {
            BgpSessionInfo = bgpSessionInfo;
            CompartmentId = compartmentId;
            CpeIp = cpeIp;
            DisplayName = displayName;
            EncryptionDomainConfig = encryptionDomainConfig;
            Id = id;
            IkeVersion = ikeVersion;
            Routing = routing;
            State = state;
            Status = status;
            TimeCreated = timeCreated;
            TimeStatusUpdated = timeStatusUpdated;
            VpnIp = vpnIp;
        }
    }
}
