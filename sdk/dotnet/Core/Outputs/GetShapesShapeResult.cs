// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Core.Outputs
{

    [OutputType]
    public sealed class GetShapesShapeResult
    {
        /// <summary>
        /// For a subcore burstable VM, the supported baseline OCPU utilization for instances that use this shape.
        /// </summary>
        public readonly ImmutableArray<string> BaselineOcpuUtilizations;
        /// <summary>
        /// A short description of the graphics processing unit (GPU) available for this shape.
        /// </summary>
        public readonly string GpuDescription;
        /// <summary>
        /// The number of GPUs available for this shape.
        /// </summary>
        public readonly int Gpus;
        /// <summary>
        /// Whether Live Migration is currently supported for this shape.
        /// </summary>
        public readonly bool IsLiveMigrationSupported;
        /// <summary>
        /// A short description of the local disks available for this shape.
        /// </summary>
        public readonly string LocalDiskDescription;
        /// <summary>
        /// The number of local disks available for this shape.
        /// </summary>
        public readonly int LocalDisks;
        /// <summary>
        /// The aggregate size of the local disks available for this shape, in gigabytes.
        /// </summary>
        public readonly double LocalDisksTotalSizeInGbs;
        /// <summary>
        /// For a flexible shape, the number of VNIC attachments that are available for instances that use this shape.
        /// </summary>
        public readonly Outputs.GetShapesShapeMaxVnicAttachmentOptionsResult MaxVnicAttachmentOptions;
        /// <summary>
        /// The maximum number of VNIC attachments available for this shape.
        /// </summary>
        public readonly int MaxVnicAttachments;
        /// <summary>
        /// The default amount of memory available for this shape, in gigabytes.
        /// </summary>
        public readonly double MemoryInGbs;
        /// <summary>
        /// For a flexible shape, the amount of memory available for instances that use this shape.
        /// </summary>
        public readonly Outputs.GetShapesShapeMemoryOptionsResult MemoryOptions;
        /// <summary>
        /// For a subcore burstable VM, the minimum total baseline OCPUs required. The total baseline OCPUs is equal to baselineOcpuUtilization chosen multiplied by the number of OCPUs chosen.
        /// </summary>
        public readonly double MinTotalBaselineOcpusRequired;
        /// <summary>
        /// The name of the shape. You can enumerate all available shapes by calling [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Shape/ListShapes).
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The networking bandwidth available for this shape, in gigabits per second.
        /// </summary>
        public readonly double NetworkingBandwidthInGbps;
        /// <summary>
        /// For a flexible shape, the amount of networking bandwidth available for instances that use this shape.
        /// </summary>
        public readonly Outputs.GetShapesShapeNetworkingBandwidthOptionsResult NetworkingBandwidthOptions;
        /// <summary>
        /// For a flexible shape, the number of OCPUs available for instances that use this shape.
        /// </summary>
        public readonly Outputs.GetShapesShapeOcpuOptionsResult OcpuOptions;
        /// <summary>
        /// The default number of OCPUs available for this shape.
        /// </summary>
        public readonly double Ocpus;
        /// <summary>
        /// A short description of the shape's processor (CPU).
        /// </summary>
        public readonly string ProcessorDescription;

        [OutputConstructor]
        private GetShapesShapeResult(
            ImmutableArray<string> baselineOcpuUtilizations,

            string gpuDescription,

            int gpus,

            bool isLiveMigrationSupported,

            string localDiskDescription,

            int localDisks,

            double localDisksTotalSizeInGbs,

            Outputs.GetShapesShapeMaxVnicAttachmentOptionsResult maxVnicAttachmentOptions,

            int maxVnicAttachments,

            double memoryInGbs,

            Outputs.GetShapesShapeMemoryOptionsResult memoryOptions,

            double minTotalBaselineOcpusRequired,

            string name,

            double networkingBandwidthInGbps,

            Outputs.GetShapesShapeNetworkingBandwidthOptionsResult networkingBandwidthOptions,

            Outputs.GetShapesShapeOcpuOptionsResult ocpuOptions,

            double ocpus,

            string processorDescription)
        {
            BaselineOcpuUtilizations = baselineOcpuUtilizations;
            GpuDescription = gpuDescription;
            Gpus = gpus;
            IsLiveMigrationSupported = isLiveMigrationSupported;
            LocalDiskDescription = localDiskDescription;
            LocalDisks = localDisks;
            LocalDisksTotalSizeInGbs = localDisksTotalSizeInGbs;
            MaxVnicAttachmentOptions = maxVnicAttachmentOptions;
            MaxVnicAttachments = maxVnicAttachments;
            MemoryInGbs = memoryInGbs;
            MemoryOptions = memoryOptions;
            MinTotalBaselineOcpusRequired = minTotalBaselineOcpusRequired;
            Name = name;
            NetworkingBandwidthInGbps = networkingBandwidthInGbps;
            NetworkingBandwidthOptions = networkingBandwidthOptions;
            OcpuOptions = ocpuOptions;
            Ocpus = ocpus;
            ProcessorDescription = processorDescription;
        }
    }
}
