// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Database
{
    public static class GetMaintenanceRun
    {
        /// <summary>
        /// This data source provides details about a specific Maintenance Run resource in Oracle Cloud Infrastructure Database service.
        /// 
        /// Gets information about the specified maintenance run.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var testMaintenanceRun = Output.Create(Oci.Database.GetMaintenanceRun.InvokeAsync(new Oci.Database.GetMaintenanceRunArgs
        ///         {
        ///             MaintenanceRunId = oci_database_maintenance_run.Test_maintenance_run.Id,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetMaintenanceRunResult> InvokeAsync(GetMaintenanceRunArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetMaintenanceRunResult>("oci:database/getMaintenanceRun:getMaintenanceRun", args ?? new GetMaintenanceRunArgs(), options.WithVersion());
    }


    public sealed class GetMaintenanceRunArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The maintenance run OCID.
        /// </summary>
        [Input("maintenanceRunId", required: true)]
        public string MaintenanceRunId { get; set; } = null!;

        public GetMaintenanceRunArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetMaintenanceRunResult
    {
        /// <summary>
        /// The OCID of the compartment.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Description of the maintenance run.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The user-friendly name for the maintenance run.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// The OCID of the maintenance run.
        /// </summary>
        public readonly string Id;
        public readonly bool IsEnabled;
        public readonly bool IsPatchNowEnabled;
        /// <summary>
        /// Additional information about the current lifecycle state.
        /// </summary>
        public readonly string LifecycleDetails;
        public readonly string MaintenanceRunId;
        /// <summary>
        /// Maintenance sub-type.
        /// </summary>
        public readonly string MaintenanceSubtype;
        /// <summary>
        /// Maintenance type.
        /// </summary>
        public readonly string MaintenanceType;
        /// <summary>
        /// Contain the patch failure count.
        /// </summary>
        public readonly int PatchFailureCount;
        /// <summary>
        /// The unique identifier of the patch. The identifier string includes the patch type, the Oracle Database version, and the patch creation date (using the format YYMMDD). For example, the identifier `ru_patch_19.9.0.0_201030` is used for an RU patch for Oracle Database 19.9.0.0 that was released October 30, 2020.
        /// </summary>
        public readonly string PatchId;
        /// <summary>
        /// Cloud Exadata infrastructure node patching method, either "ROLLING" or "NONROLLING". Default value is ROLLING.
        /// </summary>
        public readonly string PatchingMode;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the maintenance run for the Autonomous Data Guard association's peer container database.
        /// </summary>
        public readonly string PeerMaintenanceRunId;
        /// <summary>
        /// The current state of the maintenance run. For Autonomous Database on shared Exadata infrastructure, valid states are IN_PROGRESS, SUCCEEDED and FAILED.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The ID of the target resource on which the maintenance run occurs.
        /// </summary>
        public readonly string TargetResourceId;
        /// <summary>
        /// The type of the target resource on which the maintenance run occurs.
        /// </summary>
        public readonly string TargetResourceType;
        /// <summary>
        /// The date and time the maintenance run was completed.
        /// </summary>
        public readonly string TimeEnded;
        /// <summary>
        /// The date and time the maintenance run is scheduled to occur.
        /// </summary>
        public readonly string TimeScheduled;
        /// <summary>
        /// The date and time the maintenance run starts.
        /// </summary>
        public readonly string TimeStarted;

        [OutputConstructor]
        private GetMaintenanceRunResult(
            string compartmentId,

            string description,

            string displayName,

            string id,

            bool isEnabled,

            bool isPatchNowEnabled,

            string lifecycleDetails,

            string maintenanceRunId,

            string maintenanceSubtype,

            string maintenanceType,

            int patchFailureCount,

            string patchId,

            string patchingMode,

            string peerMaintenanceRunId,

            string state,

            string targetResourceId,

            string targetResourceType,

            string timeEnded,

            string timeScheduled,

            string timeStarted)
        {
            CompartmentId = compartmentId;
            Description = description;
            DisplayName = displayName;
            Id = id;
            IsEnabled = isEnabled;
            IsPatchNowEnabled = isPatchNowEnabled;
            LifecycleDetails = lifecycleDetails;
            MaintenanceRunId = maintenanceRunId;
            MaintenanceSubtype = maintenanceSubtype;
            MaintenanceType = maintenanceType;
            PatchFailureCount = patchFailureCount;
            PatchId = patchId;
            PatchingMode = patchingMode;
            PeerMaintenanceRunId = peerMaintenanceRunId;
            State = state;
            TargetResourceId = targetResourceId;
            TargetResourceType = targetResourceType;
            TimeEnded = timeEnded;
            TimeScheduled = timeScheduled;
            TimeStarted = timeStarted;
        }
    }
}
