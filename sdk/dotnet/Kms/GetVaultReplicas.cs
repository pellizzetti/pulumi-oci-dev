// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.Kms
{
    public static class GetVaultReplicas
    {
        /// <summary>
        /// This data source provides the list of Vault Replicas in Oracle Cloud Infrastructure Kms service.
        /// 
        /// Lists the replicas for a vault
        /// 
        /// As a provisioning operation, this call is subject to a Key Management limit that applies to
        /// the total number of requests across all provisioning write operations. Key Management might
        /// throttle this call to reject an otherwise valid request when the total rate of provisioning
        /// write operations exceeds 10 requests per second for a given tenancy.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var testVaultReplicas = Output.Create(Oci.Kms.GetVaultReplicas.InvokeAsync(new Oci.Kms.GetVaultReplicasArgs
        ///         {
        ///             VaultId = oci_kms_vault.Test_vault.Id,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetVaultReplicasResult> InvokeAsync(GetVaultReplicasArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetVaultReplicasResult>("oci:kms/getVaultReplicas:getVaultReplicas", args ?? new GetVaultReplicasArgs(), options.WithVersion());
    }


    public sealed class GetVaultReplicasArgs : Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetVaultReplicasFilterArgs>? _filters;
        public List<Inputs.GetVaultReplicasFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetVaultReplicasFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The OCID of the vault.
        /// </summary>
        [Input("vaultId", required: true)]
        public string VaultId { get; set; } = null!;

        public GetVaultReplicasArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetVaultReplicasResult
    {
        public readonly ImmutableArray<Outputs.GetVaultReplicasFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string VaultId;
        /// <summary>
        /// The list of vault_replicas.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetVaultReplicasVaultReplicaResult> VaultReplicas;

        [OutputConstructor]
        private GetVaultReplicasResult(
            ImmutableArray<Outputs.GetVaultReplicasFilterResult> filters,

            string id,

            string vaultId,

            ImmutableArray<Outputs.GetVaultReplicasVaultReplicaResult> vaultReplicas)
        {
            Filters = filters;
            Id = id;
            VaultId = vaultId;
            VaultReplicas = vaultReplicas;
        }
    }
}
