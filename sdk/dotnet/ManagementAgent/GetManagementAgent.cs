// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.ManagementAgent
{
    public static class GetManagementAgent
    {
        /// <summary>
        /// This data source provides details about a specific Management Agent resource in Oracle Cloud Infrastructure Management Agent service.
        /// 
        /// Gets complete details of the inventory of a given agent id
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Oci = Pulumi.Oci;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var testManagementAgent = Output.Create(Oci.ManagementAgent.GetManagementAgent.InvokeAsync(new Oci.ManagementAgent.GetManagementAgentArgs
        ///         {
        ///             ManagementAgentId = oci_management_agent_management_agent.Test_management_agent.Id,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetManagementAgentResult> InvokeAsync(GetManagementAgentArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetManagementAgentResult>("oci:managementagent/getManagementAgent:getManagementAgent", args ?? new GetManagementAgentArgs(), options.WithVersion());
    }


    public sealed class GetManagementAgentArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Unique Management Agent identifier
        /// </summary>
        [Input("managementAgentId", required: true)]
        public string ManagementAgentId { get; set; } = null!;

        public GetManagementAgentArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetManagementAgentResult
    {
        /// <summary>
        /// The current availability status of managementAgent
        /// </summary>
        public readonly string AvailabilityStatus;
        /// <summary>
        /// Compartment Identifier
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> DefinedTags;
        public readonly ImmutableArray<string> DeployPluginsIds;
        /// <summary>
        /// Management Agent Name
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
        /// </summary>
        public readonly ImmutableDictionary<string, object> FreeformTags;
        /// <summary>
        /// Management Agent host machine name
        /// </summary>
        public readonly string Host;
        /// <summary>
        /// agent identifier
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// agent install key identifier
        /// </summary>
        public readonly string InstallKeyId;
        /// <summary>
        /// Path where Management Agent is installed
        /// </summary>
        public readonly string InstallPath;
        /// <summary>
        /// true if the agent can be upgraded automatically; false if it must be upgraded manually. true is currently unsupported.
        /// </summary>
        public readonly bool IsAgentAutoUpgradable;
        /// <summary>
        /// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
        /// </summary>
        public readonly string LifecycleDetails;
        public readonly string ManagedAgentId;
        public readonly string ManagementAgentId;
        /// <summary>
        /// Platform Name
        /// </summary>
        public readonly string PlatformName;
        /// <summary>
        /// Platform Type
        /// </summary>
        public readonly string PlatformType;
        /// <summary>
        /// Platform Version
        /// </summary>
        public readonly string PlatformVersion;
        /// <summary>
        /// list of managementAgentPlugins associated with the agent
        /// </summary>
        public readonly ImmutableArray<Outputs.GetManagementAgentPluginListResult> PluginLists;
        /// <summary>
        /// The current state of managementAgent
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The time the Management Agent was created. An RFC3339 formatted datetime string
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The time the Management Agent has last recorded its health status in telemetry. This value will be null if the agent has not recorded its health status in last 7 days. An RFC3339 formatted datetime string
        /// </summary>
        public readonly string TimeLastHeartbeat;
        /// <summary>
        /// The time the Management Agent was updated. An RFC3339 formatted datetime string
        /// </summary>
        public readonly string TimeUpdated;
        /// <summary>
        /// Management Agent Version
        /// </summary>
        public readonly string Version;

        [OutputConstructor]
        private GetManagementAgentResult(
            string availabilityStatus,

            string compartmentId,

            ImmutableDictionary<string, object> definedTags,

            ImmutableArray<string> deployPluginsIds,

            string displayName,

            ImmutableDictionary<string, object> freeformTags,

            string host,

            string id,

            string installKeyId,

            string installPath,

            bool isAgentAutoUpgradable,

            string lifecycleDetails,

            string managedAgentId,

            string managementAgentId,

            string platformName,

            string platformType,

            string platformVersion,

            ImmutableArray<Outputs.GetManagementAgentPluginListResult> pluginLists,

            string state,

            string timeCreated,

            string timeLastHeartbeat,

            string timeUpdated,

            string version)
        {
            AvailabilityStatus = availabilityStatus;
            CompartmentId = compartmentId;
            DefinedTags = definedTags;
            DeployPluginsIds = deployPluginsIds;
            DisplayName = displayName;
            FreeformTags = freeformTags;
            Host = host;
            Id = id;
            InstallKeyId = installKeyId;
            InstallPath = installPath;
            IsAgentAutoUpgradable = isAgentAutoUpgradable;
            LifecycleDetails = lifecycleDetails;
            ManagedAgentId = managedAgentId;
            ManagementAgentId = managementAgentId;
            PlatformName = platformName;
            PlatformType = platformType;
            PlatformVersion = platformVersion;
            PluginLists = pluginLists;
            State = state;
            TimeCreated = timeCreated;
            TimeLastHeartbeat = timeLastHeartbeat;
            TimeUpdated = timeUpdated;
            Version = version;
        }
    }
}
