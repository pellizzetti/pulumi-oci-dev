// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Oci.ObjectStorage
{
    /// <summary>
    /// This resource provides the Object resource in Oracle Cloud Infrastructure Object Storage service.
    /// 
    /// Creates a new object or overwrites an existing object with the same name. The maximum object size allowed by
    /// PutObject is 50 GiB.
    /// 
    /// See [Object Names](https://docs.cloud.oracle.com/iaas/Content/Object/Tasks/managingobjects.htm#namerequirements)
    /// for object naming requirements.
    /// 
    /// See [Special Instructions for Object Storage PUT](https://docs.cloud.oracle.com/iaas/Content/API/Concepts/signingrequests.htm#ObjectStoragePut)
    /// for request signature requirements.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Oci = Pulumi.Oci;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var testObject = new Oci.ObjectStorage.ObjectstorageObject("testObject", new Oci.ObjectStorage.ObjectstorageObjectArgs
    ///         {
    ///             Bucket = @var.Object_bucket,
    ///             Content = @var.Object_content,
    ///             Namespace = @var.Object_namespace,
    ///             Object = @var.Object_object,
    ///             CacheControl = @var.Object_cache_control,
    ///             ContentDisposition = @var.Object_content_disposition,
    ///             ContentEncoding = @var.Object_content_encoding,
    ///             ContentLanguage = @var.Object_content_language,
    ///             ContentType = @var.Object_content_type,
    ///             DeleteAllObjectVersions = @var.Object_delete_all_object_versions,
    ///             Metadata = @var.Object_metadata,
    ///             StorageTier = @var.Object_storage_tier,
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// Objects can be imported using the `id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import oci:objectstorage/objectstorageObject:ObjectstorageObject test_object "n/{namespaceName}/b/{bucketName}/o/{objectName}"
    /// ```
    /// </summary>
    [OciResourceType("oci:objectstorage/objectstorageObject:ObjectstorageObject")]
    public partial class ObjectstorageObject : Pulumi.CustomResource
    {
        /// <summary>
        /// The name of the bucket for the source object.
        /// </summary>
        [Output("bucket")]
        public Output<string> Bucket { get; private set; } = null!;

        /// <summary>
        /// The optional Cache-Control header that defines the caching behavior value to be returned in GetObject and HeadObject responses. Specifying values for this header has no effect on Object Storage behavior. Programs that read the object determine what to do based on the value provided. For example, you could use this header to identify objects that require caching restrictions.
        /// </summary>
        [Output("cacheControl")]
        public Output<string?> CacheControl { get; private set; } = null!;

        /// <summary>
        /// The object to upload to the object store. Cannot be defined if `source` or `source_uri_details` is defined.
        /// </summary>
        [Output("content")]
        public Output<string?> Content { get; private set; } = null!;

        /// <summary>
        /// The optional Content-Disposition header that defines presentational information for the object to be returned in GetObject and HeadObject responses. Specifying values for this header has no effect on Object Storage behavior. Programs that read the object determine what to do based on the value provided. For example, you could use this header to let users download objects with custom filenames in a browser.
        /// </summary>
        [Output("contentDisposition")]
        public Output<string?> ContentDisposition { get; private set; } = null!;

        /// <summary>
        /// The optional Content-Encoding header that defines the content encodings that were applied to the object to upload. Specifying values for this header has no effect on Object Storage behavior. Programs that read the object determine what to do based on the value provided. For example, you could use this header to determine what decoding mechanisms need to be applied to obtain the media-type specified by the Content-Type header of the object.
        /// </summary>
        [Output("contentEncoding")]
        public Output<string?> ContentEncoding { get; private set; } = null!;

        /// <summary>
        /// The optional Content-Language header that defines the content language of the object to upload. Specifying values for this header has no effect on Object Storage behavior. Programs that read the object determine what to do based on the value provided. For example, you could use this header to identify and differentiate objects based on a particular language.
        /// </summary>
        [Output("contentLanguage")]
        public Output<string?> ContentLanguage { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The content length of the body.
        /// </summary>
        [Output("contentLength")]
        public Output<string> ContentLength { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The optional base-64 header that defines the encoded MD5 hash of the body. If the optional Content-MD5 header is present, Object Storage performs an integrity check on the body of the HTTP request by computing the MD5 hash for the body and comparing it to the MD5 hash supplied in the header. If the two hashes do not match, the object is rejected and an HTTP-400 Unmatched Content MD5 error is returned with the message:
        /// </summary>
        [Output("contentMd5")]
        public Output<string> ContentMd5 { get; private set; } = null!;

        /// <summary>
        /// The optional Content-Type header that defines the standard MIME type format of the object. Content type defaults to 'application/octet-stream' if not specified in the PutObject call. Specifying values for this header has no effect on Object Storage behavior. Programs that read the object determine what to do based on the value provided. For example, you could use this header to identify and perform special operations on text only objects.
        /// </summary>
        [Output("contentType")]
        public Output<string> ContentType { get; private set; } = null!;

        /// <summary>
        /// (Updatable) A boolean to delete all object versions for an object in a bucket that has or ever had versioning enabled.
        /// </summary>
        [Output("deleteAllObjectVersions")]
        public Output<bool?> DeleteAllObjectVersions { get; private set; } = null!;

        /// <summary>
        /// Optional user-defined metadata key and value.
        /// Note: All specified keys must be in lower case.
        /// </summary>
        [Output("metadata")]
        public Output<ImmutableDictionary<string, object>?> Metadata { get; private set; } = null!;

        /// <summary>
        /// The top-level namespace of the source object.
        /// </summary>
        [Output("namespace")]
        public Output<string> Namespace { get; private set; } = null!;

        /// <summary>
        /// The name of the source object.
        /// </summary>
        [Output("object")]
        public Output<string> Object { get; private set; } = null!;

        /// <summary>
        /// An absolute path to a file on the local system. Cannot be defined if `content` or `source_uri_details` is defined.
        /// </summary>
        [Output("source")]
        public Output<string?> Source { get; private set; } = null!;

        /// <summary>
        /// Details of the source URI of the object in the cloud. Cannot be defined if `content` or `source` is defined. 
        /// Note: To enable object copy, you must authorize the service to manage objects on your behalf.
        /// </summary>
        [Output("sourceUriDetails")]
        public Output<Outputs.ObjectstorageObjectSourceUriDetails?> SourceUriDetails { get; private set; } = null!;

        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// (Updatable) The storage tier that the object should be stored in. If not specified, the object will be stored in the same storage tier as the bucket.
        /// </summary>
        [Output("storageTier")]
        public Output<string> StorageTier { get; private set; } = null!;

        [Output("versionId")]
        public Output<string> VersionId { get; private set; } = null!;

        [Output("workRequestId")]
        public Output<string> WorkRequestId { get; private set; } = null!;


        /// <summary>
        /// Create a ObjectstorageObject resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ObjectstorageObject(string name, ObjectstorageObjectArgs args, CustomResourceOptions? options = null)
            : base("oci:objectstorage/objectstorageObject:ObjectstorageObject", name, args ?? new ObjectstorageObjectArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ObjectstorageObject(string name, Input<string> id, ObjectstorageObjectState? state = null, CustomResourceOptions? options = null)
            : base("oci:objectstorage/objectstorageObject:ObjectstorageObject", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ObjectstorageObject resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ObjectstorageObject Get(string name, Input<string> id, ObjectstorageObjectState? state = null, CustomResourceOptions? options = null)
        {
            return new ObjectstorageObject(name, id, state, options);
        }
    }

    public sealed class ObjectstorageObjectArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the bucket for the source object.
        /// </summary>
        [Input("bucket", required: true)]
        public Input<string> Bucket { get; set; } = null!;

        /// <summary>
        /// The optional Cache-Control header that defines the caching behavior value to be returned in GetObject and HeadObject responses. Specifying values for this header has no effect on Object Storage behavior. Programs that read the object determine what to do based on the value provided. For example, you could use this header to identify objects that require caching restrictions.
        /// </summary>
        [Input("cacheControl")]
        public Input<string>? CacheControl { get; set; }

        /// <summary>
        /// The object to upload to the object store. Cannot be defined if `source` or `source_uri_details` is defined.
        /// </summary>
        [Input("content")]
        public Input<string>? Content { get; set; }

        /// <summary>
        /// The optional Content-Disposition header that defines presentational information for the object to be returned in GetObject and HeadObject responses. Specifying values for this header has no effect on Object Storage behavior. Programs that read the object determine what to do based on the value provided. For example, you could use this header to let users download objects with custom filenames in a browser.
        /// </summary>
        [Input("contentDisposition")]
        public Input<string>? ContentDisposition { get; set; }

        /// <summary>
        /// The optional Content-Encoding header that defines the content encodings that were applied to the object to upload. Specifying values for this header has no effect on Object Storage behavior. Programs that read the object determine what to do based on the value provided. For example, you could use this header to determine what decoding mechanisms need to be applied to obtain the media-type specified by the Content-Type header of the object.
        /// </summary>
        [Input("contentEncoding")]
        public Input<string>? ContentEncoding { get; set; }

        /// <summary>
        /// The optional Content-Language header that defines the content language of the object to upload. Specifying values for this header has no effect on Object Storage behavior. Programs that read the object determine what to do based on the value provided. For example, you could use this header to identify and differentiate objects based on a particular language.
        /// </summary>
        [Input("contentLanguage")]
        public Input<string>? ContentLanguage { get; set; }

        /// <summary>
        /// (Updatable) The optional base-64 header that defines the encoded MD5 hash of the body. If the optional Content-MD5 header is present, Object Storage performs an integrity check on the body of the HTTP request by computing the MD5 hash for the body and comparing it to the MD5 hash supplied in the header. If the two hashes do not match, the object is rejected and an HTTP-400 Unmatched Content MD5 error is returned with the message:
        /// </summary>
        [Input("contentMd5")]
        public Input<string>? ContentMd5 { get; set; }

        /// <summary>
        /// The optional Content-Type header that defines the standard MIME type format of the object. Content type defaults to 'application/octet-stream' if not specified in the PutObject call. Specifying values for this header has no effect on Object Storage behavior. Programs that read the object determine what to do based on the value provided. For example, you could use this header to identify and perform special operations on text only objects.
        /// </summary>
        [Input("contentType")]
        public Input<string>? ContentType { get; set; }

        /// <summary>
        /// (Updatable) A boolean to delete all object versions for an object in a bucket that has or ever had versioning enabled.
        /// </summary>
        [Input("deleteAllObjectVersions")]
        public Input<bool>? DeleteAllObjectVersions { get; set; }

        [Input("metadata")]
        private InputMap<object>? _metadata;

        /// <summary>
        /// Optional user-defined metadata key and value.
        /// Note: All specified keys must be in lower case.
        /// </summary>
        public InputMap<object> Metadata
        {
            get => _metadata ?? (_metadata = new InputMap<object>());
            set => _metadata = value;
        }

        /// <summary>
        /// The top-level namespace of the source object.
        /// </summary>
        [Input("namespace", required: true)]
        public Input<string> Namespace { get; set; } = null!;

        /// <summary>
        /// The name of the source object.
        /// </summary>
        [Input("object", required: true)]
        public Input<string> Object { get; set; } = null!;

        /// <summary>
        /// An absolute path to a file on the local system. Cannot be defined if `content` or `source_uri_details` is defined.
        /// </summary>
        [Input("source")]
        public Input<string>? Source { get; set; }

        /// <summary>
        /// Details of the source URI of the object in the cloud. Cannot be defined if `content` or `source` is defined. 
        /// Note: To enable object copy, you must authorize the service to manage objects on your behalf.
        /// </summary>
        [Input("sourceUriDetails")]
        public Input<Inputs.ObjectstorageObjectSourceUriDetailsArgs>? SourceUriDetails { get; set; }

        /// <summary>
        /// (Updatable) The storage tier that the object should be stored in. If not specified, the object will be stored in the same storage tier as the bucket.
        /// </summary>
        [Input("storageTier")]
        public Input<string>? StorageTier { get; set; }

        public ObjectstorageObjectArgs()
        {
        }
    }

    public sealed class ObjectstorageObjectState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the bucket for the source object.
        /// </summary>
        [Input("bucket")]
        public Input<string>? Bucket { get; set; }

        /// <summary>
        /// The optional Cache-Control header that defines the caching behavior value to be returned in GetObject and HeadObject responses. Specifying values for this header has no effect on Object Storage behavior. Programs that read the object determine what to do based on the value provided. For example, you could use this header to identify objects that require caching restrictions.
        /// </summary>
        [Input("cacheControl")]
        public Input<string>? CacheControl { get; set; }

        /// <summary>
        /// The object to upload to the object store. Cannot be defined if `source` or `source_uri_details` is defined.
        /// </summary>
        [Input("content")]
        public Input<string>? Content { get; set; }

        /// <summary>
        /// The optional Content-Disposition header that defines presentational information for the object to be returned in GetObject and HeadObject responses. Specifying values for this header has no effect on Object Storage behavior. Programs that read the object determine what to do based on the value provided. For example, you could use this header to let users download objects with custom filenames in a browser.
        /// </summary>
        [Input("contentDisposition")]
        public Input<string>? ContentDisposition { get; set; }

        /// <summary>
        /// The optional Content-Encoding header that defines the content encodings that were applied to the object to upload. Specifying values for this header has no effect on Object Storage behavior. Programs that read the object determine what to do based on the value provided. For example, you could use this header to determine what decoding mechanisms need to be applied to obtain the media-type specified by the Content-Type header of the object.
        /// </summary>
        [Input("contentEncoding")]
        public Input<string>? ContentEncoding { get; set; }

        /// <summary>
        /// The optional Content-Language header that defines the content language of the object to upload. Specifying values for this header has no effect on Object Storage behavior. Programs that read the object determine what to do based on the value provided. For example, you could use this header to identify and differentiate objects based on a particular language.
        /// </summary>
        [Input("contentLanguage")]
        public Input<string>? ContentLanguage { get; set; }

        /// <summary>
        /// (Updatable) The content length of the body.
        /// </summary>
        [Input("contentLength")]
        public Input<string>? ContentLength { get; set; }

        /// <summary>
        /// (Updatable) The optional base-64 header that defines the encoded MD5 hash of the body. If the optional Content-MD5 header is present, Object Storage performs an integrity check on the body of the HTTP request by computing the MD5 hash for the body and comparing it to the MD5 hash supplied in the header. If the two hashes do not match, the object is rejected and an HTTP-400 Unmatched Content MD5 error is returned with the message:
        /// </summary>
        [Input("contentMd5")]
        public Input<string>? ContentMd5 { get; set; }

        /// <summary>
        /// The optional Content-Type header that defines the standard MIME type format of the object. Content type defaults to 'application/octet-stream' if not specified in the PutObject call. Specifying values for this header has no effect on Object Storage behavior. Programs that read the object determine what to do based on the value provided. For example, you could use this header to identify and perform special operations on text only objects.
        /// </summary>
        [Input("contentType")]
        public Input<string>? ContentType { get; set; }

        /// <summary>
        /// (Updatable) A boolean to delete all object versions for an object in a bucket that has or ever had versioning enabled.
        /// </summary>
        [Input("deleteAllObjectVersions")]
        public Input<bool>? DeleteAllObjectVersions { get; set; }

        [Input("metadata")]
        private InputMap<object>? _metadata;

        /// <summary>
        /// Optional user-defined metadata key and value.
        /// Note: All specified keys must be in lower case.
        /// </summary>
        public InputMap<object> Metadata
        {
            get => _metadata ?? (_metadata = new InputMap<object>());
            set => _metadata = value;
        }

        /// <summary>
        /// The top-level namespace of the source object.
        /// </summary>
        [Input("namespace")]
        public Input<string>? Namespace { get; set; }

        /// <summary>
        /// The name of the source object.
        /// </summary>
        [Input("object")]
        public Input<string>? Object { get; set; }

        /// <summary>
        /// An absolute path to a file on the local system. Cannot be defined if `content` or `source_uri_details` is defined.
        /// </summary>
        [Input("source")]
        public Input<string>? Source { get; set; }

        /// <summary>
        /// Details of the source URI of the object in the cloud. Cannot be defined if `content` or `source` is defined. 
        /// Note: To enable object copy, you must authorize the service to manage objects on your behalf.
        /// </summary>
        [Input("sourceUriDetails")]
        public Input<Inputs.ObjectstorageObjectSourceUriDetailsGetArgs>? SourceUriDetails { get; set; }

        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// (Updatable) The storage tier that the object should be stored in. If not specified, the object will be stored in the same storage tier as the bucket.
        /// </summary>
        [Input("storageTier")]
        public Input<string>? StorageTier { get; set; }

        [Input("versionId")]
        public Input<string>? VersionId { get; set; }

        [Input("workRequestId")]
        public Input<string>? WorkRequestId { get; set; }

        public ObjectstorageObjectState()
        {
        }
    }
}
