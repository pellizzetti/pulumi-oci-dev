// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package apmsynthetics

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Monitors in Oracle Cloud Infrastructure Apm Synthetics service.
//
// Returns a list of monitors.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci/apmsynthetics"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		opt0 := _var.Monitor_display_name
// 		opt1 := _var.Monitor_monitor_type
// 		opt2 := oci_apm_synthetics_script.Test_script.Id
// 		opt3 := _var.Monitor_status
// 		_, err := apmsynthetics.GetMonitors(ctx, &apmsynthetics.GetMonitorsArgs{
// 			ApmDomainId: oci_apm_synthetics_apm_domain.Test_apm_domain.Id,
// 			DisplayName: &opt0,
// 			MonitorType: &opt1,
// 			ScriptId:    &opt2,
// 			Status:      &opt3,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func GetMonitors(ctx *pulumi.Context, args *GetMonitorsArgs, opts ...pulumi.InvokeOption) (*GetMonitorsResult, error) {
	var rv GetMonitorsResult
	err := ctx.Invoke("oci:apmsynthetics/getMonitors:getMonitors", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMonitors.
type GetMonitorsArgs struct {
	// The APM domain ID the request is intended for.
	ApmDomainId string `pulumi:"apmDomainId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName *string             `pulumi:"displayName"`
	Filters     []GetMonitorsFilter `pulumi:"filters"`
	// A filter to return only monitors that match the given monitor type. Supported values are SCRIPTED_BROWSER, BROWSER, SCRIPTED_REST and REST.
	MonitorType *string `pulumi:"monitorType"`
	// A filter to return only monitors using scriptId.
	ScriptId *string `pulumi:"scriptId"`
	// A filter to return only monitors that match the status given.
	Status *string `pulumi:"status"`
}

// A collection of values returned by getMonitors.
type GetMonitorsResult struct {
	ApmDomainId string `pulumi:"apmDomainId"`
	// Unique name that can be edited. The name should not contain any confidential information.
	DisplayName *string             `pulumi:"displayName"`
	Filters     []GetMonitorsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The list of monitor_collection.
	MonitorCollections []GetMonitorsMonitorCollection `pulumi:"monitorCollections"`
	// Type of the monitor.
	MonitorType *string `pulumi:"monitorType"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the script. scriptId is mandatory for creation of SCRIPTED_BROWSER and SCRIPTED_REST monitor types. For other monitor types, it should be set to null.
	ScriptId *string `pulumi:"scriptId"`
	// Enables or disables the monitor.
	Status *string `pulumi:"status"`
}
