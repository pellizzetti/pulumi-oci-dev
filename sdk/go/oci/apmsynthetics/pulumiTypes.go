// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package apmsynthetics

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type MonitorConfiguration struct {
	// (Updatable) Type of configuration.
	ConfigType *string `pulumi:"configType"`
	// (Updatable) If certificate validation is enabled, then the call will fail in case of certification errors.
	IsCertificateValidationEnabled *bool `pulumi:"isCertificateValidationEnabled"`
	// (Updatable) If isFailureRetried is enabled, then a failed call will be retried.
	IsFailureRetried *bool `pulumi:"isFailureRetried"`
	// (Updatable) If redirection enabled, then redirects will be allowed while accessing target URL.
	IsRedirectionEnabled *bool `pulumi:"isRedirectionEnabled"`
	// (Updatable) Details for request HTTP authentication.
	ReqAuthenticationDetails *MonitorConfigurationReqAuthenticationDetails `pulumi:"reqAuthenticationDetails"`
	// (Updatable) Request http authentication scheme.
	ReqAuthenticationScheme *string `pulumi:"reqAuthenticationScheme"`
	// (Updatable) List of request headers. Example: `[{"headerName": "content-type", "headerValue":"json"}]`
	RequestHeaders []MonitorConfigurationRequestHeader `pulumi:"requestHeaders"`
	// (Updatable) Request HTTP method.
	RequestMethod *string `pulumi:"requestMethod"`
	// (Updatable) Request post body content.
	RequestPostBody *string `pulumi:"requestPostBody"`
	// (Updatable) List of request query params. Example: `[{"paramName": "sortOrder", "paramValue": "asc"}]`
	RequestQueryParams []MonitorConfigurationRequestQueryParam `pulumi:"requestQueryParams"`
	// (Updatable) Expected HTTP response codes. For status code range, set values such as 2xx, 3xx.
	VerifyResponseCodes []string `pulumi:"verifyResponseCodes"`
	// (Updatable) Verify response content against regular expression based string. If response content does not match the verifyResponseContent value, then it will be considered a failure.
	VerifyResponseContent *string `pulumi:"verifyResponseContent"`
	// (Updatable) Verify all the search strings present in response. If any search string is not present in the response, then it will be considered as a failure.
	VerifyTexts []MonitorConfigurationVerifyText `pulumi:"verifyTexts"`
}

// MonitorConfigurationInput is an input type that accepts MonitorConfigurationArgs and MonitorConfigurationOutput values.
// You can construct a concrete instance of `MonitorConfigurationInput` via:
//
//          MonitorConfigurationArgs{...}
type MonitorConfigurationInput interface {
	pulumi.Input

	ToMonitorConfigurationOutput() MonitorConfigurationOutput
	ToMonitorConfigurationOutputWithContext(context.Context) MonitorConfigurationOutput
}

type MonitorConfigurationArgs struct {
	// (Updatable) Type of configuration.
	ConfigType pulumi.StringPtrInput `pulumi:"configType"`
	// (Updatable) If certificate validation is enabled, then the call will fail in case of certification errors.
	IsCertificateValidationEnabled pulumi.BoolPtrInput `pulumi:"isCertificateValidationEnabled"`
	// (Updatable) If isFailureRetried is enabled, then a failed call will be retried.
	IsFailureRetried pulumi.BoolPtrInput `pulumi:"isFailureRetried"`
	// (Updatable) If redirection enabled, then redirects will be allowed while accessing target URL.
	IsRedirectionEnabled pulumi.BoolPtrInput `pulumi:"isRedirectionEnabled"`
	// (Updatable) Details for request HTTP authentication.
	ReqAuthenticationDetails MonitorConfigurationReqAuthenticationDetailsPtrInput `pulumi:"reqAuthenticationDetails"`
	// (Updatable) Request http authentication scheme.
	ReqAuthenticationScheme pulumi.StringPtrInput `pulumi:"reqAuthenticationScheme"`
	// (Updatable) List of request headers. Example: `[{"headerName": "content-type", "headerValue":"json"}]`
	RequestHeaders MonitorConfigurationRequestHeaderArrayInput `pulumi:"requestHeaders"`
	// (Updatable) Request HTTP method.
	RequestMethod pulumi.StringPtrInput `pulumi:"requestMethod"`
	// (Updatable) Request post body content.
	RequestPostBody pulumi.StringPtrInput `pulumi:"requestPostBody"`
	// (Updatable) List of request query params. Example: `[{"paramName": "sortOrder", "paramValue": "asc"}]`
	RequestQueryParams MonitorConfigurationRequestQueryParamArrayInput `pulumi:"requestQueryParams"`
	// (Updatable) Expected HTTP response codes. For status code range, set values such as 2xx, 3xx.
	VerifyResponseCodes pulumi.StringArrayInput `pulumi:"verifyResponseCodes"`
	// (Updatable) Verify response content against regular expression based string. If response content does not match the verifyResponseContent value, then it will be considered a failure.
	VerifyResponseContent pulumi.StringPtrInput `pulumi:"verifyResponseContent"`
	// (Updatable) Verify all the search strings present in response. If any search string is not present in the response, then it will be considered as a failure.
	VerifyTexts MonitorConfigurationVerifyTextArrayInput `pulumi:"verifyTexts"`
}

func (MonitorConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorConfiguration)(nil)).Elem()
}

func (i MonitorConfigurationArgs) ToMonitorConfigurationOutput() MonitorConfigurationOutput {
	return i.ToMonitorConfigurationOutputWithContext(context.Background())
}

func (i MonitorConfigurationArgs) ToMonitorConfigurationOutputWithContext(ctx context.Context) MonitorConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorConfigurationOutput)
}

func (i MonitorConfigurationArgs) ToMonitorConfigurationPtrOutput() MonitorConfigurationPtrOutput {
	return i.ToMonitorConfigurationPtrOutputWithContext(context.Background())
}

func (i MonitorConfigurationArgs) ToMonitorConfigurationPtrOutputWithContext(ctx context.Context) MonitorConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorConfigurationOutput).ToMonitorConfigurationPtrOutputWithContext(ctx)
}

// MonitorConfigurationPtrInput is an input type that accepts MonitorConfigurationArgs, MonitorConfigurationPtr and MonitorConfigurationPtrOutput values.
// You can construct a concrete instance of `MonitorConfigurationPtrInput` via:
//
//          MonitorConfigurationArgs{...}
//
//  or:
//
//          nil
type MonitorConfigurationPtrInput interface {
	pulumi.Input

	ToMonitorConfigurationPtrOutput() MonitorConfigurationPtrOutput
	ToMonitorConfigurationPtrOutputWithContext(context.Context) MonitorConfigurationPtrOutput
}

type monitorConfigurationPtrType MonitorConfigurationArgs

func MonitorConfigurationPtr(v *MonitorConfigurationArgs) MonitorConfigurationPtrInput {
	return (*monitorConfigurationPtrType)(v)
}

func (*monitorConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorConfiguration)(nil)).Elem()
}

func (i *monitorConfigurationPtrType) ToMonitorConfigurationPtrOutput() MonitorConfigurationPtrOutput {
	return i.ToMonitorConfigurationPtrOutputWithContext(context.Background())
}

func (i *monitorConfigurationPtrType) ToMonitorConfigurationPtrOutputWithContext(ctx context.Context) MonitorConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorConfigurationPtrOutput)
}

type MonitorConfigurationOutput struct{ *pulumi.OutputState }

func (MonitorConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorConfiguration)(nil)).Elem()
}

func (o MonitorConfigurationOutput) ToMonitorConfigurationOutput() MonitorConfigurationOutput {
	return o
}

func (o MonitorConfigurationOutput) ToMonitorConfigurationOutputWithContext(ctx context.Context) MonitorConfigurationOutput {
	return o
}

func (o MonitorConfigurationOutput) ToMonitorConfigurationPtrOutput() MonitorConfigurationPtrOutput {
	return o.ToMonitorConfigurationPtrOutputWithContext(context.Background())
}

func (o MonitorConfigurationOutput) ToMonitorConfigurationPtrOutputWithContext(ctx context.Context) MonitorConfigurationPtrOutput {
	return o.ApplyT(func(v MonitorConfiguration) *MonitorConfiguration {
		return &v
	}).(MonitorConfigurationPtrOutput)
}

// (Updatable) Type of configuration.
func (o MonitorConfigurationOutput) ConfigType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorConfiguration) *string { return v.ConfigType }).(pulumi.StringPtrOutput)
}

// (Updatable) If certificate validation is enabled, then the call will fail in case of certification errors.
func (o MonitorConfigurationOutput) IsCertificateValidationEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MonitorConfiguration) *bool { return v.IsCertificateValidationEnabled }).(pulumi.BoolPtrOutput)
}

// (Updatable) If isFailureRetried is enabled, then a failed call will be retried.
func (o MonitorConfigurationOutput) IsFailureRetried() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MonitorConfiguration) *bool { return v.IsFailureRetried }).(pulumi.BoolPtrOutput)
}

// (Updatable) If redirection enabled, then redirects will be allowed while accessing target URL.
func (o MonitorConfigurationOutput) IsRedirectionEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MonitorConfiguration) *bool { return v.IsRedirectionEnabled }).(pulumi.BoolPtrOutput)
}

// (Updatable) Details for request HTTP authentication.
func (o MonitorConfigurationOutput) ReqAuthenticationDetails() MonitorConfigurationReqAuthenticationDetailsPtrOutput {
	return o.ApplyT(func(v MonitorConfiguration) *MonitorConfigurationReqAuthenticationDetails {
		return v.ReqAuthenticationDetails
	}).(MonitorConfigurationReqAuthenticationDetailsPtrOutput)
}

// (Updatable) Request http authentication scheme.
func (o MonitorConfigurationOutput) ReqAuthenticationScheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorConfiguration) *string { return v.ReqAuthenticationScheme }).(pulumi.StringPtrOutput)
}

// (Updatable) List of request headers. Example: `[{"headerName": "content-type", "headerValue":"json"}]`
func (o MonitorConfigurationOutput) RequestHeaders() MonitorConfigurationRequestHeaderArrayOutput {
	return o.ApplyT(func(v MonitorConfiguration) []MonitorConfigurationRequestHeader { return v.RequestHeaders }).(MonitorConfigurationRequestHeaderArrayOutput)
}

// (Updatable) Request HTTP method.
func (o MonitorConfigurationOutput) RequestMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorConfiguration) *string { return v.RequestMethod }).(pulumi.StringPtrOutput)
}

// (Updatable) Request post body content.
func (o MonitorConfigurationOutput) RequestPostBody() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorConfiguration) *string { return v.RequestPostBody }).(pulumi.StringPtrOutput)
}

// (Updatable) List of request query params. Example: `[{"paramName": "sortOrder", "paramValue": "asc"}]`
func (o MonitorConfigurationOutput) RequestQueryParams() MonitorConfigurationRequestQueryParamArrayOutput {
	return o.ApplyT(func(v MonitorConfiguration) []MonitorConfigurationRequestQueryParam { return v.RequestQueryParams }).(MonitorConfigurationRequestQueryParamArrayOutput)
}

// (Updatable) Expected HTTP response codes. For status code range, set values such as 2xx, 3xx.
func (o MonitorConfigurationOutput) VerifyResponseCodes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MonitorConfiguration) []string { return v.VerifyResponseCodes }).(pulumi.StringArrayOutput)
}

// (Updatable) Verify response content against regular expression based string. If response content does not match the verifyResponseContent value, then it will be considered a failure.
func (o MonitorConfigurationOutput) VerifyResponseContent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorConfiguration) *string { return v.VerifyResponseContent }).(pulumi.StringPtrOutput)
}

// (Updatable) Verify all the search strings present in response. If any search string is not present in the response, then it will be considered as a failure.
func (o MonitorConfigurationOutput) VerifyTexts() MonitorConfigurationVerifyTextArrayOutput {
	return o.ApplyT(func(v MonitorConfiguration) []MonitorConfigurationVerifyText { return v.VerifyTexts }).(MonitorConfigurationVerifyTextArrayOutput)
}

type MonitorConfigurationPtrOutput struct{ *pulumi.OutputState }

func (MonitorConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorConfiguration)(nil)).Elem()
}

func (o MonitorConfigurationPtrOutput) ToMonitorConfigurationPtrOutput() MonitorConfigurationPtrOutput {
	return o
}

func (o MonitorConfigurationPtrOutput) ToMonitorConfigurationPtrOutputWithContext(ctx context.Context) MonitorConfigurationPtrOutput {
	return o
}

func (o MonitorConfigurationPtrOutput) Elem() MonitorConfigurationOutput {
	return o.ApplyT(func(v *MonitorConfiguration) MonitorConfiguration { return *v }).(MonitorConfigurationOutput)
}

// (Updatable) Type of configuration.
func (o MonitorConfigurationPtrOutput) ConfigType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.ConfigType
	}).(pulumi.StringPtrOutput)
}

// (Updatable) If certificate validation is enabled, then the call will fail in case of certification errors.
func (o MonitorConfigurationPtrOutput) IsCertificateValidationEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MonitorConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.IsCertificateValidationEnabled
	}).(pulumi.BoolPtrOutput)
}

// (Updatable) If isFailureRetried is enabled, then a failed call will be retried.
func (o MonitorConfigurationPtrOutput) IsFailureRetried() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MonitorConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.IsFailureRetried
	}).(pulumi.BoolPtrOutput)
}

// (Updatable) If redirection enabled, then redirects will be allowed while accessing target URL.
func (o MonitorConfigurationPtrOutput) IsRedirectionEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MonitorConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.IsRedirectionEnabled
	}).(pulumi.BoolPtrOutput)
}

// (Updatable) Details for request HTTP authentication.
func (o MonitorConfigurationPtrOutput) ReqAuthenticationDetails() MonitorConfigurationReqAuthenticationDetailsPtrOutput {
	return o.ApplyT(func(v *MonitorConfiguration) *MonitorConfigurationReqAuthenticationDetails {
		if v == nil {
			return nil
		}
		return v.ReqAuthenticationDetails
	}).(MonitorConfigurationReqAuthenticationDetailsPtrOutput)
}

// (Updatable) Request http authentication scheme.
func (o MonitorConfigurationPtrOutput) ReqAuthenticationScheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.ReqAuthenticationScheme
	}).(pulumi.StringPtrOutput)
}

// (Updatable) List of request headers. Example: `[{"headerName": "content-type", "headerValue":"json"}]`
func (o MonitorConfigurationPtrOutput) RequestHeaders() MonitorConfigurationRequestHeaderArrayOutput {
	return o.ApplyT(func(v *MonitorConfiguration) []MonitorConfigurationRequestHeader {
		if v == nil {
			return nil
		}
		return v.RequestHeaders
	}).(MonitorConfigurationRequestHeaderArrayOutput)
}

// (Updatable) Request HTTP method.
func (o MonitorConfigurationPtrOutput) RequestMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.RequestMethod
	}).(pulumi.StringPtrOutput)
}

// (Updatable) Request post body content.
func (o MonitorConfigurationPtrOutput) RequestPostBody() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.RequestPostBody
	}).(pulumi.StringPtrOutput)
}

// (Updatable) List of request query params. Example: `[{"paramName": "sortOrder", "paramValue": "asc"}]`
func (o MonitorConfigurationPtrOutput) RequestQueryParams() MonitorConfigurationRequestQueryParamArrayOutput {
	return o.ApplyT(func(v *MonitorConfiguration) []MonitorConfigurationRequestQueryParam {
		if v == nil {
			return nil
		}
		return v.RequestQueryParams
	}).(MonitorConfigurationRequestQueryParamArrayOutput)
}

// (Updatable) Expected HTTP response codes. For status code range, set values such as 2xx, 3xx.
func (o MonitorConfigurationPtrOutput) VerifyResponseCodes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MonitorConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.VerifyResponseCodes
	}).(pulumi.StringArrayOutput)
}

// (Updatable) Verify response content against regular expression based string. If response content does not match the verifyResponseContent value, then it will be considered a failure.
func (o MonitorConfigurationPtrOutput) VerifyResponseContent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.VerifyResponseContent
	}).(pulumi.StringPtrOutput)
}

// (Updatable) Verify all the search strings present in response. If any search string is not present in the response, then it will be considered as a failure.
func (o MonitorConfigurationPtrOutput) VerifyTexts() MonitorConfigurationVerifyTextArrayOutput {
	return o.ApplyT(func(v *MonitorConfiguration) []MonitorConfigurationVerifyText {
		if v == nil {
			return nil
		}
		return v.VerifyTexts
	}).(MonitorConfigurationVerifyTextArrayOutput)
}

type MonitorConfigurationReqAuthenticationDetails struct {
	// (Updatable) List of authentication headers. Example: `[{"headerName": "content-type", "headerValue":"json"}]`
	AuthHeaders []MonitorConfigurationReqAuthenticationDetailsAuthHeader `pulumi:"authHeaders"`
	// (Updatable) Request method.
	AuthRequestMethod *string `pulumi:"authRequestMethod"`
	// (Updatable) Request post body.
	AuthRequestPostBody *string `pulumi:"authRequestPostBody"`
	// (Updatable) Authentication token.
	AuthToken *string `pulumi:"authToken"`
	// (Updatable) URL to get authetication token.
	AuthUrl *string `pulumi:"authUrl"`
	// (Updatable) Username for authentication.
	AuthUserName *string `pulumi:"authUserName"`
	// (Updatable) User password for authentication.
	AuthUserPassword *string `pulumi:"authUserPassword"`
	// (Updatable) Request http oauth scheme.
	OauthScheme *string `pulumi:"oauthScheme"`
}

// MonitorConfigurationReqAuthenticationDetailsInput is an input type that accepts MonitorConfigurationReqAuthenticationDetailsArgs and MonitorConfigurationReqAuthenticationDetailsOutput values.
// You can construct a concrete instance of `MonitorConfigurationReqAuthenticationDetailsInput` via:
//
//          MonitorConfigurationReqAuthenticationDetailsArgs{...}
type MonitorConfigurationReqAuthenticationDetailsInput interface {
	pulumi.Input

	ToMonitorConfigurationReqAuthenticationDetailsOutput() MonitorConfigurationReqAuthenticationDetailsOutput
	ToMonitorConfigurationReqAuthenticationDetailsOutputWithContext(context.Context) MonitorConfigurationReqAuthenticationDetailsOutput
}

type MonitorConfigurationReqAuthenticationDetailsArgs struct {
	// (Updatable) List of authentication headers. Example: `[{"headerName": "content-type", "headerValue":"json"}]`
	AuthHeaders MonitorConfigurationReqAuthenticationDetailsAuthHeaderArrayInput `pulumi:"authHeaders"`
	// (Updatable) Request method.
	AuthRequestMethod pulumi.StringPtrInput `pulumi:"authRequestMethod"`
	// (Updatable) Request post body.
	AuthRequestPostBody pulumi.StringPtrInput `pulumi:"authRequestPostBody"`
	// (Updatable) Authentication token.
	AuthToken pulumi.StringPtrInput `pulumi:"authToken"`
	// (Updatable) URL to get authetication token.
	AuthUrl pulumi.StringPtrInput `pulumi:"authUrl"`
	// (Updatable) Username for authentication.
	AuthUserName pulumi.StringPtrInput `pulumi:"authUserName"`
	// (Updatable) User password for authentication.
	AuthUserPassword pulumi.StringPtrInput `pulumi:"authUserPassword"`
	// (Updatable) Request http oauth scheme.
	OauthScheme pulumi.StringPtrInput `pulumi:"oauthScheme"`
}

func (MonitorConfigurationReqAuthenticationDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorConfigurationReqAuthenticationDetails)(nil)).Elem()
}

func (i MonitorConfigurationReqAuthenticationDetailsArgs) ToMonitorConfigurationReqAuthenticationDetailsOutput() MonitorConfigurationReqAuthenticationDetailsOutput {
	return i.ToMonitorConfigurationReqAuthenticationDetailsOutputWithContext(context.Background())
}

func (i MonitorConfigurationReqAuthenticationDetailsArgs) ToMonitorConfigurationReqAuthenticationDetailsOutputWithContext(ctx context.Context) MonitorConfigurationReqAuthenticationDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorConfigurationReqAuthenticationDetailsOutput)
}

func (i MonitorConfigurationReqAuthenticationDetailsArgs) ToMonitorConfigurationReqAuthenticationDetailsPtrOutput() MonitorConfigurationReqAuthenticationDetailsPtrOutput {
	return i.ToMonitorConfigurationReqAuthenticationDetailsPtrOutputWithContext(context.Background())
}

func (i MonitorConfigurationReqAuthenticationDetailsArgs) ToMonitorConfigurationReqAuthenticationDetailsPtrOutputWithContext(ctx context.Context) MonitorConfigurationReqAuthenticationDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorConfigurationReqAuthenticationDetailsOutput).ToMonitorConfigurationReqAuthenticationDetailsPtrOutputWithContext(ctx)
}

// MonitorConfigurationReqAuthenticationDetailsPtrInput is an input type that accepts MonitorConfigurationReqAuthenticationDetailsArgs, MonitorConfigurationReqAuthenticationDetailsPtr and MonitorConfigurationReqAuthenticationDetailsPtrOutput values.
// You can construct a concrete instance of `MonitorConfigurationReqAuthenticationDetailsPtrInput` via:
//
//          MonitorConfigurationReqAuthenticationDetailsArgs{...}
//
//  or:
//
//          nil
type MonitorConfigurationReqAuthenticationDetailsPtrInput interface {
	pulumi.Input

	ToMonitorConfigurationReqAuthenticationDetailsPtrOutput() MonitorConfigurationReqAuthenticationDetailsPtrOutput
	ToMonitorConfigurationReqAuthenticationDetailsPtrOutputWithContext(context.Context) MonitorConfigurationReqAuthenticationDetailsPtrOutput
}

type monitorConfigurationReqAuthenticationDetailsPtrType MonitorConfigurationReqAuthenticationDetailsArgs

func MonitorConfigurationReqAuthenticationDetailsPtr(v *MonitorConfigurationReqAuthenticationDetailsArgs) MonitorConfigurationReqAuthenticationDetailsPtrInput {
	return (*monitorConfigurationReqAuthenticationDetailsPtrType)(v)
}

func (*monitorConfigurationReqAuthenticationDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorConfigurationReqAuthenticationDetails)(nil)).Elem()
}

func (i *monitorConfigurationReqAuthenticationDetailsPtrType) ToMonitorConfigurationReqAuthenticationDetailsPtrOutput() MonitorConfigurationReqAuthenticationDetailsPtrOutput {
	return i.ToMonitorConfigurationReqAuthenticationDetailsPtrOutputWithContext(context.Background())
}

func (i *monitorConfigurationReqAuthenticationDetailsPtrType) ToMonitorConfigurationReqAuthenticationDetailsPtrOutputWithContext(ctx context.Context) MonitorConfigurationReqAuthenticationDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorConfigurationReqAuthenticationDetailsPtrOutput)
}

type MonitorConfigurationReqAuthenticationDetailsOutput struct{ *pulumi.OutputState }

func (MonitorConfigurationReqAuthenticationDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorConfigurationReqAuthenticationDetails)(nil)).Elem()
}

func (o MonitorConfigurationReqAuthenticationDetailsOutput) ToMonitorConfigurationReqAuthenticationDetailsOutput() MonitorConfigurationReqAuthenticationDetailsOutput {
	return o
}

func (o MonitorConfigurationReqAuthenticationDetailsOutput) ToMonitorConfigurationReqAuthenticationDetailsOutputWithContext(ctx context.Context) MonitorConfigurationReqAuthenticationDetailsOutput {
	return o
}

func (o MonitorConfigurationReqAuthenticationDetailsOutput) ToMonitorConfigurationReqAuthenticationDetailsPtrOutput() MonitorConfigurationReqAuthenticationDetailsPtrOutput {
	return o.ToMonitorConfigurationReqAuthenticationDetailsPtrOutputWithContext(context.Background())
}

func (o MonitorConfigurationReqAuthenticationDetailsOutput) ToMonitorConfigurationReqAuthenticationDetailsPtrOutputWithContext(ctx context.Context) MonitorConfigurationReqAuthenticationDetailsPtrOutput {
	return o.ApplyT(func(v MonitorConfigurationReqAuthenticationDetails) *MonitorConfigurationReqAuthenticationDetails {
		return &v
	}).(MonitorConfigurationReqAuthenticationDetailsPtrOutput)
}

// (Updatable) List of authentication headers. Example: `[{"headerName": "content-type", "headerValue":"json"}]`
func (o MonitorConfigurationReqAuthenticationDetailsOutput) AuthHeaders() MonitorConfigurationReqAuthenticationDetailsAuthHeaderArrayOutput {
	return o.ApplyT(func(v MonitorConfigurationReqAuthenticationDetails) []MonitorConfigurationReqAuthenticationDetailsAuthHeader {
		return v.AuthHeaders
	}).(MonitorConfigurationReqAuthenticationDetailsAuthHeaderArrayOutput)
}

// (Updatable) Request method.
func (o MonitorConfigurationReqAuthenticationDetailsOutput) AuthRequestMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorConfigurationReqAuthenticationDetails) *string { return v.AuthRequestMethod }).(pulumi.StringPtrOutput)
}

// (Updatable) Request post body.
func (o MonitorConfigurationReqAuthenticationDetailsOutput) AuthRequestPostBody() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorConfigurationReqAuthenticationDetails) *string { return v.AuthRequestPostBody }).(pulumi.StringPtrOutput)
}

// (Updatable) Authentication token.
func (o MonitorConfigurationReqAuthenticationDetailsOutput) AuthToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorConfigurationReqAuthenticationDetails) *string { return v.AuthToken }).(pulumi.StringPtrOutput)
}

// (Updatable) URL to get authetication token.
func (o MonitorConfigurationReqAuthenticationDetailsOutput) AuthUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorConfigurationReqAuthenticationDetails) *string { return v.AuthUrl }).(pulumi.StringPtrOutput)
}

// (Updatable) Username for authentication.
func (o MonitorConfigurationReqAuthenticationDetailsOutput) AuthUserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorConfigurationReqAuthenticationDetails) *string { return v.AuthUserName }).(pulumi.StringPtrOutput)
}

// (Updatable) User password for authentication.
func (o MonitorConfigurationReqAuthenticationDetailsOutput) AuthUserPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorConfigurationReqAuthenticationDetails) *string { return v.AuthUserPassword }).(pulumi.StringPtrOutput)
}

// (Updatable) Request http oauth scheme.
func (o MonitorConfigurationReqAuthenticationDetailsOutput) OauthScheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorConfigurationReqAuthenticationDetails) *string { return v.OauthScheme }).(pulumi.StringPtrOutput)
}

type MonitorConfigurationReqAuthenticationDetailsPtrOutput struct{ *pulumi.OutputState }

func (MonitorConfigurationReqAuthenticationDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorConfigurationReqAuthenticationDetails)(nil)).Elem()
}

func (o MonitorConfigurationReqAuthenticationDetailsPtrOutput) ToMonitorConfigurationReqAuthenticationDetailsPtrOutput() MonitorConfigurationReqAuthenticationDetailsPtrOutput {
	return o
}

func (o MonitorConfigurationReqAuthenticationDetailsPtrOutput) ToMonitorConfigurationReqAuthenticationDetailsPtrOutputWithContext(ctx context.Context) MonitorConfigurationReqAuthenticationDetailsPtrOutput {
	return o
}

func (o MonitorConfigurationReqAuthenticationDetailsPtrOutput) Elem() MonitorConfigurationReqAuthenticationDetailsOutput {
	return o.ApplyT(func(v *MonitorConfigurationReqAuthenticationDetails) MonitorConfigurationReqAuthenticationDetails {
		return *v
	}).(MonitorConfigurationReqAuthenticationDetailsOutput)
}

// (Updatable) List of authentication headers. Example: `[{"headerName": "content-type", "headerValue":"json"}]`
func (o MonitorConfigurationReqAuthenticationDetailsPtrOutput) AuthHeaders() MonitorConfigurationReqAuthenticationDetailsAuthHeaderArrayOutput {
	return o.ApplyT(func(v *MonitorConfigurationReqAuthenticationDetails) []MonitorConfigurationReqAuthenticationDetailsAuthHeader {
		if v == nil {
			return nil
		}
		return v.AuthHeaders
	}).(MonitorConfigurationReqAuthenticationDetailsAuthHeaderArrayOutput)
}

// (Updatable) Request method.
func (o MonitorConfigurationReqAuthenticationDetailsPtrOutput) AuthRequestMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorConfigurationReqAuthenticationDetails) *string {
		if v == nil {
			return nil
		}
		return v.AuthRequestMethod
	}).(pulumi.StringPtrOutput)
}

// (Updatable) Request post body.
func (o MonitorConfigurationReqAuthenticationDetailsPtrOutput) AuthRequestPostBody() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorConfigurationReqAuthenticationDetails) *string {
		if v == nil {
			return nil
		}
		return v.AuthRequestPostBody
	}).(pulumi.StringPtrOutput)
}

// (Updatable) Authentication token.
func (o MonitorConfigurationReqAuthenticationDetailsPtrOutput) AuthToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorConfigurationReqAuthenticationDetails) *string {
		if v == nil {
			return nil
		}
		return v.AuthToken
	}).(pulumi.StringPtrOutput)
}

// (Updatable) URL to get authetication token.
func (o MonitorConfigurationReqAuthenticationDetailsPtrOutput) AuthUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorConfigurationReqAuthenticationDetails) *string {
		if v == nil {
			return nil
		}
		return v.AuthUrl
	}).(pulumi.StringPtrOutput)
}

// (Updatable) Username for authentication.
func (o MonitorConfigurationReqAuthenticationDetailsPtrOutput) AuthUserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorConfigurationReqAuthenticationDetails) *string {
		if v == nil {
			return nil
		}
		return v.AuthUserName
	}).(pulumi.StringPtrOutput)
}

// (Updatable) User password for authentication.
func (o MonitorConfigurationReqAuthenticationDetailsPtrOutput) AuthUserPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorConfigurationReqAuthenticationDetails) *string {
		if v == nil {
			return nil
		}
		return v.AuthUserPassword
	}).(pulumi.StringPtrOutput)
}

// (Updatable) Request http oauth scheme.
func (o MonitorConfigurationReqAuthenticationDetailsPtrOutput) OauthScheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorConfigurationReqAuthenticationDetails) *string {
		if v == nil {
			return nil
		}
		return v.OauthScheme
	}).(pulumi.StringPtrOutput)
}

type MonitorConfigurationReqAuthenticationDetailsAuthHeader struct {
	// (Updatable) Name of the header.
	HeaderName *string `pulumi:"headerName"`
	// (Updatable) Value of the header.
	HeaderValue *string `pulumi:"headerValue"`
}

// MonitorConfigurationReqAuthenticationDetailsAuthHeaderInput is an input type that accepts MonitorConfigurationReqAuthenticationDetailsAuthHeaderArgs and MonitorConfigurationReqAuthenticationDetailsAuthHeaderOutput values.
// You can construct a concrete instance of `MonitorConfigurationReqAuthenticationDetailsAuthHeaderInput` via:
//
//          MonitorConfigurationReqAuthenticationDetailsAuthHeaderArgs{...}
type MonitorConfigurationReqAuthenticationDetailsAuthHeaderInput interface {
	pulumi.Input

	ToMonitorConfigurationReqAuthenticationDetailsAuthHeaderOutput() MonitorConfigurationReqAuthenticationDetailsAuthHeaderOutput
	ToMonitorConfigurationReqAuthenticationDetailsAuthHeaderOutputWithContext(context.Context) MonitorConfigurationReqAuthenticationDetailsAuthHeaderOutput
}

type MonitorConfigurationReqAuthenticationDetailsAuthHeaderArgs struct {
	// (Updatable) Name of the header.
	HeaderName pulumi.StringPtrInput `pulumi:"headerName"`
	// (Updatable) Value of the header.
	HeaderValue pulumi.StringPtrInput `pulumi:"headerValue"`
}

func (MonitorConfigurationReqAuthenticationDetailsAuthHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorConfigurationReqAuthenticationDetailsAuthHeader)(nil)).Elem()
}

func (i MonitorConfigurationReqAuthenticationDetailsAuthHeaderArgs) ToMonitorConfigurationReqAuthenticationDetailsAuthHeaderOutput() MonitorConfigurationReqAuthenticationDetailsAuthHeaderOutput {
	return i.ToMonitorConfigurationReqAuthenticationDetailsAuthHeaderOutputWithContext(context.Background())
}

func (i MonitorConfigurationReqAuthenticationDetailsAuthHeaderArgs) ToMonitorConfigurationReqAuthenticationDetailsAuthHeaderOutputWithContext(ctx context.Context) MonitorConfigurationReqAuthenticationDetailsAuthHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorConfigurationReqAuthenticationDetailsAuthHeaderOutput)
}

// MonitorConfigurationReqAuthenticationDetailsAuthHeaderArrayInput is an input type that accepts MonitorConfigurationReqAuthenticationDetailsAuthHeaderArray and MonitorConfigurationReqAuthenticationDetailsAuthHeaderArrayOutput values.
// You can construct a concrete instance of `MonitorConfigurationReqAuthenticationDetailsAuthHeaderArrayInput` via:
//
//          MonitorConfigurationReqAuthenticationDetailsAuthHeaderArray{ MonitorConfigurationReqAuthenticationDetailsAuthHeaderArgs{...} }
type MonitorConfigurationReqAuthenticationDetailsAuthHeaderArrayInput interface {
	pulumi.Input

	ToMonitorConfigurationReqAuthenticationDetailsAuthHeaderArrayOutput() MonitorConfigurationReqAuthenticationDetailsAuthHeaderArrayOutput
	ToMonitorConfigurationReqAuthenticationDetailsAuthHeaderArrayOutputWithContext(context.Context) MonitorConfigurationReqAuthenticationDetailsAuthHeaderArrayOutput
}

type MonitorConfigurationReqAuthenticationDetailsAuthHeaderArray []MonitorConfigurationReqAuthenticationDetailsAuthHeaderInput

func (MonitorConfigurationReqAuthenticationDetailsAuthHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitorConfigurationReqAuthenticationDetailsAuthHeader)(nil)).Elem()
}

func (i MonitorConfigurationReqAuthenticationDetailsAuthHeaderArray) ToMonitorConfigurationReqAuthenticationDetailsAuthHeaderArrayOutput() MonitorConfigurationReqAuthenticationDetailsAuthHeaderArrayOutput {
	return i.ToMonitorConfigurationReqAuthenticationDetailsAuthHeaderArrayOutputWithContext(context.Background())
}

func (i MonitorConfigurationReqAuthenticationDetailsAuthHeaderArray) ToMonitorConfigurationReqAuthenticationDetailsAuthHeaderArrayOutputWithContext(ctx context.Context) MonitorConfigurationReqAuthenticationDetailsAuthHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorConfigurationReqAuthenticationDetailsAuthHeaderArrayOutput)
}

type MonitorConfigurationReqAuthenticationDetailsAuthHeaderOutput struct{ *pulumi.OutputState }

func (MonitorConfigurationReqAuthenticationDetailsAuthHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorConfigurationReqAuthenticationDetailsAuthHeader)(nil)).Elem()
}

func (o MonitorConfigurationReqAuthenticationDetailsAuthHeaderOutput) ToMonitorConfigurationReqAuthenticationDetailsAuthHeaderOutput() MonitorConfigurationReqAuthenticationDetailsAuthHeaderOutput {
	return o
}

func (o MonitorConfigurationReqAuthenticationDetailsAuthHeaderOutput) ToMonitorConfigurationReqAuthenticationDetailsAuthHeaderOutputWithContext(ctx context.Context) MonitorConfigurationReqAuthenticationDetailsAuthHeaderOutput {
	return o
}

// (Updatable) Name of the header.
func (o MonitorConfigurationReqAuthenticationDetailsAuthHeaderOutput) HeaderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorConfigurationReqAuthenticationDetailsAuthHeader) *string { return v.HeaderName }).(pulumi.StringPtrOutput)
}

// (Updatable) Value of the header.
func (o MonitorConfigurationReqAuthenticationDetailsAuthHeaderOutput) HeaderValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorConfigurationReqAuthenticationDetailsAuthHeader) *string { return v.HeaderValue }).(pulumi.StringPtrOutput)
}

type MonitorConfigurationReqAuthenticationDetailsAuthHeaderArrayOutput struct{ *pulumi.OutputState }

func (MonitorConfigurationReqAuthenticationDetailsAuthHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitorConfigurationReqAuthenticationDetailsAuthHeader)(nil)).Elem()
}

func (o MonitorConfigurationReqAuthenticationDetailsAuthHeaderArrayOutput) ToMonitorConfigurationReqAuthenticationDetailsAuthHeaderArrayOutput() MonitorConfigurationReqAuthenticationDetailsAuthHeaderArrayOutput {
	return o
}

func (o MonitorConfigurationReqAuthenticationDetailsAuthHeaderArrayOutput) ToMonitorConfigurationReqAuthenticationDetailsAuthHeaderArrayOutputWithContext(ctx context.Context) MonitorConfigurationReqAuthenticationDetailsAuthHeaderArrayOutput {
	return o
}

func (o MonitorConfigurationReqAuthenticationDetailsAuthHeaderArrayOutput) Index(i pulumi.IntInput) MonitorConfigurationReqAuthenticationDetailsAuthHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MonitorConfigurationReqAuthenticationDetailsAuthHeader {
		return vs[0].([]MonitorConfigurationReqAuthenticationDetailsAuthHeader)[vs[1].(int)]
	}).(MonitorConfigurationReqAuthenticationDetailsAuthHeaderOutput)
}

type MonitorConfigurationRequestHeader struct {
	// (Updatable) Name of the header.
	HeaderName *string `pulumi:"headerName"`
	// (Updatable) Value of the header.
	HeaderValue *string `pulumi:"headerValue"`
}

// MonitorConfigurationRequestHeaderInput is an input type that accepts MonitorConfigurationRequestHeaderArgs and MonitorConfigurationRequestHeaderOutput values.
// You can construct a concrete instance of `MonitorConfigurationRequestHeaderInput` via:
//
//          MonitorConfigurationRequestHeaderArgs{...}
type MonitorConfigurationRequestHeaderInput interface {
	pulumi.Input

	ToMonitorConfigurationRequestHeaderOutput() MonitorConfigurationRequestHeaderOutput
	ToMonitorConfigurationRequestHeaderOutputWithContext(context.Context) MonitorConfigurationRequestHeaderOutput
}

type MonitorConfigurationRequestHeaderArgs struct {
	// (Updatable) Name of the header.
	HeaderName pulumi.StringPtrInput `pulumi:"headerName"`
	// (Updatable) Value of the header.
	HeaderValue pulumi.StringPtrInput `pulumi:"headerValue"`
}

func (MonitorConfigurationRequestHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorConfigurationRequestHeader)(nil)).Elem()
}

func (i MonitorConfigurationRequestHeaderArgs) ToMonitorConfigurationRequestHeaderOutput() MonitorConfigurationRequestHeaderOutput {
	return i.ToMonitorConfigurationRequestHeaderOutputWithContext(context.Background())
}

func (i MonitorConfigurationRequestHeaderArgs) ToMonitorConfigurationRequestHeaderOutputWithContext(ctx context.Context) MonitorConfigurationRequestHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorConfigurationRequestHeaderOutput)
}

// MonitorConfigurationRequestHeaderArrayInput is an input type that accepts MonitorConfigurationRequestHeaderArray and MonitorConfigurationRequestHeaderArrayOutput values.
// You can construct a concrete instance of `MonitorConfigurationRequestHeaderArrayInput` via:
//
//          MonitorConfigurationRequestHeaderArray{ MonitorConfigurationRequestHeaderArgs{...} }
type MonitorConfigurationRequestHeaderArrayInput interface {
	pulumi.Input

	ToMonitorConfigurationRequestHeaderArrayOutput() MonitorConfigurationRequestHeaderArrayOutput
	ToMonitorConfigurationRequestHeaderArrayOutputWithContext(context.Context) MonitorConfigurationRequestHeaderArrayOutput
}

type MonitorConfigurationRequestHeaderArray []MonitorConfigurationRequestHeaderInput

func (MonitorConfigurationRequestHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitorConfigurationRequestHeader)(nil)).Elem()
}

func (i MonitorConfigurationRequestHeaderArray) ToMonitorConfigurationRequestHeaderArrayOutput() MonitorConfigurationRequestHeaderArrayOutput {
	return i.ToMonitorConfigurationRequestHeaderArrayOutputWithContext(context.Background())
}

func (i MonitorConfigurationRequestHeaderArray) ToMonitorConfigurationRequestHeaderArrayOutputWithContext(ctx context.Context) MonitorConfigurationRequestHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorConfigurationRequestHeaderArrayOutput)
}

type MonitorConfigurationRequestHeaderOutput struct{ *pulumi.OutputState }

func (MonitorConfigurationRequestHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorConfigurationRequestHeader)(nil)).Elem()
}

func (o MonitorConfigurationRequestHeaderOutput) ToMonitorConfigurationRequestHeaderOutput() MonitorConfigurationRequestHeaderOutput {
	return o
}

func (o MonitorConfigurationRequestHeaderOutput) ToMonitorConfigurationRequestHeaderOutputWithContext(ctx context.Context) MonitorConfigurationRequestHeaderOutput {
	return o
}

// (Updatable) Name of the header.
func (o MonitorConfigurationRequestHeaderOutput) HeaderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorConfigurationRequestHeader) *string { return v.HeaderName }).(pulumi.StringPtrOutput)
}

// (Updatable) Value of the header.
func (o MonitorConfigurationRequestHeaderOutput) HeaderValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorConfigurationRequestHeader) *string { return v.HeaderValue }).(pulumi.StringPtrOutput)
}

type MonitorConfigurationRequestHeaderArrayOutput struct{ *pulumi.OutputState }

func (MonitorConfigurationRequestHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitorConfigurationRequestHeader)(nil)).Elem()
}

func (o MonitorConfigurationRequestHeaderArrayOutput) ToMonitorConfigurationRequestHeaderArrayOutput() MonitorConfigurationRequestHeaderArrayOutput {
	return o
}

func (o MonitorConfigurationRequestHeaderArrayOutput) ToMonitorConfigurationRequestHeaderArrayOutputWithContext(ctx context.Context) MonitorConfigurationRequestHeaderArrayOutput {
	return o
}

func (o MonitorConfigurationRequestHeaderArrayOutput) Index(i pulumi.IntInput) MonitorConfigurationRequestHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MonitorConfigurationRequestHeader {
		return vs[0].([]MonitorConfigurationRequestHeader)[vs[1].(int)]
	}).(MonitorConfigurationRequestHeaderOutput)
}

type MonitorConfigurationRequestQueryParam struct {
	// (Updatable) Name of the parameter.
	ParamName *string `pulumi:"paramName"`
	// (Updatable) Value of the parameter.
	ParamValue *string `pulumi:"paramValue"`
}

// MonitorConfigurationRequestQueryParamInput is an input type that accepts MonitorConfigurationRequestQueryParamArgs and MonitorConfigurationRequestQueryParamOutput values.
// You can construct a concrete instance of `MonitorConfigurationRequestQueryParamInput` via:
//
//          MonitorConfigurationRequestQueryParamArgs{...}
type MonitorConfigurationRequestQueryParamInput interface {
	pulumi.Input

	ToMonitorConfigurationRequestQueryParamOutput() MonitorConfigurationRequestQueryParamOutput
	ToMonitorConfigurationRequestQueryParamOutputWithContext(context.Context) MonitorConfigurationRequestQueryParamOutput
}

type MonitorConfigurationRequestQueryParamArgs struct {
	// (Updatable) Name of the parameter.
	ParamName pulumi.StringPtrInput `pulumi:"paramName"`
	// (Updatable) Value of the parameter.
	ParamValue pulumi.StringPtrInput `pulumi:"paramValue"`
}

func (MonitorConfigurationRequestQueryParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorConfigurationRequestQueryParam)(nil)).Elem()
}

func (i MonitorConfigurationRequestQueryParamArgs) ToMonitorConfigurationRequestQueryParamOutput() MonitorConfigurationRequestQueryParamOutput {
	return i.ToMonitorConfigurationRequestQueryParamOutputWithContext(context.Background())
}

func (i MonitorConfigurationRequestQueryParamArgs) ToMonitorConfigurationRequestQueryParamOutputWithContext(ctx context.Context) MonitorConfigurationRequestQueryParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorConfigurationRequestQueryParamOutput)
}

// MonitorConfigurationRequestQueryParamArrayInput is an input type that accepts MonitorConfigurationRequestQueryParamArray and MonitorConfigurationRequestQueryParamArrayOutput values.
// You can construct a concrete instance of `MonitorConfigurationRequestQueryParamArrayInput` via:
//
//          MonitorConfigurationRequestQueryParamArray{ MonitorConfigurationRequestQueryParamArgs{...} }
type MonitorConfigurationRequestQueryParamArrayInput interface {
	pulumi.Input

	ToMonitorConfigurationRequestQueryParamArrayOutput() MonitorConfigurationRequestQueryParamArrayOutput
	ToMonitorConfigurationRequestQueryParamArrayOutputWithContext(context.Context) MonitorConfigurationRequestQueryParamArrayOutput
}

type MonitorConfigurationRequestQueryParamArray []MonitorConfigurationRequestQueryParamInput

func (MonitorConfigurationRequestQueryParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitorConfigurationRequestQueryParam)(nil)).Elem()
}

func (i MonitorConfigurationRequestQueryParamArray) ToMonitorConfigurationRequestQueryParamArrayOutput() MonitorConfigurationRequestQueryParamArrayOutput {
	return i.ToMonitorConfigurationRequestQueryParamArrayOutputWithContext(context.Background())
}

func (i MonitorConfigurationRequestQueryParamArray) ToMonitorConfigurationRequestQueryParamArrayOutputWithContext(ctx context.Context) MonitorConfigurationRequestQueryParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorConfigurationRequestQueryParamArrayOutput)
}

type MonitorConfigurationRequestQueryParamOutput struct{ *pulumi.OutputState }

func (MonitorConfigurationRequestQueryParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorConfigurationRequestQueryParam)(nil)).Elem()
}

func (o MonitorConfigurationRequestQueryParamOutput) ToMonitorConfigurationRequestQueryParamOutput() MonitorConfigurationRequestQueryParamOutput {
	return o
}

func (o MonitorConfigurationRequestQueryParamOutput) ToMonitorConfigurationRequestQueryParamOutputWithContext(ctx context.Context) MonitorConfigurationRequestQueryParamOutput {
	return o
}

// (Updatable) Name of the parameter.
func (o MonitorConfigurationRequestQueryParamOutput) ParamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorConfigurationRequestQueryParam) *string { return v.ParamName }).(pulumi.StringPtrOutput)
}

// (Updatable) Value of the parameter.
func (o MonitorConfigurationRequestQueryParamOutput) ParamValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorConfigurationRequestQueryParam) *string { return v.ParamValue }).(pulumi.StringPtrOutput)
}

type MonitorConfigurationRequestQueryParamArrayOutput struct{ *pulumi.OutputState }

func (MonitorConfigurationRequestQueryParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitorConfigurationRequestQueryParam)(nil)).Elem()
}

func (o MonitorConfigurationRequestQueryParamArrayOutput) ToMonitorConfigurationRequestQueryParamArrayOutput() MonitorConfigurationRequestQueryParamArrayOutput {
	return o
}

func (o MonitorConfigurationRequestQueryParamArrayOutput) ToMonitorConfigurationRequestQueryParamArrayOutputWithContext(ctx context.Context) MonitorConfigurationRequestQueryParamArrayOutput {
	return o
}

func (o MonitorConfigurationRequestQueryParamArrayOutput) Index(i pulumi.IntInput) MonitorConfigurationRequestQueryParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MonitorConfigurationRequestQueryParam {
		return vs[0].([]MonitorConfigurationRequestQueryParam)[vs[1].(int)]
	}).(MonitorConfigurationRequestQueryParamOutput)
}

type MonitorConfigurationVerifyText struct {
	// (Updatable) Verification text in the response.
	Text *string `pulumi:"text"`
}

// MonitorConfigurationVerifyTextInput is an input type that accepts MonitorConfigurationVerifyTextArgs and MonitorConfigurationVerifyTextOutput values.
// You can construct a concrete instance of `MonitorConfigurationVerifyTextInput` via:
//
//          MonitorConfigurationVerifyTextArgs{...}
type MonitorConfigurationVerifyTextInput interface {
	pulumi.Input

	ToMonitorConfigurationVerifyTextOutput() MonitorConfigurationVerifyTextOutput
	ToMonitorConfigurationVerifyTextOutputWithContext(context.Context) MonitorConfigurationVerifyTextOutput
}

type MonitorConfigurationVerifyTextArgs struct {
	// (Updatable) Verification text in the response.
	Text pulumi.StringPtrInput `pulumi:"text"`
}

func (MonitorConfigurationVerifyTextArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorConfigurationVerifyText)(nil)).Elem()
}

func (i MonitorConfigurationVerifyTextArgs) ToMonitorConfigurationVerifyTextOutput() MonitorConfigurationVerifyTextOutput {
	return i.ToMonitorConfigurationVerifyTextOutputWithContext(context.Background())
}

func (i MonitorConfigurationVerifyTextArgs) ToMonitorConfigurationVerifyTextOutputWithContext(ctx context.Context) MonitorConfigurationVerifyTextOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorConfigurationVerifyTextOutput)
}

// MonitorConfigurationVerifyTextArrayInput is an input type that accepts MonitorConfigurationVerifyTextArray and MonitorConfigurationVerifyTextArrayOutput values.
// You can construct a concrete instance of `MonitorConfigurationVerifyTextArrayInput` via:
//
//          MonitorConfigurationVerifyTextArray{ MonitorConfigurationVerifyTextArgs{...} }
type MonitorConfigurationVerifyTextArrayInput interface {
	pulumi.Input

	ToMonitorConfigurationVerifyTextArrayOutput() MonitorConfigurationVerifyTextArrayOutput
	ToMonitorConfigurationVerifyTextArrayOutputWithContext(context.Context) MonitorConfigurationVerifyTextArrayOutput
}

type MonitorConfigurationVerifyTextArray []MonitorConfigurationVerifyTextInput

func (MonitorConfigurationVerifyTextArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitorConfigurationVerifyText)(nil)).Elem()
}

func (i MonitorConfigurationVerifyTextArray) ToMonitorConfigurationVerifyTextArrayOutput() MonitorConfigurationVerifyTextArrayOutput {
	return i.ToMonitorConfigurationVerifyTextArrayOutputWithContext(context.Background())
}

func (i MonitorConfigurationVerifyTextArray) ToMonitorConfigurationVerifyTextArrayOutputWithContext(ctx context.Context) MonitorConfigurationVerifyTextArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorConfigurationVerifyTextArrayOutput)
}

type MonitorConfigurationVerifyTextOutput struct{ *pulumi.OutputState }

func (MonitorConfigurationVerifyTextOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorConfigurationVerifyText)(nil)).Elem()
}

func (o MonitorConfigurationVerifyTextOutput) ToMonitorConfigurationVerifyTextOutput() MonitorConfigurationVerifyTextOutput {
	return o
}

func (o MonitorConfigurationVerifyTextOutput) ToMonitorConfigurationVerifyTextOutputWithContext(ctx context.Context) MonitorConfigurationVerifyTextOutput {
	return o
}

// (Updatable) Verification text in the response.
func (o MonitorConfigurationVerifyTextOutput) Text() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorConfigurationVerifyText) *string { return v.Text }).(pulumi.StringPtrOutput)
}

type MonitorConfigurationVerifyTextArrayOutput struct{ *pulumi.OutputState }

func (MonitorConfigurationVerifyTextArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitorConfigurationVerifyText)(nil)).Elem()
}

func (o MonitorConfigurationVerifyTextArrayOutput) ToMonitorConfigurationVerifyTextArrayOutput() MonitorConfigurationVerifyTextArrayOutput {
	return o
}

func (o MonitorConfigurationVerifyTextArrayOutput) ToMonitorConfigurationVerifyTextArrayOutputWithContext(ctx context.Context) MonitorConfigurationVerifyTextArrayOutput {
	return o
}

func (o MonitorConfigurationVerifyTextArrayOutput) Index(i pulumi.IntInput) MonitorConfigurationVerifyTextOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MonitorConfigurationVerifyText {
		return vs[0].([]MonitorConfigurationVerifyText)[vs[1].(int)]
	}).(MonitorConfigurationVerifyTextOutput)
}

type MonitorScriptParameter struct {
	// If parameter value is default or overwritten.
	IsOverwritten *bool `pulumi:"isOverwritten"`
	// Describes if  the parameter value is secret and should be kept confidential. isSecret is specified in either CreateScript or UpdateScript API.
	IsSecret *bool `pulumi:"isSecret"`
	// Details of the script parameter that can be used to overwrite the parameter present in the script.
	MonitorScriptParameter *MonitorScriptParameterMonitorScriptParameter `pulumi:"monitorScriptParameter"`
	// (Updatable) Name of the parameter.
	ParamName string `pulumi:"paramName"`
	// (Updatable) Value of the parameter.
	ParamValue string `pulumi:"paramValue"`
}

// MonitorScriptParameterInput is an input type that accepts MonitorScriptParameterArgs and MonitorScriptParameterOutput values.
// You can construct a concrete instance of `MonitorScriptParameterInput` via:
//
//          MonitorScriptParameterArgs{...}
type MonitorScriptParameterInput interface {
	pulumi.Input

	ToMonitorScriptParameterOutput() MonitorScriptParameterOutput
	ToMonitorScriptParameterOutputWithContext(context.Context) MonitorScriptParameterOutput
}

type MonitorScriptParameterArgs struct {
	// If parameter value is default or overwritten.
	IsOverwritten pulumi.BoolPtrInput `pulumi:"isOverwritten"`
	// Describes if  the parameter value is secret and should be kept confidential. isSecret is specified in either CreateScript or UpdateScript API.
	IsSecret pulumi.BoolPtrInput `pulumi:"isSecret"`
	// Details of the script parameter that can be used to overwrite the parameter present in the script.
	MonitorScriptParameter MonitorScriptParameterMonitorScriptParameterPtrInput `pulumi:"monitorScriptParameter"`
	// (Updatable) Name of the parameter.
	ParamName pulumi.StringInput `pulumi:"paramName"`
	// (Updatable) Value of the parameter.
	ParamValue pulumi.StringInput `pulumi:"paramValue"`
}

func (MonitorScriptParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorScriptParameter)(nil)).Elem()
}

func (i MonitorScriptParameterArgs) ToMonitorScriptParameterOutput() MonitorScriptParameterOutput {
	return i.ToMonitorScriptParameterOutputWithContext(context.Background())
}

func (i MonitorScriptParameterArgs) ToMonitorScriptParameterOutputWithContext(ctx context.Context) MonitorScriptParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorScriptParameterOutput)
}

// MonitorScriptParameterArrayInput is an input type that accepts MonitorScriptParameterArray and MonitorScriptParameterArrayOutput values.
// You can construct a concrete instance of `MonitorScriptParameterArrayInput` via:
//
//          MonitorScriptParameterArray{ MonitorScriptParameterArgs{...} }
type MonitorScriptParameterArrayInput interface {
	pulumi.Input

	ToMonitorScriptParameterArrayOutput() MonitorScriptParameterArrayOutput
	ToMonitorScriptParameterArrayOutputWithContext(context.Context) MonitorScriptParameterArrayOutput
}

type MonitorScriptParameterArray []MonitorScriptParameterInput

func (MonitorScriptParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitorScriptParameter)(nil)).Elem()
}

func (i MonitorScriptParameterArray) ToMonitorScriptParameterArrayOutput() MonitorScriptParameterArrayOutput {
	return i.ToMonitorScriptParameterArrayOutputWithContext(context.Background())
}

func (i MonitorScriptParameterArray) ToMonitorScriptParameterArrayOutputWithContext(ctx context.Context) MonitorScriptParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorScriptParameterArrayOutput)
}

type MonitorScriptParameterOutput struct{ *pulumi.OutputState }

func (MonitorScriptParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorScriptParameter)(nil)).Elem()
}

func (o MonitorScriptParameterOutput) ToMonitorScriptParameterOutput() MonitorScriptParameterOutput {
	return o
}

func (o MonitorScriptParameterOutput) ToMonitorScriptParameterOutputWithContext(ctx context.Context) MonitorScriptParameterOutput {
	return o
}

// If parameter value is default or overwritten.
func (o MonitorScriptParameterOutput) IsOverwritten() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MonitorScriptParameter) *bool { return v.IsOverwritten }).(pulumi.BoolPtrOutput)
}

// Describes if  the parameter value is secret and should be kept confidential. isSecret is specified in either CreateScript or UpdateScript API.
func (o MonitorScriptParameterOutput) GetIsSecret() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MonitorScriptParameter) *bool { return v.IsSecret }).(pulumi.BoolPtrOutput)
}

// Details of the script parameter that can be used to overwrite the parameter present in the script.
func (o MonitorScriptParameterOutput) MonitorScriptParameter() MonitorScriptParameterMonitorScriptParameterPtrOutput {
	return o.ApplyT(func(v MonitorScriptParameter) *MonitorScriptParameterMonitorScriptParameter {
		return v.MonitorScriptParameter
	}).(MonitorScriptParameterMonitorScriptParameterPtrOutput)
}

// (Updatable) Name of the parameter.
func (o MonitorScriptParameterOutput) ParamName() pulumi.StringOutput {
	return o.ApplyT(func(v MonitorScriptParameter) string { return v.ParamName }).(pulumi.StringOutput)
}

// (Updatable) Value of the parameter.
func (o MonitorScriptParameterOutput) ParamValue() pulumi.StringOutput {
	return o.ApplyT(func(v MonitorScriptParameter) string { return v.ParamValue }).(pulumi.StringOutput)
}

type MonitorScriptParameterArrayOutput struct{ *pulumi.OutputState }

func (MonitorScriptParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitorScriptParameter)(nil)).Elem()
}

func (o MonitorScriptParameterArrayOutput) ToMonitorScriptParameterArrayOutput() MonitorScriptParameterArrayOutput {
	return o
}

func (o MonitorScriptParameterArrayOutput) ToMonitorScriptParameterArrayOutputWithContext(ctx context.Context) MonitorScriptParameterArrayOutput {
	return o
}

func (o MonitorScriptParameterArrayOutput) Index(i pulumi.IntInput) MonitorScriptParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MonitorScriptParameter {
		return vs[0].([]MonitorScriptParameter)[vs[1].(int)]
	}).(MonitorScriptParameterOutput)
}

type MonitorScriptParameterMonitorScriptParameter struct {
	// (Updatable) Name of the parameter.
	ParamName *string `pulumi:"paramName"`
	// (Updatable) Value of the parameter.
	ParamValue *string `pulumi:"paramValue"`
}

// MonitorScriptParameterMonitorScriptParameterInput is an input type that accepts MonitorScriptParameterMonitorScriptParameterArgs and MonitorScriptParameterMonitorScriptParameterOutput values.
// You can construct a concrete instance of `MonitorScriptParameterMonitorScriptParameterInput` via:
//
//          MonitorScriptParameterMonitorScriptParameterArgs{...}
type MonitorScriptParameterMonitorScriptParameterInput interface {
	pulumi.Input

	ToMonitorScriptParameterMonitorScriptParameterOutput() MonitorScriptParameterMonitorScriptParameterOutput
	ToMonitorScriptParameterMonitorScriptParameterOutputWithContext(context.Context) MonitorScriptParameterMonitorScriptParameterOutput
}

type MonitorScriptParameterMonitorScriptParameterArgs struct {
	// (Updatable) Name of the parameter.
	ParamName pulumi.StringPtrInput `pulumi:"paramName"`
	// (Updatable) Value of the parameter.
	ParamValue pulumi.StringPtrInput `pulumi:"paramValue"`
}

func (MonitorScriptParameterMonitorScriptParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorScriptParameterMonitorScriptParameter)(nil)).Elem()
}

func (i MonitorScriptParameterMonitorScriptParameterArgs) ToMonitorScriptParameterMonitorScriptParameterOutput() MonitorScriptParameterMonitorScriptParameterOutput {
	return i.ToMonitorScriptParameterMonitorScriptParameterOutputWithContext(context.Background())
}

func (i MonitorScriptParameterMonitorScriptParameterArgs) ToMonitorScriptParameterMonitorScriptParameterOutputWithContext(ctx context.Context) MonitorScriptParameterMonitorScriptParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorScriptParameterMonitorScriptParameterOutput)
}

func (i MonitorScriptParameterMonitorScriptParameterArgs) ToMonitorScriptParameterMonitorScriptParameterPtrOutput() MonitorScriptParameterMonitorScriptParameterPtrOutput {
	return i.ToMonitorScriptParameterMonitorScriptParameterPtrOutputWithContext(context.Background())
}

func (i MonitorScriptParameterMonitorScriptParameterArgs) ToMonitorScriptParameterMonitorScriptParameterPtrOutputWithContext(ctx context.Context) MonitorScriptParameterMonitorScriptParameterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorScriptParameterMonitorScriptParameterOutput).ToMonitorScriptParameterMonitorScriptParameterPtrOutputWithContext(ctx)
}

// MonitorScriptParameterMonitorScriptParameterPtrInput is an input type that accepts MonitorScriptParameterMonitorScriptParameterArgs, MonitorScriptParameterMonitorScriptParameterPtr and MonitorScriptParameterMonitorScriptParameterPtrOutput values.
// You can construct a concrete instance of `MonitorScriptParameterMonitorScriptParameterPtrInput` via:
//
//          MonitorScriptParameterMonitorScriptParameterArgs{...}
//
//  or:
//
//          nil
type MonitorScriptParameterMonitorScriptParameterPtrInput interface {
	pulumi.Input

	ToMonitorScriptParameterMonitorScriptParameterPtrOutput() MonitorScriptParameterMonitorScriptParameterPtrOutput
	ToMonitorScriptParameterMonitorScriptParameterPtrOutputWithContext(context.Context) MonitorScriptParameterMonitorScriptParameterPtrOutput
}

type monitorScriptParameterMonitorScriptParameterPtrType MonitorScriptParameterMonitorScriptParameterArgs

func MonitorScriptParameterMonitorScriptParameterPtr(v *MonitorScriptParameterMonitorScriptParameterArgs) MonitorScriptParameterMonitorScriptParameterPtrInput {
	return (*monitorScriptParameterMonitorScriptParameterPtrType)(v)
}

func (*monitorScriptParameterMonitorScriptParameterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorScriptParameterMonitorScriptParameter)(nil)).Elem()
}

func (i *monitorScriptParameterMonitorScriptParameterPtrType) ToMonitorScriptParameterMonitorScriptParameterPtrOutput() MonitorScriptParameterMonitorScriptParameterPtrOutput {
	return i.ToMonitorScriptParameterMonitorScriptParameterPtrOutputWithContext(context.Background())
}

func (i *monitorScriptParameterMonitorScriptParameterPtrType) ToMonitorScriptParameterMonitorScriptParameterPtrOutputWithContext(ctx context.Context) MonitorScriptParameterMonitorScriptParameterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorScriptParameterMonitorScriptParameterPtrOutput)
}

type MonitorScriptParameterMonitorScriptParameterOutput struct{ *pulumi.OutputState }

func (MonitorScriptParameterMonitorScriptParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorScriptParameterMonitorScriptParameter)(nil)).Elem()
}

func (o MonitorScriptParameterMonitorScriptParameterOutput) ToMonitorScriptParameterMonitorScriptParameterOutput() MonitorScriptParameterMonitorScriptParameterOutput {
	return o
}

func (o MonitorScriptParameterMonitorScriptParameterOutput) ToMonitorScriptParameterMonitorScriptParameterOutputWithContext(ctx context.Context) MonitorScriptParameterMonitorScriptParameterOutput {
	return o
}

func (o MonitorScriptParameterMonitorScriptParameterOutput) ToMonitorScriptParameterMonitorScriptParameterPtrOutput() MonitorScriptParameterMonitorScriptParameterPtrOutput {
	return o.ToMonitorScriptParameterMonitorScriptParameterPtrOutputWithContext(context.Background())
}

func (o MonitorScriptParameterMonitorScriptParameterOutput) ToMonitorScriptParameterMonitorScriptParameterPtrOutputWithContext(ctx context.Context) MonitorScriptParameterMonitorScriptParameterPtrOutput {
	return o.ApplyT(func(v MonitorScriptParameterMonitorScriptParameter) *MonitorScriptParameterMonitorScriptParameter {
		return &v
	}).(MonitorScriptParameterMonitorScriptParameterPtrOutput)
}

// (Updatable) Name of the parameter.
func (o MonitorScriptParameterMonitorScriptParameterOutput) ParamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorScriptParameterMonitorScriptParameter) *string { return v.ParamName }).(pulumi.StringPtrOutput)
}

// (Updatable) Value of the parameter.
func (o MonitorScriptParameterMonitorScriptParameterOutput) ParamValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorScriptParameterMonitorScriptParameter) *string { return v.ParamValue }).(pulumi.StringPtrOutput)
}

type MonitorScriptParameterMonitorScriptParameterPtrOutput struct{ *pulumi.OutputState }

func (MonitorScriptParameterMonitorScriptParameterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorScriptParameterMonitorScriptParameter)(nil)).Elem()
}

func (o MonitorScriptParameterMonitorScriptParameterPtrOutput) ToMonitorScriptParameterMonitorScriptParameterPtrOutput() MonitorScriptParameterMonitorScriptParameterPtrOutput {
	return o
}

func (o MonitorScriptParameterMonitorScriptParameterPtrOutput) ToMonitorScriptParameterMonitorScriptParameterPtrOutputWithContext(ctx context.Context) MonitorScriptParameterMonitorScriptParameterPtrOutput {
	return o
}

func (o MonitorScriptParameterMonitorScriptParameterPtrOutput) Elem() MonitorScriptParameterMonitorScriptParameterOutput {
	return o.ApplyT(func(v *MonitorScriptParameterMonitorScriptParameter) MonitorScriptParameterMonitorScriptParameter {
		return *v
	}).(MonitorScriptParameterMonitorScriptParameterOutput)
}

// (Updatable) Name of the parameter.
func (o MonitorScriptParameterMonitorScriptParameterPtrOutput) ParamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorScriptParameterMonitorScriptParameter) *string {
		if v == nil {
			return nil
		}
		return v.ParamName
	}).(pulumi.StringPtrOutput)
}

// (Updatable) Value of the parameter.
func (o MonitorScriptParameterMonitorScriptParameterPtrOutput) ParamValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorScriptParameterMonitorScriptParameter) *string {
		if v == nil {
			return nil
		}
		return v.ParamValue
	}).(pulumi.StringPtrOutput)
}

type ScriptMonitorStatusCountMap struct {
	// Number of disabled monitors using the script.
	Disabled *int `pulumi:"disabled"`
	// Number of enabled monitors using the script.
	Enabled *int `pulumi:"enabled"`
	// Number of invalid monitors using the script.
	Invalid *int `pulumi:"invalid"`
	// Total number of monitors using the script.
	Total *int `pulumi:"total"`
}

// ScriptMonitorStatusCountMapInput is an input type that accepts ScriptMonitorStatusCountMap and ScriptMonitorStatusCountMapOutput values.
// You can construct a concrete instance of `ScriptMonitorStatusCountMapInput` via:
//
//          ScriptMonitorStatusCountMap{ "key": ScriptMonitorStatusCountArgs{...} }
type ScriptMonitorStatusCountMapInput interface {
	pulumi.Input

	ToScriptMonitorStatusCountMapOutput() ScriptMonitorStatusCountMapOutput
	ToScriptMonitorStatusCountMapOutputWithContext(context.Context) ScriptMonitorStatusCountMapOutput
}

type ScriptMonitorStatusCountMapArgs struct {
	// Number of disabled monitors using the script.
	Disabled pulumi.IntPtrInput `pulumi:"disabled"`
	// Number of enabled monitors using the script.
	Enabled pulumi.IntPtrInput `pulumi:"enabled"`
	// Number of invalid monitors using the script.
	Invalid pulumi.IntPtrInput `pulumi:"invalid"`
	// Total number of monitors using the script.
	Total pulumi.IntPtrInput `pulumi:"total"`
}

func (ScriptMonitorStatusCountMapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScriptMonitorStatusCountMap)(nil)).Elem()
}

func (i ScriptMonitorStatusCountMapArgs) ToScriptMonitorStatusCountMapOutput() ScriptMonitorStatusCountMapOutput {
	return i.ToScriptMonitorStatusCountMapOutputWithContext(context.Background())
}

func (i ScriptMonitorStatusCountMapArgs) ToScriptMonitorStatusCountMapOutputWithContext(ctx context.Context) ScriptMonitorStatusCountMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScriptMonitorStatusCountMapOutput)
}

func (i ScriptMonitorStatusCountMapArgs) ToScriptMonitorStatusCountMapPtrOutput() ScriptMonitorStatusCountMapPtrOutput {
	return i.ToScriptMonitorStatusCountMapPtrOutputWithContext(context.Background())
}

func (i ScriptMonitorStatusCountMapArgs) ToScriptMonitorStatusCountMapPtrOutputWithContext(ctx context.Context) ScriptMonitorStatusCountMapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScriptMonitorStatusCountMapOutput).ToScriptMonitorStatusCountMapPtrOutputWithContext(ctx)
}

// ScriptMonitorStatusCountMapPtrInput is an input type that accepts ScriptMonitorStatusCountMapArgs, ScriptMonitorStatusCountMapPtr and ScriptMonitorStatusCountMapPtrOutput values.
// You can construct a concrete instance of `ScriptMonitorStatusCountMapPtrInput` via:
//
//          ScriptMonitorStatusCountMapArgs{...}
//
//  or:
//
//          nil
type ScriptMonitorStatusCountMapPtrInput interface {
	pulumi.Input

	ToScriptMonitorStatusCountMapPtrOutput() ScriptMonitorStatusCountMapPtrOutput
	ToScriptMonitorStatusCountMapPtrOutputWithContext(context.Context) ScriptMonitorStatusCountMapPtrOutput
}

type scriptMonitorStatusCountMapPtrType ScriptMonitorStatusCountMapArgs

func ScriptMonitorStatusCountMapPtr(v *ScriptMonitorStatusCountMapArgs) ScriptMonitorStatusCountMapPtrInput {
	return (*scriptMonitorStatusCountMapPtrType)(v)
}

func (*scriptMonitorStatusCountMapPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScriptMonitorStatusCountMap)(nil)).Elem()
}

func (i *scriptMonitorStatusCountMapPtrType) ToScriptMonitorStatusCountMapPtrOutput() ScriptMonitorStatusCountMapPtrOutput {
	return i.ToScriptMonitorStatusCountMapPtrOutputWithContext(context.Background())
}

func (i *scriptMonitorStatusCountMapPtrType) ToScriptMonitorStatusCountMapPtrOutputWithContext(ctx context.Context) ScriptMonitorStatusCountMapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScriptMonitorStatusCountMapPtrOutput)
}

type ScriptMonitorStatusCountMapOutput struct{ *pulumi.OutputState }

func (ScriptMonitorStatusCountMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScriptMonitorStatusCountMap)(nil)).Elem()
}

func (o ScriptMonitorStatusCountMapOutput) ToScriptMonitorStatusCountMapOutput() ScriptMonitorStatusCountMapOutput {
	return o
}

func (o ScriptMonitorStatusCountMapOutput) ToScriptMonitorStatusCountMapOutputWithContext(ctx context.Context) ScriptMonitorStatusCountMapOutput {
	return o
}

func (o ScriptMonitorStatusCountMapOutput) ToScriptMonitorStatusCountMapPtrOutput() ScriptMonitorStatusCountMapPtrOutput {
	return o.ToScriptMonitorStatusCountMapPtrOutputWithContext(context.Background())
}

func (o ScriptMonitorStatusCountMapOutput) ToScriptMonitorStatusCountMapPtrOutputWithContext(ctx context.Context) ScriptMonitorStatusCountMapPtrOutput {
	return o.ApplyT(func(v ScriptMonitorStatusCountMap) *ScriptMonitorStatusCountMap {
		return &v
	}).(ScriptMonitorStatusCountMapPtrOutput)
}

// Number of disabled monitors using the script.
func (o ScriptMonitorStatusCountMapOutput) Disabled() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScriptMonitorStatusCountMap) *int { return v.Disabled }).(pulumi.IntPtrOutput)
}

// Number of enabled monitors using the script.
func (o ScriptMonitorStatusCountMapOutput) Enabled() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScriptMonitorStatusCountMap) *int { return v.Enabled }).(pulumi.IntPtrOutput)
}

// Number of invalid monitors using the script.
func (o ScriptMonitorStatusCountMapOutput) Invalid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScriptMonitorStatusCountMap) *int { return v.Invalid }).(pulumi.IntPtrOutput)
}

// Total number of monitors using the script.
func (o ScriptMonitorStatusCountMapOutput) Total() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScriptMonitorStatusCountMap) *int { return v.Total }).(pulumi.IntPtrOutput)
}

type ScriptMonitorStatusCountMapPtrOutput struct{ *pulumi.OutputState }

func (ScriptMonitorStatusCountMapPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScriptMonitorStatusCountMap)(nil)).Elem()
}

func (o ScriptMonitorStatusCountMapPtrOutput) ToScriptMonitorStatusCountMapPtrOutput() ScriptMonitorStatusCountMapPtrOutput {
	return o
}

func (o ScriptMonitorStatusCountMapPtrOutput) ToScriptMonitorStatusCountMapPtrOutputWithContext(ctx context.Context) ScriptMonitorStatusCountMapPtrOutput {
	return o
}

func (o ScriptMonitorStatusCountMapPtrOutput) Elem() ScriptMonitorStatusCountMapOutput {
	return o.ApplyT(func(v *ScriptMonitorStatusCountMap) ScriptMonitorStatusCountMap { return *v }).(ScriptMonitorStatusCountMapOutput)
}

// Number of disabled monitors using the script.
func (o ScriptMonitorStatusCountMapPtrOutput) Disabled() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScriptMonitorStatusCountMap) *int {
		if v == nil {
			return nil
		}
		return v.Disabled
	}).(pulumi.IntPtrOutput)
}

// Number of enabled monitors using the script.
func (o ScriptMonitorStatusCountMapPtrOutput) Enabled() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScriptMonitorStatusCountMap) *int {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.IntPtrOutput)
}

// Number of invalid monitors using the script.
func (o ScriptMonitorStatusCountMapPtrOutput) Invalid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScriptMonitorStatusCountMap) *int {
		if v == nil {
			return nil
		}
		return v.Invalid
	}).(pulumi.IntPtrOutput)
}

// Total number of monitors using the script.
func (o ScriptMonitorStatusCountMapPtrOutput) Total() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScriptMonitorStatusCountMap) *int {
		if v == nil {
			return nil
		}
		return v.Total
	}).(pulumi.IntPtrOutput)
}

type ScriptParameter struct {
	// If parameter value is default or overwritten.
	IsOverwritten *bool `pulumi:"isOverwritten"`
	// (Updatable) If the parameter value is secret and should be kept confidential, then set isSecret to true.
	IsSecret *bool `pulumi:"isSecret"`
	// (Updatable) Name of the parameter.
	ParamName string `pulumi:"paramName"`
	// (Updatable) Value of the parameter.
	ParamValue *string `pulumi:"paramValue"`
	// Details of the script parameters, paramName must be from the script content and these details can be used to overwrite the default parameter present in the script content.
	ScriptParameter *ScriptParameterScriptParameter `pulumi:"scriptParameter"`
}

// ScriptParameterInput is an input type that accepts ScriptParameterArgs and ScriptParameterOutput values.
// You can construct a concrete instance of `ScriptParameterInput` via:
//
//          ScriptParameterArgs{...}
type ScriptParameterInput interface {
	pulumi.Input

	ToScriptParameterOutput() ScriptParameterOutput
	ToScriptParameterOutputWithContext(context.Context) ScriptParameterOutput
}

type ScriptParameterArgs struct {
	// If parameter value is default or overwritten.
	IsOverwritten pulumi.BoolPtrInput `pulumi:"isOverwritten"`
	// (Updatable) If the parameter value is secret and should be kept confidential, then set isSecret to true.
	IsSecret pulumi.BoolPtrInput `pulumi:"isSecret"`
	// (Updatable) Name of the parameter.
	ParamName pulumi.StringInput `pulumi:"paramName"`
	// (Updatable) Value of the parameter.
	ParamValue pulumi.StringPtrInput `pulumi:"paramValue"`
	// Details of the script parameters, paramName must be from the script content and these details can be used to overwrite the default parameter present in the script content.
	ScriptParameter ScriptParameterScriptParameterPtrInput `pulumi:"scriptParameter"`
}

func (ScriptParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScriptParameter)(nil)).Elem()
}

func (i ScriptParameterArgs) ToScriptParameterOutput() ScriptParameterOutput {
	return i.ToScriptParameterOutputWithContext(context.Background())
}

func (i ScriptParameterArgs) ToScriptParameterOutputWithContext(ctx context.Context) ScriptParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScriptParameterOutput)
}

// ScriptParameterArrayInput is an input type that accepts ScriptParameterArray and ScriptParameterArrayOutput values.
// You can construct a concrete instance of `ScriptParameterArrayInput` via:
//
//          ScriptParameterArray{ ScriptParameterArgs{...} }
type ScriptParameterArrayInput interface {
	pulumi.Input

	ToScriptParameterArrayOutput() ScriptParameterArrayOutput
	ToScriptParameterArrayOutputWithContext(context.Context) ScriptParameterArrayOutput
}

type ScriptParameterArray []ScriptParameterInput

func (ScriptParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScriptParameter)(nil)).Elem()
}

func (i ScriptParameterArray) ToScriptParameterArrayOutput() ScriptParameterArrayOutput {
	return i.ToScriptParameterArrayOutputWithContext(context.Background())
}

func (i ScriptParameterArray) ToScriptParameterArrayOutputWithContext(ctx context.Context) ScriptParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScriptParameterArrayOutput)
}

type ScriptParameterOutput struct{ *pulumi.OutputState }

func (ScriptParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScriptParameter)(nil)).Elem()
}

func (o ScriptParameterOutput) ToScriptParameterOutput() ScriptParameterOutput {
	return o
}

func (o ScriptParameterOutput) ToScriptParameterOutputWithContext(ctx context.Context) ScriptParameterOutput {
	return o
}

// If parameter value is default or overwritten.
func (o ScriptParameterOutput) IsOverwritten() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ScriptParameter) *bool { return v.IsOverwritten }).(pulumi.BoolPtrOutput)
}

// (Updatable) If the parameter value is secret and should be kept confidential, then set isSecret to true.
func (o ScriptParameterOutput) GetIsSecret() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ScriptParameter) *bool { return v.IsSecret }).(pulumi.BoolPtrOutput)
}

// (Updatable) Name of the parameter.
func (o ScriptParameterOutput) ParamName() pulumi.StringOutput {
	return o.ApplyT(func(v ScriptParameter) string { return v.ParamName }).(pulumi.StringOutput)
}

// (Updatable) Value of the parameter.
func (o ScriptParameterOutput) ParamValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScriptParameter) *string { return v.ParamValue }).(pulumi.StringPtrOutput)
}

// Details of the script parameters, paramName must be from the script content and these details can be used to overwrite the default parameter present in the script content.
func (o ScriptParameterOutput) ScriptParameter() ScriptParameterScriptParameterPtrOutput {
	return o.ApplyT(func(v ScriptParameter) *ScriptParameterScriptParameter { return v.ScriptParameter }).(ScriptParameterScriptParameterPtrOutput)
}

type ScriptParameterArrayOutput struct{ *pulumi.OutputState }

func (ScriptParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScriptParameter)(nil)).Elem()
}

func (o ScriptParameterArrayOutput) ToScriptParameterArrayOutput() ScriptParameterArrayOutput {
	return o
}

func (o ScriptParameterArrayOutput) ToScriptParameterArrayOutputWithContext(ctx context.Context) ScriptParameterArrayOutput {
	return o
}

func (o ScriptParameterArrayOutput) Index(i pulumi.IntInput) ScriptParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScriptParameter {
		return vs[0].([]ScriptParameter)[vs[1].(int)]
	}).(ScriptParameterOutput)
}

type ScriptParameterScriptParameter struct {
	// (Updatable) If the parameter value is secret and should be kept confidential, then set isSecret to true.
	IsSecret *bool `pulumi:"isSecret"`
	// (Updatable) Name of the parameter.
	ParamName *string `pulumi:"paramName"`
	// (Updatable) Value of the parameter.
	ParamValue *string `pulumi:"paramValue"`
}

// ScriptParameterScriptParameterInput is an input type that accepts ScriptParameterScriptParameterArgs and ScriptParameterScriptParameterOutput values.
// You can construct a concrete instance of `ScriptParameterScriptParameterInput` via:
//
//          ScriptParameterScriptParameterArgs{...}
type ScriptParameterScriptParameterInput interface {
	pulumi.Input

	ToScriptParameterScriptParameterOutput() ScriptParameterScriptParameterOutput
	ToScriptParameterScriptParameterOutputWithContext(context.Context) ScriptParameterScriptParameterOutput
}

type ScriptParameterScriptParameterArgs struct {
	// (Updatable) If the parameter value is secret and should be kept confidential, then set isSecret to true.
	IsSecret pulumi.BoolPtrInput `pulumi:"isSecret"`
	// (Updatable) Name of the parameter.
	ParamName pulumi.StringPtrInput `pulumi:"paramName"`
	// (Updatable) Value of the parameter.
	ParamValue pulumi.StringPtrInput `pulumi:"paramValue"`
}

func (ScriptParameterScriptParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScriptParameterScriptParameter)(nil)).Elem()
}

func (i ScriptParameterScriptParameterArgs) ToScriptParameterScriptParameterOutput() ScriptParameterScriptParameterOutput {
	return i.ToScriptParameterScriptParameterOutputWithContext(context.Background())
}

func (i ScriptParameterScriptParameterArgs) ToScriptParameterScriptParameterOutputWithContext(ctx context.Context) ScriptParameterScriptParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScriptParameterScriptParameterOutput)
}

func (i ScriptParameterScriptParameterArgs) ToScriptParameterScriptParameterPtrOutput() ScriptParameterScriptParameterPtrOutput {
	return i.ToScriptParameterScriptParameterPtrOutputWithContext(context.Background())
}

func (i ScriptParameterScriptParameterArgs) ToScriptParameterScriptParameterPtrOutputWithContext(ctx context.Context) ScriptParameterScriptParameterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScriptParameterScriptParameterOutput).ToScriptParameterScriptParameterPtrOutputWithContext(ctx)
}

// ScriptParameterScriptParameterPtrInput is an input type that accepts ScriptParameterScriptParameterArgs, ScriptParameterScriptParameterPtr and ScriptParameterScriptParameterPtrOutput values.
// You can construct a concrete instance of `ScriptParameterScriptParameterPtrInput` via:
//
//          ScriptParameterScriptParameterArgs{...}
//
//  or:
//
//          nil
type ScriptParameterScriptParameterPtrInput interface {
	pulumi.Input

	ToScriptParameterScriptParameterPtrOutput() ScriptParameterScriptParameterPtrOutput
	ToScriptParameterScriptParameterPtrOutputWithContext(context.Context) ScriptParameterScriptParameterPtrOutput
}

type scriptParameterScriptParameterPtrType ScriptParameterScriptParameterArgs

func ScriptParameterScriptParameterPtr(v *ScriptParameterScriptParameterArgs) ScriptParameterScriptParameterPtrInput {
	return (*scriptParameterScriptParameterPtrType)(v)
}

func (*scriptParameterScriptParameterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScriptParameterScriptParameter)(nil)).Elem()
}

func (i *scriptParameterScriptParameterPtrType) ToScriptParameterScriptParameterPtrOutput() ScriptParameterScriptParameterPtrOutput {
	return i.ToScriptParameterScriptParameterPtrOutputWithContext(context.Background())
}

func (i *scriptParameterScriptParameterPtrType) ToScriptParameterScriptParameterPtrOutputWithContext(ctx context.Context) ScriptParameterScriptParameterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScriptParameterScriptParameterPtrOutput)
}

type ScriptParameterScriptParameterOutput struct{ *pulumi.OutputState }

func (ScriptParameterScriptParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScriptParameterScriptParameter)(nil)).Elem()
}

func (o ScriptParameterScriptParameterOutput) ToScriptParameterScriptParameterOutput() ScriptParameterScriptParameterOutput {
	return o
}

func (o ScriptParameterScriptParameterOutput) ToScriptParameterScriptParameterOutputWithContext(ctx context.Context) ScriptParameterScriptParameterOutput {
	return o
}

func (o ScriptParameterScriptParameterOutput) ToScriptParameterScriptParameterPtrOutput() ScriptParameterScriptParameterPtrOutput {
	return o.ToScriptParameterScriptParameterPtrOutputWithContext(context.Background())
}

func (o ScriptParameterScriptParameterOutput) ToScriptParameterScriptParameterPtrOutputWithContext(ctx context.Context) ScriptParameterScriptParameterPtrOutput {
	return o.ApplyT(func(v ScriptParameterScriptParameter) *ScriptParameterScriptParameter {
		return &v
	}).(ScriptParameterScriptParameterPtrOutput)
}

// (Updatable) If the parameter value is secret and should be kept confidential, then set isSecret to true.
func (o ScriptParameterScriptParameterOutput) GetIsSecret() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ScriptParameterScriptParameter) *bool { return v.IsSecret }).(pulumi.BoolPtrOutput)
}

// (Updatable) Name of the parameter.
func (o ScriptParameterScriptParameterOutput) ParamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScriptParameterScriptParameter) *string { return v.ParamName }).(pulumi.StringPtrOutput)
}

// (Updatable) Value of the parameter.
func (o ScriptParameterScriptParameterOutput) ParamValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScriptParameterScriptParameter) *string { return v.ParamValue }).(pulumi.StringPtrOutput)
}

type ScriptParameterScriptParameterPtrOutput struct{ *pulumi.OutputState }

func (ScriptParameterScriptParameterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScriptParameterScriptParameter)(nil)).Elem()
}

func (o ScriptParameterScriptParameterPtrOutput) ToScriptParameterScriptParameterPtrOutput() ScriptParameterScriptParameterPtrOutput {
	return o
}

func (o ScriptParameterScriptParameterPtrOutput) ToScriptParameterScriptParameterPtrOutputWithContext(ctx context.Context) ScriptParameterScriptParameterPtrOutput {
	return o
}

func (o ScriptParameterScriptParameterPtrOutput) Elem() ScriptParameterScriptParameterOutput {
	return o.ApplyT(func(v *ScriptParameterScriptParameter) ScriptParameterScriptParameter { return *v }).(ScriptParameterScriptParameterOutput)
}

// (Updatable) If the parameter value is secret and should be kept confidential, then set isSecret to true.
func (o ScriptParameterScriptParameterPtrOutput) IsSecretProp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ScriptParameterScriptParameter) *bool {
		if v == nil {
			return nil
		}
		return v.IsSecret
	}).(pulumi.BoolPtrOutput)
}

// (Updatable) Name of the parameter.
func (o ScriptParameterScriptParameterPtrOutput) ParamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScriptParameterScriptParameter) *string {
		if v == nil {
			return nil
		}
		return v.ParamName
	}).(pulumi.StringPtrOutput)
}

// (Updatable) Value of the parameter.
func (o ScriptParameterScriptParameterPtrOutput) ParamValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScriptParameterScriptParameter) *string {
		if v == nil {
			return nil
		}
		return v.ParamValue
	}).(pulumi.StringPtrOutput)
}

type GetMonitorConfiguration struct {
	// Type of configuration.
	ConfigType string `pulumi:"configType"`
	// If certificate validation is enabled, then the call will fail in case of certification errors.
	IsCertificateValidationEnabled bool `pulumi:"isCertificateValidationEnabled"`
	// If isFailureRetried is enabled, then a failed call will be retried.
	IsFailureRetried bool `pulumi:"isFailureRetried"`
	// If redirection enabled, then redirects will be allowed while accessing target URL.
	IsRedirectionEnabled bool `pulumi:"isRedirectionEnabled"`
	// Details for request HTTP authentication.
	ReqAuthenticationDetails GetMonitorConfigurationReqAuthenticationDetails `pulumi:"reqAuthenticationDetails"`
	// Request http authentication scheme.
	ReqAuthenticationScheme string `pulumi:"reqAuthenticationScheme"`
	// List of request headers. Example: `[{"headerName": "content-type", "headerValue":"json"}]`
	RequestHeaders []GetMonitorConfigurationRequestHeader `pulumi:"requestHeaders"`
	// Request HTTP method.
	RequestMethod string `pulumi:"requestMethod"`
	// Request post body content.
	RequestPostBody string `pulumi:"requestPostBody"`
	// List of request query params. Example: `[{"paramName": "sortOrder", "paramValue": "asc"}]`
	RequestQueryParams []GetMonitorConfigurationRequestQueryParam `pulumi:"requestQueryParams"`
	// Expected HTTP response codes. For status code range, set values such as 2xx, 3xx.
	VerifyResponseCodes []string `pulumi:"verifyResponseCodes"`
	// Verify response content against regular expression based string. If response content does not match the verifyResponseContent value, then it will be considered a failure.
	VerifyResponseContent string `pulumi:"verifyResponseContent"`
	// Verify all the search strings present in response. If any search string is not present in the response, then it will be considered as a failure.
	VerifyTexts []GetMonitorConfigurationVerifyText `pulumi:"verifyTexts"`
}

// GetMonitorConfigurationInput is an input type that accepts GetMonitorConfigurationArgs and GetMonitorConfigurationOutput values.
// You can construct a concrete instance of `GetMonitorConfigurationInput` via:
//
//          GetMonitorConfigurationArgs{...}
type GetMonitorConfigurationInput interface {
	pulumi.Input

	ToGetMonitorConfigurationOutput() GetMonitorConfigurationOutput
	ToGetMonitorConfigurationOutputWithContext(context.Context) GetMonitorConfigurationOutput
}

type GetMonitorConfigurationArgs struct {
	// Type of configuration.
	ConfigType pulumi.StringInput `pulumi:"configType"`
	// If certificate validation is enabled, then the call will fail in case of certification errors.
	IsCertificateValidationEnabled pulumi.BoolInput `pulumi:"isCertificateValidationEnabled"`
	// If isFailureRetried is enabled, then a failed call will be retried.
	IsFailureRetried pulumi.BoolInput `pulumi:"isFailureRetried"`
	// If redirection enabled, then redirects will be allowed while accessing target URL.
	IsRedirectionEnabled pulumi.BoolInput `pulumi:"isRedirectionEnabled"`
	// Details for request HTTP authentication.
	ReqAuthenticationDetails GetMonitorConfigurationReqAuthenticationDetailsInput `pulumi:"reqAuthenticationDetails"`
	// Request http authentication scheme.
	ReqAuthenticationScheme pulumi.StringInput `pulumi:"reqAuthenticationScheme"`
	// List of request headers. Example: `[{"headerName": "content-type", "headerValue":"json"}]`
	RequestHeaders GetMonitorConfigurationRequestHeaderArrayInput `pulumi:"requestHeaders"`
	// Request HTTP method.
	RequestMethod pulumi.StringInput `pulumi:"requestMethod"`
	// Request post body content.
	RequestPostBody pulumi.StringInput `pulumi:"requestPostBody"`
	// List of request query params. Example: `[{"paramName": "sortOrder", "paramValue": "asc"}]`
	RequestQueryParams GetMonitorConfigurationRequestQueryParamArrayInput `pulumi:"requestQueryParams"`
	// Expected HTTP response codes. For status code range, set values such as 2xx, 3xx.
	VerifyResponseCodes pulumi.StringArrayInput `pulumi:"verifyResponseCodes"`
	// Verify response content against regular expression based string. If response content does not match the verifyResponseContent value, then it will be considered a failure.
	VerifyResponseContent pulumi.StringInput `pulumi:"verifyResponseContent"`
	// Verify all the search strings present in response. If any search string is not present in the response, then it will be considered as a failure.
	VerifyTexts GetMonitorConfigurationVerifyTextArrayInput `pulumi:"verifyTexts"`
}

func (GetMonitorConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorConfiguration)(nil)).Elem()
}

func (i GetMonitorConfigurationArgs) ToGetMonitorConfigurationOutput() GetMonitorConfigurationOutput {
	return i.ToGetMonitorConfigurationOutputWithContext(context.Background())
}

func (i GetMonitorConfigurationArgs) ToGetMonitorConfigurationOutputWithContext(ctx context.Context) GetMonitorConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorConfigurationOutput)
}

type GetMonitorConfigurationOutput struct{ *pulumi.OutputState }

func (GetMonitorConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorConfiguration)(nil)).Elem()
}

func (o GetMonitorConfigurationOutput) ToGetMonitorConfigurationOutput() GetMonitorConfigurationOutput {
	return o
}

func (o GetMonitorConfigurationOutput) ToGetMonitorConfigurationOutputWithContext(ctx context.Context) GetMonitorConfigurationOutput {
	return o
}

// Type of configuration.
func (o GetMonitorConfigurationOutput) ConfigType() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorConfiguration) string { return v.ConfigType }).(pulumi.StringOutput)
}

// If certificate validation is enabled, then the call will fail in case of certification errors.
func (o GetMonitorConfigurationOutput) IsCertificateValidationEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMonitorConfiguration) bool { return v.IsCertificateValidationEnabled }).(pulumi.BoolOutput)
}

// If isFailureRetried is enabled, then a failed call will be retried.
func (o GetMonitorConfigurationOutput) IsFailureRetried() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMonitorConfiguration) bool { return v.IsFailureRetried }).(pulumi.BoolOutput)
}

// If redirection enabled, then redirects will be allowed while accessing target URL.
func (o GetMonitorConfigurationOutput) IsRedirectionEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMonitorConfiguration) bool { return v.IsRedirectionEnabled }).(pulumi.BoolOutput)
}

// Details for request HTTP authentication.
func (o GetMonitorConfigurationOutput) ReqAuthenticationDetails() GetMonitorConfigurationReqAuthenticationDetailsOutput {
	return o.ApplyT(func(v GetMonitorConfiguration) GetMonitorConfigurationReqAuthenticationDetails {
		return v.ReqAuthenticationDetails
	}).(GetMonitorConfigurationReqAuthenticationDetailsOutput)
}

// Request http authentication scheme.
func (o GetMonitorConfigurationOutput) ReqAuthenticationScheme() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorConfiguration) string { return v.ReqAuthenticationScheme }).(pulumi.StringOutput)
}

// List of request headers. Example: `[{"headerName": "content-type", "headerValue":"json"}]`
func (o GetMonitorConfigurationOutput) RequestHeaders() GetMonitorConfigurationRequestHeaderArrayOutput {
	return o.ApplyT(func(v GetMonitorConfiguration) []GetMonitorConfigurationRequestHeader { return v.RequestHeaders }).(GetMonitorConfigurationRequestHeaderArrayOutput)
}

// Request HTTP method.
func (o GetMonitorConfigurationOutput) RequestMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorConfiguration) string { return v.RequestMethod }).(pulumi.StringOutput)
}

// Request post body content.
func (o GetMonitorConfigurationOutput) RequestPostBody() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorConfiguration) string { return v.RequestPostBody }).(pulumi.StringOutput)
}

// List of request query params. Example: `[{"paramName": "sortOrder", "paramValue": "asc"}]`
func (o GetMonitorConfigurationOutput) RequestQueryParams() GetMonitorConfigurationRequestQueryParamArrayOutput {
	return o.ApplyT(func(v GetMonitorConfiguration) []GetMonitorConfigurationRequestQueryParam {
		return v.RequestQueryParams
	}).(GetMonitorConfigurationRequestQueryParamArrayOutput)
}

// Expected HTTP response codes. For status code range, set values such as 2xx, 3xx.
func (o GetMonitorConfigurationOutput) VerifyResponseCodes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetMonitorConfiguration) []string { return v.VerifyResponseCodes }).(pulumi.StringArrayOutput)
}

// Verify response content against regular expression based string. If response content does not match the verifyResponseContent value, then it will be considered a failure.
func (o GetMonitorConfigurationOutput) VerifyResponseContent() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorConfiguration) string { return v.VerifyResponseContent }).(pulumi.StringOutput)
}

// Verify all the search strings present in response. If any search string is not present in the response, then it will be considered as a failure.
func (o GetMonitorConfigurationOutput) VerifyTexts() GetMonitorConfigurationVerifyTextArrayOutput {
	return o.ApplyT(func(v GetMonitorConfiguration) []GetMonitorConfigurationVerifyText { return v.VerifyTexts }).(GetMonitorConfigurationVerifyTextArrayOutput)
}

type GetMonitorConfigurationReqAuthenticationDetails struct {
	// List of authentication headers. Example: `[{"headerName": "content-type", "headerValue":"json"}]`
	AuthHeaders []GetMonitorConfigurationReqAuthenticationDetailsAuthHeader `pulumi:"authHeaders"`
	// Request method.
	AuthRequestMethod string `pulumi:"authRequestMethod"`
	// Request post body.
	AuthRequestPostBody string `pulumi:"authRequestPostBody"`
	// Authentication token.
	AuthToken string `pulumi:"authToken"`
	// URL to get authetication token.
	AuthUrl string `pulumi:"authUrl"`
	// Username for authentication.
	AuthUserName string `pulumi:"authUserName"`
	// User password for authentication.
	AuthUserPassword string `pulumi:"authUserPassword"`
	// Request http oauth scheme.
	OauthScheme string `pulumi:"oauthScheme"`
}

// GetMonitorConfigurationReqAuthenticationDetailsInput is an input type that accepts GetMonitorConfigurationReqAuthenticationDetailsArgs and GetMonitorConfigurationReqAuthenticationDetailsOutput values.
// You can construct a concrete instance of `GetMonitorConfigurationReqAuthenticationDetailsInput` via:
//
//          GetMonitorConfigurationReqAuthenticationDetailsArgs{...}
type GetMonitorConfigurationReqAuthenticationDetailsInput interface {
	pulumi.Input

	ToGetMonitorConfigurationReqAuthenticationDetailsOutput() GetMonitorConfigurationReqAuthenticationDetailsOutput
	ToGetMonitorConfigurationReqAuthenticationDetailsOutputWithContext(context.Context) GetMonitorConfigurationReqAuthenticationDetailsOutput
}

type GetMonitorConfigurationReqAuthenticationDetailsArgs struct {
	// List of authentication headers. Example: `[{"headerName": "content-type", "headerValue":"json"}]`
	AuthHeaders GetMonitorConfigurationReqAuthenticationDetailsAuthHeaderArrayInput `pulumi:"authHeaders"`
	// Request method.
	AuthRequestMethod pulumi.StringInput `pulumi:"authRequestMethod"`
	// Request post body.
	AuthRequestPostBody pulumi.StringInput `pulumi:"authRequestPostBody"`
	// Authentication token.
	AuthToken pulumi.StringInput `pulumi:"authToken"`
	// URL to get authetication token.
	AuthUrl pulumi.StringInput `pulumi:"authUrl"`
	// Username for authentication.
	AuthUserName pulumi.StringInput `pulumi:"authUserName"`
	// User password for authentication.
	AuthUserPassword pulumi.StringInput `pulumi:"authUserPassword"`
	// Request http oauth scheme.
	OauthScheme pulumi.StringInput `pulumi:"oauthScheme"`
}

func (GetMonitorConfigurationReqAuthenticationDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorConfigurationReqAuthenticationDetails)(nil)).Elem()
}

func (i GetMonitorConfigurationReqAuthenticationDetailsArgs) ToGetMonitorConfigurationReqAuthenticationDetailsOutput() GetMonitorConfigurationReqAuthenticationDetailsOutput {
	return i.ToGetMonitorConfigurationReqAuthenticationDetailsOutputWithContext(context.Background())
}

func (i GetMonitorConfigurationReqAuthenticationDetailsArgs) ToGetMonitorConfigurationReqAuthenticationDetailsOutputWithContext(ctx context.Context) GetMonitorConfigurationReqAuthenticationDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorConfigurationReqAuthenticationDetailsOutput)
}

type GetMonitorConfigurationReqAuthenticationDetailsOutput struct{ *pulumi.OutputState }

func (GetMonitorConfigurationReqAuthenticationDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorConfigurationReqAuthenticationDetails)(nil)).Elem()
}

func (o GetMonitorConfigurationReqAuthenticationDetailsOutput) ToGetMonitorConfigurationReqAuthenticationDetailsOutput() GetMonitorConfigurationReqAuthenticationDetailsOutput {
	return o
}

func (o GetMonitorConfigurationReqAuthenticationDetailsOutput) ToGetMonitorConfigurationReqAuthenticationDetailsOutputWithContext(ctx context.Context) GetMonitorConfigurationReqAuthenticationDetailsOutput {
	return o
}

// List of authentication headers. Example: `[{"headerName": "content-type", "headerValue":"json"}]`
func (o GetMonitorConfigurationReqAuthenticationDetailsOutput) AuthHeaders() GetMonitorConfigurationReqAuthenticationDetailsAuthHeaderArrayOutput {
	return o.ApplyT(func(v GetMonitorConfigurationReqAuthenticationDetails) []GetMonitorConfigurationReqAuthenticationDetailsAuthHeader {
		return v.AuthHeaders
	}).(GetMonitorConfigurationReqAuthenticationDetailsAuthHeaderArrayOutput)
}

// Request method.
func (o GetMonitorConfigurationReqAuthenticationDetailsOutput) AuthRequestMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorConfigurationReqAuthenticationDetails) string { return v.AuthRequestMethod }).(pulumi.StringOutput)
}

// Request post body.
func (o GetMonitorConfigurationReqAuthenticationDetailsOutput) AuthRequestPostBody() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorConfigurationReqAuthenticationDetails) string { return v.AuthRequestPostBody }).(pulumi.StringOutput)
}

// Authentication token.
func (o GetMonitorConfigurationReqAuthenticationDetailsOutput) AuthToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorConfigurationReqAuthenticationDetails) string { return v.AuthToken }).(pulumi.StringOutput)
}

// URL to get authetication token.
func (o GetMonitorConfigurationReqAuthenticationDetailsOutput) AuthUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorConfigurationReqAuthenticationDetails) string { return v.AuthUrl }).(pulumi.StringOutput)
}

// Username for authentication.
func (o GetMonitorConfigurationReqAuthenticationDetailsOutput) AuthUserName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorConfigurationReqAuthenticationDetails) string { return v.AuthUserName }).(pulumi.StringOutput)
}

// User password for authentication.
func (o GetMonitorConfigurationReqAuthenticationDetailsOutput) AuthUserPassword() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorConfigurationReqAuthenticationDetails) string { return v.AuthUserPassword }).(pulumi.StringOutput)
}

// Request http oauth scheme.
func (o GetMonitorConfigurationReqAuthenticationDetailsOutput) OauthScheme() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorConfigurationReqAuthenticationDetails) string { return v.OauthScheme }).(pulumi.StringOutput)
}

type GetMonitorConfigurationReqAuthenticationDetailsAuthHeader struct {
	// Name of the header.
	HeaderName string `pulumi:"headerName"`
	// Value of the header.
	HeaderValue string `pulumi:"headerValue"`
}

// GetMonitorConfigurationReqAuthenticationDetailsAuthHeaderInput is an input type that accepts GetMonitorConfigurationReqAuthenticationDetailsAuthHeaderArgs and GetMonitorConfigurationReqAuthenticationDetailsAuthHeaderOutput values.
// You can construct a concrete instance of `GetMonitorConfigurationReqAuthenticationDetailsAuthHeaderInput` via:
//
//          GetMonitorConfigurationReqAuthenticationDetailsAuthHeaderArgs{...}
type GetMonitorConfigurationReqAuthenticationDetailsAuthHeaderInput interface {
	pulumi.Input

	ToGetMonitorConfigurationReqAuthenticationDetailsAuthHeaderOutput() GetMonitorConfigurationReqAuthenticationDetailsAuthHeaderOutput
	ToGetMonitorConfigurationReqAuthenticationDetailsAuthHeaderOutputWithContext(context.Context) GetMonitorConfigurationReqAuthenticationDetailsAuthHeaderOutput
}

type GetMonitorConfigurationReqAuthenticationDetailsAuthHeaderArgs struct {
	// Name of the header.
	HeaderName pulumi.StringInput `pulumi:"headerName"`
	// Value of the header.
	HeaderValue pulumi.StringInput `pulumi:"headerValue"`
}

func (GetMonitorConfigurationReqAuthenticationDetailsAuthHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorConfigurationReqAuthenticationDetailsAuthHeader)(nil)).Elem()
}

func (i GetMonitorConfigurationReqAuthenticationDetailsAuthHeaderArgs) ToGetMonitorConfigurationReqAuthenticationDetailsAuthHeaderOutput() GetMonitorConfigurationReqAuthenticationDetailsAuthHeaderOutput {
	return i.ToGetMonitorConfigurationReqAuthenticationDetailsAuthHeaderOutputWithContext(context.Background())
}

func (i GetMonitorConfigurationReqAuthenticationDetailsAuthHeaderArgs) ToGetMonitorConfigurationReqAuthenticationDetailsAuthHeaderOutputWithContext(ctx context.Context) GetMonitorConfigurationReqAuthenticationDetailsAuthHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorConfigurationReqAuthenticationDetailsAuthHeaderOutput)
}

// GetMonitorConfigurationReqAuthenticationDetailsAuthHeaderArrayInput is an input type that accepts GetMonitorConfigurationReqAuthenticationDetailsAuthHeaderArray and GetMonitorConfigurationReqAuthenticationDetailsAuthHeaderArrayOutput values.
// You can construct a concrete instance of `GetMonitorConfigurationReqAuthenticationDetailsAuthHeaderArrayInput` via:
//
//          GetMonitorConfigurationReqAuthenticationDetailsAuthHeaderArray{ GetMonitorConfigurationReqAuthenticationDetailsAuthHeaderArgs{...} }
type GetMonitorConfigurationReqAuthenticationDetailsAuthHeaderArrayInput interface {
	pulumi.Input

	ToGetMonitorConfigurationReqAuthenticationDetailsAuthHeaderArrayOutput() GetMonitorConfigurationReqAuthenticationDetailsAuthHeaderArrayOutput
	ToGetMonitorConfigurationReqAuthenticationDetailsAuthHeaderArrayOutputWithContext(context.Context) GetMonitorConfigurationReqAuthenticationDetailsAuthHeaderArrayOutput
}

type GetMonitorConfigurationReqAuthenticationDetailsAuthHeaderArray []GetMonitorConfigurationReqAuthenticationDetailsAuthHeaderInput

func (GetMonitorConfigurationReqAuthenticationDetailsAuthHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorConfigurationReqAuthenticationDetailsAuthHeader)(nil)).Elem()
}

func (i GetMonitorConfigurationReqAuthenticationDetailsAuthHeaderArray) ToGetMonitorConfigurationReqAuthenticationDetailsAuthHeaderArrayOutput() GetMonitorConfigurationReqAuthenticationDetailsAuthHeaderArrayOutput {
	return i.ToGetMonitorConfigurationReqAuthenticationDetailsAuthHeaderArrayOutputWithContext(context.Background())
}

func (i GetMonitorConfigurationReqAuthenticationDetailsAuthHeaderArray) ToGetMonitorConfigurationReqAuthenticationDetailsAuthHeaderArrayOutputWithContext(ctx context.Context) GetMonitorConfigurationReqAuthenticationDetailsAuthHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorConfigurationReqAuthenticationDetailsAuthHeaderArrayOutput)
}

type GetMonitorConfigurationReqAuthenticationDetailsAuthHeaderOutput struct{ *pulumi.OutputState }

func (GetMonitorConfigurationReqAuthenticationDetailsAuthHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorConfigurationReqAuthenticationDetailsAuthHeader)(nil)).Elem()
}

func (o GetMonitorConfigurationReqAuthenticationDetailsAuthHeaderOutput) ToGetMonitorConfigurationReqAuthenticationDetailsAuthHeaderOutput() GetMonitorConfigurationReqAuthenticationDetailsAuthHeaderOutput {
	return o
}

func (o GetMonitorConfigurationReqAuthenticationDetailsAuthHeaderOutput) ToGetMonitorConfigurationReqAuthenticationDetailsAuthHeaderOutputWithContext(ctx context.Context) GetMonitorConfigurationReqAuthenticationDetailsAuthHeaderOutput {
	return o
}

// Name of the header.
func (o GetMonitorConfigurationReqAuthenticationDetailsAuthHeaderOutput) HeaderName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorConfigurationReqAuthenticationDetailsAuthHeader) string { return v.HeaderName }).(pulumi.StringOutput)
}

// Value of the header.
func (o GetMonitorConfigurationReqAuthenticationDetailsAuthHeaderOutput) HeaderValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorConfigurationReqAuthenticationDetailsAuthHeader) string { return v.HeaderValue }).(pulumi.StringOutput)
}

type GetMonitorConfigurationReqAuthenticationDetailsAuthHeaderArrayOutput struct{ *pulumi.OutputState }

func (GetMonitorConfigurationReqAuthenticationDetailsAuthHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorConfigurationReqAuthenticationDetailsAuthHeader)(nil)).Elem()
}

func (o GetMonitorConfigurationReqAuthenticationDetailsAuthHeaderArrayOutput) ToGetMonitorConfigurationReqAuthenticationDetailsAuthHeaderArrayOutput() GetMonitorConfigurationReqAuthenticationDetailsAuthHeaderArrayOutput {
	return o
}

func (o GetMonitorConfigurationReqAuthenticationDetailsAuthHeaderArrayOutput) ToGetMonitorConfigurationReqAuthenticationDetailsAuthHeaderArrayOutputWithContext(ctx context.Context) GetMonitorConfigurationReqAuthenticationDetailsAuthHeaderArrayOutput {
	return o
}

func (o GetMonitorConfigurationReqAuthenticationDetailsAuthHeaderArrayOutput) Index(i pulumi.IntInput) GetMonitorConfigurationReqAuthenticationDetailsAuthHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMonitorConfigurationReqAuthenticationDetailsAuthHeader {
		return vs[0].([]GetMonitorConfigurationReqAuthenticationDetailsAuthHeader)[vs[1].(int)]
	}).(GetMonitorConfigurationReqAuthenticationDetailsAuthHeaderOutput)
}

type GetMonitorConfigurationRequestHeader struct {
	// Name of the header.
	HeaderName string `pulumi:"headerName"`
	// Value of the header.
	HeaderValue string `pulumi:"headerValue"`
}

// GetMonitorConfigurationRequestHeaderInput is an input type that accepts GetMonitorConfigurationRequestHeaderArgs and GetMonitorConfigurationRequestHeaderOutput values.
// You can construct a concrete instance of `GetMonitorConfigurationRequestHeaderInput` via:
//
//          GetMonitorConfigurationRequestHeaderArgs{...}
type GetMonitorConfigurationRequestHeaderInput interface {
	pulumi.Input

	ToGetMonitorConfigurationRequestHeaderOutput() GetMonitorConfigurationRequestHeaderOutput
	ToGetMonitorConfigurationRequestHeaderOutputWithContext(context.Context) GetMonitorConfigurationRequestHeaderOutput
}

type GetMonitorConfigurationRequestHeaderArgs struct {
	// Name of the header.
	HeaderName pulumi.StringInput `pulumi:"headerName"`
	// Value of the header.
	HeaderValue pulumi.StringInput `pulumi:"headerValue"`
}

func (GetMonitorConfigurationRequestHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorConfigurationRequestHeader)(nil)).Elem()
}

func (i GetMonitorConfigurationRequestHeaderArgs) ToGetMonitorConfigurationRequestHeaderOutput() GetMonitorConfigurationRequestHeaderOutput {
	return i.ToGetMonitorConfigurationRequestHeaderOutputWithContext(context.Background())
}

func (i GetMonitorConfigurationRequestHeaderArgs) ToGetMonitorConfigurationRequestHeaderOutputWithContext(ctx context.Context) GetMonitorConfigurationRequestHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorConfigurationRequestHeaderOutput)
}

// GetMonitorConfigurationRequestHeaderArrayInput is an input type that accepts GetMonitorConfigurationRequestHeaderArray and GetMonitorConfigurationRequestHeaderArrayOutput values.
// You can construct a concrete instance of `GetMonitorConfigurationRequestHeaderArrayInput` via:
//
//          GetMonitorConfigurationRequestHeaderArray{ GetMonitorConfigurationRequestHeaderArgs{...} }
type GetMonitorConfigurationRequestHeaderArrayInput interface {
	pulumi.Input

	ToGetMonitorConfigurationRequestHeaderArrayOutput() GetMonitorConfigurationRequestHeaderArrayOutput
	ToGetMonitorConfigurationRequestHeaderArrayOutputWithContext(context.Context) GetMonitorConfigurationRequestHeaderArrayOutput
}

type GetMonitorConfigurationRequestHeaderArray []GetMonitorConfigurationRequestHeaderInput

func (GetMonitorConfigurationRequestHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorConfigurationRequestHeader)(nil)).Elem()
}

func (i GetMonitorConfigurationRequestHeaderArray) ToGetMonitorConfigurationRequestHeaderArrayOutput() GetMonitorConfigurationRequestHeaderArrayOutput {
	return i.ToGetMonitorConfigurationRequestHeaderArrayOutputWithContext(context.Background())
}

func (i GetMonitorConfigurationRequestHeaderArray) ToGetMonitorConfigurationRequestHeaderArrayOutputWithContext(ctx context.Context) GetMonitorConfigurationRequestHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorConfigurationRequestHeaderArrayOutput)
}

type GetMonitorConfigurationRequestHeaderOutput struct{ *pulumi.OutputState }

func (GetMonitorConfigurationRequestHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorConfigurationRequestHeader)(nil)).Elem()
}

func (o GetMonitorConfigurationRequestHeaderOutput) ToGetMonitorConfigurationRequestHeaderOutput() GetMonitorConfigurationRequestHeaderOutput {
	return o
}

func (o GetMonitorConfigurationRequestHeaderOutput) ToGetMonitorConfigurationRequestHeaderOutputWithContext(ctx context.Context) GetMonitorConfigurationRequestHeaderOutput {
	return o
}

// Name of the header.
func (o GetMonitorConfigurationRequestHeaderOutput) HeaderName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorConfigurationRequestHeader) string { return v.HeaderName }).(pulumi.StringOutput)
}

// Value of the header.
func (o GetMonitorConfigurationRequestHeaderOutput) HeaderValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorConfigurationRequestHeader) string { return v.HeaderValue }).(pulumi.StringOutput)
}

type GetMonitorConfigurationRequestHeaderArrayOutput struct{ *pulumi.OutputState }

func (GetMonitorConfigurationRequestHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorConfigurationRequestHeader)(nil)).Elem()
}

func (o GetMonitorConfigurationRequestHeaderArrayOutput) ToGetMonitorConfigurationRequestHeaderArrayOutput() GetMonitorConfigurationRequestHeaderArrayOutput {
	return o
}

func (o GetMonitorConfigurationRequestHeaderArrayOutput) ToGetMonitorConfigurationRequestHeaderArrayOutputWithContext(ctx context.Context) GetMonitorConfigurationRequestHeaderArrayOutput {
	return o
}

func (o GetMonitorConfigurationRequestHeaderArrayOutput) Index(i pulumi.IntInput) GetMonitorConfigurationRequestHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMonitorConfigurationRequestHeader {
		return vs[0].([]GetMonitorConfigurationRequestHeader)[vs[1].(int)]
	}).(GetMonitorConfigurationRequestHeaderOutput)
}

type GetMonitorConfigurationRequestQueryParam struct {
	// Name of the parameter.
	ParamName string `pulumi:"paramName"`
	// Value of the parameter.
	ParamValue string `pulumi:"paramValue"`
}

// GetMonitorConfigurationRequestQueryParamInput is an input type that accepts GetMonitorConfigurationRequestQueryParamArgs and GetMonitorConfigurationRequestQueryParamOutput values.
// You can construct a concrete instance of `GetMonitorConfigurationRequestQueryParamInput` via:
//
//          GetMonitorConfigurationRequestQueryParamArgs{...}
type GetMonitorConfigurationRequestQueryParamInput interface {
	pulumi.Input

	ToGetMonitorConfigurationRequestQueryParamOutput() GetMonitorConfigurationRequestQueryParamOutput
	ToGetMonitorConfigurationRequestQueryParamOutputWithContext(context.Context) GetMonitorConfigurationRequestQueryParamOutput
}

type GetMonitorConfigurationRequestQueryParamArgs struct {
	// Name of the parameter.
	ParamName pulumi.StringInput `pulumi:"paramName"`
	// Value of the parameter.
	ParamValue pulumi.StringInput `pulumi:"paramValue"`
}

func (GetMonitorConfigurationRequestQueryParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorConfigurationRequestQueryParam)(nil)).Elem()
}

func (i GetMonitorConfigurationRequestQueryParamArgs) ToGetMonitorConfigurationRequestQueryParamOutput() GetMonitorConfigurationRequestQueryParamOutput {
	return i.ToGetMonitorConfigurationRequestQueryParamOutputWithContext(context.Background())
}

func (i GetMonitorConfigurationRequestQueryParamArgs) ToGetMonitorConfigurationRequestQueryParamOutputWithContext(ctx context.Context) GetMonitorConfigurationRequestQueryParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorConfigurationRequestQueryParamOutput)
}

// GetMonitorConfigurationRequestQueryParamArrayInput is an input type that accepts GetMonitorConfigurationRequestQueryParamArray and GetMonitorConfigurationRequestQueryParamArrayOutput values.
// You can construct a concrete instance of `GetMonitorConfigurationRequestQueryParamArrayInput` via:
//
//          GetMonitorConfigurationRequestQueryParamArray{ GetMonitorConfigurationRequestQueryParamArgs{...} }
type GetMonitorConfigurationRequestQueryParamArrayInput interface {
	pulumi.Input

	ToGetMonitorConfigurationRequestQueryParamArrayOutput() GetMonitorConfigurationRequestQueryParamArrayOutput
	ToGetMonitorConfigurationRequestQueryParamArrayOutputWithContext(context.Context) GetMonitorConfigurationRequestQueryParamArrayOutput
}

type GetMonitorConfigurationRequestQueryParamArray []GetMonitorConfigurationRequestQueryParamInput

func (GetMonitorConfigurationRequestQueryParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorConfigurationRequestQueryParam)(nil)).Elem()
}

func (i GetMonitorConfigurationRequestQueryParamArray) ToGetMonitorConfigurationRequestQueryParamArrayOutput() GetMonitorConfigurationRequestQueryParamArrayOutput {
	return i.ToGetMonitorConfigurationRequestQueryParamArrayOutputWithContext(context.Background())
}

func (i GetMonitorConfigurationRequestQueryParamArray) ToGetMonitorConfigurationRequestQueryParamArrayOutputWithContext(ctx context.Context) GetMonitorConfigurationRequestQueryParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorConfigurationRequestQueryParamArrayOutput)
}

type GetMonitorConfigurationRequestQueryParamOutput struct{ *pulumi.OutputState }

func (GetMonitorConfigurationRequestQueryParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorConfigurationRequestQueryParam)(nil)).Elem()
}

func (o GetMonitorConfigurationRequestQueryParamOutput) ToGetMonitorConfigurationRequestQueryParamOutput() GetMonitorConfigurationRequestQueryParamOutput {
	return o
}

func (o GetMonitorConfigurationRequestQueryParamOutput) ToGetMonitorConfigurationRequestQueryParamOutputWithContext(ctx context.Context) GetMonitorConfigurationRequestQueryParamOutput {
	return o
}

// Name of the parameter.
func (o GetMonitorConfigurationRequestQueryParamOutput) ParamName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorConfigurationRequestQueryParam) string { return v.ParamName }).(pulumi.StringOutput)
}

// Value of the parameter.
func (o GetMonitorConfigurationRequestQueryParamOutput) ParamValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorConfigurationRequestQueryParam) string { return v.ParamValue }).(pulumi.StringOutput)
}

type GetMonitorConfigurationRequestQueryParamArrayOutput struct{ *pulumi.OutputState }

func (GetMonitorConfigurationRequestQueryParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorConfigurationRequestQueryParam)(nil)).Elem()
}

func (o GetMonitorConfigurationRequestQueryParamArrayOutput) ToGetMonitorConfigurationRequestQueryParamArrayOutput() GetMonitorConfigurationRequestQueryParamArrayOutput {
	return o
}

func (o GetMonitorConfigurationRequestQueryParamArrayOutput) ToGetMonitorConfigurationRequestQueryParamArrayOutputWithContext(ctx context.Context) GetMonitorConfigurationRequestQueryParamArrayOutput {
	return o
}

func (o GetMonitorConfigurationRequestQueryParamArrayOutput) Index(i pulumi.IntInput) GetMonitorConfigurationRequestQueryParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMonitorConfigurationRequestQueryParam {
		return vs[0].([]GetMonitorConfigurationRequestQueryParam)[vs[1].(int)]
	}).(GetMonitorConfigurationRequestQueryParamOutput)
}

type GetMonitorConfigurationVerifyText struct {
	// Verification text in the response.
	Text string `pulumi:"text"`
}

// GetMonitorConfigurationVerifyTextInput is an input type that accepts GetMonitorConfigurationVerifyTextArgs and GetMonitorConfigurationVerifyTextOutput values.
// You can construct a concrete instance of `GetMonitorConfigurationVerifyTextInput` via:
//
//          GetMonitorConfigurationVerifyTextArgs{...}
type GetMonitorConfigurationVerifyTextInput interface {
	pulumi.Input

	ToGetMonitorConfigurationVerifyTextOutput() GetMonitorConfigurationVerifyTextOutput
	ToGetMonitorConfigurationVerifyTextOutputWithContext(context.Context) GetMonitorConfigurationVerifyTextOutput
}

type GetMonitorConfigurationVerifyTextArgs struct {
	// Verification text in the response.
	Text pulumi.StringInput `pulumi:"text"`
}

func (GetMonitorConfigurationVerifyTextArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorConfigurationVerifyText)(nil)).Elem()
}

func (i GetMonitorConfigurationVerifyTextArgs) ToGetMonitorConfigurationVerifyTextOutput() GetMonitorConfigurationVerifyTextOutput {
	return i.ToGetMonitorConfigurationVerifyTextOutputWithContext(context.Background())
}

func (i GetMonitorConfigurationVerifyTextArgs) ToGetMonitorConfigurationVerifyTextOutputWithContext(ctx context.Context) GetMonitorConfigurationVerifyTextOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorConfigurationVerifyTextOutput)
}

// GetMonitorConfigurationVerifyTextArrayInput is an input type that accepts GetMonitorConfigurationVerifyTextArray and GetMonitorConfigurationVerifyTextArrayOutput values.
// You can construct a concrete instance of `GetMonitorConfigurationVerifyTextArrayInput` via:
//
//          GetMonitorConfigurationVerifyTextArray{ GetMonitorConfigurationVerifyTextArgs{...} }
type GetMonitorConfigurationVerifyTextArrayInput interface {
	pulumi.Input

	ToGetMonitorConfigurationVerifyTextArrayOutput() GetMonitorConfigurationVerifyTextArrayOutput
	ToGetMonitorConfigurationVerifyTextArrayOutputWithContext(context.Context) GetMonitorConfigurationVerifyTextArrayOutput
}

type GetMonitorConfigurationVerifyTextArray []GetMonitorConfigurationVerifyTextInput

func (GetMonitorConfigurationVerifyTextArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorConfigurationVerifyText)(nil)).Elem()
}

func (i GetMonitorConfigurationVerifyTextArray) ToGetMonitorConfigurationVerifyTextArrayOutput() GetMonitorConfigurationVerifyTextArrayOutput {
	return i.ToGetMonitorConfigurationVerifyTextArrayOutputWithContext(context.Background())
}

func (i GetMonitorConfigurationVerifyTextArray) ToGetMonitorConfigurationVerifyTextArrayOutputWithContext(ctx context.Context) GetMonitorConfigurationVerifyTextArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorConfigurationVerifyTextArrayOutput)
}

type GetMonitorConfigurationVerifyTextOutput struct{ *pulumi.OutputState }

func (GetMonitorConfigurationVerifyTextOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorConfigurationVerifyText)(nil)).Elem()
}

func (o GetMonitorConfigurationVerifyTextOutput) ToGetMonitorConfigurationVerifyTextOutput() GetMonitorConfigurationVerifyTextOutput {
	return o
}

func (o GetMonitorConfigurationVerifyTextOutput) ToGetMonitorConfigurationVerifyTextOutputWithContext(ctx context.Context) GetMonitorConfigurationVerifyTextOutput {
	return o
}

// Verification text in the response.
func (o GetMonitorConfigurationVerifyTextOutput) Text() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorConfigurationVerifyText) string { return v.Text }).(pulumi.StringOutput)
}

type GetMonitorConfigurationVerifyTextArrayOutput struct{ *pulumi.OutputState }

func (GetMonitorConfigurationVerifyTextArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorConfigurationVerifyText)(nil)).Elem()
}

func (o GetMonitorConfigurationVerifyTextArrayOutput) ToGetMonitorConfigurationVerifyTextArrayOutput() GetMonitorConfigurationVerifyTextArrayOutput {
	return o
}

func (o GetMonitorConfigurationVerifyTextArrayOutput) ToGetMonitorConfigurationVerifyTextArrayOutputWithContext(ctx context.Context) GetMonitorConfigurationVerifyTextArrayOutput {
	return o
}

func (o GetMonitorConfigurationVerifyTextArrayOutput) Index(i pulumi.IntInput) GetMonitorConfigurationVerifyTextOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMonitorConfigurationVerifyText {
		return vs[0].([]GetMonitorConfigurationVerifyText)[vs[1].(int)]
	}).(GetMonitorConfigurationVerifyTextOutput)
}

type GetMonitorScriptParameter struct {
	// If parameter value is default or overwritten.
	IsOverwritten bool `pulumi:"isOverwritten"`
	// Describes if  the parameter value is secret and should be kept confidential. isSecret is specified in either CreateScript or UpdateScript API.
	IsSecret bool `pulumi:"isSecret"`
	// Details of the script parameter that can be used to overwrite the parameter present in the script.
	MonitorScriptParameter GetMonitorScriptParameterMonitorScriptParameter `pulumi:"monitorScriptParameter"`
	// Name of the parameter.
	ParamName string `pulumi:"paramName"`
	// Value of the parameter.
	ParamValue string `pulumi:"paramValue"`
}

// GetMonitorScriptParameterInput is an input type that accepts GetMonitorScriptParameterArgs and GetMonitorScriptParameterOutput values.
// You can construct a concrete instance of `GetMonitorScriptParameterInput` via:
//
//          GetMonitorScriptParameterArgs{...}
type GetMonitorScriptParameterInput interface {
	pulumi.Input

	ToGetMonitorScriptParameterOutput() GetMonitorScriptParameterOutput
	ToGetMonitorScriptParameterOutputWithContext(context.Context) GetMonitorScriptParameterOutput
}

type GetMonitorScriptParameterArgs struct {
	// If parameter value is default or overwritten.
	IsOverwritten pulumi.BoolInput `pulumi:"isOverwritten"`
	// Describes if  the parameter value is secret and should be kept confidential. isSecret is specified in either CreateScript or UpdateScript API.
	IsSecret pulumi.BoolInput `pulumi:"isSecret"`
	// Details of the script parameter that can be used to overwrite the parameter present in the script.
	MonitorScriptParameter GetMonitorScriptParameterMonitorScriptParameterInput `pulumi:"monitorScriptParameter"`
	// Name of the parameter.
	ParamName pulumi.StringInput `pulumi:"paramName"`
	// Value of the parameter.
	ParamValue pulumi.StringInput `pulumi:"paramValue"`
}

func (GetMonitorScriptParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorScriptParameter)(nil)).Elem()
}

func (i GetMonitorScriptParameterArgs) ToGetMonitorScriptParameterOutput() GetMonitorScriptParameterOutput {
	return i.ToGetMonitorScriptParameterOutputWithContext(context.Background())
}

func (i GetMonitorScriptParameterArgs) ToGetMonitorScriptParameterOutputWithContext(ctx context.Context) GetMonitorScriptParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorScriptParameterOutput)
}

// GetMonitorScriptParameterArrayInput is an input type that accepts GetMonitorScriptParameterArray and GetMonitorScriptParameterArrayOutput values.
// You can construct a concrete instance of `GetMonitorScriptParameterArrayInput` via:
//
//          GetMonitorScriptParameterArray{ GetMonitorScriptParameterArgs{...} }
type GetMonitorScriptParameterArrayInput interface {
	pulumi.Input

	ToGetMonitorScriptParameterArrayOutput() GetMonitorScriptParameterArrayOutput
	ToGetMonitorScriptParameterArrayOutputWithContext(context.Context) GetMonitorScriptParameterArrayOutput
}

type GetMonitorScriptParameterArray []GetMonitorScriptParameterInput

func (GetMonitorScriptParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorScriptParameter)(nil)).Elem()
}

func (i GetMonitorScriptParameterArray) ToGetMonitorScriptParameterArrayOutput() GetMonitorScriptParameterArrayOutput {
	return i.ToGetMonitorScriptParameterArrayOutputWithContext(context.Background())
}

func (i GetMonitorScriptParameterArray) ToGetMonitorScriptParameterArrayOutputWithContext(ctx context.Context) GetMonitorScriptParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorScriptParameterArrayOutput)
}

type GetMonitorScriptParameterOutput struct{ *pulumi.OutputState }

func (GetMonitorScriptParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorScriptParameter)(nil)).Elem()
}

func (o GetMonitorScriptParameterOutput) ToGetMonitorScriptParameterOutput() GetMonitorScriptParameterOutput {
	return o
}

func (o GetMonitorScriptParameterOutput) ToGetMonitorScriptParameterOutputWithContext(ctx context.Context) GetMonitorScriptParameterOutput {
	return o
}

// If parameter value is default or overwritten.
func (o GetMonitorScriptParameterOutput) IsOverwritten() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMonitorScriptParameter) bool { return v.IsOverwritten }).(pulumi.BoolOutput)
}

// Describes if  the parameter value is secret and should be kept confidential. isSecret is specified in either CreateScript or UpdateScript API.
func (o GetMonitorScriptParameterOutput) GetIsSecret() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMonitorScriptParameter) bool { return v.IsSecret }).(pulumi.BoolOutput)
}

// Details of the script parameter that can be used to overwrite the parameter present in the script.
func (o GetMonitorScriptParameterOutput) MonitorScriptParameter() GetMonitorScriptParameterMonitorScriptParameterOutput {
	return o.ApplyT(func(v GetMonitorScriptParameter) GetMonitorScriptParameterMonitorScriptParameter {
		return v.MonitorScriptParameter
	}).(GetMonitorScriptParameterMonitorScriptParameterOutput)
}

// Name of the parameter.
func (o GetMonitorScriptParameterOutput) ParamName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorScriptParameter) string { return v.ParamName }).(pulumi.StringOutput)
}

// Value of the parameter.
func (o GetMonitorScriptParameterOutput) ParamValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorScriptParameter) string { return v.ParamValue }).(pulumi.StringOutput)
}

type GetMonitorScriptParameterArrayOutput struct{ *pulumi.OutputState }

func (GetMonitorScriptParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorScriptParameter)(nil)).Elem()
}

func (o GetMonitorScriptParameterArrayOutput) ToGetMonitorScriptParameterArrayOutput() GetMonitorScriptParameterArrayOutput {
	return o
}

func (o GetMonitorScriptParameterArrayOutput) ToGetMonitorScriptParameterArrayOutputWithContext(ctx context.Context) GetMonitorScriptParameterArrayOutput {
	return o
}

func (o GetMonitorScriptParameterArrayOutput) Index(i pulumi.IntInput) GetMonitorScriptParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMonitorScriptParameter {
		return vs[0].([]GetMonitorScriptParameter)[vs[1].(int)]
	}).(GetMonitorScriptParameterOutput)
}

type GetMonitorScriptParameterMonitorScriptParameter struct {
	// Name of the parameter.
	ParamName string `pulumi:"paramName"`
	// Value of the parameter.
	ParamValue string `pulumi:"paramValue"`
}

// GetMonitorScriptParameterMonitorScriptParameterInput is an input type that accepts GetMonitorScriptParameterMonitorScriptParameterArgs and GetMonitorScriptParameterMonitorScriptParameterOutput values.
// You can construct a concrete instance of `GetMonitorScriptParameterMonitorScriptParameterInput` via:
//
//          GetMonitorScriptParameterMonitorScriptParameterArgs{...}
type GetMonitorScriptParameterMonitorScriptParameterInput interface {
	pulumi.Input

	ToGetMonitorScriptParameterMonitorScriptParameterOutput() GetMonitorScriptParameterMonitorScriptParameterOutput
	ToGetMonitorScriptParameterMonitorScriptParameterOutputWithContext(context.Context) GetMonitorScriptParameterMonitorScriptParameterOutput
}

type GetMonitorScriptParameterMonitorScriptParameterArgs struct {
	// Name of the parameter.
	ParamName pulumi.StringInput `pulumi:"paramName"`
	// Value of the parameter.
	ParamValue pulumi.StringInput `pulumi:"paramValue"`
}

func (GetMonitorScriptParameterMonitorScriptParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorScriptParameterMonitorScriptParameter)(nil)).Elem()
}

func (i GetMonitorScriptParameterMonitorScriptParameterArgs) ToGetMonitorScriptParameterMonitorScriptParameterOutput() GetMonitorScriptParameterMonitorScriptParameterOutput {
	return i.ToGetMonitorScriptParameterMonitorScriptParameterOutputWithContext(context.Background())
}

func (i GetMonitorScriptParameterMonitorScriptParameterArgs) ToGetMonitorScriptParameterMonitorScriptParameterOutputWithContext(ctx context.Context) GetMonitorScriptParameterMonitorScriptParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorScriptParameterMonitorScriptParameterOutput)
}

type GetMonitorScriptParameterMonitorScriptParameterOutput struct{ *pulumi.OutputState }

func (GetMonitorScriptParameterMonitorScriptParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorScriptParameterMonitorScriptParameter)(nil)).Elem()
}

func (o GetMonitorScriptParameterMonitorScriptParameterOutput) ToGetMonitorScriptParameterMonitorScriptParameterOutput() GetMonitorScriptParameterMonitorScriptParameterOutput {
	return o
}

func (o GetMonitorScriptParameterMonitorScriptParameterOutput) ToGetMonitorScriptParameterMonitorScriptParameterOutputWithContext(ctx context.Context) GetMonitorScriptParameterMonitorScriptParameterOutput {
	return o
}

// Name of the parameter.
func (o GetMonitorScriptParameterMonitorScriptParameterOutput) ParamName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorScriptParameterMonitorScriptParameter) string { return v.ParamName }).(pulumi.StringOutput)
}

// Value of the parameter.
func (o GetMonitorScriptParameterMonitorScriptParameterOutput) ParamValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorScriptParameterMonitorScriptParameter) string { return v.ParamValue }).(pulumi.StringOutput)
}

type GetMonitorsFilter struct {
	// Name of the vantage point.
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetMonitorsFilterInput is an input type that accepts GetMonitorsFilterArgs and GetMonitorsFilterOutput values.
// You can construct a concrete instance of `GetMonitorsFilterInput` via:
//
//          GetMonitorsFilterArgs{...}
type GetMonitorsFilterInput interface {
	pulumi.Input

	ToGetMonitorsFilterOutput() GetMonitorsFilterOutput
	ToGetMonitorsFilterOutputWithContext(context.Context) GetMonitorsFilterOutput
}

type GetMonitorsFilterArgs struct {
	// Name of the vantage point.
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetMonitorsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorsFilter)(nil)).Elem()
}

func (i GetMonitorsFilterArgs) ToGetMonitorsFilterOutput() GetMonitorsFilterOutput {
	return i.ToGetMonitorsFilterOutputWithContext(context.Background())
}

func (i GetMonitorsFilterArgs) ToGetMonitorsFilterOutputWithContext(ctx context.Context) GetMonitorsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorsFilterOutput)
}

// GetMonitorsFilterArrayInput is an input type that accepts GetMonitorsFilterArray and GetMonitorsFilterArrayOutput values.
// You can construct a concrete instance of `GetMonitorsFilterArrayInput` via:
//
//          GetMonitorsFilterArray{ GetMonitorsFilterArgs{...} }
type GetMonitorsFilterArrayInput interface {
	pulumi.Input

	ToGetMonitorsFilterArrayOutput() GetMonitorsFilterArrayOutput
	ToGetMonitorsFilterArrayOutputWithContext(context.Context) GetMonitorsFilterArrayOutput
}

type GetMonitorsFilterArray []GetMonitorsFilterInput

func (GetMonitorsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorsFilter)(nil)).Elem()
}

func (i GetMonitorsFilterArray) ToGetMonitorsFilterArrayOutput() GetMonitorsFilterArrayOutput {
	return i.ToGetMonitorsFilterArrayOutputWithContext(context.Background())
}

func (i GetMonitorsFilterArray) ToGetMonitorsFilterArrayOutputWithContext(ctx context.Context) GetMonitorsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorsFilterArrayOutput)
}

type GetMonitorsFilterOutput struct{ *pulumi.OutputState }

func (GetMonitorsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorsFilter)(nil)).Elem()
}

func (o GetMonitorsFilterOutput) ToGetMonitorsFilterOutput() GetMonitorsFilterOutput {
	return o
}

func (o GetMonitorsFilterOutput) ToGetMonitorsFilterOutputWithContext(ctx context.Context) GetMonitorsFilterOutput {
	return o
}

// Name of the vantage point.
func (o GetMonitorsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetMonitorsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetMonitorsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetMonitorsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetMonitorsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetMonitorsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetMonitorsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorsFilter)(nil)).Elem()
}

func (o GetMonitorsFilterArrayOutput) ToGetMonitorsFilterArrayOutput() GetMonitorsFilterArrayOutput {
	return o
}

func (o GetMonitorsFilterArrayOutput) ToGetMonitorsFilterArrayOutputWithContext(ctx context.Context) GetMonitorsFilterArrayOutput {
	return o
}

func (o GetMonitorsFilterArrayOutput) Index(i pulumi.IntInput) GetMonitorsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMonitorsFilter {
		return vs[0].([]GetMonitorsFilter)[vs[1].(int)]
	}).(GetMonitorsFilterOutput)
}

type GetMonitorsMonitorCollection struct {
	Items []GetMonitorsMonitorCollectionItem `pulumi:"items"`
}

// GetMonitorsMonitorCollectionInput is an input type that accepts GetMonitorsMonitorCollectionArgs and GetMonitorsMonitorCollectionOutput values.
// You can construct a concrete instance of `GetMonitorsMonitorCollectionInput` via:
//
//          GetMonitorsMonitorCollectionArgs{...}
type GetMonitorsMonitorCollectionInput interface {
	pulumi.Input

	ToGetMonitorsMonitorCollectionOutput() GetMonitorsMonitorCollectionOutput
	ToGetMonitorsMonitorCollectionOutputWithContext(context.Context) GetMonitorsMonitorCollectionOutput
}

type GetMonitorsMonitorCollectionArgs struct {
	Items GetMonitorsMonitorCollectionItemArrayInput `pulumi:"items"`
}

func (GetMonitorsMonitorCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorsMonitorCollection)(nil)).Elem()
}

func (i GetMonitorsMonitorCollectionArgs) ToGetMonitorsMonitorCollectionOutput() GetMonitorsMonitorCollectionOutput {
	return i.ToGetMonitorsMonitorCollectionOutputWithContext(context.Background())
}

func (i GetMonitorsMonitorCollectionArgs) ToGetMonitorsMonitorCollectionOutputWithContext(ctx context.Context) GetMonitorsMonitorCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorsMonitorCollectionOutput)
}

// GetMonitorsMonitorCollectionArrayInput is an input type that accepts GetMonitorsMonitorCollectionArray and GetMonitorsMonitorCollectionArrayOutput values.
// You can construct a concrete instance of `GetMonitorsMonitorCollectionArrayInput` via:
//
//          GetMonitorsMonitorCollectionArray{ GetMonitorsMonitorCollectionArgs{...} }
type GetMonitorsMonitorCollectionArrayInput interface {
	pulumi.Input

	ToGetMonitorsMonitorCollectionArrayOutput() GetMonitorsMonitorCollectionArrayOutput
	ToGetMonitorsMonitorCollectionArrayOutputWithContext(context.Context) GetMonitorsMonitorCollectionArrayOutput
}

type GetMonitorsMonitorCollectionArray []GetMonitorsMonitorCollectionInput

func (GetMonitorsMonitorCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorsMonitorCollection)(nil)).Elem()
}

func (i GetMonitorsMonitorCollectionArray) ToGetMonitorsMonitorCollectionArrayOutput() GetMonitorsMonitorCollectionArrayOutput {
	return i.ToGetMonitorsMonitorCollectionArrayOutputWithContext(context.Background())
}

func (i GetMonitorsMonitorCollectionArray) ToGetMonitorsMonitorCollectionArrayOutputWithContext(ctx context.Context) GetMonitorsMonitorCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorsMonitorCollectionArrayOutput)
}

type GetMonitorsMonitorCollectionOutput struct{ *pulumi.OutputState }

func (GetMonitorsMonitorCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorsMonitorCollection)(nil)).Elem()
}

func (o GetMonitorsMonitorCollectionOutput) ToGetMonitorsMonitorCollectionOutput() GetMonitorsMonitorCollectionOutput {
	return o
}

func (o GetMonitorsMonitorCollectionOutput) ToGetMonitorsMonitorCollectionOutputWithContext(ctx context.Context) GetMonitorsMonitorCollectionOutput {
	return o
}

func (o GetMonitorsMonitorCollectionOutput) Items() GetMonitorsMonitorCollectionItemArrayOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollection) []GetMonitorsMonitorCollectionItem { return v.Items }).(GetMonitorsMonitorCollectionItemArrayOutput)
}

type GetMonitorsMonitorCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetMonitorsMonitorCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorsMonitorCollection)(nil)).Elem()
}

func (o GetMonitorsMonitorCollectionArrayOutput) ToGetMonitorsMonitorCollectionArrayOutput() GetMonitorsMonitorCollectionArrayOutput {
	return o
}

func (o GetMonitorsMonitorCollectionArrayOutput) ToGetMonitorsMonitorCollectionArrayOutputWithContext(ctx context.Context) GetMonitorsMonitorCollectionArrayOutput {
	return o
}

func (o GetMonitorsMonitorCollectionArrayOutput) Index(i pulumi.IntInput) GetMonitorsMonitorCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMonitorsMonitorCollection {
		return vs[0].([]GetMonitorsMonitorCollection)[vs[1].(int)]
	}).(GetMonitorsMonitorCollectionOutput)
}

type GetMonitorsMonitorCollectionItem struct {
	// The APM domain ID the request is intended for.
	ApmDomainId string `pulumi:"apmDomainId"`
	// Details of monitor configuration.
	Configuration GetMonitorsMonitorCollectionItemConfiguration `pulumi:"configuration"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// A filter to return only resources that match the entire display name given.
	DisplayName string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the monitor.
	Id string `pulumi:"id"`
	// A filter to return only monitors that match the given monitor type. Supported values are SCRIPTED_BROWSER, BROWSER, SCRIPTED_REST and REST.
	MonitorType string `pulumi:"monitorType"`
	// Interval in seconds after the start time when the job should be repeated. Minimum repeatIntervalInSeconds should be 300 seconds.
	RepeatIntervalInSeconds int `pulumi:"repeatIntervalInSeconds"`
	// A filter to return only monitors using scriptId.
	ScriptId string `pulumi:"scriptId"`
	// Name of the script.
	ScriptName string `pulumi:"scriptName"`
	// List of script parameters. Example: `[{"monitorScriptParameter": {"paramName": "userid", "paramValue":"testuser"}, "isSecret": false, "isOverwritten": false}]`
	ScriptParameters []GetMonitorsMonitorCollectionItemScriptParameter `pulumi:"scriptParameters"`
	// A filter to return only monitors that match the status given.
	Status string `pulumi:"status"`
	// Specify the endpoint on which to run the monitor. For BROWSER and REST monitor types, target is mandatory. If target is specified in the SCRIPTED_BROWSER monitor type, then the monitor will run the selected script (specified by scriptId in monitor) against the specified target endpoint. If target is not specified in the SCRIPTED_BROWSER monitor type, then the monitor will run the selected script as it is.
	Target string `pulumi:"target"`
	// The time the resource was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-12T22:47:12.613Z`
	TimeCreated string `pulumi:"timeCreated"`
	// The time the resource was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-13T22:47:12.613Z`
	TimeUpdated string `pulumi:"timeUpdated"`
	// Timeout in seconds. Timeout cannot be more than 30% of repeatIntervalInSeconds time for monitors. Also, timeoutInSeconds should be a multiple of 60. Monitor will be allowed to run only for timeoutInSeconds time. It would be terminated after that.
	TimeoutInSeconds int `pulumi:"timeoutInSeconds"`
	// Number of vantage points where monitor is running.
	VantagePointCount int `pulumi:"vantagePointCount"`
	// List of vantage points from where monitor is running.
	VantagePoints []string `pulumi:"vantagePoints"`
}

// GetMonitorsMonitorCollectionItemInput is an input type that accepts GetMonitorsMonitorCollectionItemArgs and GetMonitorsMonitorCollectionItemOutput values.
// You can construct a concrete instance of `GetMonitorsMonitorCollectionItemInput` via:
//
//          GetMonitorsMonitorCollectionItemArgs{...}
type GetMonitorsMonitorCollectionItemInput interface {
	pulumi.Input

	ToGetMonitorsMonitorCollectionItemOutput() GetMonitorsMonitorCollectionItemOutput
	ToGetMonitorsMonitorCollectionItemOutputWithContext(context.Context) GetMonitorsMonitorCollectionItemOutput
}

type GetMonitorsMonitorCollectionItemArgs struct {
	// The APM domain ID the request is intended for.
	ApmDomainId pulumi.StringInput `pulumi:"apmDomainId"`
	// Details of monitor configuration.
	Configuration GetMonitorsMonitorCollectionItemConfigurationInput `pulumi:"configuration"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the monitor.
	Id pulumi.StringInput `pulumi:"id"`
	// A filter to return only monitors that match the given monitor type. Supported values are SCRIPTED_BROWSER, BROWSER, SCRIPTED_REST and REST.
	MonitorType pulumi.StringInput `pulumi:"monitorType"`
	// Interval in seconds after the start time when the job should be repeated. Minimum repeatIntervalInSeconds should be 300 seconds.
	RepeatIntervalInSeconds pulumi.IntInput `pulumi:"repeatIntervalInSeconds"`
	// A filter to return only monitors using scriptId.
	ScriptId pulumi.StringInput `pulumi:"scriptId"`
	// Name of the script.
	ScriptName pulumi.StringInput `pulumi:"scriptName"`
	// List of script parameters. Example: `[{"monitorScriptParameter": {"paramName": "userid", "paramValue":"testuser"}, "isSecret": false, "isOverwritten": false}]`
	ScriptParameters GetMonitorsMonitorCollectionItemScriptParameterArrayInput `pulumi:"scriptParameters"`
	// A filter to return only monitors that match the status given.
	Status pulumi.StringInput `pulumi:"status"`
	// Specify the endpoint on which to run the monitor. For BROWSER and REST monitor types, target is mandatory. If target is specified in the SCRIPTED_BROWSER monitor type, then the monitor will run the selected script (specified by scriptId in monitor) against the specified target endpoint. If target is not specified in the SCRIPTED_BROWSER monitor type, then the monitor will run the selected script as it is.
	Target pulumi.StringInput `pulumi:"target"`
	// The time the resource was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-12T22:47:12.613Z`
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The time the resource was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-13T22:47:12.613Z`
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
	// Timeout in seconds. Timeout cannot be more than 30% of repeatIntervalInSeconds time for monitors. Also, timeoutInSeconds should be a multiple of 60. Monitor will be allowed to run only for timeoutInSeconds time. It would be terminated after that.
	TimeoutInSeconds pulumi.IntInput `pulumi:"timeoutInSeconds"`
	// Number of vantage points where monitor is running.
	VantagePointCount pulumi.IntInput `pulumi:"vantagePointCount"`
	// List of vantage points from where monitor is running.
	VantagePoints pulumi.StringArrayInput `pulumi:"vantagePoints"`
}

func (GetMonitorsMonitorCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorsMonitorCollectionItem)(nil)).Elem()
}

func (i GetMonitorsMonitorCollectionItemArgs) ToGetMonitorsMonitorCollectionItemOutput() GetMonitorsMonitorCollectionItemOutput {
	return i.ToGetMonitorsMonitorCollectionItemOutputWithContext(context.Background())
}

func (i GetMonitorsMonitorCollectionItemArgs) ToGetMonitorsMonitorCollectionItemOutputWithContext(ctx context.Context) GetMonitorsMonitorCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorsMonitorCollectionItemOutput)
}

// GetMonitorsMonitorCollectionItemArrayInput is an input type that accepts GetMonitorsMonitorCollectionItemArray and GetMonitorsMonitorCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetMonitorsMonitorCollectionItemArrayInput` via:
//
//          GetMonitorsMonitorCollectionItemArray{ GetMonitorsMonitorCollectionItemArgs{...} }
type GetMonitorsMonitorCollectionItemArrayInput interface {
	pulumi.Input

	ToGetMonitorsMonitorCollectionItemArrayOutput() GetMonitorsMonitorCollectionItemArrayOutput
	ToGetMonitorsMonitorCollectionItemArrayOutputWithContext(context.Context) GetMonitorsMonitorCollectionItemArrayOutput
}

type GetMonitorsMonitorCollectionItemArray []GetMonitorsMonitorCollectionItemInput

func (GetMonitorsMonitorCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorsMonitorCollectionItem)(nil)).Elem()
}

func (i GetMonitorsMonitorCollectionItemArray) ToGetMonitorsMonitorCollectionItemArrayOutput() GetMonitorsMonitorCollectionItemArrayOutput {
	return i.ToGetMonitorsMonitorCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetMonitorsMonitorCollectionItemArray) ToGetMonitorsMonitorCollectionItemArrayOutputWithContext(ctx context.Context) GetMonitorsMonitorCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorsMonitorCollectionItemArrayOutput)
}

type GetMonitorsMonitorCollectionItemOutput struct{ *pulumi.OutputState }

func (GetMonitorsMonitorCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorsMonitorCollectionItem)(nil)).Elem()
}

func (o GetMonitorsMonitorCollectionItemOutput) ToGetMonitorsMonitorCollectionItemOutput() GetMonitorsMonitorCollectionItemOutput {
	return o
}

func (o GetMonitorsMonitorCollectionItemOutput) ToGetMonitorsMonitorCollectionItemOutputWithContext(ctx context.Context) GetMonitorsMonitorCollectionItemOutput {
	return o
}

// The APM domain ID the request is intended for.
func (o GetMonitorsMonitorCollectionItemOutput) ApmDomainId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItem) string { return v.ApmDomainId }).(pulumi.StringOutput)
}

// Details of monitor configuration.
func (o GetMonitorsMonitorCollectionItemOutput) Configuration() GetMonitorsMonitorCollectionItemConfigurationOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItem) GetMonitorsMonitorCollectionItemConfiguration {
		return v.Configuration
	}).(GetMonitorsMonitorCollectionItemConfigurationOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetMonitorsMonitorCollectionItemOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItem) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// A filter to return only resources that match the entire display name given.
func (o GetMonitorsMonitorCollectionItemOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItem) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetMonitorsMonitorCollectionItemOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItem) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the monitor.
func (o GetMonitorsMonitorCollectionItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItem) string { return v.Id }).(pulumi.StringOutput)
}

// A filter to return only monitors that match the given monitor type. Supported values are SCRIPTED_BROWSER, BROWSER, SCRIPTED_REST and REST.
func (o GetMonitorsMonitorCollectionItemOutput) MonitorType() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItem) string { return v.MonitorType }).(pulumi.StringOutput)
}

// Interval in seconds after the start time when the job should be repeated. Minimum repeatIntervalInSeconds should be 300 seconds.
func (o GetMonitorsMonitorCollectionItemOutput) RepeatIntervalInSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItem) int { return v.RepeatIntervalInSeconds }).(pulumi.IntOutput)
}

// A filter to return only monitors using scriptId.
func (o GetMonitorsMonitorCollectionItemOutput) ScriptId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItem) string { return v.ScriptId }).(pulumi.StringOutput)
}

// Name of the script.
func (o GetMonitorsMonitorCollectionItemOutput) ScriptName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItem) string { return v.ScriptName }).(pulumi.StringOutput)
}

// List of script parameters. Example: `[{"monitorScriptParameter": {"paramName": "userid", "paramValue":"testuser"}, "isSecret": false, "isOverwritten": false}]`
func (o GetMonitorsMonitorCollectionItemOutput) ScriptParameters() GetMonitorsMonitorCollectionItemScriptParameterArrayOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItem) []GetMonitorsMonitorCollectionItemScriptParameter {
		return v.ScriptParameters
	}).(GetMonitorsMonitorCollectionItemScriptParameterArrayOutput)
}

// A filter to return only monitors that match the status given.
func (o GetMonitorsMonitorCollectionItemOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItem) string { return v.Status }).(pulumi.StringOutput)
}

// Specify the endpoint on which to run the monitor. For BROWSER and REST monitor types, target is mandatory. If target is specified in the SCRIPTED_BROWSER monitor type, then the monitor will run the selected script (specified by scriptId in monitor) against the specified target endpoint. If target is not specified in the SCRIPTED_BROWSER monitor type, then the monitor will run the selected script as it is.
func (o GetMonitorsMonitorCollectionItemOutput) Target() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItem) string { return v.Target }).(pulumi.StringOutput)
}

// The time the resource was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-12T22:47:12.613Z`
func (o GetMonitorsMonitorCollectionItemOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItem) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the resource was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-13T22:47:12.613Z`
func (o GetMonitorsMonitorCollectionItemOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItem) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

// Timeout in seconds. Timeout cannot be more than 30% of repeatIntervalInSeconds time for monitors. Also, timeoutInSeconds should be a multiple of 60. Monitor will be allowed to run only for timeoutInSeconds time. It would be terminated after that.
func (o GetMonitorsMonitorCollectionItemOutput) TimeoutInSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItem) int { return v.TimeoutInSeconds }).(pulumi.IntOutput)
}

// Number of vantage points where monitor is running.
func (o GetMonitorsMonitorCollectionItemOutput) VantagePointCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItem) int { return v.VantagePointCount }).(pulumi.IntOutput)
}

// List of vantage points from where monitor is running.
func (o GetMonitorsMonitorCollectionItemOutput) VantagePoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItem) []string { return v.VantagePoints }).(pulumi.StringArrayOutput)
}

type GetMonitorsMonitorCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetMonitorsMonitorCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorsMonitorCollectionItem)(nil)).Elem()
}

func (o GetMonitorsMonitorCollectionItemArrayOutput) ToGetMonitorsMonitorCollectionItemArrayOutput() GetMonitorsMonitorCollectionItemArrayOutput {
	return o
}

func (o GetMonitorsMonitorCollectionItemArrayOutput) ToGetMonitorsMonitorCollectionItemArrayOutputWithContext(ctx context.Context) GetMonitorsMonitorCollectionItemArrayOutput {
	return o
}

func (o GetMonitorsMonitorCollectionItemArrayOutput) Index(i pulumi.IntInput) GetMonitorsMonitorCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMonitorsMonitorCollectionItem {
		return vs[0].([]GetMonitorsMonitorCollectionItem)[vs[1].(int)]
	}).(GetMonitorsMonitorCollectionItemOutput)
}

type GetMonitorsMonitorCollectionItemConfiguration struct {
	// Type of configuration.
	ConfigType string `pulumi:"configType"`
	// If certificate validation is enabled, then the call will fail in case of certification errors.
	IsCertificateValidationEnabled bool `pulumi:"isCertificateValidationEnabled"`
	// If isFailureRetried is enabled, then a failed call will be retried.
	IsFailureRetried bool `pulumi:"isFailureRetried"`
	// If redirection enabled, then redirects will be allowed while accessing target URL.
	IsRedirectionEnabled bool `pulumi:"isRedirectionEnabled"`
	// Details for request HTTP authentication.
	ReqAuthenticationDetails GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetails `pulumi:"reqAuthenticationDetails"`
	// Request http authentication scheme.
	ReqAuthenticationScheme string `pulumi:"reqAuthenticationScheme"`
	// List of request headers. Example: `[{"headerName": "content-type", "headerValue":"json"}]`
	RequestHeaders []GetMonitorsMonitorCollectionItemConfigurationRequestHeader `pulumi:"requestHeaders"`
	// Request HTTP method.
	RequestMethod string `pulumi:"requestMethod"`
	// Request post body content.
	RequestPostBody string `pulumi:"requestPostBody"`
	// List of request query params. Example: `[{"paramName": "sortOrder", "paramValue": "asc"}]`
	RequestQueryParams []GetMonitorsMonitorCollectionItemConfigurationRequestQueryParam `pulumi:"requestQueryParams"`
	// Expected HTTP response codes. For status code range, set values such as 2xx, 3xx.
	VerifyResponseCodes []string `pulumi:"verifyResponseCodes"`
	// Verify response content against regular expression based string. If response content does not match the verifyResponseContent value, then it will be considered a failure.
	VerifyResponseContent string `pulumi:"verifyResponseContent"`
	// Verify all the search strings present in response. If any search string is not present in the response, then it will be considered as a failure.
	VerifyTexts []GetMonitorsMonitorCollectionItemConfigurationVerifyText `pulumi:"verifyTexts"`
}

// GetMonitorsMonitorCollectionItemConfigurationInput is an input type that accepts GetMonitorsMonitorCollectionItemConfigurationArgs and GetMonitorsMonitorCollectionItemConfigurationOutput values.
// You can construct a concrete instance of `GetMonitorsMonitorCollectionItemConfigurationInput` via:
//
//          GetMonitorsMonitorCollectionItemConfigurationArgs{...}
type GetMonitorsMonitorCollectionItemConfigurationInput interface {
	pulumi.Input

	ToGetMonitorsMonitorCollectionItemConfigurationOutput() GetMonitorsMonitorCollectionItemConfigurationOutput
	ToGetMonitorsMonitorCollectionItemConfigurationOutputWithContext(context.Context) GetMonitorsMonitorCollectionItemConfigurationOutput
}

type GetMonitorsMonitorCollectionItemConfigurationArgs struct {
	// Type of configuration.
	ConfigType pulumi.StringInput `pulumi:"configType"`
	// If certificate validation is enabled, then the call will fail in case of certification errors.
	IsCertificateValidationEnabled pulumi.BoolInput `pulumi:"isCertificateValidationEnabled"`
	// If isFailureRetried is enabled, then a failed call will be retried.
	IsFailureRetried pulumi.BoolInput `pulumi:"isFailureRetried"`
	// If redirection enabled, then redirects will be allowed while accessing target URL.
	IsRedirectionEnabled pulumi.BoolInput `pulumi:"isRedirectionEnabled"`
	// Details for request HTTP authentication.
	ReqAuthenticationDetails GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsInput `pulumi:"reqAuthenticationDetails"`
	// Request http authentication scheme.
	ReqAuthenticationScheme pulumi.StringInput `pulumi:"reqAuthenticationScheme"`
	// List of request headers. Example: `[{"headerName": "content-type", "headerValue":"json"}]`
	RequestHeaders GetMonitorsMonitorCollectionItemConfigurationRequestHeaderArrayInput `pulumi:"requestHeaders"`
	// Request HTTP method.
	RequestMethod pulumi.StringInput `pulumi:"requestMethod"`
	// Request post body content.
	RequestPostBody pulumi.StringInput `pulumi:"requestPostBody"`
	// List of request query params. Example: `[{"paramName": "sortOrder", "paramValue": "asc"}]`
	RequestQueryParams GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamArrayInput `pulumi:"requestQueryParams"`
	// Expected HTTP response codes. For status code range, set values such as 2xx, 3xx.
	VerifyResponseCodes pulumi.StringArrayInput `pulumi:"verifyResponseCodes"`
	// Verify response content against regular expression based string. If response content does not match the verifyResponseContent value, then it will be considered a failure.
	VerifyResponseContent pulumi.StringInput `pulumi:"verifyResponseContent"`
	// Verify all the search strings present in response. If any search string is not present in the response, then it will be considered as a failure.
	VerifyTexts GetMonitorsMonitorCollectionItemConfigurationVerifyTextArrayInput `pulumi:"verifyTexts"`
}

func (GetMonitorsMonitorCollectionItemConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorsMonitorCollectionItemConfiguration)(nil)).Elem()
}

func (i GetMonitorsMonitorCollectionItemConfigurationArgs) ToGetMonitorsMonitorCollectionItemConfigurationOutput() GetMonitorsMonitorCollectionItemConfigurationOutput {
	return i.ToGetMonitorsMonitorCollectionItemConfigurationOutputWithContext(context.Background())
}

func (i GetMonitorsMonitorCollectionItemConfigurationArgs) ToGetMonitorsMonitorCollectionItemConfigurationOutputWithContext(ctx context.Context) GetMonitorsMonitorCollectionItemConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorsMonitorCollectionItemConfigurationOutput)
}

type GetMonitorsMonitorCollectionItemConfigurationOutput struct{ *pulumi.OutputState }

func (GetMonitorsMonitorCollectionItemConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorsMonitorCollectionItemConfiguration)(nil)).Elem()
}

func (o GetMonitorsMonitorCollectionItemConfigurationOutput) ToGetMonitorsMonitorCollectionItemConfigurationOutput() GetMonitorsMonitorCollectionItemConfigurationOutput {
	return o
}

func (o GetMonitorsMonitorCollectionItemConfigurationOutput) ToGetMonitorsMonitorCollectionItemConfigurationOutputWithContext(ctx context.Context) GetMonitorsMonitorCollectionItemConfigurationOutput {
	return o
}

// Type of configuration.
func (o GetMonitorsMonitorCollectionItemConfigurationOutput) ConfigType() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItemConfiguration) string { return v.ConfigType }).(pulumi.StringOutput)
}

// If certificate validation is enabled, then the call will fail in case of certification errors.
func (o GetMonitorsMonitorCollectionItemConfigurationOutput) IsCertificateValidationEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItemConfiguration) bool { return v.IsCertificateValidationEnabled }).(pulumi.BoolOutput)
}

// If isFailureRetried is enabled, then a failed call will be retried.
func (o GetMonitorsMonitorCollectionItemConfigurationOutput) IsFailureRetried() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItemConfiguration) bool { return v.IsFailureRetried }).(pulumi.BoolOutput)
}

// If redirection enabled, then redirects will be allowed while accessing target URL.
func (o GetMonitorsMonitorCollectionItemConfigurationOutput) IsRedirectionEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItemConfiguration) bool { return v.IsRedirectionEnabled }).(pulumi.BoolOutput)
}

// Details for request HTTP authentication.
func (o GetMonitorsMonitorCollectionItemConfigurationOutput) ReqAuthenticationDetails() GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItemConfiguration) GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetails {
		return v.ReqAuthenticationDetails
	}).(GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsOutput)
}

// Request http authentication scheme.
func (o GetMonitorsMonitorCollectionItemConfigurationOutput) ReqAuthenticationScheme() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItemConfiguration) string { return v.ReqAuthenticationScheme }).(pulumi.StringOutput)
}

// List of request headers. Example: `[{"headerName": "content-type", "headerValue":"json"}]`
func (o GetMonitorsMonitorCollectionItemConfigurationOutput) RequestHeaders() GetMonitorsMonitorCollectionItemConfigurationRequestHeaderArrayOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItemConfiguration) []GetMonitorsMonitorCollectionItemConfigurationRequestHeader {
		return v.RequestHeaders
	}).(GetMonitorsMonitorCollectionItemConfigurationRequestHeaderArrayOutput)
}

// Request HTTP method.
func (o GetMonitorsMonitorCollectionItemConfigurationOutput) RequestMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItemConfiguration) string { return v.RequestMethod }).(pulumi.StringOutput)
}

// Request post body content.
func (o GetMonitorsMonitorCollectionItemConfigurationOutput) RequestPostBody() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItemConfiguration) string { return v.RequestPostBody }).(pulumi.StringOutput)
}

// List of request query params. Example: `[{"paramName": "sortOrder", "paramValue": "asc"}]`
func (o GetMonitorsMonitorCollectionItemConfigurationOutput) RequestQueryParams() GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamArrayOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItemConfiguration) []GetMonitorsMonitorCollectionItemConfigurationRequestQueryParam {
		return v.RequestQueryParams
	}).(GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamArrayOutput)
}

// Expected HTTP response codes. For status code range, set values such as 2xx, 3xx.
func (o GetMonitorsMonitorCollectionItemConfigurationOutput) VerifyResponseCodes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItemConfiguration) []string { return v.VerifyResponseCodes }).(pulumi.StringArrayOutput)
}

// Verify response content against regular expression based string. If response content does not match the verifyResponseContent value, then it will be considered a failure.
func (o GetMonitorsMonitorCollectionItemConfigurationOutput) VerifyResponseContent() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItemConfiguration) string { return v.VerifyResponseContent }).(pulumi.StringOutput)
}

// Verify all the search strings present in response. If any search string is not present in the response, then it will be considered as a failure.
func (o GetMonitorsMonitorCollectionItemConfigurationOutput) VerifyTexts() GetMonitorsMonitorCollectionItemConfigurationVerifyTextArrayOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItemConfiguration) []GetMonitorsMonitorCollectionItemConfigurationVerifyText {
		return v.VerifyTexts
	}).(GetMonitorsMonitorCollectionItemConfigurationVerifyTextArrayOutput)
}

type GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetails struct {
	// List of authentication headers. Example: `[{"headerName": "content-type", "headerValue":"json"}]`
	AuthHeaders []GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsAuthHeader `pulumi:"authHeaders"`
	// Request method.
	AuthRequestMethod string `pulumi:"authRequestMethod"`
	// Request post body.
	AuthRequestPostBody string `pulumi:"authRequestPostBody"`
	// Authentication token.
	AuthToken string `pulumi:"authToken"`
	// URL to get authetication token.
	AuthUrl string `pulumi:"authUrl"`
	// Username for authentication.
	AuthUserName string `pulumi:"authUserName"`
	// User password for authentication.
	AuthUserPassword string `pulumi:"authUserPassword"`
	// Request http oauth scheme.
	OauthScheme string `pulumi:"oauthScheme"`
}

// GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsInput is an input type that accepts GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsArgs and GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsOutput values.
// You can construct a concrete instance of `GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsInput` via:
//
//          GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsArgs{...}
type GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsInput interface {
	pulumi.Input

	ToGetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsOutput() GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsOutput
	ToGetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsOutputWithContext(context.Context) GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsOutput
}

type GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsArgs struct {
	// List of authentication headers. Example: `[{"headerName": "content-type", "headerValue":"json"}]`
	AuthHeaders GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsAuthHeaderArrayInput `pulumi:"authHeaders"`
	// Request method.
	AuthRequestMethod pulumi.StringInput `pulumi:"authRequestMethod"`
	// Request post body.
	AuthRequestPostBody pulumi.StringInput `pulumi:"authRequestPostBody"`
	// Authentication token.
	AuthToken pulumi.StringInput `pulumi:"authToken"`
	// URL to get authetication token.
	AuthUrl pulumi.StringInput `pulumi:"authUrl"`
	// Username for authentication.
	AuthUserName pulumi.StringInput `pulumi:"authUserName"`
	// User password for authentication.
	AuthUserPassword pulumi.StringInput `pulumi:"authUserPassword"`
	// Request http oauth scheme.
	OauthScheme pulumi.StringInput `pulumi:"oauthScheme"`
}

func (GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetails)(nil)).Elem()
}

func (i GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsArgs) ToGetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsOutput() GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsOutput {
	return i.ToGetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsOutputWithContext(context.Background())
}

func (i GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsArgs) ToGetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsOutputWithContext(ctx context.Context) GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsOutput)
}

type GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsOutput struct{ *pulumi.OutputState }

func (GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetails)(nil)).Elem()
}

func (o GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsOutput) ToGetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsOutput() GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsOutput {
	return o
}

func (o GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsOutput) ToGetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsOutputWithContext(ctx context.Context) GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsOutput {
	return o
}

// List of authentication headers. Example: `[{"headerName": "content-type", "headerValue":"json"}]`
func (o GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsOutput) AuthHeaders() GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsAuthHeaderArrayOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetails) []GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsAuthHeader {
		return v.AuthHeaders
	}).(GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsAuthHeaderArrayOutput)
}

// Request method.
func (o GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsOutput) AuthRequestMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetails) string {
		return v.AuthRequestMethod
	}).(pulumi.StringOutput)
}

// Request post body.
func (o GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsOutput) AuthRequestPostBody() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetails) string {
		return v.AuthRequestPostBody
	}).(pulumi.StringOutput)
}

// Authentication token.
func (o GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsOutput) AuthToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetails) string {
		return v.AuthToken
	}).(pulumi.StringOutput)
}

// URL to get authetication token.
func (o GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsOutput) AuthUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetails) string { return v.AuthUrl }).(pulumi.StringOutput)
}

// Username for authentication.
func (o GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsOutput) AuthUserName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetails) string {
		return v.AuthUserName
	}).(pulumi.StringOutput)
}

// User password for authentication.
func (o GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsOutput) AuthUserPassword() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetails) string {
		return v.AuthUserPassword
	}).(pulumi.StringOutput)
}

// Request http oauth scheme.
func (o GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsOutput) OauthScheme() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetails) string {
		return v.OauthScheme
	}).(pulumi.StringOutput)
}

type GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsAuthHeader struct {
	// Name of the header.
	HeaderName string `pulumi:"headerName"`
	// Value of the header.
	HeaderValue string `pulumi:"headerValue"`
}

// GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsAuthHeaderInput is an input type that accepts GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsAuthHeaderArgs and GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsAuthHeaderOutput values.
// You can construct a concrete instance of `GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsAuthHeaderInput` via:
//
//          GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsAuthHeaderArgs{...}
type GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsAuthHeaderInput interface {
	pulumi.Input

	ToGetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsAuthHeaderOutput() GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsAuthHeaderOutput
	ToGetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsAuthHeaderOutputWithContext(context.Context) GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsAuthHeaderOutput
}

type GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsAuthHeaderArgs struct {
	// Name of the header.
	HeaderName pulumi.StringInput `pulumi:"headerName"`
	// Value of the header.
	HeaderValue pulumi.StringInput `pulumi:"headerValue"`
}

func (GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsAuthHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsAuthHeader)(nil)).Elem()
}

func (i GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsAuthHeaderArgs) ToGetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsAuthHeaderOutput() GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsAuthHeaderOutput {
	return i.ToGetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsAuthHeaderOutputWithContext(context.Background())
}

func (i GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsAuthHeaderArgs) ToGetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsAuthHeaderOutputWithContext(ctx context.Context) GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsAuthHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsAuthHeaderOutput)
}

// GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsAuthHeaderArrayInput is an input type that accepts GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsAuthHeaderArray and GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsAuthHeaderArrayOutput values.
// You can construct a concrete instance of `GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsAuthHeaderArrayInput` via:
//
//          GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsAuthHeaderArray{ GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsAuthHeaderArgs{...} }
type GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsAuthHeaderArrayInput interface {
	pulumi.Input

	ToGetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsAuthHeaderArrayOutput() GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsAuthHeaderArrayOutput
	ToGetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsAuthHeaderArrayOutputWithContext(context.Context) GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsAuthHeaderArrayOutput
}

type GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsAuthHeaderArray []GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsAuthHeaderInput

func (GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsAuthHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsAuthHeader)(nil)).Elem()
}

func (i GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsAuthHeaderArray) ToGetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsAuthHeaderArrayOutput() GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsAuthHeaderArrayOutput {
	return i.ToGetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsAuthHeaderArrayOutputWithContext(context.Background())
}

func (i GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsAuthHeaderArray) ToGetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsAuthHeaderArrayOutputWithContext(ctx context.Context) GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsAuthHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsAuthHeaderArrayOutput)
}

type GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsAuthHeaderOutput struct{ *pulumi.OutputState }

func (GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsAuthHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsAuthHeader)(nil)).Elem()
}

func (o GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsAuthHeaderOutput) ToGetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsAuthHeaderOutput() GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsAuthHeaderOutput {
	return o
}

func (o GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsAuthHeaderOutput) ToGetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsAuthHeaderOutputWithContext(ctx context.Context) GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsAuthHeaderOutput {
	return o
}

// Name of the header.
func (o GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsAuthHeaderOutput) HeaderName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsAuthHeader) string {
		return v.HeaderName
	}).(pulumi.StringOutput)
}

// Value of the header.
func (o GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsAuthHeaderOutput) HeaderValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsAuthHeader) string {
		return v.HeaderValue
	}).(pulumi.StringOutput)
}

type GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsAuthHeaderArrayOutput struct{ *pulumi.OutputState }

func (GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsAuthHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsAuthHeader)(nil)).Elem()
}

func (o GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsAuthHeaderArrayOutput) ToGetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsAuthHeaderArrayOutput() GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsAuthHeaderArrayOutput {
	return o
}

func (o GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsAuthHeaderArrayOutput) ToGetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsAuthHeaderArrayOutputWithContext(ctx context.Context) GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsAuthHeaderArrayOutput {
	return o
}

func (o GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsAuthHeaderArrayOutput) Index(i pulumi.IntInput) GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsAuthHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsAuthHeader {
		return vs[0].([]GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsAuthHeader)[vs[1].(int)]
	}).(GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsAuthHeaderOutput)
}

type GetMonitorsMonitorCollectionItemConfigurationRequestHeader struct {
	// Name of the header.
	HeaderName string `pulumi:"headerName"`
	// Value of the header.
	HeaderValue string `pulumi:"headerValue"`
}

// GetMonitorsMonitorCollectionItemConfigurationRequestHeaderInput is an input type that accepts GetMonitorsMonitorCollectionItemConfigurationRequestHeaderArgs and GetMonitorsMonitorCollectionItemConfigurationRequestHeaderOutput values.
// You can construct a concrete instance of `GetMonitorsMonitorCollectionItemConfigurationRequestHeaderInput` via:
//
//          GetMonitorsMonitorCollectionItemConfigurationRequestHeaderArgs{...}
type GetMonitorsMonitorCollectionItemConfigurationRequestHeaderInput interface {
	pulumi.Input

	ToGetMonitorsMonitorCollectionItemConfigurationRequestHeaderOutput() GetMonitorsMonitorCollectionItemConfigurationRequestHeaderOutput
	ToGetMonitorsMonitorCollectionItemConfigurationRequestHeaderOutputWithContext(context.Context) GetMonitorsMonitorCollectionItemConfigurationRequestHeaderOutput
}

type GetMonitorsMonitorCollectionItemConfigurationRequestHeaderArgs struct {
	// Name of the header.
	HeaderName pulumi.StringInput `pulumi:"headerName"`
	// Value of the header.
	HeaderValue pulumi.StringInput `pulumi:"headerValue"`
}

func (GetMonitorsMonitorCollectionItemConfigurationRequestHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorsMonitorCollectionItemConfigurationRequestHeader)(nil)).Elem()
}

func (i GetMonitorsMonitorCollectionItemConfigurationRequestHeaderArgs) ToGetMonitorsMonitorCollectionItemConfigurationRequestHeaderOutput() GetMonitorsMonitorCollectionItemConfigurationRequestHeaderOutput {
	return i.ToGetMonitorsMonitorCollectionItemConfigurationRequestHeaderOutputWithContext(context.Background())
}

func (i GetMonitorsMonitorCollectionItemConfigurationRequestHeaderArgs) ToGetMonitorsMonitorCollectionItemConfigurationRequestHeaderOutputWithContext(ctx context.Context) GetMonitorsMonitorCollectionItemConfigurationRequestHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorsMonitorCollectionItemConfigurationRequestHeaderOutput)
}

// GetMonitorsMonitorCollectionItemConfigurationRequestHeaderArrayInput is an input type that accepts GetMonitorsMonitorCollectionItemConfigurationRequestHeaderArray and GetMonitorsMonitorCollectionItemConfigurationRequestHeaderArrayOutput values.
// You can construct a concrete instance of `GetMonitorsMonitorCollectionItemConfigurationRequestHeaderArrayInput` via:
//
//          GetMonitorsMonitorCollectionItemConfigurationRequestHeaderArray{ GetMonitorsMonitorCollectionItemConfigurationRequestHeaderArgs{...} }
type GetMonitorsMonitorCollectionItemConfigurationRequestHeaderArrayInput interface {
	pulumi.Input

	ToGetMonitorsMonitorCollectionItemConfigurationRequestHeaderArrayOutput() GetMonitorsMonitorCollectionItemConfigurationRequestHeaderArrayOutput
	ToGetMonitorsMonitorCollectionItemConfigurationRequestHeaderArrayOutputWithContext(context.Context) GetMonitorsMonitorCollectionItemConfigurationRequestHeaderArrayOutput
}

type GetMonitorsMonitorCollectionItemConfigurationRequestHeaderArray []GetMonitorsMonitorCollectionItemConfigurationRequestHeaderInput

func (GetMonitorsMonitorCollectionItemConfigurationRequestHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorsMonitorCollectionItemConfigurationRequestHeader)(nil)).Elem()
}

func (i GetMonitorsMonitorCollectionItemConfigurationRequestHeaderArray) ToGetMonitorsMonitorCollectionItemConfigurationRequestHeaderArrayOutput() GetMonitorsMonitorCollectionItemConfigurationRequestHeaderArrayOutput {
	return i.ToGetMonitorsMonitorCollectionItemConfigurationRequestHeaderArrayOutputWithContext(context.Background())
}

func (i GetMonitorsMonitorCollectionItemConfigurationRequestHeaderArray) ToGetMonitorsMonitorCollectionItemConfigurationRequestHeaderArrayOutputWithContext(ctx context.Context) GetMonitorsMonitorCollectionItemConfigurationRequestHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorsMonitorCollectionItemConfigurationRequestHeaderArrayOutput)
}

type GetMonitorsMonitorCollectionItemConfigurationRequestHeaderOutput struct{ *pulumi.OutputState }

func (GetMonitorsMonitorCollectionItemConfigurationRequestHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorsMonitorCollectionItemConfigurationRequestHeader)(nil)).Elem()
}

func (o GetMonitorsMonitorCollectionItemConfigurationRequestHeaderOutput) ToGetMonitorsMonitorCollectionItemConfigurationRequestHeaderOutput() GetMonitorsMonitorCollectionItemConfigurationRequestHeaderOutput {
	return o
}

func (o GetMonitorsMonitorCollectionItemConfigurationRequestHeaderOutput) ToGetMonitorsMonitorCollectionItemConfigurationRequestHeaderOutputWithContext(ctx context.Context) GetMonitorsMonitorCollectionItemConfigurationRequestHeaderOutput {
	return o
}

// Name of the header.
func (o GetMonitorsMonitorCollectionItemConfigurationRequestHeaderOutput) HeaderName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItemConfigurationRequestHeader) string { return v.HeaderName }).(pulumi.StringOutput)
}

// Value of the header.
func (o GetMonitorsMonitorCollectionItemConfigurationRequestHeaderOutput) HeaderValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItemConfigurationRequestHeader) string { return v.HeaderValue }).(pulumi.StringOutput)
}

type GetMonitorsMonitorCollectionItemConfigurationRequestHeaderArrayOutput struct{ *pulumi.OutputState }

func (GetMonitorsMonitorCollectionItemConfigurationRequestHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorsMonitorCollectionItemConfigurationRequestHeader)(nil)).Elem()
}

func (o GetMonitorsMonitorCollectionItemConfigurationRequestHeaderArrayOutput) ToGetMonitorsMonitorCollectionItemConfigurationRequestHeaderArrayOutput() GetMonitorsMonitorCollectionItemConfigurationRequestHeaderArrayOutput {
	return o
}

func (o GetMonitorsMonitorCollectionItemConfigurationRequestHeaderArrayOutput) ToGetMonitorsMonitorCollectionItemConfigurationRequestHeaderArrayOutputWithContext(ctx context.Context) GetMonitorsMonitorCollectionItemConfigurationRequestHeaderArrayOutput {
	return o
}

func (o GetMonitorsMonitorCollectionItemConfigurationRequestHeaderArrayOutput) Index(i pulumi.IntInput) GetMonitorsMonitorCollectionItemConfigurationRequestHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMonitorsMonitorCollectionItemConfigurationRequestHeader {
		return vs[0].([]GetMonitorsMonitorCollectionItemConfigurationRequestHeader)[vs[1].(int)]
	}).(GetMonitorsMonitorCollectionItemConfigurationRequestHeaderOutput)
}

type GetMonitorsMonitorCollectionItemConfigurationRequestQueryParam struct {
	// Name of the parameter.
	ParamName string `pulumi:"paramName"`
	// Value of the parameter.
	ParamValue string `pulumi:"paramValue"`
}

// GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamInput is an input type that accepts GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamArgs and GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamOutput values.
// You can construct a concrete instance of `GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamInput` via:
//
//          GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamArgs{...}
type GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamInput interface {
	pulumi.Input

	ToGetMonitorsMonitorCollectionItemConfigurationRequestQueryParamOutput() GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamOutput
	ToGetMonitorsMonitorCollectionItemConfigurationRequestQueryParamOutputWithContext(context.Context) GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamOutput
}

type GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamArgs struct {
	// Name of the parameter.
	ParamName pulumi.StringInput `pulumi:"paramName"`
	// Value of the parameter.
	ParamValue pulumi.StringInput `pulumi:"paramValue"`
}

func (GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorsMonitorCollectionItemConfigurationRequestQueryParam)(nil)).Elem()
}

func (i GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamArgs) ToGetMonitorsMonitorCollectionItemConfigurationRequestQueryParamOutput() GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamOutput {
	return i.ToGetMonitorsMonitorCollectionItemConfigurationRequestQueryParamOutputWithContext(context.Background())
}

func (i GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamArgs) ToGetMonitorsMonitorCollectionItemConfigurationRequestQueryParamOutputWithContext(ctx context.Context) GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamOutput)
}

// GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamArrayInput is an input type that accepts GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamArray and GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamArrayOutput values.
// You can construct a concrete instance of `GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamArrayInput` via:
//
//          GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamArray{ GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamArgs{...} }
type GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamArrayInput interface {
	pulumi.Input

	ToGetMonitorsMonitorCollectionItemConfigurationRequestQueryParamArrayOutput() GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamArrayOutput
	ToGetMonitorsMonitorCollectionItemConfigurationRequestQueryParamArrayOutputWithContext(context.Context) GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamArrayOutput
}

type GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamArray []GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamInput

func (GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorsMonitorCollectionItemConfigurationRequestQueryParam)(nil)).Elem()
}

func (i GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamArray) ToGetMonitorsMonitorCollectionItemConfigurationRequestQueryParamArrayOutput() GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamArrayOutput {
	return i.ToGetMonitorsMonitorCollectionItemConfigurationRequestQueryParamArrayOutputWithContext(context.Background())
}

func (i GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamArray) ToGetMonitorsMonitorCollectionItemConfigurationRequestQueryParamArrayOutputWithContext(ctx context.Context) GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamArrayOutput)
}

type GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamOutput struct{ *pulumi.OutputState }

func (GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorsMonitorCollectionItemConfigurationRequestQueryParam)(nil)).Elem()
}

func (o GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamOutput) ToGetMonitorsMonitorCollectionItemConfigurationRequestQueryParamOutput() GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamOutput {
	return o
}

func (o GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamOutput) ToGetMonitorsMonitorCollectionItemConfigurationRequestQueryParamOutputWithContext(ctx context.Context) GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamOutput {
	return o
}

// Name of the parameter.
func (o GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamOutput) ParamName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItemConfigurationRequestQueryParam) string { return v.ParamName }).(pulumi.StringOutput)
}

// Value of the parameter.
func (o GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamOutput) ParamValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItemConfigurationRequestQueryParam) string { return v.ParamValue }).(pulumi.StringOutput)
}

type GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamArrayOutput struct{ *pulumi.OutputState }

func (GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorsMonitorCollectionItemConfigurationRequestQueryParam)(nil)).Elem()
}

func (o GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamArrayOutput) ToGetMonitorsMonitorCollectionItemConfigurationRequestQueryParamArrayOutput() GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamArrayOutput {
	return o
}

func (o GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamArrayOutput) ToGetMonitorsMonitorCollectionItemConfigurationRequestQueryParamArrayOutputWithContext(ctx context.Context) GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamArrayOutput {
	return o
}

func (o GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamArrayOutput) Index(i pulumi.IntInput) GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMonitorsMonitorCollectionItemConfigurationRequestQueryParam {
		return vs[0].([]GetMonitorsMonitorCollectionItemConfigurationRequestQueryParam)[vs[1].(int)]
	}).(GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamOutput)
}

type GetMonitorsMonitorCollectionItemConfigurationVerifyText struct {
	// Verification text in the response.
	Text string `pulumi:"text"`
}

// GetMonitorsMonitorCollectionItemConfigurationVerifyTextInput is an input type that accepts GetMonitorsMonitorCollectionItemConfigurationVerifyTextArgs and GetMonitorsMonitorCollectionItemConfigurationVerifyTextOutput values.
// You can construct a concrete instance of `GetMonitorsMonitorCollectionItemConfigurationVerifyTextInput` via:
//
//          GetMonitorsMonitorCollectionItemConfigurationVerifyTextArgs{...}
type GetMonitorsMonitorCollectionItemConfigurationVerifyTextInput interface {
	pulumi.Input

	ToGetMonitorsMonitorCollectionItemConfigurationVerifyTextOutput() GetMonitorsMonitorCollectionItemConfigurationVerifyTextOutput
	ToGetMonitorsMonitorCollectionItemConfigurationVerifyTextOutputWithContext(context.Context) GetMonitorsMonitorCollectionItemConfigurationVerifyTextOutput
}

type GetMonitorsMonitorCollectionItemConfigurationVerifyTextArgs struct {
	// Verification text in the response.
	Text pulumi.StringInput `pulumi:"text"`
}

func (GetMonitorsMonitorCollectionItemConfigurationVerifyTextArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorsMonitorCollectionItemConfigurationVerifyText)(nil)).Elem()
}

func (i GetMonitorsMonitorCollectionItemConfigurationVerifyTextArgs) ToGetMonitorsMonitorCollectionItemConfigurationVerifyTextOutput() GetMonitorsMonitorCollectionItemConfigurationVerifyTextOutput {
	return i.ToGetMonitorsMonitorCollectionItemConfigurationVerifyTextOutputWithContext(context.Background())
}

func (i GetMonitorsMonitorCollectionItemConfigurationVerifyTextArgs) ToGetMonitorsMonitorCollectionItemConfigurationVerifyTextOutputWithContext(ctx context.Context) GetMonitorsMonitorCollectionItemConfigurationVerifyTextOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorsMonitorCollectionItemConfigurationVerifyTextOutput)
}

// GetMonitorsMonitorCollectionItemConfigurationVerifyTextArrayInput is an input type that accepts GetMonitorsMonitorCollectionItemConfigurationVerifyTextArray and GetMonitorsMonitorCollectionItemConfigurationVerifyTextArrayOutput values.
// You can construct a concrete instance of `GetMonitorsMonitorCollectionItemConfigurationVerifyTextArrayInput` via:
//
//          GetMonitorsMonitorCollectionItemConfigurationVerifyTextArray{ GetMonitorsMonitorCollectionItemConfigurationVerifyTextArgs{...} }
type GetMonitorsMonitorCollectionItemConfigurationVerifyTextArrayInput interface {
	pulumi.Input

	ToGetMonitorsMonitorCollectionItemConfigurationVerifyTextArrayOutput() GetMonitorsMonitorCollectionItemConfigurationVerifyTextArrayOutput
	ToGetMonitorsMonitorCollectionItemConfigurationVerifyTextArrayOutputWithContext(context.Context) GetMonitorsMonitorCollectionItemConfigurationVerifyTextArrayOutput
}

type GetMonitorsMonitorCollectionItemConfigurationVerifyTextArray []GetMonitorsMonitorCollectionItemConfigurationVerifyTextInput

func (GetMonitorsMonitorCollectionItemConfigurationVerifyTextArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorsMonitorCollectionItemConfigurationVerifyText)(nil)).Elem()
}

func (i GetMonitorsMonitorCollectionItemConfigurationVerifyTextArray) ToGetMonitorsMonitorCollectionItemConfigurationVerifyTextArrayOutput() GetMonitorsMonitorCollectionItemConfigurationVerifyTextArrayOutput {
	return i.ToGetMonitorsMonitorCollectionItemConfigurationVerifyTextArrayOutputWithContext(context.Background())
}

func (i GetMonitorsMonitorCollectionItemConfigurationVerifyTextArray) ToGetMonitorsMonitorCollectionItemConfigurationVerifyTextArrayOutputWithContext(ctx context.Context) GetMonitorsMonitorCollectionItemConfigurationVerifyTextArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorsMonitorCollectionItemConfigurationVerifyTextArrayOutput)
}

type GetMonitorsMonitorCollectionItemConfigurationVerifyTextOutput struct{ *pulumi.OutputState }

func (GetMonitorsMonitorCollectionItemConfigurationVerifyTextOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorsMonitorCollectionItemConfigurationVerifyText)(nil)).Elem()
}

func (o GetMonitorsMonitorCollectionItemConfigurationVerifyTextOutput) ToGetMonitorsMonitorCollectionItemConfigurationVerifyTextOutput() GetMonitorsMonitorCollectionItemConfigurationVerifyTextOutput {
	return o
}

func (o GetMonitorsMonitorCollectionItemConfigurationVerifyTextOutput) ToGetMonitorsMonitorCollectionItemConfigurationVerifyTextOutputWithContext(ctx context.Context) GetMonitorsMonitorCollectionItemConfigurationVerifyTextOutput {
	return o
}

// Verification text in the response.
func (o GetMonitorsMonitorCollectionItemConfigurationVerifyTextOutput) Text() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItemConfigurationVerifyText) string { return v.Text }).(pulumi.StringOutput)
}

type GetMonitorsMonitorCollectionItemConfigurationVerifyTextArrayOutput struct{ *pulumi.OutputState }

func (GetMonitorsMonitorCollectionItemConfigurationVerifyTextArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorsMonitorCollectionItemConfigurationVerifyText)(nil)).Elem()
}

func (o GetMonitorsMonitorCollectionItemConfigurationVerifyTextArrayOutput) ToGetMonitorsMonitorCollectionItemConfigurationVerifyTextArrayOutput() GetMonitorsMonitorCollectionItemConfigurationVerifyTextArrayOutput {
	return o
}

func (o GetMonitorsMonitorCollectionItemConfigurationVerifyTextArrayOutput) ToGetMonitorsMonitorCollectionItemConfigurationVerifyTextArrayOutputWithContext(ctx context.Context) GetMonitorsMonitorCollectionItemConfigurationVerifyTextArrayOutput {
	return o
}

func (o GetMonitorsMonitorCollectionItemConfigurationVerifyTextArrayOutput) Index(i pulumi.IntInput) GetMonitorsMonitorCollectionItemConfigurationVerifyTextOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMonitorsMonitorCollectionItemConfigurationVerifyText {
		return vs[0].([]GetMonitorsMonitorCollectionItemConfigurationVerifyText)[vs[1].(int)]
	}).(GetMonitorsMonitorCollectionItemConfigurationVerifyTextOutput)
}

type GetMonitorsMonitorCollectionItemScriptParameter struct {
	// If parameter value is default or overwritten.
	IsOverwritten bool `pulumi:"isOverwritten"`
	// Describes if  the parameter value is secret and should be kept confidential. isSecret is specified in either CreateScript or UpdateScript API.
	IsSecret bool `pulumi:"isSecret"`
	// Details of the script parameter that can be used to overwrite the parameter present in the script.
	MonitorScriptParameter GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameter `pulumi:"monitorScriptParameter"`
	// Name of the parameter.
	ParamName string `pulumi:"paramName"`
	// Value of the parameter.
	ParamValue string `pulumi:"paramValue"`
}

// GetMonitorsMonitorCollectionItemScriptParameterInput is an input type that accepts GetMonitorsMonitorCollectionItemScriptParameterArgs and GetMonitorsMonitorCollectionItemScriptParameterOutput values.
// You can construct a concrete instance of `GetMonitorsMonitorCollectionItemScriptParameterInput` via:
//
//          GetMonitorsMonitorCollectionItemScriptParameterArgs{...}
type GetMonitorsMonitorCollectionItemScriptParameterInput interface {
	pulumi.Input

	ToGetMonitorsMonitorCollectionItemScriptParameterOutput() GetMonitorsMonitorCollectionItemScriptParameterOutput
	ToGetMonitorsMonitorCollectionItemScriptParameterOutputWithContext(context.Context) GetMonitorsMonitorCollectionItemScriptParameterOutput
}

type GetMonitorsMonitorCollectionItemScriptParameterArgs struct {
	// If parameter value is default or overwritten.
	IsOverwritten pulumi.BoolInput `pulumi:"isOverwritten"`
	// Describes if  the parameter value is secret and should be kept confidential. isSecret is specified in either CreateScript or UpdateScript API.
	IsSecret pulumi.BoolInput `pulumi:"isSecret"`
	// Details of the script parameter that can be used to overwrite the parameter present in the script.
	MonitorScriptParameter GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterInput `pulumi:"monitorScriptParameter"`
	// Name of the parameter.
	ParamName pulumi.StringInput `pulumi:"paramName"`
	// Value of the parameter.
	ParamValue pulumi.StringInput `pulumi:"paramValue"`
}

func (GetMonitorsMonitorCollectionItemScriptParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorsMonitorCollectionItemScriptParameter)(nil)).Elem()
}

func (i GetMonitorsMonitorCollectionItemScriptParameterArgs) ToGetMonitorsMonitorCollectionItemScriptParameterOutput() GetMonitorsMonitorCollectionItemScriptParameterOutput {
	return i.ToGetMonitorsMonitorCollectionItemScriptParameterOutputWithContext(context.Background())
}

func (i GetMonitorsMonitorCollectionItemScriptParameterArgs) ToGetMonitorsMonitorCollectionItemScriptParameterOutputWithContext(ctx context.Context) GetMonitorsMonitorCollectionItemScriptParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorsMonitorCollectionItemScriptParameterOutput)
}

// GetMonitorsMonitorCollectionItemScriptParameterArrayInput is an input type that accepts GetMonitorsMonitorCollectionItemScriptParameterArray and GetMonitorsMonitorCollectionItemScriptParameterArrayOutput values.
// You can construct a concrete instance of `GetMonitorsMonitorCollectionItemScriptParameterArrayInput` via:
//
//          GetMonitorsMonitorCollectionItemScriptParameterArray{ GetMonitorsMonitorCollectionItemScriptParameterArgs{...} }
type GetMonitorsMonitorCollectionItemScriptParameterArrayInput interface {
	pulumi.Input

	ToGetMonitorsMonitorCollectionItemScriptParameterArrayOutput() GetMonitorsMonitorCollectionItemScriptParameterArrayOutput
	ToGetMonitorsMonitorCollectionItemScriptParameterArrayOutputWithContext(context.Context) GetMonitorsMonitorCollectionItemScriptParameterArrayOutput
}

type GetMonitorsMonitorCollectionItemScriptParameterArray []GetMonitorsMonitorCollectionItemScriptParameterInput

func (GetMonitorsMonitorCollectionItemScriptParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorsMonitorCollectionItemScriptParameter)(nil)).Elem()
}

func (i GetMonitorsMonitorCollectionItemScriptParameterArray) ToGetMonitorsMonitorCollectionItemScriptParameterArrayOutput() GetMonitorsMonitorCollectionItemScriptParameterArrayOutput {
	return i.ToGetMonitorsMonitorCollectionItemScriptParameterArrayOutputWithContext(context.Background())
}

func (i GetMonitorsMonitorCollectionItemScriptParameterArray) ToGetMonitorsMonitorCollectionItemScriptParameterArrayOutputWithContext(ctx context.Context) GetMonitorsMonitorCollectionItemScriptParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorsMonitorCollectionItemScriptParameterArrayOutput)
}

type GetMonitorsMonitorCollectionItemScriptParameterOutput struct{ *pulumi.OutputState }

func (GetMonitorsMonitorCollectionItemScriptParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorsMonitorCollectionItemScriptParameter)(nil)).Elem()
}

func (o GetMonitorsMonitorCollectionItemScriptParameterOutput) ToGetMonitorsMonitorCollectionItemScriptParameterOutput() GetMonitorsMonitorCollectionItemScriptParameterOutput {
	return o
}

func (o GetMonitorsMonitorCollectionItemScriptParameterOutput) ToGetMonitorsMonitorCollectionItemScriptParameterOutputWithContext(ctx context.Context) GetMonitorsMonitorCollectionItemScriptParameterOutput {
	return o
}

// If parameter value is default or overwritten.
func (o GetMonitorsMonitorCollectionItemScriptParameterOutput) IsOverwritten() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItemScriptParameter) bool { return v.IsOverwritten }).(pulumi.BoolOutput)
}

// Describes if  the parameter value is secret and should be kept confidential. isSecret is specified in either CreateScript or UpdateScript API.
func (o GetMonitorsMonitorCollectionItemScriptParameterOutput) GetIsSecret() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItemScriptParameter) bool { return v.IsSecret }).(pulumi.BoolOutput)
}

// Details of the script parameter that can be used to overwrite the parameter present in the script.
func (o GetMonitorsMonitorCollectionItemScriptParameterOutput) MonitorScriptParameter() GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItemScriptParameter) GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameter {
		return v.MonitorScriptParameter
	}).(GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterOutput)
}

// Name of the parameter.
func (o GetMonitorsMonitorCollectionItemScriptParameterOutput) ParamName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItemScriptParameter) string { return v.ParamName }).(pulumi.StringOutput)
}

// Value of the parameter.
func (o GetMonitorsMonitorCollectionItemScriptParameterOutput) ParamValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItemScriptParameter) string { return v.ParamValue }).(pulumi.StringOutput)
}

type GetMonitorsMonitorCollectionItemScriptParameterArrayOutput struct{ *pulumi.OutputState }

func (GetMonitorsMonitorCollectionItemScriptParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorsMonitorCollectionItemScriptParameter)(nil)).Elem()
}

func (o GetMonitorsMonitorCollectionItemScriptParameterArrayOutput) ToGetMonitorsMonitorCollectionItemScriptParameterArrayOutput() GetMonitorsMonitorCollectionItemScriptParameterArrayOutput {
	return o
}

func (o GetMonitorsMonitorCollectionItemScriptParameterArrayOutput) ToGetMonitorsMonitorCollectionItemScriptParameterArrayOutputWithContext(ctx context.Context) GetMonitorsMonitorCollectionItemScriptParameterArrayOutput {
	return o
}

func (o GetMonitorsMonitorCollectionItemScriptParameterArrayOutput) Index(i pulumi.IntInput) GetMonitorsMonitorCollectionItemScriptParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMonitorsMonitorCollectionItemScriptParameter {
		return vs[0].([]GetMonitorsMonitorCollectionItemScriptParameter)[vs[1].(int)]
	}).(GetMonitorsMonitorCollectionItemScriptParameterOutput)
}

type GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameter struct {
	// Name of the parameter.
	ParamName string `pulumi:"paramName"`
	// Value of the parameter.
	ParamValue string `pulumi:"paramValue"`
}

// GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterInput is an input type that accepts GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterArgs and GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterOutput values.
// You can construct a concrete instance of `GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterInput` via:
//
//          GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterArgs{...}
type GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterInput interface {
	pulumi.Input

	ToGetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterOutput() GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterOutput
	ToGetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterOutputWithContext(context.Context) GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterOutput
}

type GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterArgs struct {
	// Name of the parameter.
	ParamName pulumi.StringInput `pulumi:"paramName"`
	// Value of the parameter.
	ParamValue pulumi.StringInput `pulumi:"paramValue"`
}

func (GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameter)(nil)).Elem()
}

func (i GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterArgs) ToGetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterOutput() GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterOutput {
	return i.ToGetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterOutputWithContext(context.Background())
}

func (i GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterArgs) ToGetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterOutputWithContext(ctx context.Context) GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterOutput)
}

type GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterOutput struct{ *pulumi.OutputState }

func (GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameter)(nil)).Elem()
}

func (o GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterOutput) ToGetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterOutput() GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterOutput {
	return o
}

func (o GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterOutput) ToGetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterOutputWithContext(ctx context.Context) GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterOutput {
	return o
}

// Name of the parameter.
func (o GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterOutput) ParamName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameter) string {
		return v.ParamName
	}).(pulumi.StringOutput)
}

// Value of the parameter.
func (o GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterOutput) ParamValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameter) string {
		return v.ParamValue
	}).(pulumi.StringOutput)
}

type GetPublicVantagePointItem struct {
	// A filter to return only resources that match the entire display name given.
	DisplayName string `pulumi:"displayName"`
	// Geographic summary about a vantage point.
	Geo GetPublicVantagePointItemGeo `pulumi:"geo"`
	// A filter to return only resources that match the entire name given.
	Name string `pulumi:"name"`
}

// GetPublicVantagePointItemInput is an input type that accepts GetPublicVantagePointItemArgs and GetPublicVantagePointItemOutput values.
// You can construct a concrete instance of `GetPublicVantagePointItemInput` via:
//
//          GetPublicVantagePointItemArgs{...}
type GetPublicVantagePointItemInput interface {
	pulumi.Input

	ToGetPublicVantagePointItemOutput() GetPublicVantagePointItemOutput
	ToGetPublicVantagePointItemOutputWithContext(context.Context) GetPublicVantagePointItemOutput
}

type GetPublicVantagePointItemArgs struct {
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Geographic summary about a vantage point.
	Geo GetPublicVantagePointItemGeoInput `pulumi:"geo"`
	// A filter to return only resources that match the entire name given.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPublicVantagePointItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPublicVantagePointItem)(nil)).Elem()
}

func (i GetPublicVantagePointItemArgs) ToGetPublicVantagePointItemOutput() GetPublicVantagePointItemOutput {
	return i.ToGetPublicVantagePointItemOutputWithContext(context.Background())
}

func (i GetPublicVantagePointItemArgs) ToGetPublicVantagePointItemOutputWithContext(ctx context.Context) GetPublicVantagePointItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPublicVantagePointItemOutput)
}

// GetPublicVantagePointItemArrayInput is an input type that accepts GetPublicVantagePointItemArray and GetPublicVantagePointItemArrayOutput values.
// You can construct a concrete instance of `GetPublicVantagePointItemArrayInput` via:
//
//          GetPublicVantagePointItemArray{ GetPublicVantagePointItemArgs{...} }
type GetPublicVantagePointItemArrayInput interface {
	pulumi.Input

	ToGetPublicVantagePointItemArrayOutput() GetPublicVantagePointItemArrayOutput
	ToGetPublicVantagePointItemArrayOutputWithContext(context.Context) GetPublicVantagePointItemArrayOutput
}

type GetPublicVantagePointItemArray []GetPublicVantagePointItemInput

func (GetPublicVantagePointItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPublicVantagePointItem)(nil)).Elem()
}

func (i GetPublicVantagePointItemArray) ToGetPublicVantagePointItemArrayOutput() GetPublicVantagePointItemArrayOutput {
	return i.ToGetPublicVantagePointItemArrayOutputWithContext(context.Background())
}

func (i GetPublicVantagePointItemArray) ToGetPublicVantagePointItemArrayOutputWithContext(ctx context.Context) GetPublicVantagePointItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPublicVantagePointItemArrayOutput)
}

type GetPublicVantagePointItemOutput struct{ *pulumi.OutputState }

func (GetPublicVantagePointItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPublicVantagePointItem)(nil)).Elem()
}

func (o GetPublicVantagePointItemOutput) ToGetPublicVantagePointItemOutput() GetPublicVantagePointItemOutput {
	return o
}

func (o GetPublicVantagePointItemOutput) ToGetPublicVantagePointItemOutputWithContext(ctx context.Context) GetPublicVantagePointItemOutput {
	return o
}

// A filter to return only resources that match the entire display name given.
func (o GetPublicVantagePointItemOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublicVantagePointItem) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Geographic summary about a vantage point.
func (o GetPublicVantagePointItemOutput) Geo() GetPublicVantagePointItemGeoOutput {
	return o.ApplyT(func(v GetPublicVantagePointItem) GetPublicVantagePointItemGeo { return v.Geo }).(GetPublicVantagePointItemGeoOutput)
}

// A filter to return only resources that match the entire name given.
func (o GetPublicVantagePointItemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublicVantagePointItem) string { return v.Name }).(pulumi.StringOutput)
}

type GetPublicVantagePointItemArrayOutput struct{ *pulumi.OutputState }

func (GetPublicVantagePointItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPublicVantagePointItem)(nil)).Elem()
}

func (o GetPublicVantagePointItemArrayOutput) ToGetPublicVantagePointItemArrayOutput() GetPublicVantagePointItemArrayOutput {
	return o
}

func (o GetPublicVantagePointItemArrayOutput) ToGetPublicVantagePointItemArrayOutputWithContext(ctx context.Context) GetPublicVantagePointItemArrayOutput {
	return o
}

func (o GetPublicVantagePointItemArrayOutput) Index(i pulumi.IntInput) GetPublicVantagePointItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPublicVantagePointItem {
		return vs[0].([]GetPublicVantagePointItem)[vs[1].(int)]
	}).(GetPublicVantagePointItemOutput)
}

type GetPublicVantagePointItemGeo struct {
	// The ISO 3166-2 code for this location's first-level administrative division, either a US state or Canadian province. Only included for locations in the US or Canada. For a list of codes, see Country Codes.
	AdminDivCode string `pulumi:"adminDivCode"`
	// Common English-language name for the city.
	CityName string `pulumi:"cityName"`
	// The ISO 3166-1 alpha-2 country code. For a list of codes, see Country Codes.
	CountryCode string `pulumi:"countryCode"`
	// The common English-language name for the country.
	CountryName string `pulumi:"countryName"`
	// Degrees north of the Equator.
	Latitude float64 `pulumi:"latitude"`
	// Degrees east of the prime meridian.
	Longitude float64 `pulumi:"longitude"`
}

// GetPublicVantagePointItemGeoInput is an input type that accepts GetPublicVantagePointItemGeoArgs and GetPublicVantagePointItemGeoOutput values.
// You can construct a concrete instance of `GetPublicVantagePointItemGeoInput` via:
//
//          GetPublicVantagePointItemGeoArgs{...}
type GetPublicVantagePointItemGeoInput interface {
	pulumi.Input

	ToGetPublicVantagePointItemGeoOutput() GetPublicVantagePointItemGeoOutput
	ToGetPublicVantagePointItemGeoOutputWithContext(context.Context) GetPublicVantagePointItemGeoOutput
}

type GetPublicVantagePointItemGeoArgs struct {
	// The ISO 3166-2 code for this location's first-level administrative division, either a US state or Canadian province. Only included for locations in the US or Canada. For a list of codes, see Country Codes.
	AdminDivCode pulumi.StringInput `pulumi:"adminDivCode"`
	// Common English-language name for the city.
	CityName pulumi.StringInput `pulumi:"cityName"`
	// The ISO 3166-1 alpha-2 country code. For a list of codes, see Country Codes.
	CountryCode pulumi.StringInput `pulumi:"countryCode"`
	// The common English-language name for the country.
	CountryName pulumi.StringInput `pulumi:"countryName"`
	// Degrees north of the Equator.
	Latitude pulumi.Float64Input `pulumi:"latitude"`
	// Degrees east of the prime meridian.
	Longitude pulumi.Float64Input `pulumi:"longitude"`
}

func (GetPublicVantagePointItemGeoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPublicVantagePointItemGeo)(nil)).Elem()
}

func (i GetPublicVantagePointItemGeoArgs) ToGetPublicVantagePointItemGeoOutput() GetPublicVantagePointItemGeoOutput {
	return i.ToGetPublicVantagePointItemGeoOutputWithContext(context.Background())
}

func (i GetPublicVantagePointItemGeoArgs) ToGetPublicVantagePointItemGeoOutputWithContext(ctx context.Context) GetPublicVantagePointItemGeoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPublicVantagePointItemGeoOutput)
}

type GetPublicVantagePointItemGeoOutput struct{ *pulumi.OutputState }

func (GetPublicVantagePointItemGeoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPublicVantagePointItemGeo)(nil)).Elem()
}

func (o GetPublicVantagePointItemGeoOutput) ToGetPublicVantagePointItemGeoOutput() GetPublicVantagePointItemGeoOutput {
	return o
}

func (o GetPublicVantagePointItemGeoOutput) ToGetPublicVantagePointItemGeoOutputWithContext(ctx context.Context) GetPublicVantagePointItemGeoOutput {
	return o
}

// The ISO 3166-2 code for this location's first-level administrative division, either a US state or Canadian province. Only included for locations in the US or Canada. For a list of codes, see Country Codes.
func (o GetPublicVantagePointItemGeoOutput) AdminDivCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublicVantagePointItemGeo) string { return v.AdminDivCode }).(pulumi.StringOutput)
}

// Common English-language name for the city.
func (o GetPublicVantagePointItemGeoOutput) CityName() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublicVantagePointItemGeo) string { return v.CityName }).(pulumi.StringOutput)
}

// The ISO 3166-1 alpha-2 country code. For a list of codes, see Country Codes.
func (o GetPublicVantagePointItemGeoOutput) CountryCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublicVantagePointItemGeo) string { return v.CountryCode }).(pulumi.StringOutput)
}

// The common English-language name for the country.
func (o GetPublicVantagePointItemGeoOutput) CountryName() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublicVantagePointItemGeo) string { return v.CountryName }).(pulumi.StringOutput)
}

// Degrees north of the Equator.
func (o GetPublicVantagePointItemGeoOutput) Latitude() pulumi.Float64Output {
	return o.ApplyT(func(v GetPublicVantagePointItemGeo) float64 { return v.Latitude }).(pulumi.Float64Output)
}

// Degrees east of the prime meridian.
func (o GetPublicVantagePointItemGeoOutput) Longitude() pulumi.Float64Output {
	return o.ApplyT(func(v GetPublicVantagePointItemGeo) float64 { return v.Longitude }).(pulumi.Float64Output)
}

type GetPublicVantagePointsFilter struct {
	// A filter to return only resources that match the entire name given.
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetPublicVantagePointsFilterInput is an input type that accepts GetPublicVantagePointsFilterArgs and GetPublicVantagePointsFilterOutput values.
// You can construct a concrete instance of `GetPublicVantagePointsFilterInput` via:
//
//          GetPublicVantagePointsFilterArgs{...}
type GetPublicVantagePointsFilterInput interface {
	pulumi.Input

	ToGetPublicVantagePointsFilterOutput() GetPublicVantagePointsFilterOutput
	ToGetPublicVantagePointsFilterOutputWithContext(context.Context) GetPublicVantagePointsFilterOutput
}

type GetPublicVantagePointsFilterArgs struct {
	// A filter to return only resources that match the entire name given.
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetPublicVantagePointsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPublicVantagePointsFilter)(nil)).Elem()
}

func (i GetPublicVantagePointsFilterArgs) ToGetPublicVantagePointsFilterOutput() GetPublicVantagePointsFilterOutput {
	return i.ToGetPublicVantagePointsFilterOutputWithContext(context.Background())
}

func (i GetPublicVantagePointsFilterArgs) ToGetPublicVantagePointsFilterOutputWithContext(ctx context.Context) GetPublicVantagePointsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPublicVantagePointsFilterOutput)
}

// GetPublicVantagePointsFilterArrayInput is an input type that accepts GetPublicVantagePointsFilterArray and GetPublicVantagePointsFilterArrayOutput values.
// You can construct a concrete instance of `GetPublicVantagePointsFilterArrayInput` via:
//
//          GetPublicVantagePointsFilterArray{ GetPublicVantagePointsFilterArgs{...} }
type GetPublicVantagePointsFilterArrayInput interface {
	pulumi.Input

	ToGetPublicVantagePointsFilterArrayOutput() GetPublicVantagePointsFilterArrayOutput
	ToGetPublicVantagePointsFilterArrayOutputWithContext(context.Context) GetPublicVantagePointsFilterArrayOutput
}

type GetPublicVantagePointsFilterArray []GetPublicVantagePointsFilterInput

func (GetPublicVantagePointsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPublicVantagePointsFilter)(nil)).Elem()
}

func (i GetPublicVantagePointsFilterArray) ToGetPublicVantagePointsFilterArrayOutput() GetPublicVantagePointsFilterArrayOutput {
	return i.ToGetPublicVantagePointsFilterArrayOutputWithContext(context.Background())
}

func (i GetPublicVantagePointsFilterArray) ToGetPublicVantagePointsFilterArrayOutputWithContext(ctx context.Context) GetPublicVantagePointsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPublicVantagePointsFilterArrayOutput)
}

type GetPublicVantagePointsFilterOutput struct{ *pulumi.OutputState }

func (GetPublicVantagePointsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPublicVantagePointsFilter)(nil)).Elem()
}

func (o GetPublicVantagePointsFilterOutput) ToGetPublicVantagePointsFilterOutput() GetPublicVantagePointsFilterOutput {
	return o
}

func (o GetPublicVantagePointsFilterOutput) ToGetPublicVantagePointsFilterOutputWithContext(ctx context.Context) GetPublicVantagePointsFilterOutput {
	return o
}

// A filter to return only resources that match the entire name given.
func (o GetPublicVantagePointsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublicVantagePointsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetPublicVantagePointsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetPublicVantagePointsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetPublicVantagePointsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPublicVantagePointsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetPublicVantagePointsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetPublicVantagePointsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPublicVantagePointsFilter)(nil)).Elem()
}

func (o GetPublicVantagePointsFilterArrayOutput) ToGetPublicVantagePointsFilterArrayOutput() GetPublicVantagePointsFilterArrayOutput {
	return o
}

func (o GetPublicVantagePointsFilterArrayOutput) ToGetPublicVantagePointsFilterArrayOutputWithContext(ctx context.Context) GetPublicVantagePointsFilterArrayOutput {
	return o
}

func (o GetPublicVantagePointsFilterArrayOutput) Index(i pulumi.IntInput) GetPublicVantagePointsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPublicVantagePointsFilter {
		return vs[0].([]GetPublicVantagePointsFilter)[vs[1].(int)]
	}).(GetPublicVantagePointsFilterOutput)
}

type GetPublicVantagePointsPublicVantagePointCollection struct {
	// List of PublicVantagePointSummary items.
	Items []GetPublicVantagePointsPublicVantagePointCollectionItem `pulumi:"items"`
}

// GetPublicVantagePointsPublicVantagePointCollectionInput is an input type that accepts GetPublicVantagePointsPublicVantagePointCollectionArgs and GetPublicVantagePointsPublicVantagePointCollectionOutput values.
// You can construct a concrete instance of `GetPublicVantagePointsPublicVantagePointCollectionInput` via:
//
//          GetPublicVantagePointsPublicVantagePointCollectionArgs{...}
type GetPublicVantagePointsPublicVantagePointCollectionInput interface {
	pulumi.Input

	ToGetPublicVantagePointsPublicVantagePointCollectionOutput() GetPublicVantagePointsPublicVantagePointCollectionOutput
	ToGetPublicVantagePointsPublicVantagePointCollectionOutputWithContext(context.Context) GetPublicVantagePointsPublicVantagePointCollectionOutput
}

type GetPublicVantagePointsPublicVantagePointCollectionArgs struct {
	// List of PublicVantagePointSummary items.
	Items GetPublicVantagePointsPublicVantagePointCollectionItemArrayInput `pulumi:"items"`
}

func (GetPublicVantagePointsPublicVantagePointCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPublicVantagePointsPublicVantagePointCollection)(nil)).Elem()
}

func (i GetPublicVantagePointsPublicVantagePointCollectionArgs) ToGetPublicVantagePointsPublicVantagePointCollectionOutput() GetPublicVantagePointsPublicVantagePointCollectionOutput {
	return i.ToGetPublicVantagePointsPublicVantagePointCollectionOutputWithContext(context.Background())
}

func (i GetPublicVantagePointsPublicVantagePointCollectionArgs) ToGetPublicVantagePointsPublicVantagePointCollectionOutputWithContext(ctx context.Context) GetPublicVantagePointsPublicVantagePointCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPublicVantagePointsPublicVantagePointCollectionOutput)
}

// GetPublicVantagePointsPublicVantagePointCollectionArrayInput is an input type that accepts GetPublicVantagePointsPublicVantagePointCollectionArray and GetPublicVantagePointsPublicVantagePointCollectionArrayOutput values.
// You can construct a concrete instance of `GetPublicVantagePointsPublicVantagePointCollectionArrayInput` via:
//
//          GetPublicVantagePointsPublicVantagePointCollectionArray{ GetPublicVantagePointsPublicVantagePointCollectionArgs{...} }
type GetPublicVantagePointsPublicVantagePointCollectionArrayInput interface {
	pulumi.Input

	ToGetPublicVantagePointsPublicVantagePointCollectionArrayOutput() GetPublicVantagePointsPublicVantagePointCollectionArrayOutput
	ToGetPublicVantagePointsPublicVantagePointCollectionArrayOutputWithContext(context.Context) GetPublicVantagePointsPublicVantagePointCollectionArrayOutput
}

type GetPublicVantagePointsPublicVantagePointCollectionArray []GetPublicVantagePointsPublicVantagePointCollectionInput

func (GetPublicVantagePointsPublicVantagePointCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPublicVantagePointsPublicVantagePointCollection)(nil)).Elem()
}

func (i GetPublicVantagePointsPublicVantagePointCollectionArray) ToGetPublicVantagePointsPublicVantagePointCollectionArrayOutput() GetPublicVantagePointsPublicVantagePointCollectionArrayOutput {
	return i.ToGetPublicVantagePointsPublicVantagePointCollectionArrayOutputWithContext(context.Background())
}

func (i GetPublicVantagePointsPublicVantagePointCollectionArray) ToGetPublicVantagePointsPublicVantagePointCollectionArrayOutputWithContext(ctx context.Context) GetPublicVantagePointsPublicVantagePointCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPublicVantagePointsPublicVantagePointCollectionArrayOutput)
}

type GetPublicVantagePointsPublicVantagePointCollectionOutput struct{ *pulumi.OutputState }

func (GetPublicVantagePointsPublicVantagePointCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPublicVantagePointsPublicVantagePointCollection)(nil)).Elem()
}

func (o GetPublicVantagePointsPublicVantagePointCollectionOutput) ToGetPublicVantagePointsPublicVantagePointCollectionOutput() GetPublicVantagePointsPublicVantagePointCollectionOutput {
	return o
}

func (o GetPublicVantagePointsPublicVantagePointCollectionOutput) ToGetPublicVantagePointsPublicVantagePointCollectionOutputWithContext(ctx context.Context) GetPublicVantagePointsPublicVantagePointCollectionOutput {
	return o
}

// List of PublicVantagePointSummary items.
func (o GetPublicVantagePointsPublicVantagePointCollectionOutput) Items() GetPublicVantagePointsPublicVantagePointCollectionItemArrayOutput {
	return o.ApplyT(func(v GetPublicVantagePointsPublicVantagePointCollection) []GetPublicVantagePointsPublicVantagePointCollectionItem {
		return v.Items
	}).(GetPublicVantagePointsPublicVantagePointCollectionItemArrayOutput)
}

type GetPublicVantagePointsPublicVantagePointCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetPublicVantagePointsPublicVantagePointCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPublicVantagePointsPublicVantagePointCollection)(nil)).Elem()
}

func (o GetPublicVantagePointsPublicVantagePointCollectionArrayOutput) ToGetPublicVantagePointsPublicVantagePointCollectionArrayOutput() GetPublicVantagePointsPublicVantagePointCollectionArrayOutput {
	return o
}

func (o GetPublicVantagePointsPublicVantagePointCollectionArrayOutput) ToGetPublicVantagePointsPublicVantagePointCollectionArrayOutputWithContext(ctx context.Context) GetPublicVantagePointsPublicVantagePointCollectionArrayOutput {
	return o
}

func (o GetPublicVantagePointsPublicVantagePointCollectionArrayOutput) Index(i pulumi.IntInput) GetPublicVantagePointsPublicVantagePointCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPublicVantagePointsPublicVantagePointCollection {
		return vs[0].([]GetPublicVantagePointsPublicVantagePointCollection)[vs[1].(int)]
	}).(GetPublicVantagePointsPublicVantagePointCollectionOutput)
}

type GetPublicVantagePointsPublicVantagePointCollectionItem struct {
	// A filter to return only resources that match the entire display name given.
	DisplayName string `pulumi:"displayName"`
	// Geographic summary about a vantage point.
	Geo GetPublicVantagePointsPublicVantagePointCollectionItemGeo `pulumi:"geo"`
	// A filter to return only resources that match the entire name given.
	Name string `pulumi:"name"`
}

// GetPublicVantagePointsPublicVantagePointCollectionItemInput is an input type that accepts GetPublicVantagePointsPublicVantagePointCollectionItemArgs and GetPublicVantagePointsPublicVantagePointCollectionItemOutput values.
// You can construct a concrete instance of `GetPublicVantagePointsPublicVantagePointCollectionItemInput` via:
//
//          GetPublicVantagePointsPublicVantagePointCollectionItemArgs{...}
type GetPublicVantagePointsPublicVantagePointCollectionItemInput interface {
	pulumi.Input

	ToGetPublicVantagePointsPublicVantagePointCollectionItemOutput() GetPublicVantagePointsPublicVantagePointCollectionItemOutput
	ToGetPublicVantagePointsPublicVantagePointCollectionItemOutputWithContext(context.Context) GetPublicVantagePointsPublicVantagePointCollectionItemOutput
}

type GetPublicVantagePointsPublicVantagePointCollectionItemArgs struct {
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Geographic summary about a vantage point.
	Geo GetPublicVantagePointsPublicVantagePointCollectionItemGeoInput `pulumi:"geo"`
	// A filter to return only resources that match the entire name given.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPublicVantagePointsPublicVantagePointCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPublicVantagePointsPublicVantagePointCollectionItem)(nil)).Elem()
}

func (i GetPublicVantagePointsPublicVantagePointCollectionItemArgs) ToGetPublicVantagePointsPublicVantagePointCollectionItemOutput() GetPublicVantagePointsPublicVantagePointCollectionItemOutput {
	return i.ToGetPublicVantagePointsPublicVantagePointCollectionItemOutputWithContext(context.Background())
}

func (i GetPublicVantagePointsPublicVantagePointCollectionItemArgs) ToGetPublicVantagePointsPublicVantagePointCollectionItemOutputWithContext(ctx context.Context) GetPublicVantagePointsPublicVantagePointCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPublicVantagePointsPublicVantagePointCollectionItemOutput)
}

// GetPublicVantagePointsPublicVantagePointCollectionItemArrayInput is an input type that accepts GetPublicVantagePointsPublicVantagePointCollectionItemArray and GetPublicVantagePointsPublicVantagePointCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetPublicVantagePointsPublicVantagePointCollectionItemArrayInput` via:
//
//          GetPublicVantagePointsPublicVantagePointCollectionItemArray{ GetPublicVantagePointsPublicVantagePointCollectionItemArgs{...} }
type GetPublicVantagePointsPublicVantagePointCollectionItemArrayInput interface {
	pulumi.Input

	ToGetPublicVantagePointsPublicVantagePointCollectionItemArrayOutput() GetPublicVantagePointsPublicVantagePointCollectionItemArrayOutput
	ToGetPublicVantagePointsPublicVantagePointCollectionItemArrayOutputWithContext(context.Context) GetPublicVantagePointsPublicVantagePointCollectionItemArrayOutput
}

type GetPublicVantagePointsPublicVantagePointCollectionItemArray []GetPublicVantagePointsPublicVantagePointCollectionItemInput

func (GetPublicVantagePointsPublicVantagePointCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPublicVantagePointsPublicVantagePointCollectionItem)(nil)).Elem()
}

func (i GetPublicVantagePointsPublicVantagePointCollectionItemArray) ToGetPublicVantagePointsPublicVantagePointCollectionItemArrayOutput() GetPublicVantagePointsPublicVantagePointCollectionItemArrayOutput {
	return i.ToGetPublicVantagePointsPublicVantagePointCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetPublicVantagePointsPublicVantagePointCollectionItemArray) ToGetPublicVantagePointsPublicVantagePointCollectionItemArrayOutputWithContext(ctx context.Context) GetPublicVantagePointsPublicVantagePointCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPublicVantagePointsPublicVantagePointCollectionItemArrayOutput)
}

type GetPublicVantagePointsPublicVantagePointCollectionItemOutput struct{ *pulumi.OutputState }

func (GetPublicVantagePointsPublicVantagePointCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPublicVantagePointsPublicVantagePointCollectionItem)(nil)).Elem()
}

func (o GetPublicVantagePointsPublicVantagePointCollectionItemOutput) ToGetPublicVantagePointsPublicVantagePointCollectionItemOutput() GetPublicVantagePointsPublicVantagePointCollectionItemOutput {
	return o
}

func (o GetPublicVantagePointsPublicVantagePointCollectionItemOutput) ToGetPublicVantagePointsPublicVantagePointCollectionItemOutputWithContext(ctx context.Context) GetPublicVantagePointsPublicVantagePointCollectionItemOutput {
	return o
}

// A filter to return only resources that match the entire display name given.
func (o GetPublicVantagePointsPublicVantagePointCollectionItemOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublicVantagePointsPublicVantagePointCollectionItem) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Geographic summary about a vantage point.
func (o GetPublicVantagePointsPublicVantagePointCollectionItemOutput) Geo() GetPublicVantagePointsPublicVantagePointCollectionItemGeoOutput {
	return o.ApplyT(func(v GetPublicVantagePointsPublicVantagePointCollectionItem) GetPublicVantagePointsPublicVantagePointCollectionItemGeo {
		return v.Geo
	}).(GetPublicVantagePointsPublicVantagePointCollectionItemGeoOutput)
}

// A filter to return only resources that match the entire name given.
func (o GetPublicVantagePointsPublicVantagePointCollectionItemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublicVantagePointsPublicVantagePointCollectionItem) string { return v.Name }).(pulumi.StringOutput)
}

type GetPublicVantagePointsPublicVantagePointCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetPublicVantagePointsPublicVantagePointCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPublicVantagePointsPublicVantagePointCollectionItem)(nil)).Elem()
}

func (o GetPublicVantagePointsPublicVantagePointCollectionItemArrayOutput) ToGetPublicVantagePointsPublicVantagePointCollectionItemArrayOutput() GetPublicVantagePointsPublicVantagePointCollectionItemArrayOutput {
	return o
}

func (o GetPublicVantagePointsPublicVantagePointCollectionItemArrayOutput) ToGetPublicVantagePointsPublicVantagePointCollectionItemArrayOutputWithContext(ctx context.Context) GetPublicVantagePointsPublicVantagePointCollectionItemArrayOutput {
	return o
}

func (o GetPublicVantagePointsPublicVantagePointCollectionItemArrayOutput) Index(i pulumi.IntInput) GetPublicVantagePointsPublicVantagePointCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPublicVantagePointsPublicVantagePointCollectionItem {
		return vs[0].([]GetPublicVantagePointsPublicVantagePointCollectionItem)[vs[1].(int)]
	}).(GetPublicVantagePointsPublicVantagePointCollectionItemOutput)
}

type GetPublicVantagePointsPublicVantagePointCollectionItemGeo struct {
	// The ISO 3166-2 code for this location's first-level administrative division, either a US state or Canadian province. Only included for locations in the US or Canada. For a list of codes, see Country Codes.
	AdminDivCode string `pulumi:"adminDivCode"`
	// Common English-language name for the city.
	CityName string `pulumi:"cityName"`
	// The ISO 3166-1 alpha-2 country code. For a list of codes, see Country Codes.
	CountryCode string `pulumi:"countryCode"`
	// The common English-language name for the country.
	CountryName string `pulumi:"countryName"`
	// Degrees north of the Equator.
	Latitude float64 `pulumi:"latitude"`
	// Degrees east of the prime meridian.
	Longitude float64 `pulumi:"longitude"`
}

// GetPublicVantagePointsPublicVantagePointCollectionItemGeoInput is an input type that accepts GetPublicVantagePointsPublicVantagePointCollectionItemGeoArgs and GetPublicVantagePointsPublicVantagePointCollectionItemGeoOutput values.
// You can construct a concrete instance of `GetPublicVantagePointsPublicVantagePointCollectionItemGeoInput` via:
//
//          GetPublicVantagePointsPublicVantagePointCollectionItemGeoArgs{...}
type GetPublicVantagePointsPublicVantagePointCollectionItemGeoInput interface {
	pulumi.Input

	ToGetPublicVantagePointsPublicVantagePointCollectionItemGeoOutput() GetPublicVantagePointsPublicVantagePointCollectionItemGeoOutput
	ToGetPublicVantagePointsPublicVantagePointCollectionItemGeoOutputWithContext(context.Context) GetPublicVantagePointsPublicVantagePointCollectionItemGeoOutput
}

type GetPublicVantagePointsPublicVantagePointCollectionItemGeoArgs struct {
	// The ISO 3166-2 code for this location's first-level administrative division, either a US state or Canadian province. Only included for locations in the US or Canada. For a list of codes, see Country Codes.
	AdminDivCode pulumi.StringInput `pulumi:"adminDivCode"`
	// Common English-language name for the city.
	CityName pulumi.StringInput `pulumi:"cityName"`
	// The ISO 3166-1 alpha-2 country code. For a list of codes, see Country Codes.
	CountryCode pulumi.StringInput `pulumi:"countryCode"`
	// The common English-language name for the country.
	CountryName pulumi.StringInput `pulumi:"countryName"`
	// Degrees north of the Equator.
	Latitude pulumi.Float64Input `pulumi:"latitude"`
	// Degrees east of the prime meridian.
	Longitude pulumi.Float64Input `pulumi:"longitude"`
}

func (GetPublicVantagePointsPublicVantagePointCollectionItemGeoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPublicVantagePointsPublicVantagePointCollectionItemGeo)(nil)).Elem()
}

func (i GetPublicVantagePointsPublicVantagePointCollectionItemGeoArgs) ToGetPublicVantagePointsPublicVantagePointCollectionItemGeoOutput() GetPublicVantagePointsPublicVantagePointCollectionItemGeoOutput {
	return i.ToGetPublicVantagePointsPublicVantagePointCollectionItemGeoOutputWithContext(context.Background())
}

func (i GetPublicVantagePointsPublicVantagePointCollectionItemGeoArgs) ToGetPublicVantagePointsPublicVantagePointCollectionItemGeoOutputWithContext(ctx context.Context) GetPublicVantagePointsPublicVantagePointCollectionItemGeoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPublicVantagePointsPublicVantagePointCollectionItemGeoOutput)
}

type GetPublicVantagePointsPublicVantagePointCollectionItemGeoOutput struct{ *pulumi.OutputState }

func (GetPublicVantagePointsPublicVantagePointCollectionItemGeoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPublicVantagePointsPublicVantagePointCollectionItemGeo)(nil)).Elem()
}

func (o GetPublicVantagePointsPublicVantagePointCollectionItemGeoOutput) ToGetPublicVantagePointsPublicVantagePointCollectionItemGeoOutput() GetPublicVantagePointsPublicVantagePointCollectionItemGeoOutput {
	return o
}

func (o GetPublicVantagePointsPublicVantagePointCollectionItemGeoOutput) ToGetPublicVantagePointsPublicVantagePointCollectionItemGeoOutputWithContext(ctx context.Context) GetPublicVantagePointsPublicVantagePointCollectionItemGeoOutput {
	return o
}

// The ISO 3166-2 code for this location's first-level administrative division, either a US state or Canadian province. Only included for locations in the US or Canada. For a list of codes, see Country Codes.
func (o GetPublicVantagePointsPublicVantagePointCollectionItemGeoOutput) AdminDivCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublicVantagePointsPublicVantagePointCollectionItemGeo) string { return v.AdminDivCode }).(pulumi.StringOutput)
}

// Common English-language name for the city.
func (o GetPublicVantagePointsPublicVantagePointCollectionItemGeoOutput) CityName() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublicVantagePointsPublicVantagePointCollectionItemGeo) string { return v.CityName }).(pulumi.StringOutput)
}

// The ISO 3166-1 alpha-2 country code. For a list of codes, see Country Codes.
func (o GetPublicVantagePointsPublicVantagePointCollectionItemGeoOutput) CountryCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublicVantagePointsPublicVantagePointCollectionItemGeo) string { return v.CountryCode }).(pulumi.StringOutput)
}

// The common English-language name for the country.
func (o GetPublicVantagePointsPublicVantagePointCollectionItemGeoOutput) CountryName() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublicVantagePointsPublicVantagePointCollectionItemGeo) string { return v.CountryName }).(pulumi.StringOutput)
}

// Degrees north of the Equator.
func (o GetPublicVantagePointsPublicVantagePointCollectionItemGeoOutput) Latitude() pulumi.Float64Output {
	return o.ApplyT(func(v GetPublicVantagePointsPublicVantagePointCollectionItemGeo) float64 { return v.Latitude }).(pulumi.Float64Output)
}

// Degrees east of the prime meridian.
func (o GetPublicVantagePointsPublicVantagePointCollectionItemGeoOutput) Longitude() pulumi.Float64Output {
	return o.ApplyT(func(v GetPublicVantagePointsPublicVantagePointCollectionItemGeo) float64 { return v.Longitude }).(pulumi.Float64Output)
}

type GetResultResultDataSet struct {
	// Data content in byte format. Example: Zip or Screenshot.
	ByteContent string `pulumi:"byteContent"`
	// Name of the data.
	Name string `pulumi:"name"`
	// Data content in string format. Example: HAR.
	StringContent string `pulumi:"stringContent"`
	// The time when the data was generated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-13T22:47:12.613Z`
	Timestamp string `pulumi:"timestamp"`
}

// GetResultResultDataSetInput is an input type that accepts GetResultResultDataSetArgs and GetResultResultDataSetOutput values.
// You can construct a concrete instance of `GetResultResultDataSetInput` via:
//
//          GetResultResultDataSetArgs{...}
type GetResultResultDataSetInput interface {
	pulumi.Input

	ToGetResultResultDataSetOutput() GetResultResultDataSetOutput
	ToGetResultResultDataSetOutputWithContext(context.Context) GetResultResultDataSetOutput
}

type GetResultResultDataSetArgs struct {
	// Data content in byte format. Example: Zip or Screenshot.
	ByteContent pulumi.StringInput `pulumi:"byteContent"`
	// Name of the data.
	Name pulumi.StringInput `pulumi:"name"`
	// Data content in string format. Example: HAR.
	StringContent pulumi.StringInput `pulumi:"stringContent"`
	// The time when the data was generated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-13T22:47:12.613Z`
	Timestamp pulumi.StringInput `pulumi:"timestamp"`
}

func (GetResultResultDataSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResultResultDataSet)(nil)).Elem()
}

func (i GetResultResultDataSetArgs) ToGetResultResultDataSetOutput() GetResultResultDataSetOutput {
	return i.ToGetResultResultDataSetOutputWithContext(context.Background())
}

func (i GetResultResultDataSetArgs) ToGetResultResultDataSetOutputWithContext(ctx context.Context) GetResultResultDataSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResultResultDataSetOutput)
}

// GetResultResultDataSetArrayInput is an input type that accepts GetResultResultDataSetArray and GetResultResultDataSetArrayOutput values.
// You can construct a concrete instance of `GetResultResultDataSetArrayInput` via:
//
//          GetResultResultDataSetArray{ GetResultResultDataSetArgs{...} }
type GetResultResultDataSetArrayInput interface {
	pulumi.Input

	ToGetResultResultDataSetArrayOutput() GetResultResultDataSetArrayOutput
	ToGetResultResultDataSetArrayOutputWithContext(context.Context) GetResultResultDataSetArrayOutput
}

type GetResultResultDataSetArray []GetResultResultDataSetInput

func (GetResultResultDataSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResultResultDataSet)(nil)).Elem()
}

func (i GetResultResultDataSetArray) ToGetResultResultDataSetArrayOutput() GetResultResultDataSetArrayOutput {
	return i.ToGetResultResultDataSetArrayOutputWithContext(context.Background())
}

func (i GetResultResultDataSetArray) ToGetResultResultDataSetArrayOutputWithContext(ctx context.Context) GetResultResultDataSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResultResultDataSetArrayOutput)
}

type GetResultResultDataSetOutput struct{ *pulumi.OutputState }

func (GetResultResultDataSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResultResultDataSet)(nil)).Elem()
}

func (o GetResultResultDataSetOutput) ToGetResultResultDataSetOutput() GetResultResultDataSetOutput {
	return o
}

func (o GetResultResultDataSetOutput) ToGetResultResultDataSetOutputWithContext(ctx context.Context) GetResultResultDataSetOutput {
	return o
}

// Data content in byte format. Example: Zip or Screenshot.
func (o GetResultResultDataSetOutput) ByteContent() pulumi.StringOutput {
	return o.ApplyT(func(v GetResultResultDataSet) string { return v.ByteContent }).(pulumi.StringOutput)
}

// Name of the data.
func (o GetResultResultDataSetOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetResultResultDataSet) string { return v.Name }).(pulumi.StringOutput)
}

// Data content in string format. Example: HAR.
func (o GetResultResultDataSetOutput) StringContent() pulumi.StringOutput {
	return o.ApplyT(func(v GetResultResultDataSet) string { return v.StringContent }).(pulumi.StringOutput)
}

// The time when the data was generated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-13T22:47:12.613Z`
func (o GetResultResultDataSetOutput) Timestamp() pulumi.StringOutput {
	return o.ApplyT(func(v GetResultResultDataSet) string { return v.Timestamp }).(pulumi.StringOutput)
}

type GetResultResultDataSetArrayOutput struct{ *pulumi.OutputState }

func (GetResultResultDataSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResultResultDataSet)(nil)).Elem()
}

func (o GetResultResultDataSetArrayOutput) ToGetResultResultDataSetArrayOutput() GetResultResultDataSetArrayOutput {
	return o
}

func (o GetResultResultDataSetArrayOutput) ToGetResultResultDataSetArrayOutputWithContext(ctx context.Context) GetResultResultDataSetArrayOutput {
	return o
}

func (o GetResultResultDataSetArrayOutput) Index(i pulumi.IntInput) GetResultResultDataSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetResultResultDataSet {
		return vs[0].([]GetResultResultDataSet)[vs[1].(int)]
	}).(GetResultResultDataSetOutput)
}

type GetScriptMonitorStatusCountMap struct {
	// Number of disabled monitors using the script.
	Disabled int `pulumi:"disabled"`
	// Number of enabled monitors using the script.
	Enabled int `pulumi:"enabled"`
	// Number of invalid monitors using the script.
	Invalid int `pulumi:"invalid"`
	// Total number of monitors using the script.
	Total int `pulumi:"total"`
}

// GetScriptMonitorStatusCountMapInput is an input type that accepts GetScriptMonitorStatusCountMap and GetScriptMonitorStatusCountMapOutput values.
// You can construct a concrete instance of `GetScriptMonitorStatusCountMapInput` via:
//
//          GetScriptMonitorStatusCountMap{ "key": GetScriptMonitorStatusCountArgs{...} }
type GetScriptMonitorStatusCountMapInput interface {
	pulumi.Input

	ToGetScriptMonitorStatusCountMapOutput() GetScriptMonitorStatusCountMapOutput
	ToGetScriptMonitorStatusCountMapOutputWithContext(context.Context) GetScriptMonitorStatusCountMapOutput
}

type GetScriptMonitorStatusCountMapArgs struct {
	// Number of disabled monitors using the script.
	Disabled pulumi.IntInput `pulumi:"disabled"`
	// Number of enabled monitors using the script.
	Enabled pulumi.IntInput `pulumi:"enabled"`
	// Number of invalid monitors using the script.
	Invalid pulumi.IntInput `pulumi:"invalid"`
	// Total number of monitors using the script.
	Total pulumi.IntInput `pulumi:"total"`
}

func (GetScriptMonitorStatusCountMapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetScriptMonitorStatusCountMap)(nil)).Elem()
}

func (i GetScriptMonitorStatusCountMapArgs) ToGetScriptMonitorStatusCountMapOutput() GetScriptMonitorStatusCountMapOutput {
	return i.ToGetScriptMonitorStatusCountMapOutputWithContext(context.Background())
}

func (i GetScriptMonitorStatusCountMapArgs) ToGetScriptMonitorStatusCountMapOutputWithContext(ctx context.Context) GetScriptMonitorStatusCountMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetScriptMonitorStatusCountMapOutput)
}

type GetScriptMonitorStatusCountMapOutput struct{ *pulumi.OutputState }

func (GetScriptMonitorStatusCountMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetScriptMonitorStatusCountMap)(nil)).Elem()
}

func (o GetScriptMonitorStatusCountMapOutput) ToGetScriptMonitorStatusCountMapOutput() GetScriptMonitorStatusCountMapOutput {
	return o
}

func (o GetScriptMonitorStatusCountMapOutput) ToGetScriptMonitorStatusCountMapOutputWithContext(ctx context.Context) GetScriptMonitorStatusCountMapOutput {
	return o
}

// Number of disabled monitors using the script.
func (o GetScriptMonitorStatusCountMapOutput) Disabled() pulumi.IntOutput {
	return o.ApplyT(func(v GetScriptMonitorStatusCountMap) int { return v.Disabled }).(pulumi.IntOutput)
}

// Number of enabled monitors using the script.
func (o GetScriptMonitorStatusCountMapOutput) Enabled() pulumi.IntOutput {
	return o.ApplyT(func(v GetScriptMonitorStatusCountMap) int { return v.Enabled }).(pulumi.IntOutput)
}

// Number of invalid monitors using the script.
func (o GetScriptMonitorStatusCountMapOutput) Invalid() pulumi.IntOutput {
	return o.ApplyT(func(v GetScriptMonitorStatusCountMap) int { return v.Invalid }).(pulumi.IntOutput)
}

// Total number of monitors using the script.
func (o GetScriptMonitorStatusCountMapOutput) Total() pulumi.IntOutput {
	return o.ApplyT(func(v GetScriptMonitorStatusCountMap) int { return v.Total }).(pulumi.IntOutput)
}

type GetScriptParameter struct {
	// If parameter value is default or overwritten.
	IsOverwritten bool `pulumi:"isOverwritten"`
	// If the parameter value is secret and should be kept confidential, then set isSecret to true.
	IsSecret bool `pulumi:"isSecret"`
	// Name of the parameter.
	ParamName string `pulumi:"paramName"`
	// Value of the parameter.
	ParamValue string `pulumi:"paramValue"`
	// Details of the script parameters, paramName must be from the script content and these details can be used to overwrite the default parameter present in the script content.
	ScriptParameter GetScriptParameterScriptParameter `pulumi:"scriptParameter"`
}

// GetScriptParameterInput is an input type that accepts GetScriptParameterArgs and GetScriptParameterOutput values.
// You can construct a concrete instance of `GetScriptParameterInput` via:
//
//          GetScriptParameterArgs{...}
type GetScriptParameterInput interface {
	pulumi.Input

	ToGetScriptParameterOutput() GetScriptParameterOutput
	ToGetScriptParameterOutputWithContext(context.Context) GetScriptParameterOutput
}

type GetScriptParameterArgs struct {
	// If parameter value is default or overwritten.
	IsOverwritten pulumi.BoolInput `pulumi:"isOverwritten"`
	// If the parameter value is secret and should be kept confidential, then set isSecret to true.
	IsSecret pulumi.BoolInput `pulumi:"isSecret"`
	// Name of the parameter.
	ParamName pulumi.StringInput `pulumi:"paramName"`
	// Value of the parameter.
	ParamValue pulumi.StringInput `pulumi:"paramValue"`
	// Details of the script parameters, paramName must be from the script content and these details can be used to overwrite the default parameter present in the script content.
	ScriptParameter GetScriptParameterScriptParameterInput `pulumi:"scriptParameter"`
}

func (GetScriptParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetScriptParameter)(nil)).Elem()
}

func (i GetScriptParameterArgs) ToGetScriptParameterOutput() GetScriptParameterOutput {
	return i.ToGetScriptParameterOutputWithContext(context.Background())
}

func (i GetScriptParameterArgs) ToGetScriptParameterOutputWithContext(ctx context.Context) GetScriptParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetScriptParameterOutput)
}

// GetScriptParameterArrayInput is an input type that accepts GetScriptParameterArray and GetScriptParameterArrayOutput values.
// You can construct a concrete instance of `GetScriptParameterArrayInput` via:
//
//          GetScriptParameterArray{ GetScriptParameterArgs{...} }
type GetScriptParameterArrayInput interface {
	pulumi.Input

	ToGetScriptParameterArrayOutput() GetScriptParameterArrayOutput
	ToGetScriptParameterArrayOutputWithContext(context.Context) GetScriptParameterArrayOutput
}

type GetScriptParameterArray []GetScriptParameterInput

func (GetScriptParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetScriptParameter)(nil)).Elem()
}

func (i GetScriptParameterArray) ToGetScriptParameterArrayOutput() GetScriptParameterArrayOutput {
	return i.ToGetScriptParameterArrayOutputWithContext(context.Background())
}

func (i GetScriptParameterArray) ToGetScriptParameterArrayOutputWithContext(ctx context.Context) GetScriptParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetScriptParameterArrayOutput)
}

type GetScriptParameterOutput struct{ *pulumi.OutputState }

func (GetScriptParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetScriptParameter)(nil)).Elem()
}

func (o GetScriptParameterOutput) ToGetScriptParameterOutput() GetScriptParameterOutput {
	return o
}

func (o GetScriptParameterOutput) ToGetScriptParameterOutputWithContext(ctx context.Context) GetScriptParameterOutput {
	return o
}

// If parameter value is default or overwritten.
func (o GetScriptParameterOutput) IsOverwritten() pulumi.BoolOutput {
	return o.ApplyT(func(v GetScriptParameter) bool { return v.IsOverwritten }).(pulumi.BoolOutput)
}

// If the parameter value is secret and should be kept confidential, then set isSecret to true.
func (o GetScriptParameterOutput) GetIsSecret() pulumi.BoolOutput {
	return o.ApplyT(func(v GetScriptParameter) bool { return v.IsSecret }).(pulumi.BoolOutput)
}

// Name of the parameter.
func (o GetScriptParameterOutput) ParamName() pulumi.StringOutput {
	return o.ApplyT(func(v GetScriptParameter) string { return v.ParamName }).(pulumi.StringOutput)
}

// Value of the parameter.
func (o GetScriptParameterOutput) ParamValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetScriptParameter) string { return v.ParamValue }).(pulumi.StringOutput)
}

// Details of the script parameters, paramName must be from the script content and these details can be used to overwrite the default parameter present in the script content.
func (o GetScriptParameterOutput) ScriptParameter() GetScriptParameterScriptParameterOutput {
	return o.ApplyT(func(v GetScriptParameter) GetScriptParameterScriptParameter { return v.ScriptParameter }).(GetScriptParameterScriptParameterOutput)
}

type GetScriptParameterArrayOutput struct{ *pulumi.OutputState }

func (GetScriptParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetScriptParameter)(nil)).Elem()
}

func (o GetScriptParameterArrayOutput) ToGetScriptParameterArrayOutput() GetScriptParameterArrayOutput {
	return o
}

func (o GetScriptParameterArrayOutput) ToGetScriptParameterArrayOutputWithContext(ctx context.Context) GetScriptParameterArrayOutput {
	return o
}

func (o GetScriptParameterArrayOutput) Index(i pulumi.IntInput) GetScriptParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetScriptParameter {
		return vs[0].([]GetScriptParameter)[vs[1].(int)]
	}).(GetScriptParameterOutput)
}

type GetScriptParameterScriptParameter struct {
	// If the parameter value is secret and should be kept confidential, then set isSecret to true.
	IsSecret bool `pulumi:"isSecret"`
	// Name of the parameter.
	ParamName string `pulumi:"paramName"`
	// Value of the parameter.
	ParamValue string `pulumi:"paramValue"`
}

// GetScriptParameterScriptParameterInput is an input type that accepts GetScriptParameterScriptParameterArgs and GetScriptParameterScriptParameterOutput values.
// You can construct a concrete instance of `GetScriptParameterScriptParameterInput` via:
//
//          GetScriptParameterScriptParameterArgs{...}
type GetScriptParameterScriptParameterInput interface {
	pulumi.Input

	ToGetScriptParameterScriptParameterOutput() GetScriptParameterScriptParameterOutput
	ToGetScriptParameterScriptParameterOutputWithContext(context.Context) GetScriptParameterScriptParameterOutput
}

type GetScriptParameterScriptParameterArgs struct {
	// If the parameter value is secret and should be kept confidential, then set isSecret to true.
	IsSecret pulumi.BoolInput `pulumi:"isSecret"`
	// Name of the parameter.
	ParamName pulumi.StringInput `pulumi:"paramName"`
	// Value of the parameter.
	ParamValue pulumi.StringInput `pulumi:"paramValue"`
}

func (GetScriptParameterScriptParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetScriptParameterScriptParameter)(nil)).Elem()
}

func (i GetScriptParameterScriptParameterArgs) ToGetScriptParameterScriptParameterOutput() GetScriptParameterScriptParameterOutput {
	return i.ToGetScriptParameterScriptParameterOutputWithContext(context.Background())
}

func (i GetScriptParameterScriptParameterArgs) ToGetScriptParameterScriptParameterOutputWithContext(ctx context.Context) GetScriptParameterScriptParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetScriptParameterScriptParameterOutput)
}

type GetScriptParameterScriptParameterOutput struct{ *pulumi.OutputState }

func (GetScriptParameterScriptParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetScriptParameterScriptParameter)(nil)).Elem()
}

func (o GetScriptParameterScriptParameterOutput) ToGetScriptParameterScriptParameterOutput() GetScriptParameterScriptParameterOutput {
	return o
}

func (o GetScriptParameterScriptParameterOutput) ToGetScriptParameterScriptParameterOutputWithContext(ctx context.Context) GetScriptParameterScriptParameterOutput {
	return o
}

// If the parameter value is secret and should be kept confidential, then set isSecret to true.
func (o GetScriptParameterScriptParameterOutput) GetIsSecret() pulumi.BoolOutput {
	return o.ApplyT(func(v GetScriptParameterScriptParameter) bool { return v.IsSecret }).(pulumi.BoolOutput)
}

// Name of the parameter.
func (o GetScriptParameterScriptParameterOutput) ParamName() pulumi.StringOutput {
	return o.ApplyT(func(v GetScriptParameterScriptParameter) string { return v.ParamName }).(pulumi.StringOutput)
}

// Value of the parameter.
func (o GetScriptParameterScriptParameterOutput) ParamValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetScriptParameterScriptParameter) string { return v.ParamValue }).(pulumi.StringOutput)
}

type GetScriptsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetScriptsFilterInput is an input type that accepts GetScriptsFilterArgs and GetScriptsFilterOutput values.
// You can construct a concrete instance of `GetScriptsFilterInput` via:
//
//          GetScriptsFilterArgs{...}
type GetScriptsFilterInput interface {
	pulumi.Input

	ToGetScriptsFilterOutput() GetScriptsFilterOutput
	ToGetScriptsFilterOutputWithContext(context.Context) GetScriptsFilterOutput
}

type GetScriptsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetScriptsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetScriptsFilter)(nil)).Elem()
}

func (i GetScriptsFilterArgs) ToGetScriptsFilterOutput() GetScriptsFilterOutput {
	return i.ToGetScriptsFilterOutputWithContext(context.Background())
}

func (i GetScriptsFilterArgs) ToGetScriptsFilterOutputWithContext(ctx context.Context) GetScriptsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetScriptsFilterOutput)
}

// GetScriptsFilterArrayInput is an input type that accepts GetScriptsFilterArray and GetScriptsFilterArrayOutput values.
// You can construct a concrete instance of `GetScriptsFilterArrayInput` via:
//
//          GetScriptsFilterArray{ GetScriptsFilterArgs{...} }
type GetScriptsFilterArrayInput interface {
	pulumi.Input

	ToGetScriptsFilterArrayOutput() GetScriptsFilterArrayOutput
	ToGetScriptsFilterArrayOutputWithContext(context.Context) GetScriptsFilterArrayOutput
}

type GetScriptsFilterArray []GetScriptsFilterInput

func (GetScriptsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetScriptsFilter)(nil)).Elem()
}

func (i GetScriptsFilterArray) ToGetScriptsFilterArrayOutput() GetScriptsFilterArrayOutput {
	return i.ToGetScriptsFilterArrayOutputWithContext(context.Background())
}

func (i GetScriptsFilterArray) ToGetScriptsFilterArrayOutputWithContext(ctx context.Context) GetScriptsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetScriptsFilterArrayOutput)
}

type GetScriptsFilterOutput struct{ *pulumi.OutputState }

func (GetScriptsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetScriptsFilter)(nil)).Elem()
}

func (o GetScriptsFilterOutput) ToGetScriptsFilterOutput() GetScriptsFilterOutput {
	return o
}

func (o GetScriptsFilterOutput) ToGetScriptsFilterOutputWithContext(ctx context.Context) GetScriptsFilterOutput {
	return o
}

func (o GetScriptsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetScriptsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetScriptsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetScriptsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetScriptsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetScriptsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetScriptsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetScriptsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetScriptsFilter)(nil)).Elem()
}

func (o GetScriptsFilterArrayOutput) ToGetScriptsFilterArrayOutput() GetScriptsFilterArrayOutput {
	return o
}

func (o GetScriptsFilterArrayOutput) ToGetScriptsFilterArrayOutputWithContext(ctx context.Context) GetScriptsFilterArrayOutput {
	return o
}

func (o GetScriptsFilterArrayOutput) Index(i pulumi.IntInput) GetScriptsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetScriptsFilter {
		return vs[0].([]GetScriptsFilter)[vs[1].(int)]
	}).(GetScriptsFilterOutput)
}

type GetScriptsScriptCollection struct {
	Items []GetScriptsScriptCollectionItem `pulumi:"items"`
}

// GetScriptsScriptCollectionInput is an input type that accepts GetScriptsScriptCollectionArgs and GetScriptsScriptCollectionOutput values.
// You can construct a concrete instance of `GetScriptsScriptCollectionInput` via:
//
//          GetScriptsScriptCollectionArgs{...}
type GetScriptsScriptCollectionInput interface {
	pulumi.Input

	ToGetScriptsScriptCollectionOutput() GetScriptsScriptCollectionOutput
	ToGetScriptsScriptCollectionOutputWithContext(context.Context) GetScriptsScriptCollectionOutput
}

type GetScriptsScriptCollectionArgs struct {
	Items GetScriptsScriptCollectionItemArrayInput `pulumi:"items"`
}

func (GetScriptsScriptCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetScriptsScriptCollection)(nil)).Elem()
}

func (i GetScriptsScriptCollectionArgs) ToGetScriptsScriptCollectionOutput() GetScriptsScriptCollectionOutput {
	return i.ToGetScriptsScriptCollectionOutputWithContext(context.Background())
}

func (i GetScriptsScriptCollectionArgs) ToGetScriptsScriptCollectionOutputWithContext(ctx context.Context) GetScriptsScriptCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetScriptsScriptCollectionOutput)
}

// GetScriptsScriptCollectionArrayInput is an input type that accepts GetScriptsScriptCollectionArray and GetScriptsScriptCollectionArrayOutput values.
// You can construct a concrete instance of `GetScriptsScriptCollectionArrayInput` via:
//
//          GetScriptsScriptCollectionArray{ GetScriptsScriptCollectionArgs{...} }
type GetScriptsScriptCollectionArrayInput interface {
	pulumi.Input

	ToGetScriptsScriptCollectionArrayOutput() GetScriptsScriptCollectionArrayOutput
	ToGetScriptsScriptCollectionArrayOutputWithContext(context.Context) GetScriptsScriptCollectionArrayOutput
}

type GetScriptsScriptCollectionArray []GetScriptsScriptCollectionInput

func (GetScriptsScriptCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetScriptsScriptCollection)(nil)).Elem()
}

func (i GetScriptsScriptCollectionArray) ToGetScriptsScriptCollectionArrayOutput() GetScriptsScriptCollectionArrayOutput {
	return i.ToGetScriptsScriptCollectionArrayOutputWithContext(context.Background())
}

func (i GetScriptsScriptCollectionArray) ToGetScriptsScriptCollectionArrayOutputWithContext(ctx context.Context) GetScriptsScriptCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetScriptsScriptCollectionArrayOutput)
}

type GetScriptsScriptCollectionOutput struct{ *pulumi.OutputState }

func (GetScriptsScriptCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetScriptsScriptCollection)(nil)).Elem()
}

func (o GetScriptsScriptCollectionOutput) ToGetScriptsScriptCollectionOutput() GetScriptsScriptCollectionOutput {
	return o
}

func (o GetScriptsScriptCollectionOutput) ToGetScriptsScriptCollectionOutputWithContext(ctx context.Context) GetScriptsScriptCollectionOutput {
	return o
}

func (o GetScriptsScriptCollectionOutput) Items() GetScriptsScriptCollectionItemArrayOutput {
	return o.ApplyT(func(v GetScriptsScriptCollection) []GetScriptsScriptCollectionItem { return v.Items }).(GetScriptsScriptCollectionItemArrayOutput)
}

type GetScriptsScriptCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetScriptsScriptCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetScriptsScriptCollection)(nil)).Elem()
}

func (o GetScriptsScriptCollectionArrayOutput) ToGetScriptsScriptCollectionArrayOutput() GetScriptsScriptCollectionArrayOutput {
	return o
}

func (o GetScriptsScriptCollectionArrayOutput) ToGetScriptsScriptCollectionArrayOutputWithContext(ctx context.Context) GetScriptsScriptCollectionArrayOutput {
	return o
}

func (o GetScriptsScriptCollectionArrayOutput) Index(i pulumi.IntInput) GetScriptsScriptCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetScriptsScriptCollection {
		return vs[0].([]GetScriptsScriptCollection)[vs[1].(int)]
	}).(GetScriptsScriptCollectionOutput)
}

type GetScriptsScriptCollectionItem struct {
	// The APM domain ID the request is intended for.
	ApmDomainId string `pulumi:"apmDomainId"`
	// The content of the script. It may contain custom-defined tags that can be used for setting dynamic parameters. The format to set dynamic parameters is: `<ORAP><ON>param name</ON><OV>param value</OV><OS>isParamValueSecret(true/false)</OS></ORAP>`. Param value and isParamValueSecret are optional, the default value for isParamValueSecret is false. Examples: With mandatory param name : `<ORAP><ON>param name</ON></ORAP>` With parameter name and value : `<ORAP><ON>param name</ON><OV>param value</OV></ORAP>` Note that the content is valid if it matches the given content type. For example, if the content type is SIDE, then the content should be in Side script format. If the content type is JS, then the content should be in JavaScript format.
	Content string `pulumi:"content"`
	// File name of the uploaded script content.
	ContentFileName string `pulumi:"contentFileName"`
	// Size of the script content.
	ContentSizeInBytes int `pulumi:"contentSizeInBytes"`
	// A filter to return only resources that match the content type given.
	ContentType string `pulumi:"contentType"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// A filter to return only resources that match the entire display name given.
	DisplayName string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the script. scriptId is mandatory for creation of SCRIPTED_BROWSER and SCRIPTED_REST monitor types. For other monitor types, it should be set to null.
	Id string `pulumi:"id"`
	// Details of the monitor count per state. Example: `{ "total" : 5, "enabled" : 3 , "disabled" : 2, "invalid" : 0 }`
	MonitorStatusCountMap GetScriptsScriptCollectionItemMonitorStatusCountMap `pulumi:"monitorStatusCountMap"`
	// List of script parameters. Example: `[{"scriptParameter": {"paramName": "userid", "paramValue":"testuser", "isSecret": false}, "isOverwritten": false}]`
	Parameters []GetScriptsScriptCollectionItemParameter `pulumi:"parameters"`
	// The time the resource was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-12T22:47:12.613Z`
	TimeCreated string `pulumi:"timeCreated"`
	// The time the resource was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-13T22:47:12.613Z`
	TimeUpdated string `pulumi:"timeUpdated"`
	// The time when the script was uploaded.
	TimeUploaded string `pulumi:"timeUploaded"`
}

// GetScriptsScriptCollectionItemInput is an input type that accepts GetScriptsScriptCollectionItemArgs and GetScriptsScriptCollectionItemOutput values.
// You can construct a concrete instance of `GetScriptsScriptCollectionItemInput` via:
//
//          GetScriptsScriptCollectionItemArgs{...}
type GetScriptsScriptCollectionItemInput interface {
	pulumi.Input

	ToGetScriptsScriptCollectionItemOutput() GetScriptsScriptCollectionItemOutput
	ToGetScriptsScriptCollectionItemOutputWithContext(context.Context) GetScriptsScriptCollectionItemOutput
}

type GetScriptsScriptCollectionItemArgs struct {
	// The APM domain ID the request is intended for.
	ApmDomainId pulumi.StringInput `pulumi:"apmDomainId"`
	// The content of the script. It may contain custom-defined tags that can be used for setting dynamic parameters. The format to set dynamic parameters is: `<ORAP><ON>param name</ON><OV>param value</OV><OS>isParamValueSecret(true/false)</OS></ORAP>`. Param value and isParamValueSecret are optional, the default value for isParamValueSecret is false. Examples: With mandatory param name : `<ORAP><ON>param name</ON></ORAP>` With parameter name and value : `<ORAP><ON>param name</ON><OV>param value</OV></ORAP>` Note that the content is valid if it matches the given content type. For example, if the content type is SIDE, then the content should be in Side script format. If the content type is JS, then the content should be in JavaScript format.
	Content pulumi.StringInput `pulumi:"content"`
	// File name of the uploaded script content.
	ContentFileName pulumi.StringInput `pulumi:"contentFileName"`
	// Size of the script content.
	ContentSizeInBytes pulumi.IntInput `pulumi:"contentSizeInBytes"`
	// A filter to return only resources that match the content type given.
	ContentType pulumi.StringInput `pulumi:"contentType"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the script. scriptId is mandatory for creation of SCRIPTED_BROWSER and SCRIPTED_REST monitor types. For other monitor types, it should be set to null.
	Id pulumi.StringInput `pulumi:"id"`
	// Details of the monitor count per state. Example: `{ "total" : 5, "enabled" : 3 , "disabled" : 2, "invalid" : 0 }`
	MonitorStatusCountMap GetScriptsScriptCollectionItemMonitorStatusCountMapInput `pulumi:"monitorStatusCountMap"`
	// List of script parameters. Example: `[{"scriptParameter": {"paramName": "userid", "paramValue":"testuser", "isSecret": false}, "isOverwritten": false}]`
	Parameters GetScriptsScriptCollectionItemParameterArrayInput `pulumi:"parameters"`
	// The time the resource was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-12T22:47:12.613Z`
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The time the resource was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-13T22:47:12.613Z`
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
	// The time when the script was uploaded.
	TimeUploaded pulumi.StringInput `pulumi:"timeUploaded"`
}

func (GetScriptsScriptCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetScriptsScriptCollectionItem)(nil)).Elem()
}

func (i GetScriptsScriptCollectionItemArgs) ToGetScriptsScriptCollectionItemOutput() GetScriptsScriptCollectionItemOutput {
	return i.ToGetScriptsScriptCollectionItemOutputWithContext(context.Background())
}

func (i GetScriptsScriptCollectionItemArgs) ToGetScriptsScriptCollectionItemOutputWithContext(ctx context.Context) GetScriptsScriptCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetScriptsScriptCollectionItemOutput)
}

// GetScriptsScriptCollectionItemArrayInput is an input type that accepts GetScriptsScriptCollectionItemArray and GetScriptsScriptCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetScriptsScriptCollectionItemArrayInput` via:
//
//          GetScriptsScriptCollectionItemArray{ GetScriptsScriptCollectionItemArgs{...} }
type GetScriptsScriptCollectionItemArrayInput interface {
	pulumi.Input

	ToGetScriptsScriptCollectionItemArrayOutput() GetScriptsScriptCollectionItemArrayOutput
	ToGetScriptsScriptCollectionItemArrayOutputWithContext(context.Context) GetScriptsScriptCollectionItemArrayOutput
}

type GetScriptsScriptCollectionItemArray []GetScriptsScriptCollectionItemInput

func (GetScriptsScriptCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetScriptsScriptCollectionItem)(nil)).Elem()
}

func (i GetScriptsScriptCollectionItemArray) ToGetScriptsScriptCollectionItemArrayOutput() GetScriptsScriptCollectionItemArrayOutput {
	return i.ToGetScriptsScriptCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetScriptsScriptCollectionItemArray) ToGetScriptsScriptCollectionItemArrayOutputWithContext(ctx context.Context) GetScriptsScriptCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetScriptsScriptCollectionItemArrayOutput)
}

type GetScriptsScriptCollectionItemOutput struct{ *pulumi.OutputState }

func (GetScriptsScriptCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetScriptsScriptCollectionItem)(nil)).Elem()
}

func (o GetScriptsScriptCollectionItemOutput) ToGetScriptsScriptCollectionItemOutput() GetScriptsScriptCollectionItemOutput {
	return o
}

func (o GetScriptsScriptCollectionItemOutput) ToGetScriptsScriptCollectionItemOutputWithContext(ctx context.Context) GetScriptsScriptCollectionItemOutput {
	return o
}

// The APM domain ID the request is intended for.
func (o GetScriptsScriptCollectionItemOutput) ApmDomainId() pulumi.StringOutput {
	return o.ApplyT(func(v GetScriptsScriptCollectionItem) string { return v.ApmDomainId }).(pulumi.StringOutput)
}

// The content of the script. It may contain custom-defined tags that can be used for setting dynamic parameters. The format to set dynamic parameters is: `<ORAP><ON>param name</ON><OV>param value</OV><OS>isParamValueSecret(true/false)</OS></ORAP>`. Param value and isParamValueSecret are optional, the default value for isParamValueSecret is false. Examples: With mandatory param name : `<ORAP><ON>param name</ON></ORAP>` With parameter name and value : `<ORAP><ON>param name</ON><OV>param value</OV></ORAP>` Note that the content is valid if it matches the given content type. For example, if the content type is SIDE, then the content should be in Side script format. If the content type is JS, then the content should be in JavaScript format.
func (o GetScriptsScriptCollectionItemOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v GetScriptsScriptCollectionItem) string { return v.Content }).(pulumi.StringOutput)
}

// File name of the uploaded script content.
func (o GetScriptsScriptCollectionItemOutput) ContentFileName() pulumi.StringOutput {
	return o.ApplyT(func(v GetScriptsScriptCollectionItem) string { return v.ContentFileName }).(pulumi.StringOutput)
}

// Size of the script content.
func (o GetScriptsScriptCollectionItemOutput) ContentSizeInBytes() pulumi.IntOutput {
	return o.ApplyT(func(v GetScriptsScriptCollectionItem) int { return v.ContentSizeInBytes }).(pulumi.IntOutput)
}

// A filter to return only resources that match the content type given.
func (o GetScriptsScriptCollectionItemOutput) ContentType() pulumi.StringOutput {
	return o.ApplyT(func(v GetScriptsScriptCollectionItem) string { return v.ContentType }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetScriptsScriptCollectionItemOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetScriptsScriptCollectionItem) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// A filter to return only resources that match the entire display name given.
func (o GetScriptsScriptCollectionItemOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetScriptsScriptCollectionItem) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetScriptsScriptCollectionItemOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetScriptsScriptCollectionItem) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the script. scriptId is mandatory for creation of SCRIPTED_BROWSER and SCRIPTED_REST monitor types. For other monitor types, it should be set to null.
func (o GetScriptsScriptCollectionItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetScriptsScriptCollectionItem) string { return v.Id }).(pulumi.StringOutput)
}

// Details of the monitor count per state. Example: `{ "total" : 5, "enabled" : 3 , "disabled" : 2, "invalid" : 0 }`
func (o GetScriptsScriptCollectionItemOutput) MonitorStatusCountMap() GetScriptsScriptCollectionItemMonitorStatusCountMapOutput {
	return o.ApplyT(func(v GetScriptsScriptCollectionItem) GetScriptsScriptCollectionItemMonitorStatusCountMap {
		return v.MonitorStatusCountMap
	}).(GetScriptsScriptCollectionItemMonitorStatusCountMapOutput)
}

// List of script parameters. Example: `[{"scriptParameter": {"paramName": "userid", "paramValue":"testuser", "isSecret": false}, "isOverwritten": false}]`
func (o GetScriptsScriptCollectionItemOutput) Parameters() GetScriptsScriptCollectionItemParameterArrayOutput {
	return o.ApplyT(func(v GetScriptsScriptCollectionItem) []GetScriptsScriptCollectionItemParameter { return v.Parameters }).(GetScriptsScriptCollectionItemParameterArrayOutput)
}

// The time the resource was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-12T22:47:12.613Z`
func (o GetScriptsScriptCollectionItemOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetScriptsScriptCollectionItem) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the resource was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-13T22:47:12.613Z`
func (o GetScriptsScriptCollectionItemOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetScriptsScriptCollectionItem) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

// The time when the script was uploaded.
func (o GetScriptsScriptCollectionItemOutput) TimeUploaded() pulumi.StringOutput {
	return o.ApplyT(func(v GetScriptsScriptCollectionItem) string { return v.TimeUploaded }).(pulumi.StringOutput)
}

type GetScriptsScriptCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetScriptsScriptCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetScriptsScriptCollectionItem)(nil)).Elem()
}

func (o GetScriptsScriptCollectionItemArrayOutput) ToGetScriptsScriptCollectionItemArrayOutput() GetScriptsScriptCollectionItemArrayOutput {
	return o
}

func (o GetScriptsScriptCollectionItemArrayOutput) ToGetScriptsScriptCollectionItemArrayOutputWithContext(ctx context.Context) GetScriptsScriptCollectionItemArrayOutput {
	return o
}

func (o GetScriptsScriptCollectionItemArrayOutput) Index(i pulumi.IntInput) GetScriptsScriptCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetScriptsScriptCollectionItem {
		return vs[0].([]GetScriptsScriptCollectionItem)[vs[1].(int)]
	}).(GetScriptsScriptCollectionItemOutput)
}

type GetScriptsScriptCollectionItemMonitorStatusCountMap struct {
	// Number of disabled monitors using the script.
	Disabled int `pulumi:"disabled"`
	// Number of enabled monitors using the script.
	Enabled int `pulumi:"enabled"`
	// Number of invalid monitors using the script.
	Invalid int `pulumi:"invalid"`
	// Total number of monitors using the script.
	Total int `pulumi:"total"`
}

// GetScriptsScriptCollectionItemMonitorStatusCountMapInput is an input type that accepts GetScriptsScriptCollectionItemMonitorStatusCountMap and GetScriptsScriptCollectionItemMonitorStatusCountMapOutput values.
// You can construct a concrete instance of `GetScriptsScriptCollectionItemMonitorStatusCountMapInput` via:
//
//          GetScriptsScriptCollectionItemMonitorStatusCountMap{ "key": GetScriptsScriptCollectionItemMonitorStatusCountArgs{...} }
type GetScriptsScriptCollectionItemMonitorStatusCountMapInput interface {
	pulumi.Input

	ToGetScriptsScriptCollectionItemMonitorStatusCountMapOutput() GetScriptsScriptCollectionItemMonitorStatusCountMapOutput
	ToGetScriptsScriptCollectionItemMonitorStatusCountMapOutputWithContext(context.Context) GetScriptsScriptCollectionItemMonitorStatusCountMapOutput
}

type GetScriptsScriptCollectionItemMonitorStatusCountMapArgs struct {
	// Number of disabled monitors using the script.
	Disabled pulumi.IntInput `pulumi:"disabled"`
	// Number of enabled monitors using the script.
	Enabled pulumi.IntInput `pulumi:"enabled"`
	// Number of invalid monitors using the script.
	Invalid pulumi.IntInput `pulumi:"invalid"`
	// Total number of monitors using the script.
	Total pulumi.IntInput `pulumi:"total"`
}

func (GetScriptsScriptCollectionItemMonitorStatusCountMapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetScriptsScriptCollectionItemMonitorStatusCountMap)(nil)).Elem()
}

func (i GetScriptsScriptCollectionItemMonitorStatusCountMapArgs) ToGetScriptsScriptCollectionItemMonitorStatusCountMapOutput() GetScriptsScriptCollectionItemMonitorStatusCountMapOutput {
	return i.ToGetScriptsScriptCollectionItemMonitorStatusCountMapOutputWithContext(context.Background())
}

func (i GetScriptsScriptCollectionItemMonitorStatusCountMapArgs) ToGetScriptsScriptCollectionItemMonitorStatusCountMapOutputWithContext(ctx context.Context) GetScriptsScriptCollectionItemMonitorStatusCountMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetScriptsScriptCollectionItemMonitorStatusCountMapOutput)
}

type GetScriptsScriptCollectionItemMonitorStatusCountMapOutput struct{ *pulumi.OutputState }

func (GetScriptsScriptCollectionItemMonitorStatusCountMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetScriptsScriptCollectionItemMonitorStatusCountMap)(nil)).Elem()
}

func (o GetScriptsScriptCollectionItemMonitorStatusCountMapOutput) ToGetScriptsScriptCollectionItemMonitorStatusCountMapOutput() GetScriptsScriptCollectionItemMonitorStatusCountMapOutput {
	return o
}

func (o GetScriptsScriptCollectionItemMonitorStatusCountMapOutput) ToGetScriptsScriptCollectionItemMonitorStatusCountMapOutputWithContext(ctx context.Context) GetScriptsScriptCollectionItemMonitorStatusCountMapOutput {
	return o
}

// Number of disabled monitors using the script.
func (o GetScriptsScriptCollectionItemMonitorStatusCountMapOutput) Disabled() pulumi.IntOutput {
	return o.ApplyT(func(v GetScriptsScriptCollectionItemMonitorStatusCountMap) int { return v.Disabled }).(pulumi.IntOutput)
}

// Number of enabled monitors using the script.
func (o GetScriptsScriptCollectionItemMonitorStatusCountMapOutput) Enabled() pulumi.IntOutput {
	return o.ApplyT(func(v GetScriptsScriptCollectionItemMonitorStatusCountMap) int { return v.Enabled }).(pulumi.IntOutput)
}

// Number of invalid monitors using the script.
func (o GetScriptsScriptCollectionItemMonitorStatusCountMapOutput) Invalid() pulumi.IntOutput {
	return o.ApplyT(func(v GetScriptsScriptCollectionItemMonitorStatusCountMap) int { return v.Invalid }).(pulumi.IntOutput)
}

// Total number of monitors using the script.
func (o GetScriptsScriptCollectionItemMonitorStatusCountMapOutput) Total() pulumi.IntOutput {
	return o.ApplyT(func(v GetScriptsScriptCollectionItemMonitorStatusCountMap) int { return v.Total }).(pulumi.IntOutput)
}

type GetScriptsScriptCollectionItemParameter struct {
	// If parameter value is default or overwritten.
	IsOverwritten bool `pulumi:"isOverwritten"`
	// If the parameter value is secret and should be kept confidential, then set isSecret to true.
	IsSecret bool `pulumi:"isSecret"`
	// Name of the parameter.
	ParamName string `pulumi:"paramName"`
	// Value of the parameter.
	ParamValue string `pulumi:"paramValue"`
	// Details of the script parameters, paramName must be from the script content and these details can be used to overwrite the default parameter present in the script content.
	ScriptParameter GetScriptsScriptCollectionItemParameterScriptParameter `pulumi:"scriptParameter"`
}

// GetScriptsScriptCollectionItemParameterInput is an input type that accepts GetScriptsScriptCollectionItemParameterArgs and GetScriptsScriptCollectionItemParameterOutput values.
// You can construct a concrete instance of `GetScriptsScriptCollectionItemParameterInput` via:
//
//          GetScriptsScriptCollectionItemParameterArgs{...}
type GetScriptsScriptCollectionItemParameterInput interface {
	pulumi.Input

	ToGetScriptsScriptCollectionItemParameterOutput() GetScriptsScriptCollectionItemParameterOutput
	ToGetScriptsScriptCollectionItemParameterOutputWithContext(context.Context) GetScriptsScriptCollectionItemParameterOutput
}

type GetScriptsScriptCollectionItemParameterArgs struct {
	// If parameter value is default or overwritten.
	IsOverwritten pulumi.BoolInput `pulumi:"isOverwritten"`
	// If the parameter value is secret and should be kept confidential, then set isSecret to true.
	IsSecret pulumi.BoolInput `pulumi:"isSecret"`
	// Name of the parameter.
	ParamName pulumi.StringInput `pulumi:"paramName"`
	// Value of the parameter.
	ParamValue pulumi.StringInput `pulumi:"paramValue"`
	// Details of the script parameters, paramName must be from the script content and these details can be used to overwrite the default parameter present in the script content.
	ScriptParameter GetScriptsScriptCollectionItemParameterScriptParameterInput `pulumi:"scriptParameter"`
}

func (GetScriptsScriptCollectionItemParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetScriptsScriptCollectionItemParameter)(nil)).Elem()
}

func (i GetScriptsScriptCollectionItemParameterArgs) ToGetScriptsScriptCollectionItemParameterOutput() GetScriptsScriptCollectionItemParameterOutput {
	return i.ToGetScriptsScriptCollectionItemParameterOutputWithContext(context.Background())
}

func (i GetScriptsScriptCollectionItemParameterArgs) ToGetScriptsScriptCollectionItemParameterOutputWithContext(ctx context.Context) GetScriptsScriptCollectionItemParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetScriptsScriptCollectionItemParameterOutput)
}

// GetScriptsScriptCollectionItemParameterArrayInput is an input type that accepts GetScriptsScriptCollectionItemParameterArray and GetScriptsScriptCollectionItemParameterArrayOutput values.
// You can construct a concrete instance of `GetScriptsScriptCollectionItemParameterArrayInput` via:
//
//          GetScriptsScriptCollectionItemParameterArray{ GetScriptsScriptCollectionItemParameterArgs{...} }
type GetScriptsScriptCollectionItemParameterArrayInput interface {
	pulumi.Input

	ToGetScriptsScriptCollectionItemParameterArrayOutput() GetScriptsScriptCollectionItemParameterArrayOutput
	ToGetScriptsScriptCollectionItemParameterArrayOutputWithContext(context.Context) GetScriptsScriptCollectionItemParameterArrayOutput
}

type GetScriptsScriptCollectionItemParameterArray []GetScriptsScriptCollectionItemParameterInput

func (GetScriptsScriptCollectionItemParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetScriptsScriptCollectionItemParameter)(nil)).Elem()
}

func (i GetScriptsScriptCollectionItemParameterArray) ToGetScriptsScriptCollectionItemParameterArrayOutput() GetScriptsScriptCollectionItemParameterArrayOutput {
	return i.ToGetScriptsScriptCollectionItemParameterArrayOutputWithContext(context.Background())
}

func (i GetScriptsScriptCollectionItemParameterArray) ToGetScriptsScriptCollectionItemParameterArrayOutputWithContext(ctx context.Context) GetScriptsScriptCollectionItemParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetScriptsScriptCollectionItemParameterArrayOutput)
}

type GetScriptsScriptCollectionItemParameterOutput struct{ *pulumi.OutputState }

func (GetScriptsScriptCollectionItemParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetScriptsScriptCollectionItemParameter)(nil)).Elem()
}

func (o GetScriptsScriptCollectionItemParameterOutput) ToGetScriptsScriptCollectionItemParameterOutput() GetScriptsScriptCollectionItemParameterOutput {
	return o
}

func (o GetScriptsScriptCollectionItemParameterOutput) ToGetScriptsScriptCollectionItemParameterOutputWithContext(ctx context.Context) GetScriptsScriptCollectionItemParameterOutput {
	return o
}

// If parameter value is default or overwritten.
func (o GetScriptsScriptCollectionItemParameterOutput) IsOverwritten() pulumi.BoolOutput {
	return o.ApplyT(func(v GetScriptsScriptCollectionItemParameter) bool { return v.IsOverwritten }).(pulumi.BoolOutput)
}

// If the parameter value is secret and should be kept confidential, then set isSecret to true.
func (o GetScriptsScriptCollectionItemParameterOutput) GetIsSecret() pulumi.BoolOutput {
	return o.ApplyT(func(v GetScriptsScriptCollectionItemParameter) bool { return v.IsSecret }).(pulumi.BoolOutput)
}

// Name of the parameter.
func (o GetScriptsScriptCollectionItemParameterOutput) ParamName() pulumi.StringOutput {
	return o.ApplyT(func(v GetScriptsScriptCollectionItemParameter) string { return v.ParamName }).(pulumi.StringOutput)
}

// Value of the parameter.
func (o GetScriptsScriptCollectionItemParameterOutput) ParamValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetScriptsScriptCollectionItemParameter) string { return v.ParamValue }).(pulumi.StringOutput)
}

// Details of the script parameters, paramName must be from the script content and these details can be used to overwrite the default parameter present in the script content.
func (o GetScriptsScriptCollectionItemParameterOutput) ScriptParameter() GetScriptsScriptCollectionItemParameterScriptParameterOutput {
	return o.ApplyT(func(v GetScriptsScriptCollectionItemParameter) GetScriptsScriptCollectionItemParameterScriptParameter {
		return v.ScriptParameter
	}).(GetScriptsScriptCollectionItemParameterScriptParameterOutput)
}

type GetScriptsScriptCollectionItemParameterArrayOutput struct{ *pulumi.OutputState }

func (GetScriptsScriptCollectionItemParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetScriptsScriptCollectionItemParameter)(nil)).Elem()
}

func (o GetScriptsScriptCollectionItemParameterArrayOutput) ToGetScriptsScriptCollectionItemParameterArrayOutput() GetScriptsScriptCollectionItemParameterArrayOutput {
	return o
}

func (o GetScriptsScriptCollectionItemParameterArrayOutput) ToGetScriptsScriptCollectionItemParameterArrayOutputWithContext(ctx context.Context) GetScriptsScriptCollectionItemParameterArrayOutput {
	return o
}

func (o GetScriptsScriptCollectionItemParameterArrayOutput) Index(i pulumi.IntInput) GetScriptsScriptCollectionItemParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetScriptsScriptCollectionItemParameter {
		return vs[0].([]GetScriptsScriptCollectionItemParameter)[vs[1].(int)]
	}).(GetScriptsScriptCollectionItemParameterOutput)
}

type GetScriptsScriptCollectionItemParameterScriptParameter struct {
	// If the parameter value is secret and should be kept confidential, then set isSecret to true.
	IsSecret bool `pulumi:"isSecret"`
	// Name of the parameter.
	ParamName string `pulumi:"paramName"`
	// Value of the parameter.
	ParamValue string `pulumi:"paramValue"`
}

// GetScriptsScriptCollectionItemParameterScriptParameterInput is an input type that accepts GetScriptsScriptCollectionItemParameterScriptParameterArgs and GetScriptsScriptCollectionItemParameterScriptParameterOutput values.
// You can construct a concrete instance of `GetScriptsScriptCollectionItemParameterScriptParameterInput` via:
//
//          GetScriptsScriptCollectionItemParameterScriptParameterArgs{...}
type GetScriptsScriptCollectionItemParameterScriptParameterInput interface {
	pulumi.Input

	ToGetScriptsScriptCollectionItemParameterScriptParameterOutput() GetScriptsScriptCollectionItemParameterScriptParameterOutput
	ToGetScriptsScriptCollectionItemParameterScriptParameterOutputWithContext(context.Context) GetScriptsScriptCollectionItemParameterScriptParameterOutput
}

type GetScriptsScriptCollectionItemParameterScriptParameterArgs struct {
	// If the parameter value is secret and should be kept confidential, then set isSecret to true.
	IsSecret pulumi.BoolInput `pulumi:"isSecret"`
	// Name of the parameter.
	ParamName pulumi.StringInput `pulumi:"paramName"`
	// Value of the parameter.
	ParamValue pulumi.StringInput `pulumi:"paramValue"`
}

func (GetScriptsScriptCollectionItemParameterScriptParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetScriptsScriptCollectionItemParameterScriptParameter)(nil)).Elem()
}

func (i GetScriptsScriptCollectionItemParameterScriptParameterArgs) ToGetScriptsScriptCollectionItemParameterScriptParameterOutput() GetScriptsScriptCollectionItemParameterScriptParameterOutput {
	return i.ToGetScriptsScriptCollectionItemParameterScriptParameterOutputWithContext(context.Background())
}

func (i GetScriptsScriptCollectionItemParameterScriptParameterArgs) ToGetScriptsScriptCollectionItemParameterScriptParameterOutputWithContext(ctx context.Context) GetScriptsScriptCollectionItemParameterScriptParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetScriptsScriptCollectionItemParameterScriptParameterOutput)
}

type GetScriptsScriptCollectionItemParameterScriptParameterOutput struct{ *pulumi.OutputState }

func (GetScriptsScriptCollectionItemParameterScriptParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetScriptsScriptCollectionItemParameterScriptParameter)(nil)).Elem()
}

func (o GetScriptsScriptCollectionItemParameterScriptParameterOutput) ToGetScriptsScriptCollectionItemParameterScriptParameterOutput() GetScriptsScriptCollectionItemParameterScriptParameterOutput {
	return o
}

func (o GetScriptsScriptCollectionItemParameterScriptParameterOutput) ToGetScriptsScriptCollectionItemParameterScriptParameterOutputWithContext(ctx context.Context) GetScriptsScriptCollectionItemParameterScriptParameterOutput {
	return o
}

// If the parameter value is secret and should be kept confidential, then set isSecret to true.
func (o GetScriptsScriptCollectionItemParameterScriptParameterOutput) GetIsSecret() pulumi.BoolOutput {
	return o.ApplyT(func(v GetScriptsScriptCollectionItemParameterScriptParameter) bool { return v.IsSecret }).(pulumi.BoolOutput)
}

// Name of the parameter.
func (o GetScriptsScriptCollectionItemParameterScriptParameterOutput) ParamName() pulumi.StringOutput {
	return o.ApplyT(func(v GetScriptsScriptCollectionItemParameterScriptParameter) string { return v.ParamName }).(pulumi.StringOutput)
}

// Value of the parameter.
func (o GetScriptsScriptCollectionItemParameterScriptParameterOutput) ParamValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetScriptsScriptCollectionItemParameterScriptParameter) string { return v.ParamValue }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(MonitorConfigurationOutput{})
	pulumi.RegisterOutputType(MonitorConfigurationPtrOutput{})
	pulumi.RegisterOutputType(MonitorConfigurationReqAuthenticationDetailsOutput{})
	pulumi.RegisterOutputType(MonitorConfigurationReqAuthenticationDetailsPtrOutput{})
	pulumi.RegisterOutputType(MonitorConfigurationReqAuthenticationDetailsAuthHeaderOutput{})
	pulumi.RegisterOutputType(MonitorConfigurationReqAuthenticationDetailsAuthHeaderArrayOutput{})
	pulumi.RegisterOutputType(MonitorConfigurationRequestHeaderOutput{})
	pulumi.RegisterOutputType(MonitorConfigurationRequestHeaderArrayOutput{})
	pulumi.RegisterOutputType(MonitorConfigurationRequestQueryParamOutput{})
	pulumi.RegisterOutputType(MonitorConfigurationRequestQueryParamArrayOutput{})
	pulumi.RegisterOutputType(MonitorConfigurationVerifyTextOutput{})
	pulumi.RegisterOutputType(MonitorConfigurationVerifyTextArrayOutput{})
	pulumi.RegisterOutputType(MonitorScriptParameterOutput{})
	pulumi.RegisterOutputType(MonitorScriptParameterArrayOutput{})
	pulumi.RegisterOutputType(MonitorScriptParameterMonitorScriptParameterOutput{})
	pulumi.RegisterOutputType(MonitorScriptParameterMonitorScriptParameterPtrOutput{})
	pulumi.RegisterOutputType(ScriptMonitorStatusCountMapOutput{})
	pulumi.RegisterOutputType(ScriptMonitorStatusCountMapPtrOutput{})
	pulumi.RegisterOutputType(ScriptParameterOutput{})
	pulumi.RegisterOutputType(ScriptParameterArrayOutput{})
	pulumi.RegisterOutputType(ScriptParameterScriptParameterOutput{})
	pulumi.RegisterOutputType(ScriptParameterScriptParameterPtrOutput{})
	pulumi.RegisterOutputType(GetMonitorConfigurationOutput{})
	pulumi.RegisterOutputType(GetMonitorConfigurationReqAuthenticationDetailsOutput{})
	pulumi.RegisterOutputType(GetMonitorConfigurationReqAuthenticationDetailsAuthHeaderOutput{})
	pulumi.RegisterOutputType(GetMonitorConfigurationReqAuthenticationDetailsAuthHeaderArrayOutput{})
	pulumi.RegisterOutputType(GetMonitorConfigurationRequestHeaderOutput{})
	pulumi.RegisterOutputType(GetMonitorConfigurationRequestHeaderArrayOutput{})
	pulumi.RegisterOutputType(GetMonitorConfigurationRequestQueryParamOutput{})
	pulumi.RegisterOutputType(GetMonitorConfigurationRequestQueryParamArrayOutput{})
	pulumi.RegisterOutputType(GetMonitorConfigurationVerifyTextOutput{})
	pulumi.RegisterOutputType(GetMonitorConfigurationVerifyTextArrayOutput{})
	pulumi.RegisterOutputType(GetMonitorScriptParameterOutput{})
	pulumi.RegisterOutputType(GetMonitorScriptParameterArrayOutput{})
	pulumi.RegisterOutputType(GetMonitorScriptParameterMonitorScriptParameterOutput{})
	pulumi.RegisterOutputType(GetMonitorsFilterOutput{})
	pulumi.RegisterOutputType(GetMonitorsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetMonitorsMonitorCollectionOutput{})
	pulumi.RegisterOutputType(GetMonitorsMonitorCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetMonitorsMonitorCollectionItemOutput{})
	pulumi.RegisterOutputType(GetMonitorsMonitorCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetMonitorsMonitorCollectionItemConfigurationOutput{})
	pulumi.RegisterOutputType(GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsOutput{})
	pulumi.RegisterOutputType(GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsAuthHeaderOutput{})
	pulumi.RegisterOutputType(GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailsAuthHeaderArrayOutput{})
	pulumi.RegisterOutputType(GetMonitorsMonitorCollectionItemConfigurationRequestHeaderOutput{})
	pulumi.RegisterOutputType(GetMonitorsMonitorCollectionItemConfigurationRequestHeaderArrayOutput{})
	pulumi.RegisterOutputType(GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamOutput{})
	pulumi.RegisterOutputType(GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamArrayOutput{})
	pulumi.RegisterOutputType(GetMonitorsMonitorCollectionItemConfigurationVerifyTextOutput{})
	pulumi.RegisterOutputType(GetMonitorsMonitorCollectionItemConfigurationVerifyTextArrayOutput{})
	pulumi.RegisterOutputType(GetMonitorsMonitorCollectionItemScriptParameterOutput{})
	pulumi.RegisterOutputType(GetMonitorsMonitorCollectionItemScriptParameterArrayOutput{})
	pulumi.RegisterOutputType(GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterOutput{})
	pulumi.RegisterOutputType(GetPublicVantagePointItemOutput{})
	pulumi.RegisterOutputType(GetPublicVantagePointItemArrayOutput{})
	pulumi.RegisterOutputType(GetPublicVantagePointItemGeoOutput{})
	pulumi.RegisterOutputType(GetPublicVantagePointsFilterOutput{})
	pulumi.RegisterOutputType(GetPublicVantagePointsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetPublicVantagePointsPublicVantagePointCollectionOutput{})
	pulumi.RegisterOutputType(GetPublicVantagePointsPublicVantagePointCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetPublicVantagePointsPublicVantagePointCollectionItemOutput{})
	pulumi.RegisterOutputType(GetPublicVantagePointsPublicVantagePointCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetPublicVantagePointsPublicVantagePointCollectionItemGeoOutput{})
	pulumi.RegisterOutputType(GetResultResultDataSetOutput{})
	pulumi.RegisterOutputType(GetResultResultDataSetArrayOutput{})
	pulumi.RegisterOutputType(GetScriptMonitorStatusCountMapOutput{})
	pulumi.RegisterOutputType(GetScriptParameterOutput{})
	pulumi.RegisterOutputType(GetScriptParameterArrayOutput{})
	pulumi.RegisterOutputType(GetScriptParameterScriptParameterOutput{})
	pulumi.RegisterOutputType(GetScriptsFilterOutput{})
	pulumi.RegisterOutputType(GetScriptsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetScriptsScriptCollectionOutput{})
	pulumi.RegisterOutputType(GetScriptsScriptCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetScriptsScriptCollectionItemOutput{})
	pulumi.RegisterOutputType(GetScriptsScriptCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetScriptsScriptCollectionItemMonitorStatusCountMapOutput{})
	pulumi.RegisterOutputType(GetScriptsScriptCollectionItemParameterOutput{})
	pulumi.RegisterOutputType(GetScriptsScriptCollectionItemParameterArrayOutput{})
	pulumi.RegisterOutputType(GetScriptsScriptCollectionItemParameterScriptParameterOutput{})
}
