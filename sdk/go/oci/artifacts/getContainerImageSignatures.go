// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package artifacts

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Container Image Signatures in Oracle Cloud Infrastructure Artifacts service.
//
// List container image signatures in an image.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci/artifacts"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		opt0 := _var.Container_image_signature_compartment_id_in_subtree
// 		opt1 := _var.Container_image_signature_display_name
// 		opt2 := _var.Container_image_signature_image_digest
// 		opt3 := oci_core_image.Test_image.Id
// 		opt4 := oci_kms_key.Test_key.Id
// 		opt5 := oci_kms_key_version.Test_key_version.Id
// 		opt6 := oci_artifacts_repository.Test_repository.Id
// 		opt7 := oci_artifacts_repository.Test_repository.Name
// 		opt8 := _var.Container_image_signature_signing_algorithm
// 		_, err := artifacts.GetContainerImageSignatures(ctx, &artifacts.GetContainerImageSignaturesArgs{
// 			CompartmentId:          _var.Compartment_id,
// 			CompartmentIdInSubtree: &opt0,
// 			DisplayName:            &opt1,
// 			ImageDigest:            &opt2,
// 			ImageId:                &opt3,
// 			KmsKeyId:               &opt4,
// 			KmsKeyVersionId:        &opt5,
// 			RepositoryId:           &opt6,
// 			RepositoryName:         &opt7,
// 			SigningAlgorithm:       &opt8,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func GetContainerImageSignatures(ctx *pulumi.Context, args *GetContainerImageSignaturesArgs, opts ...pulumi.InvokeOption) (*GetContainerImageSignaturesResult, error) {
	var rv GetContainerImageSignaturesResult
	err := ctx.Invoke("oci:artifacts/getContainerImageSignatures:getContainerImageSignatures", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getContainerImageSignatures.
type GetContainerImageSignaturesArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are inspected depending on the the setting of `accessLevel`. Default is false. Can only be set to true when calling the API on the tenancy (root compartment).
	CompartmentIdInSubtree *bool `pulumi:"compartmentIdInSubtree"`
	// A filter to return only resources that match the given display name exactly.
	DisplayName *string                             `pulumi:"displayName"`
	Filters     []GetContainerImageSignaturesFilter `pulumi:"filters"`
	// The digest of the container image.  Example: `sha256:e7d38b3517548a1c71e41bffe9c8ae6d6d29546ce46bf62159837aad072c90aa`
	ImageDigest *string `pulumi:"imageDigest"`
	// A filter to return a container image summary only for the specified container image OCID.
	ImageId *string `pulumi:"imageId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the kmsKeyVersionId used to sign the container image.  Example: `ocid1.keyversion.oc1..exampleuniqueID`
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the kmsKeyVersionId used to sign the container image.  Example: `ocid1.keyversion.oc1..exampleuniqueID`
	KmsKeyVersionId *string `pulumi:"kmsKeyVersionId"`
	// A filter to return container images only for the specified container repository OCID.
	RepositoryId *string `pulumi:"repositoryId"`
	// A filter to return container images or container image signatures that match the repository name.  Example: `foo` or `foo*`
	RepositoryName *string `pulumi:"repositoryName"`
	// The algorithm to be used for signing. These are the only supported signing algorithms for container images.
	SigningAlgorithm *string `pulumi:"signingAlgorithm"`
}

// A collection of values returned by getContainerImageSignatures.
type GetContainerImageSignaturesResult struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which the container repository exists.
	CompartmentId          string `pulumi:"compartmentId"`
	CompartmentIdInSubtree *bool  `pulumi:"compartmentIdInSubtree"`
	// The list of container_image_signature_collection.
	ContainerImageSignatureCollections []GetContainerImageSignaturesContainerImageSignatureCollection `pulumi:"containerImageSignatureCollections"`
	// The last 10 characters of the kmsKeyId, the last 10 characters of the kmsKeyVersionId, the signingAlgorithm, and the last 10 characters of the signatureId.  Example: `wrmz22sixa::qdwyc2ptun::SHA_256_RSA_PKCS_PSS::2vwmobasva`
	DisplayName *string                             `pulumi:"displayName"`
	Filters     []GetContainerImageSignaturesFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id          string  `pulumi:"id"`
	ImageDigest *string `pulumi:"imageDigest"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the container image.  Example: `ocid1.containerimage.oc1..exampleuniqueID`
	ImageId *string `pulumi:"imageId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the kmsKeyId used to sign the container image.  Example: `ocid1.key.oc1..exampleuniqueID`
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the kmsKeyVersionId used to sign the container image.  Example: `ocid1.keyversion.oc1..exampleuniqueID`
	KmsKeyVersionId *string `pulumi:"kmsKeyVersionId"`
	RepositoryId    *string `pulumi:"repositoryId"`
	RepositoryName  *string `pulumi:"repositoryName"`
	// The algorithm to be used for signing. These are the only supported signing algorithms for container images.
	SigningAlgorithm *string `pulumi:"signingAlgorithm"`
}
