// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package audit

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type GetEventsAuditEvent struct {
	// The version of the CloudEvents specification. The structure of the envelope follows the  [CloudEvents](https://github.com/cloudevents/spec) industry standard format hosted by the [Cloud Native Computing Foundation ( CNCF)](https://www.cncf.io/).
	CloudEventsVersion string `pulumi:"cloudEventsVersion"`
	// The content type of the data contained in `data`.  Example: `application/json`
	ContentType string `pulumi:"contentType"`
	// The payload of the event. Information within `data` comes from the resource emitting the event.
	Data GetEventsAuditEventData `pulumi:"data"`
	// The GUID of the event.
	EventId string `pulumi:"eventId"`
	// The time the event occurred, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2019-09-18T00:10:59.252Z`
	EventTime string `pulumi:"eventTime"`
	// The type of event that happened.
	EventType string `pulumi:"eventType"`
	// The version of the event type. This version applies to the payload of the event, not the envelope. Use `cloudEventsVersion` to determine the version of the envelope.  Example: `2.0`
	EventTypeVersion string `pulumi:"eventTypeVersion"`
	// The source of the event.  Example: `ComputeApi`
	Source string `pulumi:"source"`
}

// GetEventsAuditEventInput is an input type that accepts GetEventsAuditEventArgs and GetEventsAuditEventOutput values.
// You can construct a concrete instance of `GetEventsAuditEventInput` via:
//
//          GetEventsAuditEventArgs{...}
type GetEventsAuditEventInput interface {
	pulumi.Input

	ToGetEventsAuditEventOutput() GetEventsAuditEventOutput
	ToGetEventsAuditEventOutputWithContext(context.Context) GetEventsAuditEventOutput
}

type GetEventsAuditEventArgs struct {
	// The version of the CloudEvents specification. The structure of the envelope follows the  [CloudEvents](https://github.com/cloudevents/spec) industry standard format hosted by the [Cloud Native Computing Foundation ( CNCF)](https://www.cncf.io/).
	CloudEventsVersion pulumi.StringInput `pulumi:"cloudEventsVersion"`
	// The content type of the data contained in `data`.  Example: `application/json`
	ContentType pulumi.StringInput `pulumi:"contentType"`
	// The payload of the event. Information within `data` comes from the resource emitting the event.
	Data GetEventsAuditEventDataInput `pulumi:"data"`
	// The GUID of the event.
	EventId pulumi.StringInput `pulumi:"eventId"`
	// The time the event occurred, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2019-09-18T00:10:59.252Z`
	EventTime pulumi.StringInput `pulumi:"eventTime"`
	// The type of event that happened.
	EventType pulumi.StringInput `pulumi:"eventType"`
	// The version of the event type. This version applies to the payload of the event, not the envelope. Use `cloudEventsVersion` to determine the version of the envelope.  Example: `2.0`
	EventTypeVersion pulumi.StringInput `pulumi:"eventTypeVersion"`
	// The source of the event.  Example: `ComputeApi`
	Source pulumi.StringInput `pulumi:"source"`
}

func (GetEventsAuditEventArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEventsAuditEvent)(nil)).Elem()
}

func (i GetEventsAuditEventArgs) ToGetEventsAuditEventOutput() GetEventsAuditEventOutput {
	return i.ToGetEventsAuditEventOutputWithContext(context.Background())
}

func (i GetEventsAuditEventArgs) ToGetEventsAuditEventOutputWithContext(ctx context.Context) GetEventsAuditEventOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEventsAuditEventOutput)
}

// GetEventsAuditEventArrayInput is an input type that accepts GetEventsAuditEventArray and GetEventsAuditEventArrayOutput values.
// You can construct a concrete instance of `GetEventsAuditEventArrayInput` via:
//
//          GetEventsAuditEventArray{ GetEventsAuditEventArgs{...} }
type GetEventsAuditEventArrayInput interface {
	pulumi.Input

	ToGetEventsAuditEventArrayOutput() GetEventsAuditEventArrayOutput
	ToGetEventsAuditEventArrayOutputWithContext(context.Context) GetEventsAuditEventArrayOutput
}

type GetEventsAuditEventArray []GetEventsAuditEventInput

func (GetEventsAuditEventArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEventsAuditEvent)(nil)).Elem()
}

func (i GetEventsAuditEventArray) ToGetEventsAuditEventArrayOutput() GetEventsAuditEventArrayOutput {
	return i.ToGetEventsAuditEventArrayOutputWithContext(context.Background())
}

func (i GetEventsAuditEventArray) ToGetEventsAuditEventArrayOutputWithContext(ctx context.Context) GetEventsAuditEventArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEventsAuditEventArrayOutput)
}

type GetEventsAuditEventOutput struct{ *pulumi.OutputState }

func (GetEventsAuditEventOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEventsAuditEvent)(nil)).Elem()
}

func (o GetEventsAuditEventOutput) ToGetEventsAuditEventOutput() GetEventsAuditEventOutput {
	return o
}

func (o GetEventsAuditEventOutput) ToGetEventsAuditEventOutputWithContext(ctx context.Context) GetEventsAuditEventOutput {
	return o
}

// The version of the CloudEvents specification. The structure of the envelope follows the  [CloudEvents](https://github.com/cloudevents/spec) industry standard format hosted by the [Cloud Native Computing Foundation ( CNCF)](https://www.cncf.io/).
func (o GetEventsAuditEventOutput) CloudEventsVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventsAuditEvent) string { return v.CloudEventsVersion }).(pulumi.StringOutput)
}

// The content type of the data contained in `data`.  Example: `application/json`
func (o GetEventsAuditEventOutput) ContentType() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventsAuditEvent) string { return v.ContentType }).(pulumi.StringOutput)
}

// The payload of the event. Information within `data` comes from the resource emitting the event.
func (o GetEventsAuditEventOutput) Data() GetEventsAuditEventDataOutput {
	return o.ApplyT(func(v GetEventsAuditEvent) GetEventsAuditEventData { return v.Data }).(GetEventsAuditEventDataOutput)
}

// The GUID of the event.
func (o GetEventsAuditEventOutput) EventId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventsAuditEvent) string { return v.EventId }).(pulumi.StringOutput)
}

// The time the event occurred, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2019-09-18T00:10:59.252Z`
func (o GetEventsAuditEventOutput) EventTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventsAuditEvent) string { return v.EventTime }).(pulumi.StringOutput)
}

// The type of event that happened.
func (o GetEventsAuditEventOutput) EventType() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventsAuditEvent) string { return v.EventType }).(pulumi.StringOutput)
}

// The version of the event type. This version applies to the payload of the event, not the envelope. Use `cloudEventsVersion` to determine the version of the envelope.  Example: `2.0`
func (o GetEventsAuditEventOutput) EventTypeVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventsAuditEvent) string { return v.EventTypeVersion }).(pulumi.StringOutput)
}

// The source of the event.  Example: `ComputeApi`
func (o GetEventsAuditEventOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventsAuditEvent) string { return v.Source }).(pulumi.StringOutput)
}

type GetEventsAuditEventArrayOutput struct{ *pulumi.OutputState }

func (GetEventsAuditEventArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEventsAuditEvent)(nil)).Elem()
}

func (o GetEventsAuditEventArrayOutput) ToGetEventsAuditEventArrayOutput() GetEventsAuditEventArrayOutput {
	return o
}

func (o GetEventsAuditEventArrayOutput) ToGetEventsAuditEventArrayOutputWithContext(ctx context.Context) GetEventsAuditEventArrayOutput {
	return o
}

func (o GetEventsAuditEventArrayOutput) Index(i pulumi.IntInput) GetEventsAuditEventOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEventsAuditEvent {
		return vs[0].([]GetEventsAuditEvent)[vs[1].(int)]
	}).(GetEventsAuditEventOutput)
}

type GetEventsAuditEventData struct {
	// A container object for attribues unique to the resource emitting the event.
	AdditionalDetails map[string]interface{} `pulumi:"additionalDetails"`
	// The availability domain where the resource resides.
	AvailabilityDomain string `pulumi:"availabilityDomain"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// The name of the compartment. This value is the friendly name associated with compartmentId. This value can change, but the service logs the value that appeared at the time of the audit event.  Example: `CompartmentA`
	CompartmentName string `pulumi:"compartmentName"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// This value links multiple audit events that are part of the same API operation. For example,  a long running API operations that emit an event at the start and the end of an operation would use the same value in this field for both events.
	EventGroupingId string `pulumi:"eventGroupingId"`
	// Name of the API operation that generated this event.  Example: `GetInstance`
	EventName string `pulumi:"eventName"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name,  type, or namespace. Exists for cross-compatibility only. For more information,  see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// A container object for identity attributes.
	Identity GetEventsAuditEventDataIdentity `pulumi:"identity"`
	// A container object for request attributes.
	Request GetEventsAuditEventDataRequest `pulumi:"request"`
	// An [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) or some other ID for the resource emitting the event.
	ResourceId string `pulumi:"resourceId"`
	// The name of the resource emitting the event.
	ResourceName string `pulumi:"resourceName"`
	// A container object for response attributes.
	Response GetEventsAuditEventDataResponse `pulumi:"response"`
	// A container object for state change attributes.
	StateChange GetEventsAuditEventDataStateChange `pulumi:"stateChange"`
}

// GetEventsAuditEventDataInput is an input type that accepts GetEventsAuditEventDataArgs and GetEventsAuditEventDataOutput values.
// You can construct a concrete instance of `GetEventsAuditEventDataInput` via:
//
//          GetEventsAuditEventDataArgs{...}
type GetEventsAuditEventDataInput interface {
	pulumi.Input

	ToGetEventsAuditEventDataOutput() GetEventsAuditEventDataOutput
	ToGetEventsAuditEventDataOutputWithContext(context.Context) GetEventsAuditEventDataOutput
}

type GetEventsAuditEventDataArgs struct {
	// A container object for attribues unique to the resource emitting the event.
	AdditionalDetails pulumi.MapInput `pulumi:"additionalDetails"`
	// The availability domain where the resource resides.
	AvailabilityDomain pulumi.StringInput `pulumi:"availabilityDomain"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// The name of the compartment. This value is the friendly name associated with compartmentId. This value can change, but the service logs the value that appeared at the time of the audit event.  Example: `CompartmentA`
	CompartmentName pulumi.StringInput `pulumi:"compartmentName"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// This value links multiple audit events that are part of the same API operation. For example,  a long running API operations that emit an event at the start and the end of an operation would use the same value in this field for both events.
	EventGroupingId pulumi.StringInput `pulumi:"eventGroupingId"`
	// Name of the API operation that generated this event.  Example: `GetInstance`
	EventName pulumi.StringInput `pulumi:"eventName"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name,  type, or namespace. Exists for cross-compatibility only. For more information,  see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// A container object for identity attributes.
	Identity GetEventsAuditEventDataIdentityInput `pulumi:"identity"`
	// A container object for request attributes.
	Request GetEventsAuditEventDataRequestInput `pulumi:"request"`
	// An [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) or some other ID for the resource emitting the event.
	ResourceId pulumi.StringInput `pulumi:"resourceId"`
	// The name of the resource emitting the event.
	ResourceName pulumi.StringInput `pulumi:"resourceName"`
	// A container object for response attributes.
	Response GetEventsAuditEventDataResponseInput `pulumi:"response"`
	// A container object for state change attributes.
	StateChange GetEventsAuditEventDataStateChangeInput `pulumi:"stateChange"`
}

func (GetEventsAuditEventDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEventsAuditEventData)(nil)).Elem()
}

func (i GetEventsAuditEventDataArgs) ToGetEventsAuditEventDataOutput() GetEventsAuditEventDataOutput {
	return i.ToGetEventsAuditEventDataOutputWithContext(context.Background())
}

func (i GetEventsAuditEventDataArgs) ToGetEventsAuditEventDataOutputWithContext(ctx context.Context) GetEventsAuditEventDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEventsAuditEventDataOutput)
}

type GetEventsAuditEventDataOutput struct{ *pulumi.OutputState }

func (GetEventsAuditEventDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEventsAuditEventData)(nil)).Elem()
}

func (o GetEventsAuditEventDataOutput) ToGetEventsAuditEventDataOutput() GetEventsAuditEventDataOutput {
	return o
}

func (o GetEventsAuditEventDataOutput) ToGetEventsAuditEventDataOutputWithContext(ctx context.Context) GetEventsAuditEventDataOutput {
	return o
}

// A container object for attribues unique to the resource emitting the event.
func (o GetEventsAuditEventDataOutput) AdditionalDetails() pulumi.MapOutput {
	return o.ApplyT(func(v GetEventsAuditEventData) map[string]interface{} { return v.AdditionalDetails }).(pulumi.MapOutput)
}

// The availability domain where the resource resides.
func (o GetEventsAuditEventDataOutput) AvailabilityDomain() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventsAuditEventData) string { return v.AvailabilityDomain }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
func (o GetEventsAuditEventDataOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventsAuditEventData) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The name of the compartment. This value is the friendly name associated with compartmentId. This value can change, but the service logs the value that appeared at the time of the audit event.  Example: `CompartmentA`
func (o GetEventsAuditEventDataOutput) CompartmentName() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventsAuditEventData) string { return v.CompartmentName }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
func (o GetEventsAuditEventDataOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetEventsAuditEventData) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// This value links multiple audit events that are part of the same API operation. For example,  a long running API operations that emit an event at the start and the end of an operation would use the same value in this field for both events.
func (o GetEventsAuditEventDataOutput) EventGroupingId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventsAuditEventData) string { return v.EventGroupingId }).(pulumi.StringOutput)
}

// Name of the API operation that generated this event.  Example: `GetInstance`
func (o GetEventsAuditEventDataOutput) EventName() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventsAuditEventData) string { return v.EventName }).(pulumi.StringOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name,  type, or namespace. Exists for cross-compatibility only. For more information,  see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
func (o GetEventsAuditEventDataOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetEventsAuditEventData) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// A container object for identity attributes.
func (o GetEventsAuditEventDataOutput) Identity() GetEventsAuditEventDataIdentityOutput {
	return o.ApplyT(func(v GetEventsAuditEventData) GetEventsAuditEventDataIdentity { return v.Identity }).(GetEventsAuditEventDataIdentityOutput)
}

// A container object for request attributes.
func (o GetEventsAuditEventDataOutput) Request() GetEventsAuditEventDataRequestOutput {
	return o.ApplyT(func(v GetEventsAuditEventData) GetEventsAuditEventDataRequest { return v.Request }).(GetEventsAuditEventDataRequestOutput)
}

// An [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) or some other ID for the resource emitting the event.
func (o GetEventsAuditEventDataOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventsAuditEventData) string { return v.ResourceId }).(pulumi.StringOutput)
}

// The name of the resource emitting the event.
func (o GetEventsAuditEventDataOutput) ResourceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventsAuditEventData) string { return v.ResourceName }).(pulumi.StringOutput)
}

// A container object for response attributes.
func (o GetEventsAuditEventDataOutput) Response() GetEventsAuditEventDataResponseOutput {
	return o.ApplyT(func(v GetEventsAuditEventData) GetEventsAuditEventDataResponse { return v.Response }).(GetEventsAuditEventDataResponseOutput)
}

// A container object for state change attributes.
func (o GetEventsAuditEventDataOutput) StateChange() GetEventsAuditEventDataStateChangeOutput {
	return o.ApplyT(func(v GetEventsAuditEventData) GetEventsAuditEventDataStateChange { return v.StateChange }).(GetEventsAuditEventDataStateChangeOutput)
}

type GetEventsAuditEventDataIdentity struct {
	// The type of authentication used.  Example: `natv`
	AuthType string `pulumi:"authType"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the caller. The caller that made a  request on behalf of the prinicpal.
	CallerId string `pulumi:"callerId"`
	// The name of the user or service. This value is the friendly name associated with `callerId`.
	CallerName string `pulumi:"callerName"`
	// This value identifies any Console session associated with this request.
	ConsoleSessionId string `pulumi:"consoleSessionId"`
	// The credential ID of the user. This value is extracted from the HTTP 'Authorization' request header. It consists of the tenantId, userId, and user fingerprint, all delimited by a slash (/).
	Credentials string `pulumi:"credentials"`
	// The IP address of the source of the request.  Example: `172.24.80.88`
	IpAddress string `pulumi:"ipAddress"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the principal.
	PrincipalId string `pulumi:"principalId"`
	// The name of the user or service. This value is the friendly name associated with `principalId`.  Example: `ExampleName`
	PrincipalName string `pulumi:"principalName"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the tenant.
	TenantId string `pulumi:"tenantId"`
	// The user agent of the client that made the request.  Example: `Jersey/2.23 (HttpUrlConnection 1.8.0_212)`
	UserAgent string `pulumi:"userAgent"`
}

// GetEventsAuditEventDataIdentityInput is an input type that accepts GetEventsAuditEventDataIdentityArgs and GetEventsAuditEventDataIdentityOutput values.
// You can construct a concrete instance of `GetEventsAuditEventDataIdentityInput` via:
//
//          GetEventsAuditEventDataIdentityArgs{...}
type GetEventsAuditEventDataIdentityInput interface {
	pulumi.Input

	ToGetEventsAuditEventDataIdentityOutput() GetEventsAuditEventDataIdentityOutput
	ToGetEventsAuditEventDataIdentityOutputWithContext(context.Context) GetEventsAuditEventDataIdentityOutput
}

type GetEventsAuditEventDataIdentityArgs struct {
	// The type of authentication used.  Example: `natv`
	AuthType pulumi.StringInput `pulumi:"authType"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the caller. The caller that made a  request on behalf of the prinicpal.
	CallerId pulumi.StringInput `pulumi:"callerId"`
	// The name of the user or service. This value is the friendly name associated with `callerId`.
	CallerName pulumi.StringInput `pulumi:"callerName"`
	// This value identifies any Console session associated with this request.
	ConsoleSessionId pulumi.StringInput `pulumi:"consoleSessionId"`
	// The credential ID of the user. This value is extracted from the HTTP 'Authorization' request header. It consists of the tenantId, userId, and user fingerprint, all delimited by a slash (/).
	Credentials pulumi.StringInput `pulumi:"credentials"`
	// The IP address of the source of the request.  Example: `172.24.80.88`
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the principal.
	PrincipalId pulumi.StringInput `pulumi:"principalId"`
	// The name of the user or service. This value is the friendly name associated with `principalId`.  Example: `ExampleName`
	PrincipalName pulumi.StringInput `pulumi:"principalName"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the tenant.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
	// The user agent of the client that made the request.  Example: `Jersey/2.23 (HttpUrlConnection 1.8.0_212)`
	UserAgent pulumi.StringInput `pulumi:"userAgent"`
}

func (GetEventsAuditEventDataIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEventsAuditEventDataIdentity)(nil)).Elem()
}

func (i GetEventsAuditEventDataIdentityArgs) ToGetEventsAuditEventDataIdentityOutput() GetEventsAuditEventDataIdentityOutput {
	return i.ToGetEventsAuditEventDataIdentityOutputWithContext(context.Background())
}

func (i GetEventsAuditEventDataIdentityArgs) ToGetEventsAuditEventDataIdentityOutputWithContext(ctx context.Context) GetEventsAuditEventDataIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEventsAuditEventDataIdentityOutput)
}

type GetEventsAuditEventDataIdentityOutput struct{ *pulumi.OutputState }

func (GetEventsAuditEventDataIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEventsAuditEventDataIdentity)(nil)).Elem()
}

func (o GetEventsAuditEventDataIdentityOutput) ToGetEventsAuditEventDataIdentityOutput() GetEventsAuditEventDataIdentityOutput {
	return o
}

func (o GetEventsAuditEventDataIdentityOutput) ToGetEventsAuditEventDataIdentityOutputWithContext(ctx context.Context) GetEventsAuditEventDataIdentityOutput {
	return o
}

// The type of authentication used.  Example: `natv`
func (o GetEventsAuditEventDataIdentityOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventsAuditEventDataIdentity) string { return v.AuthType }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the caller. The caller that made a  request on behalf of the prinicpal.
func (o GetEventsAuditEventDataIdentityOutput) CallerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventsAuditEventDataIdentity) string { return v.CallerId }).(pulumi.StringOutput)
}

// The name of the user or service. This value is the friendly name associated with `callerId`.
func (o GetEventsAuditEventDataIdentityOutput) CallerName() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventsAuditEventDataIdentity) string { return v.CallerName }).(pulumi.StringOutput)
}

// This value identifies any Console session associated with this request.
func (o GetEventsAuditEventDataIdentityOutput) ConsoleSessionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventsAuditEventDataIdentity) string { return v.ConsoleSessionId }).(pulumi.StringOutput)
}

// The credential ID of the user. This value is extracted from the HTTP 'Authorization' request header. It consists of the tenantId, userId, and user fingerprint, all delimited by a slash (/).
func (o GetEventsAuditEventDataIdentityOutput) Credentials() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventsAuditEventDataIdentity) string { return v.Credentials }).(pulumi.StringOutput)
}

// The IP address of the source of the request.  Example: `172.24.80.88`
func (o GetEventsAuditEventDataIdentityOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventsAuditEventDataIdentity) string { return v.IpAddress }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the principal.
func (o GetEventsAuditEventDataIdentityOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventsAuditEventDataIdentity) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The name of the user or service. This value is the friendly name associated with `principalId`.  Example: `ExampleName`
func (o GetEventsAuditEventDataIdentityOutput) PrincipalName() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventsAuditEventDataIdentity) string { return v.PrincipalName }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the tenant.
func (o GetEventsAuditEventDataIdentityOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventsAuditEventDataIdentity) string { return v.TenantId }).(pulumi.StringOutput)
}

// The user agent of the client that made the request.  Example: `Jersey/2.23 (HttpUrlConnection 1.8.0_212)`
func (o GetEventsAuditEventDataIdentityOutput) UserAgent() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventsAuditEventDataIdentity) string { return v.UserAgent }).(pulumi.StringOutput)
}

type GetEventsAuditEventDataRequest struct {
	// The HTTP method of the request.  Example: `GET`
	Action string `pulumi:"action"`
	// The headers of the response.
	Headers map[string]interface{} `pulumi:"headers"`
	// The opc-request-id of the request.
	Id string `pulumi:"id"`
	// The parameters supplied by the caller during this operation.
	Parameters map[string]interface{} `pulumi:"parameters"`
	// The full path of the API request.  Example: `/20160918/instances/ocid1.instance.oc1.phx.<unique_ID>`
	Path string `pulumi:"path"`
}

// GetEventsAuditEventDataRequestInput is an input type that accepts GetEventsAuditEventDataRequestArgs and GetEventsAuditEventDataRequestOutput values.
// You can construct a concrete instance of `GetEventsAuditEventDataRequestInput` via:
//
//          GetEventsAuditEventDataRequestArgs{...}
type GetEventsAuditEventDataRequestInput interface {
	pulumi.Input

	ToGetEventsAuditEventDataRequestOutput() GetEventsAuditEventDataRequestOutput
	ToGetEventsAuditEventDataRequestOutputWithContext(context.Context) GetEventsAuditEventDataRequestOutput
}

type GetEventsAuditEventDataRequestArgs struct {
	// The HTTP method of the request.  Example: `GET`
	Action pulumi.StringInput `pulumi:"action"`
	// The headers of the response.
	Headers pulumi.MapInput `pulumi:"headers"`
	// The opc-request-id of the request.
	Id pulumi.StringInput `pulumi:"id"`
	// The parameters supplied by the caller during this operation.
	Parameters pulumi.MapInput `pulumi:"parameters"`
	// The full path of the API request.  Example: `/20160918/instances/ocid1.instance.oc1.phx.<unique_ID>`
	Path pulumi.StringInput `pulumi:"path"`
}

func (GetEventsAuditEventDataRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEventsAuditEventDataRequest)(nil)).Elem()
}

func (i GetEventsAuditEventDataRequestArgs) ToGetEventsAuditEventDataRequestOutput() GetEventsAuditEventDataRequestOutput {
	return i.ToGetEventsAuditEventDataRequestOutputWithContext(context.Background())
}

func (i GetEventsAuditEventDataRequestArgs) ToGetEventsAuditEventDataRequestOutputWithContext(ctx context.Context) GetEventsAuditEventDataRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEventsAuditEventDataRequestOutput)
}

type GetEventsAuditEventDataRequestOutput struct{ *pulumi.OutputState }

func (GetEventsAuditEventDataRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEventsAuditEventDataRequest)(nil)).Elem()
}

func (o GetEventsAuditEventDataRequestOutput) ToGetEventsAuditEventDataRequestOutput() GetEventsAuditEventDataRequestOutput {
	return o
}

func (o GetEventsAuditEventDataRequestOutput) ToGetEventsAuditEventDataRequestOutputWithContext(ctx context.Context) GetEventsAuditEventDataRequestOutput {
	return o
}

// The HTTP method of the request.  Example: `GET`
func (o GetEventsAuditEventDataRequestOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventsAuditEventDataRequest) string { return v.Action }).(pulumi.StringOutput)
}

// The headers of the response.
func (o GetEventsAuditEventDataRequestOutput) Headers() pulumi.MapOutput {
	return o.ApplyT(func(v GetEventsAuditEventDataRequest) map[string]interface{} { return v.Headers }).(pulumi.MapOutput)
}

// The opc-request-id of the request.
func (o GetEventsAuditEventDataRequestOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventsAuditEventDataRequest) string { return v.Id }).(pulumi.StringOutput)
}

// The parameters supplied by the caller during this operation.
func (o GetEventsAuditEventDataRequestOutput) Parameters() pulumi.MapOutput {
	return o.ApplyT(func(v GetEventsAuditEventDataRequest) map[string]interface{} { return v.Parameters }).(pulumi.MapOutput)
}

// The full path of the API request.  Example: `/20160918/instances/ocid1.instance.oc1.phx.<unique_ID>`
func (o GetEventsAuditEventDataRequestOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventsAuditEventDataRequest) string { return v.Path }).(pulumi.StringOutput)
}

type GetEventsAuditEventDataResponse struct {
	// The headers of the response.
	Headers map[string]interface{} `pulumi:"headers"`
	// A friendly description of what happened during the operation. Use this for troubleshooting.
	Message string `pulumi:"message"`
	// This value is included for backward compatibility with the Audit version 1 schema, where  it contained metadata of interest from the response payload.
	Payload map[string]interface{} `pulumi:"payload"`
	// The time of the response to the audited request, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2019-09-18T00:10:59.278Z`
	ResponseTime string `pulumi:"responseTime"`
	// The status code of the response.  Example: `200`
	Status string `pulumi:"status"`
}

// GetEventsAuditEventDataResponseInput is an input type that accepts GetEventsAuditEventDataResponseArgs and GetEventsAuditEventDataResponseOutput values.
// You can construct a concrete instance of `GetEventsAuditEventDataResponseInput` via:
//
//          GetEventsAuditEventDataResponseArgs{...}
type GetEventsAuditEventDataResponseInput interface {
	pulumi.Input

	ToGetEventsAuditEventDataResponseOutput() GetEventsAuditEventDataResponseOutput
	ToGetEventsAuditEventDataResponseOutputWithContext(context.Context) GetEventsAuditEventDataResponseOutput
}

type GetEventsAuditEventDataResponseArgs struct {
	// The headers of the response.
	Headers pulumi.MapInput `pulumi:"headers"`
	// A friendly description of what happened during the operation. Use this for troubleshooting.
	Message pulumi.StringInput `pulumi:"message"`
	// This value is included for backward compatibility with the Audit version 1 schema, where  it contained metadata of interest from the response payload.
	Payload pulumi.MapInput `pulumi:"payload"`
	// The time of the response to the audited request, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2019-09-18T00:10:59.278Z`
	ResponseTime pulumi.StringInput `pulumi:"responseTime"`
	// The status code of the response.  Example: `200`
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetEventsAuditEventDataResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEventsAuditEventDataResponse)(nil)).Elem()
}

func (i GetEventsAuditEventDataResponseArgs) ToGetEventsAuditEventDataResponseOutput() GetEventsAuditEventDataResponseOutput {
	return i.ToGetEventsAuditEventDataResponseOutputWithContext(context.Background())
}

func (i GetEventsAuditEventDataResponseArgs) ToGetEventsAuditEventDataResponseOutputWithContext(ctx context.Context) GetEventsAuditEventDataResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEventsAuditEventDataResponseOutput)
}

type GetEventsAuditEventDataResponseOutput struct{ *pulumi.OutputState }

func (GetEventsAuditEventDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEventsAuditEventDataResponse)(nil)).Elem()
}

func (o GetEventsAuditEventDataResponseOutput) ToGetEventsAuditEventDataResponseOutput() GetEventsAuditEventDataResponseOutput {
	return o
}

func (o GetEventsAuditEventDataResponseOutput) ToGetEventsAuditEventDataResponseOutputWithContext(ctx context.Context) GetEventsAuditEventDataResponseOutput {
	return o
}

// The headers of the response.
func (o GetEventsAuditEventDataResponseOutput) Headers() pulumi.MapOutput {
	return o.ApplyT(func(v GetEventsAuditEventDataResponse) map[string]interface{} { return v.Headers }).(pulumi.MapOutput)
}

// A friendly description of what happened during the operation. Use this for troubleshooting.
func (o GetEventsAuditEventDataResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventsAuditEventDataResponse) string { return v.Message }).(pulumi.StringOutput)
}

// This value is included for backward compatibility with the Audit version 1 schema, where  it contained metadata of interest from the response payload.
func (o GetEventsAuditEventDataResponseOutput) Payload() pulumi.MapOutput {
	return o.ApplyT(func(v GetEventsAuditEventDataResponse) map[string]interface{} { return v.Payload }).(pulumi.MapOutput)
}

// The time of the response to the audited request, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2019-09-18T00:10:59.278Z`
func (o GetEventsAuditEventDataResponseOutput) ResponseTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventsAuditEventDataResponse) string { return v.ResponseTime }).(pulumi.StringOutput)
}

// The status code of the response.  Example: `200`
func (o GetEventsAuditEventDataResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventsAuditEventDataResponse) string { return v.Status }).(pulumi.StringOutput)
}

type GetEventsAuditEventDataStateChange struct {
	// Provides the current state of fields that may have changed during an operation. To determine how the current operation changed a resource, compare the information in this attribute to  `previous`.
	Current map[string]interface{} `pulumi:"current"`
	// Provides the previous state of fields that may have changed during an operation. To determine how the current operation changed a resource, compare the information in this attribute to  `current`.
	Previous map[string]interface{} `pulumi:"previous"`
}

// GetEventsAuditEventDataStateChangeInput is an input type that accepts GetEventsAuditEventDataStateChangeArgs and GetEventsAuditEventDataStateChangeOutput values.
// You can construct a concrete instance of `GetEventsAuditEventDataStateChangeInput` via:
//
//          GetEventsAuditEventDataStateChangeArgs{...}
type GetEventsAuditEventDataStateChangeInput interface {
	pulumi.Input

	ToGetEventsAuditEventDataStateChangeOutput() GetEventsAuditEventDataStateChangeOutput
	ToGetEventsAuditEventDataStateChangeOutputWithContext(context.Context) GetEventsAuditEventDataStateChangeOutput
}

type GetEventsAuditEventDataStateChangeArgs struct {
	// Provides the current state of fields that may have changed during an operation. To determine how the current operation changed a resource, compare the information in this attribute to  `previous`.
	Current pulumi.MapInput `pulumi:"current"`
	// Provides the previous state of fields that may have changed during an operation. To determine how the current operation changed a resource, compare the information in this attribute to  `current`.
	Previous pulumi.MapInput `pulumi:"previous"`
}

func (GetEventsAuditEventDataStateChangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEventsAuditEventDataStateChange)(nil)).Elem()
}

func (i GetEventsAuditEventDataStateChangeArgs) ToGetEventsAuditEventDataStateChangeOutput() GetEventsAuditEventDataStateChangeOutput {
	return i.ToGetEventsAuditEventDataStateChangeOutputWithContext(context.Background())
}

func (i GetEventsAuditEventDataStateChangeArgs) ToGetEventsAuditEventDataStateChangeOutputWithContext(ctx context.Context) GetEventsAuditEventDataStateChangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEventsAuditEventDataStateChangeOutput)
}

type GetEventsAuditEventDataStateChangeOutput struct{ *pulumi.OutputState }

func (GetEventsAuditEventDataStateChangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEventsAuditEventDataStateChange)(nil)).Elem()
}

func (o GetEventsAuditEventDataStateChangeOutput) ToGetEventsAuditEventDataStateChangeOutput() GetEventsAuditEventDataStateChangeOutput {
	return o
}

func (o GetEventsAuditEventDataStateChangeOutput) ToGetEventsAuditEventDataStateChangeOutputWithContext(ctx context.Context) GetEventsAuditEventDataStateChangeOutput {
	return o
}

// Provides the current state of fields that may have changed during an operation. To determine how the current operation changed a resource, compare the information in this attribute to  `previous`.
func (o GetEventsAuditEventDataStateChangeOutput) Current() pulumi.MapOutput {
	return o.ApplyT(func(v GetEventsAuditEventDataStateChange) map[string]interface{} { return v.Current }).(pulumi.MapOutput)
}

// Provides the previous state of fields that may have changed during an operation. To determine how the current operation changed a resource, compare the information in this attribute to  `current`.
func (o GetEventsAuditEventDataStateChangeOutput) Previous() pulumi.MapOutput {
	return o.ApplyT(func(v GetEventsAuditEventDataStateChange) map[string]interface{} { return v.Previous }).(pulumi.MapOutput)
}

type GetEventsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetEventsFilterInput is an input type that accepts GetEventsFilterArgs and GetEventsFilterOutput values.
// You can construct a concrete instance of `GetEventsFilterInput` via:
//
//          GetEventsFilterArgs{...}
type GetEventsFilterInput interface {
	pulumi.Input

	ToGetEventsFilterOutput() GetEventsFilterOutput
	ToGetEventsFilterOutputWithContext(context.Context) GetEventsFilterOutput
}

type GetEventsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetEventsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEventsFilter)(nil)).Elem()
}

func (i GetEventsFilterArgs) ToGetEventsFilterOutput() GetEventsFilterOutput {
	return i.ToGetEventsFilterOutputWithContext(context.Background())
}

func (i GetEventsFilterArgs) ToGetEventsFilterOutputWithContext(ctx context.Context) GetEventsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEventsFilterOutput)
}

// GetEventsFilterArrayInput is an input type that accepts GetEventsFilterArray and GetEventsFilterArrayOutput values.
// You can construct a concrete instance of `GetEventsFilterArrayInput` via:
//
//          GetEventsFilterArray{ GetEventsFilterArgs{...} }
type GetEventsFilterArrayInput interface {
	pulumi.Input

	ToGetEventsFilterArrayOutput() GetEventsFilterArrayOutput
	ToGetEventsFilterArrayOutputWithContext(context.Context) GetEventsFilterArrayOutput
}

type GetEventsFilterArray []GetEventsFilterInput

func (GetEventsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEventsFilter)(nil)).Elem()
}

func (i GetEventsFilterArray) ToGetEventsFilterArrayOutput() GetEventsFilterArrayOutput {
	return i.ToGetEventsFilterArrayOutputWithContext(context.Background())
}

func (i GetEventsFilterArray) ToGetEventsFilterArrayOutputWithContext(ctx context.Context) GetEventsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEventsFilterArrayOutput)
}

type GetEventsFilterOutput struct{ *pulumi.OutputState }

func (GetEventsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEventsFilter)(nil)).Elem()
}

func (o GetEventsFilterOutput) ToGetEventsFilterOutput() GetEventsFilterOutput {
	return o
}

func (o GetEventsFilterOutput) ToGetEventsFilterOutputWithContext(ctx context.Context) GetEventsFilterOutput {
	return o
}

func (o GetEventsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetEventsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetEventsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetEventsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetEventsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetEventsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetEventsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEventsFilter)(nil)).Elem()
}

func (o GetEventsFilterArrayOutput) ToGetEventsFilterArrayOutput() GetEventsFilterArrayOutput {
	return o
}

func (o GetEventsFilterArrayOutput) ToGetEventsFilterArrayOutputWithContext(ctx context.Context) GetEventsFilterArrayOutput {
	return o
}

func (o GetEventsFilterArrayOutput) Index(i pulumi.IntInput) GetEventsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEventsFilter {
		return vs[0].([]GetEventsFilter)[vs[1].(int)]
	}).(GetEventsFilterOutput)
}

func init() {
	pulumi.RegisterOutputType(GetEventsAuditEventOutput{})
	pulumi.RegisterOutputType(GetEventsAuditEventArrayOutput{})
	pulumi.RegisterOutputType(GetEventsAuditEventDataOutput{})
	pulumi.RegisterOutputType(GetEventsAuditEventDataIdentityOutput{})
	pulumi.RegisterOutputType(GetEventsAuditEventDataRequestOutput{})
	pulumi.RegisterOutputType(GetEventsAuditEventDataResponseOutput{})
	pulumi.RegisterOutputType(GetEventsAuditEventDataStateChangeOutput{})
	pulumi.RegisterOutputType(GetEventsFilterOutput{})
	pulumi.RegisterOutputType(GetEventsFilterArrayOutput{})
}
