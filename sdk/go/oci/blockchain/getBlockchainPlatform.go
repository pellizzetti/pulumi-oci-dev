// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package blockchain

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Blockchain Platform resource in Oracle Cloud Infrastructure Blockchain service.
//
// Gets information about a Blockchain Platform identified by the specific id
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci/blockchain"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := blockchain.LookupBlockchainPlatform(ctx, &blockchain.LookupBlockchainPlatformArgs{
// 			BlockchainPlatformId: oci_blockchain_blockchain_platform.Test_blockchain_platform.Id,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupBlockchainPlatform(ctx *pulumi.Context, args *LookupBlockchainPlatformArgs, opts ...pulumi.InvokeOption) (*LookupBlockchainPlatformResult, error) {
	var rv LookupBlockchainPlatformResult
	err := ctx.Invoke("oci:blockchain/getBlockchainPlatform:getBlockchainPlatform", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getBlockchainPlatform.
type LookupBlockchainPlatformArgs struct {
	// Unique service identifier.
	BlockchainPlatformId string `pulumi:"blockchainPlatformId"`
}

// A collection of values returned by getBlockchainPlatform.
type LookupBlockchainPlatformResult struct {
	BlockchainPlatformId string `pulumi:"blockchainPlatformId"`
	CaCertArchiveText    string `pulumi:"caCertArchiveText"`
	// Compartment Identifier
	CompartmentId string `pulumi:"compartmentId"`
	// Blockchain Platform component details.
	ComponentDetails GetBlockchainPlatformComponentDetails `pulumi:"componentDetails"`
	// Compute shape - STANDARD or ENTERPRISE_SMALL or ENTERPRISE_MEDIUM or ENTERPRISE_LARGE or ENTERPRISE_EXTRA_LARGE or ENTERPRISE_CUSTOM
	ComputeShape string `pulumi:"computeShape"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// Platform Instance Description
	Description string `pulumi:"description"`
	// Platform Instance Display name, can be renamed
	DisplayName     string `pulumi:"displayName"`
	FederatedUserId string `pulumi:"federatedUserId"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// List of OcpuUtilization for all hosts
	HostOcpuUtilizationInfos []GetBlockchainPlatformHostOcpuUtilizationInfo `pulumi:"hostOcpuUtilizationInfos"`
	// unique identifier that is immutable on creation
	Id              string `pulumi:"id"`
	IdcsAccessToken string `pulumi:"idcsAccessToken"`
	// Bring your own license
	IsByol bool `pulumi:"isByol"`
	// True for multi-AD blockchain plaforms, false for single-AD
	IsMultiAd bool `pulumi:"isMultiAd"`
	// An message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// Type of Load Balancer shape - LB_100_MBPS or LB_400_MBPS. Default is LB_100_MBPS.
	LoadBalancerShape string `pulumi:"loadBalancerShape"`
	// Role of platform - FOUNDER or PARTICIPANT
	PlatformRole string `pulumi:"platformRole"`
	// Type of Platform shape - DEFAULT or CUSTOM
	PlatformShapeType string `pulumi:"platformShapeType"`
	// Number of replicas of service components like Rest Proxy, CA and Console
	Replicas GetBlockchainPlatformReplicas `pulumi:"replicas"`
	// Service endpoint URL, valid post-provisioning
	ServiceEndpoint string `pulumi:"serviceEndpoint"`
	// The version of the Platform Instance.
	ServiceVersion string `pulumi:"serviceVersion"`
	// The current state of the Platform Instance.
	State string `pulumi:"state"`
	// Storage size in TBs
	StorageSizeInTbs float64 `pulumi:"storageSizeInTbs"`
	// Storage used in TBs
	StorageUsedInTbs float64 `pulumi:"storageUsedInTbs"`
	// The time the the Platform Instance was created. An RFC3339 formatted datetime string
	TimeCreated string `pulumi:"timeCreated"`
	// The time the Platform Instance was updated. An RFC3339 formatted datetime string
	TimeUpdated string `pulumi:"timeUpdated"`
	// Number of total OCPUs allocated to the platform cluster
	TotalOcpuCapacity int `pulumi:"totalOcpuCapacity"`
}
