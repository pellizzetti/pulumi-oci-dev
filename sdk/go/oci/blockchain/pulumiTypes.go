// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package blockchain

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type BlockchainPlatformComponentDetails struct {
	// List of OSNs
	Osns []BlockchainPlatformComponentDetailsOsn `pulumi:"osns"`
	// List of Peers
	Peers []BlockchainPlatformComponentDetailsPeer `pulumi:"peers"`
}

// BlockchainPlatformComponentDetailsInput is an input type that accepts BlockchainPlatformComponentDetailsArgs and BlockchainPlatformComponentDetailsOutput values.
// You can construct a concrete instance of `BlockchainPlatformComponentDetailsInput` via:
//
//          BlockchainPlatformComponentDetailsArgs{...}
type BlockchainPlatformComponentDetailsInput interface {
	pulumi.Input

	ToBlockchainPlatformComponentDetailsOutput() BlockchainPlatformComponentDetailsOutput
	ToBlockchainPlatformComponentDetailsOutputWithContext(context.Context) BlockchainPlatformComponentDetailsOutput
}

type BlockchainPlatformComponentDetailsArgs struct {
	// List of OSNs
	Osns BlockchainPlatformComponentDetailsOsnArrayInput `pulumi:"osns"`
	// List of Peers
	Peers BlockchainPlatformComponentDetailsPeerArrayInput `pulumi:"peers"`
}

func (BlockchainPlatformComponentDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BlockchainPlatformComponentDetails)(nil)).Elem()
}

func (i BlockchainPlatformComponentDetailsArgs) ToBlockchainPlatformComponentDetailsOutput() BlockchainPlatformComponentDetailsOutput {
	return i.ToBlockchainPlatformComponentDetailsOutputWithContext(context.Background())
}

func (i BlockchainPlatformComponentDetailsArgs) ToBlockchainPlatformComponentDetailsOutputWithContext(ctx context.Context) BlockchainPlatformComponentDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlockchainPlatformComponentDetailsOutput)
}

func (i BlockchainPlatformComponentDetailsArgs) ToBlockchainPlatformComponentDetailsPtrOutput() BlockchainPlatformComponentDetailsPtrOutput {
	return i.ToBlockchainPlatformComponentDetailsPtrOutputWithContext(context.Background())
}

func (i BlockchainPlatformComponentDetailsArgs) ToBlockchainPlatformComponentDetailsPtrOutputWithContext(ctx context.Context) BlockchainPlatformComponentDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlockchainPlatformComponentDetailsOutput).ToBlockchainPlatformComponentDetailsPtrOutputWithContext(ctx)
}

// BlockchainPlatformComponentDetailsPtrInput is an input type that accepts BlockchainPlatformComponentDetailsArgs, BlockchainPlatformComponentDetailsPtr and BlockchainPlatformComponentDetailsPtrOutput values.
// You can construct a concrete instance of `BlockchainPlatformComponentDetailsPtrInput` via:
//
//          BlockchainPlatformComponentDetailsArgs{...}
//
//  or:
//
//          nil
type BlockchainPlatformComponentDetailsPtrInput interface {
	pulumi.Input

	ToBlockchainPlatformComponentDetailsPtrOutput() BlockchainPlatformComponentDetailsPtrOutput
	ToBlockchainPlatformComponentDetailsPtrOutputWithContext(context.Context) BlockchainPlatformComponentDetailsPtrOutput
}

type blockchainPlatformComponentDetailsPtrType BlockchainPlatformComponentDetailsArgs

func BlockchainPlatformComponentDetailsPtr(v *BlockchainPlatformComponentDetailsArgs) BlockchainPlatformComponentDetailsPtrInput {
	return (*blockchainPlatformComponentDetailsPtrType)(v)
}

func (*blockchainPlatformComponentDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BlockchainPlatformComponentDetails)(nil)).Elem()
}

func (i *blockchainPlatformComponentDetailsPtrType) ToBlockchainPlatformComponentDetailsPtrOutput() BlockchainPlatformComponentDetailsPtrOutput {
	return i.ToBlockchainPlatformComponentDetailsPtrOutputWithContext(context.Background())
}

func (i *blockchainPlatformComponentDetailsPtrType) ToBlockchainPlatformComponentDetailsPtrOutputWithContext(ctx context.Context) BlockchainPlatformComponentDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlockchainPlatformComponentDetailsPtrOutput)
}

type BlockchainPlatformComponentDetailsOutput struct{ *pulumi.OutputState }

func (BlockchainPlatformComponentDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlockchainPlatformComponentDetails)(nil)).Elem()
}

func (o BlockchainPlatformComponentDetailsOutput) ToBlockchainPlatformComponentDetailsOutput() BlockchainPlatformComponentDetailsOutput {
	return o
}

func (o BlockchainPlatformComponentDetailsOutput) ToBlockchainPlatformComponentDetailsOutputWithContext(ctx context.Context) BlockchainPlatformComponentDetailsOutput {
	return o
}

func (o BlockchainPlatformComponentDetailsOutput) ToBlockchainPlatformComponentDetailsPtrOutput() BlockchainPlatformComponentDetailsPtrOutput {
	return o.ToBlockchainPlatformComponentDetailsPtrOutputWithContext(context.Background())
}

func (o BlockchainPlatformComponentDetailsOutput) ToBlockchainPlatformComponentDetailsPtrOutputWithContext(ctx context.Context) BlockchainPlatformComponentDetailsPtrOutput {
	return o.ApplyT(func(v BlockchainPlatformComponentDetails) *BlockchainPlatformComponentDetails {
		return &v
	}).(BlockchainPlatformComponentDetailsPtrOutput)
}

// List of OSNs
func (o BlockchainPlatformComponentDetailsOutput) Osns() BlockchainPlatformComponentDetailsOsnArrayOutput {
	return o.ApplyT(func(v BlockchainPlatformComponentDetails) []BlockchainPlatformComponentDetailsOsn { return v.Osns }).(BlockchainPlatformComponentDetailsOsnArrayOutput)
}

// List of Peers
func (o BlockchainPlatformComponentDetailsOutput) Peers() BlockchainPlatformComponentDetailsPeerArrayOutput {
	return o.ApplyT(func(v BlockchainPlatformComponentDetails) []BlockchainPlatformComponentDetailsPeer { return v.Peers }).(BlockchainPlatformComponentDetailsPeerArrayOutput)
}

type BlockchainPlatformComponentDetailsPtrOutput struct{ *pulumi.OutputState }

func (BlockchainPlatformComponentDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BlockchainPlatformComponentDetails)(nil)).Elem()
}

func (o BlockchainPlatformComponentDetailsPtrOutput) ToBlockchainPlatformComponentDetailsPtrOutput() BlockchainPlatformComponentDetailsPtrOutput {
	return o
}

func (o BlockchainPlatformComponentDetailsPtrOutput) ToBlockchainPlatformComponentDetailsPtrOutputWithContext(ctx context.Context) BlockchainPlatformComponentDetailsPtrOutput {
	return o
}

func (o BlockchainPlatformComponentDetailsPtrOutput) Elem() BlockchainPlatformComponentDetailsOutput {
	return o.ApplyT(func(v *BlockchainPlatformComponentDetails) BlockchainPlatformComponentDetails { return *v }).(BlockchainPlatformComponentDetailsOutput)
}

// List of OSNs
func (o BlockchainPlatformComponentDetailsPtrOutput) Osns() BlockchainPlatformComponentDetailsOsnArrayOutput {
	return o.ApplyT(func(v *BlockchainPlatformComponentDetails) []BlockchainPlatformComponentDetailsOsn {
		if v == nil {
			return nil
		}
		return v.Osns
	}).(BlockchainPlatformComponentDetailsOsnArrayOutput)
}

// List of Peers
func (o BlockchainPlatformComponentDetailsPtrOutput) Peers() BlockchainPlatformComponentDetailsPeerArrayOutput {
	return o.ApplyT(func(v *BlockchainPlatformComponentDetails) []BlockchainPlatformComponentDetailsPeer {
		if v == nil {
			return nil
		}
		return v.Peers
	}).(BlockchainPlatformComponentDetailsPeerArrayOutput)
}

type BlockchainPlatformComponentDetailsOsn struct {
	// Availability Domain of peer
	Ad *string `pulumi:"ad"`
	// OCPU allocation parameter
	OcpuAllocationParam *BlockchainPlatformComponentDetailsOsnOcpuAllocationParam `pulumi:"ocpuAllocationParam"`
	// OSN identifier
	OsnKey *string `pulumi:"osnKey"`
	// The current state of the Platform Instance.
	State *string `pulumi:"state"`
}

// BlockchainPlatformComponentDetailsOsnInput is an input type that accepts BlockchainPlatformComponentDetailsOsnArgs and BlockchainPlatformComponentDetailsOsnOutput values.
// You can construct a concrete instance of `BlockchainPlatformComponentDetailsOsnInput` via:
//
//          BlockchainPlatformComponentDetailsOsnArgs{...}
type BlockchainPlatformComponentDetailsOsnInput interface {
	pulumi.Input

	ToBlockchainPlatformComponentDetailsOsnOutput() BlockchainPlatformComponentDetailsOsnOutput
	ToBlockchainPlatformComponentDetailsOsnOutputWithContext(context.Context) BlockchainPlatformComponentDetailsOsnOutput
}

type BlockchainPlatformComponentDetailsOsnArgs struct {
	// Availability Domain of peer
	Ad pulumi.StringPtrInput `pulumi:"ad"`
	// OCPU allocation parameter
	OcpuAllocationParam BlockchainPlatformComponentDetailsOsnOcpuAllocationParamPtrInput `pulumi:"ocpuAllocationParam"`
	// OSN identifier
	OsnKey pulumi.StringPtrInput `pulumi:"osnKey"`
	// The current state of the Platform Instance.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (BlockchainPlatformComponentDetailsOsnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BlockchainPlatformComponentDetailsOsn)(nil)).Elem()
}

func (i BlockchainPlatformComponentDetailsOsnArgs) ToBlockchainPlatformComponentDetailsOsnOutput() BlockchainPlatformComponentDetailsOsnOutput {
	return i.ToBlockchainPlatformComponentDetailsOsnOutputWithContext(context.Background())
}

func (i BlockchainPlatformComponentDetailsOsnArgs) ToBlockchainPlatformComponentDetailsOsnOutputWithContext(ctx context.Context) BlockchainPlatformComponentDetailsOsnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlockchainPlatformComponentDetailsOsnOutput)
}

// BlockchainPlatformComponentDetailsOsnArrayInput is an input type that accepts BlockchainPlatformComponentDetailsOsnArray and BlockchainPlatformComponentDetailsOsnArrayOutput values.
// You can construct a concrete instance of `BlockchainPlatformComponentDetailsOsnArrayInput` via:
//
//          BlockchainPlatformComponentDetailsOsnArray{ BlockchainPlatformComponentDetailsOsnArgs{...} }
type BlockchainPlatformComponentDetailsOsnArrayInput interface {
	pulumi.Input

	ToBlockchainPlatformComponentDetailsOsnArrayOutput() BlockchainPlatformComponentDetailsOsnArrayOutput
	ToBlockchainPlatformComponentDetailsOsnArrayOutputWithContext(context.Context) BlockchainPlatformComponentDetailsOsnArrayOutput
}

type BlockchainPlatformComponentDetailsOsnArray []BlockchainPlatformComponentDetailsOsnInput

func (BlockchainPlatformComponentDetailsOsnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BlockchainPlatformComponentDetailsOsn)(nil)).Elem()
}

func (i BlockchainPlatformComponentDetailsOsnArray) ToBlockchainPlatformComponentDetailsOsnArrayOutput() BlockchainPlatformComponentDetailsOsnArrayOutput {
	return i.ToBlockchainPlatformComponentDetailsOsnArrayOutputWithContext(context.Background())
}

func (i BlockchainPlatformComponentDetailsOsnArray) ToBlockchainPlatformComponentDetailsOsnArrayOutputWithContext(ctx context.Context) BlockchainPlatformComponentDetailsOsnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlockchainPlatformComponentDetailsOsnArrayOutput)
}

type BlockchainPlatformComponentDetailsOsnOutput struct{ *pulumi.OutputState }

func (BlockchainPlatformComponentDetailsOsnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlockchainPlatformComponentDetailsOsn)(nil)).Elem()
}

func (o BlockchainPlatformComponentDetailsOsnOutput) ToBlockchainPlatformComponentDetailsOsnOutput() BlockchainPlatformComponentDetailsOsnOutput {
	return o
}

func (o BlockchainPlatformComponentDetailsOsnOutput) ToBlockchainPlatformComponentDetailsOsnOutputWithContext(ctx context.Context) BlockchainPlatformComponentDetailsOsnOutput {
	return o
}

// Availability Domain of peer
func (o BlockchainPlatformComponentDetailsOsnOutput) Ad() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlockchainPlatformComponentDetailsOsn) *string { return v.Ad }).(pulumi.StringPtrOutput)
}

// OCPU allocation parameter
func (o BlockchainPlatformComponentDetailsOsnOutput) OcpuAllocationParam() BlockchainPlatformComponentDetailsOsnOcpuAllocationParamPtrOutput {
	return o.ApplyT(func(v BlockchainPlatformComponentDetailsOsn) *BlockchainPlatformComponentDetailsOsnOcpuAllocationParam {
		return v.OcpuAllocationParam
	}).(BlockchainPlatformComponentDetailsOsnOcpuAllocationParamPtrOutput)
}

// OSN identifier
func (o BlockchainPlatformComponentDetailsOsnOutput) OsnKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlockchainPlatformComponentDetailsOsn) *string { return v.OsnKey }).(pulumi.StringPtrOutput)
}

// The current state of the Platform Instance.
func (o BlockchainPlatformComponentDetailsOsnOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlockchainPlatformComponentDetailsOsn) *string { return v.State }).(pulumi.StringPtrOutput)
}

type BlockchainPlatformComponentDetailsOsnArrayOutput struct{ *pulumi.OutputState }

func (BlockchainPlatformComponentDetailsOsnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BlockchainPlatformComponentDetailsOsn)(nil)).Elem()
}

func (o BlockchainPlatformComponentDetailsOsnArrayOutput) ToBlockchainPlatformComponentDetailsOsnArrayOutput() BlockchainPlatformComponentDetailsOsnArrayOutput {
	return o
}

func (o BlockchainPlatformComponentDetailsOsnArrayOutput) ToBlockchainPlatformComponentDetailsOsnArrayOutputWithContext(ctx context.Context) BlockchainPlatformComponentDetailsOsnArrayOutput {
	return o
}

func (o BlockchainPlatformComponentDetailsOsnArrayOutput) Index(i pulumi.IntInput) BlockchainPlatformComponentDetailsOsnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BlockchainPlatformComponentDetailsOsn {
		return vs[0].([]BlockchainPlatformComponentDetailsOsn)[vs[1].(int)]
	}).(BlockchainPlatformComponentDetailsOsnOutput)
}

type BlockchainPlatformComponentDetailsOsnOcpuAllocationParam struct {
	// Number of OCPU allocation
	OcpuAllocationNumber *float64 `pulumi:"ocpuAllocationNumber"`
}

// BlockchainPlatformComponentDetailsOsnOcpuAllocationParamInput is an input type that accepts BlockchainPlatformComponentDetailsOsnOcpuAllocationParamArgs and BlockchainPlatformComponentDetailsOsnOcpuAllocationParamOutput values.
// You can construct a concrete instance of `BlockchainPlatformComponentDetailsOsnOcpuAllocationParamInput` via:
//
//          BlockchainPlatformComponentDetailsOsnOcpuAllocationParamArgs{...}
type BlockchainPlatformComponentDetailsOsnOcpuAllocationParamInput interface {
	pulumi.Input

	ToBlockchainPlatformComponentDetailsOsnOcpuAllocationParamOutput() BlockchainPlatformComponentDetailsOsnOcpuAllocationParamOutput
	ToBlockchainPlatformComponentDetailsOsnOcpuAllocationParamOutputWithContext(context.Context) BlockchainPlatformComponentDetailsOsnOcpuAllocationParamOutput
}

type BlockchainPlatformComponentDetailsOsnOcpuAllocationParamArgs struct {
	// Number of OCPU allocation
	OcpuAllocationNumber pulumi.Float64PtrInput `pulumi:"ocpuAllocationNumber"`
}

func (BlockchainPlatformComponentDetailsOsnOcpuAllocationParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BlockchainPlatformComponentDetailsOsnOcpuAllocationParam)(nil)).Elem()
}

func (i BlockchainPlatformComponentDetailsOsnOcpuAllocationParamArgs) ToBlockchainPlatformComponentDetailsOsnOcpuAllocationParamOutput() BlockchainPlatformComponentDetailsOsnOcpuAllocationParamOutput {
	return i.ToBlockchainPlatformComponentDetailsOsnOcpuAllocationParamOutputWithContext(context.Background())
}

func (i BlockchainPlatformComponentDetailsOsnOcpuAllocationParamArgs) ToBlockchainPlatformComponentDetailsOsnOcpuAllocationParamOutputWithContext(ctx context.Context) BlockchainPlatformComponentDetailsOsnOcpuAllocationParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlockchainPlatformComponentDetailsOsnOcpuAllocationParamOutput)
}

func (i BlockchainPlatformComponentDetailsOsnOcpuAllocationParamArgs) ToBlockchainPlatformComponentDetailsOsnOcpuAllocationParamPtrOutput() BlockchainPlatformComponentDetailsOsnOcpuAllocationParamPtrOutput {
	return i.ToBlockchainPlatformComponentDetailsOsnOcpuAllocationParamPtrOutputWithContext(context.Background())
}

func (i BlockchainPlatformComponentDetailsOsnOcpuAllocationParamArgs) ToBlockchainPlatformComponentDetailsOsnOcpuAllocationParamPtrOutputWithContext(ctx context.Context) BlockchainPlatformComponentDetailsOsnOcpuAllocationParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlockchainPlatformComponentDetailsOsnOcpuAllocationParamOutput).ToBlockchainPlatformComponentDetailsOsnOcpuAllocationParamPtrOutputWithContext(ctx)
}

// BlockchainPlatformComponentDetailsOsnOcpuAllocationParamPtrInput is an input type that accepts BlockchainPlatformComponentDetailsOsnOcpuAllocationParamArgs, BlockchainPlatformComponentDetailsOsnOcpuAllocationParamPtr and BlockchainPlatformComponentDetailsOsnOcpuAllocationParamPtrOutput values.
// You can construct a concrete instance of `BlockchainPlatformComponentDetailsOsnOcpuAllocationParamPtrInput` via:
//
//          BlockchainPlatformComponentDetailsOsnOcpuAllocationParamArgs{...}
//
//  or:
//
//          nil
type BlockchainPlatformComponentDetailsOsnOcpuAllocationParamPtrInput interface {
	pulumi.Input

	ToBlockchainPlatformComponentDetailsOsnOcpuAllocationParamPtrOutput() BlockchainPlatformComponentDetailsOsnOcpuAllocationParamPtrOutput
	ToBlockchainPlatformComponentDetailsOsnOcpuAllocationParamPtrOutputWithContext(context.Context) BlockchainPlatformComponentDetailsOsnOcpuAllocationParamPtrOutput
}

type blockchainPlatformComponentDetailsOsnOcpuAllocationParamPtrType BlockchainPlatformComponentDetailsOsnOcpuAllocationParamArgs

func BlockchainPlatformComponentDetailsOsnOcpuAllocationParamPtr(v *BlockchainPlatformComponentDetailsOsnOcpuAllocationParamArgs) BlockchainPlatformComponentDetailsOsnOcpuAllocationParamPtrInput {
	return (*blockchainPlatformComponentDetailsOsnOcpuAllocationParamPtrType)(v)
}

func (*blockchainPlatformComponentDetailsOsnOcpuAllocationParamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BlockchainPlatformComponentDetailsOsnOcpuAllocationParam)(nil)).Elem()
}

func (i *blockchainPlatformComponentDetailsOsnOcpuAllocationParamPtrType) ToBlockchainPlatformComponentDetailsOsnOcpuAllocationParamPtrOutput() BlockchainPlatformComponentDetailsOsnOcpuAllocationParamPtrOutput {
	return i.ToBlockchainPlatformComponentDetailsOsnOcpuAllocationParamPtrOutputWithContext(context.Background())
}

func (i *blockchainPlatformComponentDetailsOsnOcpuAllocationParamPtrType) ToBlockchainPlatformComponentDetailsOsnOcpuAllocationParamPtrOutputWithContext(ctx context.Context) BlockchainPlatformComponentDetailsOsnOcpuAllocationParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlockchainPlatformComponentDetailsOsnOcpuAllocationParamPtrOutput)
}

type BlockchainPlatformComponentDetailsOsnOcpuAllocationParamOutput struct{ *pulumi.OutputState }

func (BlockchainPlatformComponentDetailsOsnOcpuAllocationParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlockchainPlatformComponentDetailsOsnOcpuAllocationParam)(nil)).Elem()
}

func (o BlockchainPlatformComponentDetailsOsnOcpuAllocationParamOutput) ToBlockchainPlatformComponentDetailsOsnOcpuAllocationParamOutput() BlockchainPlatformComponentDetailsOsnOcpuAllocationParamOutput {
	return o
}

func (o BlockchainPlatformComponentDetailsOsnOcpuAllocationParamOutput) ToBlockchainPlatformComponentDetailsOsnOcpuAllocationParamOutputWithContext(ctx context.Context) BlockchainPlatformComponentDetailsOsnOcpuAllocationParamOutput {
	return o
}

func (o BlockchainPlatformComponentDetailsOsnOcpuAllocationParamOutput) ToBlockchainPlatformComponentDetailsOsnOcpuAllocationParamPtrOutput() BlockchainPlatformComponentDetailsOsnOcpuAllocationParamPtrOutput {
	return o.ToBlockchainPlatformComponentDetailsOsnOcpuAllocationParamPtrOutputWithContext(context.Background())
}

func (o BlockchainPlatformComponentDetailsOsnOcpuAllocationParamOutput) ToBlockchainPlatformComponentDetailsOsnOcpuAllocationParamPtrOutputWithContext(ctx context.Context) BlockchainPlatformComponentDetailsOsnOcpuAllocationParamPtrOutput {
	return o.ApplyT(func(v BlockchainPlatformComponentDetailsOsnOcpuAllocationParam) *BlockchainPlatformComponentDetailsOsnOcpuAllocationParam {
		return &v
	}).(BlockchainPlatformComponentDetailsOsnOcpuAllocationParamPtrOutput)
}

// Number of OCPU allocation
func (o BlockchainPlatformComponentDetailsOsnOcpuAllocationParamOutput) OcpuAllocationNumber() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v BlockchainPlatformComponentDetailsOsnOcpuAllocationParam) *float64 {
		return v.OcpuAllocationNumber
	}).(pulumi.Float64PtrOutput)
}

type BlockchainPlatformComponentDetailsOsnOcpuAllocationParamPtrOutput struct{ *pulumi.OutputState }

func (BlockchainPlatformComponentDetailsOsnOcpuAllocationParamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BlockchainPlatformComponentDetailsOsnOcpuAllocationParam)(nil)).Elem()
}

func (o BlockchainPlatformComponentDetailsOsnOcpuAllocationParamPtrOutput) ToBlockchainPlatformComponentDetailsOsnOcpuAllocationParamPtrOutput() BlockchainPlatformComponentDetailsOsnOcpuAllocationParamPtrOutput {
	return o
}

func (o BlockchainPlatformComponentDetailsOsnOcpuAllocationParamPtrOutput) ToBlockchainPlatformComponentDetailsOsnOcpuAllocationParamPtrOutputWithContext(ctx context.Context) BlockchainPlatformComponentDetailsOsnOcpuAllocationParamPtrOutput {
	return o
}

func (o BlockchainPlatformComponentDetailsOsnOcpuAllocationParamPtrOutput) Elem() BlockchainPlatformComponentDetailsOsnOcpuAllocationParamOutput {
	return o.ApplyT(func(v *BlockchainPlatformComponentDetailsOsnOcpuAllocationParam) BlockchainPlatformComponentDetailsOsnOcpuAllocationParam {
		return *v
	}).(BlockchainPlatformComponentDetailsOsnOcpuAllocationParamOutput)
}

// Number of OCPU allocation
func (o BlockchainPlatformComponentDetailsOsnOcpuAllocationParamPtrOutput) OcpuAllocationNumber() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *BlockchainPlatformComponentDetailsOsnOcpuAllocationParam) *float64 {
		if v == nil {
			return nil
		}
		return v.OcpuAllocationNumber
	}).(pulumi.Float64PtrOutput)
}

type BlockchainPlatformComponentDetailsPeer struct {
	// Availability Domain of peer
	Ad *string `pulumi:"ad"`
	// peer alias
	Alias *string `pulumi:"alias"`
	// Host name of VM
	Host *string `pulumi:"host"`
	// OCPU allocation parameter
	OcpuAllocationParam *BlockchainPlatformComponentDetailsPeerOcpuAllocationParam `pulumi:"ocpuAllocationParam"`
	// peer identifier
	PeerKey *string `pulumi:"peerKey"`
	// Peer role
	Role *string `pulumi:"role"`
	// The current state of the Platform Instance.
	State *string `pulumi:"state"`
}

// BlockchainPlatformComponentDetailsPeerInput is an input type that accepts BlockchainPlatformComponentDetailsPeerArgs and BlockchainPlatformComponentDetailsPeerOutput values.
// You can construct a concrete instance of `BlockchainPlatformComponentDetailsPeerInput` via:
//
//          BlockchainPlatformComponentDetailsPeerArgs{...}
type BlockchainPlatformComponentDetailsPeerInput interface {
	pulumi.Input

	ToBlockchainPlatformComponentDetailsPeerOutput() BlockchainPlatformComponentDetailsPeerOutput
	ToBlockchainPlatformComponentDetailsPeerOutputWithContext(context.Context) BlockchainPlatformComponentDetailsPeerOutput
}

type BlockchainPlatformComponentDetailsPeerArgs struct {
	// Availability Domain of peer
	Ad pulumi.StringPtrInput `pulumi:"ad"`
	// peer alias
	Alias pulumi.StringPtrInput `pulumi:"alias"`
	// Host name of VM
	Host pulumi.StringPtrInput `pulumi:"host"`
	// OCPU allocation parameter
	OcpuAllocationParam BlockchainPlatformComponentDetailsPeerOcpuAllocationParamPtrInput `pulumi:"ocpuAllocationParam"`
	// peer identifier
	PeerKey pulumi.StringPtrInput `pulumi:"peerKey"`
	// Peer role
	Role pulumi.StringPtrInput `pulumi:"role"`
	// The current state of the Platform Instance.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (BlockchainPlatformComponentDetailsPeerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BlockchainPlatformComponentDetailsPeer)(nil)).Elem()
}

func (i BlockchainPlatformComponentDetailsPeerArgs) ToBlockchainPlatformComponentDetailsPeerOutput() BlockchainPlatformComponentDetailsPeerOutput {
	return i.ToBlockchainPlatformComponentDetailsPeerOutputWithContext(context.Background())
}

func (i BlockchainPlatformComponentDetailsPeerArgs) ToBlockchainPlatformComponentDetailsPeerOutputWithContext(ctx context.Context) BlockchainPlatformComponentDetailsPeerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlockchainPlatformComponentDetailsPeerOutput)
}

// BlockchainPlatformComponentDetailsPeerArrayInput is an input type that accepts BlockchainPlatformComponentDetailsPeerArray and BlockchainPlatformComponentDetailsPeerArrayOutput values.
// You can construct a concrete instance of `BlockchainPlatformComponentDetailsPeerArrayInput` via:
//
//          BlockchainPlatformComponentDetailsPeerArray{ BlockchainPlatformComponentDetailsPeerArgs{...} }
type BlockchainPlatformComponentDetailsPeerArrayInput interface {
	pulumi.Input

	ToBlockchainPlatformComponentDetailsPeerArrayOutput() BlockchainPlatformComponentDetailsPeerArrayOutput
	ToBlockchainPlatformComponentDetailsPeerArrayOutputWithContext(context.Context) BlockchainPlatformComponentDetailsPeerArrayOutput
}

type BlockchainPlatformComponentDetailsPeerArray []BlockchainPlatformComponentDetailsPeerInput

func (BlockchainPlatformComponentDetailsPeerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BlockchainPlatformComponentDetailsPeer)(nil)).Elem()
}

func (i BlockchainPlatformComponentDetailsPeerArray) ToBlockchainPlatformComponentDetailsPeerArrayOutput() BlockchainPlatformComponentDetailsPeerArrayOutput {
	return i.ToBlockchainPlatformComponentDetailsPeerArrayOutputWithContext(context.Background())
}

func (i BlockchainPlatformComponentDetailsPeerArray) ToBlockchainPlatformComponentDetailsPeerArrayOutputWithContext(ctx context.Context) BlockchainPlatformComponentDetailsPeerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlockchainPlatformComponentDetailsPeerArrayOutput)
}

type BlockchainPlatformComponentDetailsPeerOutput struct{ *pulumi.OutputState }

func (BlockchainPlatformComponentDetailsPeerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlockchainPlatformComponentDetailsPeer)(nil)).Elem()
}

func (o BlockchainPlatformComponentDetailsPeerOutput) ToBlockchainPlatformComponentDetailsPeerOutput() BlockchainPlatformComponentDetailsPeerOutput {
	return o
}

func (o BlockchainPlatformComponentDetailsPeerOutput) ToBlockchainPlatformComponentDetailsPeerOutputWithContext(ctx context.Context) BlockchainPlatformComponentDetailsPeerOutput {
	return o
}

// Availability Domain of peer
func (o BlockchainPlatformComponentDetailsPeerOutput) Ad() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlockchainPlatformComponentDetailsPeer) *string { return v.Ad }).(pulumi.StringPtrOutput)
}

// peer alias
func (o BlockchainPlatformComponentDetailsPeerOutput) Alias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlockchainPlatformComponentDetailsPeer) *string { return v.Alias }).(pulumi.StringPtrOutput)
}

// Host name of VM
func (o BlockchainPlatformComponentDetailsPeerOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlockchainPlatformComponentDetailsPeer) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// OCPU allocation parameter
func (o BlockchainPlatformComponentDetailsPeerOutput) OcpuAllocationParam() BlockchainPlatformComponentDetailsPeerOcpuAllocationParamPtrOutput {
	return o.ApplyT(func(v BlockchainPlatformComponentDetailsPeer) *BlockchainPlatformComponentDetailsPeerOcpuAllocationParam {
		return v.OcpuAllocationParam
	}).(BlockchainPlatformComponentDetailsPeerOcpuAllocationParamPtrOutput)
}

// peer identifier
func (o BlockchainPlatformComponentDetailsPeerOutput) PeerKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlockchainPlatformComponentDetailsPeer) *string { return v.PeerKey }).(pulumi.StringPtrOutput)
}

// Peer role
func (o BlockchainPlatformComponentDetailsPeerOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlockchainPlatformComponentDetailsPeer) *string { return v.Role }).(pulumi.StringPtrOutput)
}

// The current state of the Platform Instance.
func (o BlockchainPlatformComponentDetailsPeerOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlockchainPlatformComponentDetailsPeer) *string { return v.State }).(pulumi.StringPtrOutput)
}

type BlockchainPlatformComponentDetailsPeerArrayOutput struct{ *pulumi.OutputState }

func (BlockchainPlatformComponentDetailsPeerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BlockchainPlatformComponentDetailsPeer)(nil)).Elem()
}

func (o BlockchainPlatformComponentDetailsPeerArrayOutput) ToBlockchainPlatformComponentDetailsPeerArrayOutput() BlockchainPlatformComponentDetailsPeerArrayOutput {
	return o
}

func (o BlockchainPlatformComponentDetailsPeerArrayOutput) ToBlockchainPlatformComponentDetailsPeerArrayOutputWithContext(ctx context.Context) BlockchainPlatformComponentDetailsPeerArrayOutput {
	return o
}

func (o BlockchainPlatformComponentDetailsPeerArrayOutput) Index(i pulumi.IntInput) BlockchainPlatformComponentDetailsPeerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BlockchainPlatformComponentDetailsPeer {
		return vs[0].([]BlockchainPlatformComponentDetailsPeer)[vs[1].(int)]
	}).(BlockchainPlatformComponentDetailsPeerOutput)
}

type BlockchainPlatformComponentDetailsPeerOcpuAllocationParam struct {
	// Number of OCPU allocation
	OcpuAllocationNumber *float64 `pulumi:"ocpuAllocationNumber"`
}

// BlockchainPlatformComponentDetailsPeerOcpuAllocationParamInput is an input type that accepts BlockchainPlatformComponentDetailsPeerOcpuAllocationParamArgs and BlockchainPlatformComponentDetailsPeerOcpuAllocationParamOutput values.
// You can construct a concrete instance of `BlockchainPlatformComponentDetailsPeerOcpuAllocationParamInput` via:
//
//          BlockchainPlatformComponentDetailsPeerOcpuAllocationParamArgs{...}
type BlockchainPlatformComponentDetailsPeerOcpuAllocationParamInput interface {
	pulumi.Input

	ToBlockchainPlatformComponentDetailsPeerOcpuAllocationParamOutput() BlockchainPlatformComponentDetailsPeerOcpuAllocationParamOutput
	ToBlockchainPlatformComponentDetailsPeerOcpuAllocationParamOutputWithContext(context.Context) BlockchainPlatformComponentDetailsPeerOcpuAllocationParamOutput
}

type BlockchainPlatformComponentDetailsPeerOcpuAllocationParamArgs struct {
	// Number of OCPU allocation
	OcpuAllocationNumber pulumi.Float64PtrInput `pulumi:"ocpuAllocationNumber"`
}

func (BlockchainPlatformComponentDetailsPeerOcpuAllocationParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BlockchainPlatformComponentDetailsPeerOcpuAllocationParam)(nil)).Elem()
}

func (i BlockchainPlatformComponentDetailsPeerOcpuAllocationParamArgs) ToBlockchainPlatformComponentDetailsPeerOcpuAllocationParamOutput() BlockchainPlatformComponentDetailsPeerOcpuAllocationParamOutput {
	return i.ToBlockchainPlatformComponentDetailsPeerOcpuAllocationParamOutputWithContext(context.Background())
}

func (i BlockchainPlatformComponentDetailsPeerOcpuAllocationParamArgs) ToBlockchainPlatformComponentDetailsPeerOcpuAllocationParamOutputWithContext(ctx context.Context) BlockchainPlatformComponentDetailsPeerOcpuAllocationParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlockchainPlatformComponentDetailsPeerOcpuAllocationParamOutput)
}

func (i BlockchainPlatformComponentDetailsPeerOcpuAllocationParamArgs) ToBlockchainPlatformComponentDetailsPeerOcpuAllocationParamPtrOutput() BlockchainPlatformComponentDetailsPeerOcpuAllocationParamPtrOutput {
	return i.ToBlockchainPlatformComponentDetailsPeerOcpuAllocationParamPtrOutputWithContext(context.Background())
}

func (i BlockchainPlatformComponentDetailsPeerOcpuAllocationParamArgs) ToBlockchainPlatformComponentDetailsPeerOcpuAllocationParamPtrOutputWithContext(ctx context.Context) BlockchainPlatformComponentDetailsPeerOcpuAllocationParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlockchainPlatformComponentDetailsPeerOcpuAllocationParamOutput).ToBlockchainPlatformComponentDetailsPeerOcpuAllocationParamPtrOutputWithContext(ctx)
}

// BlockchainPlatformComponentDetailsPeerOcpuAllocationParamPtrInput is an input type that accepts BlockchainPlatformComponentDetailsPeerOcpuAllocationParamArgs, BlockchainPlatformComponentDetailsPeerOcpuAllocationParamPtr and BlockchainPlatformComponentDetailsPeerOcpuAllocationParamPtrOutput values.
// You can construct a concrete instance of `BlockchainPlatformComponentDetailsPeerOcpuAllocationParamPtrInput` via:
//
//          BlockchainPlatformComponentDetailsPeerOcpuAllocationParamArgs{...}
//
//  or:
//
//          nil
type BlockchainPlatformComponentDetailsPeerOcpuAllocationParamPtrInput interface {
	pulumi.Input

	ToBlockchainPlatformComponentDetailsPeerOcpuAllocationParamPtrOutput() BlockchainPlatformComponentDetailsPeerOcpuAllocationParamPtrOutput
	ToBlockchainPlatformComponentDetailsPeerOcpuAllocationParamPtrOutputWithContext(context.Context) BlockchainPlatformComponentDetailsPeerOcpuAllocationParamPtrOutput
}

type blockchainPlatformComponentDetailsPeerOcpuAllocationParamPtrType BlockchainPlatformComponentDetailsPeerOcpuAllocationParamArgs

func BlockchainPlatformComponentDetailsPeerOcpuAllocationParamPtr(v *BlockchainPlatformComponentDetailsPeerOcpuAllocationParamArgs) BlockchainPlatformComponentDetailsPeerOcpuAllocationParamPtrInput {
	return (*blockchainPlatformComponentDetailsPeerOcpuAllocationParamPtrType)(v)
}

func (*blockchainPlatformComponentDetailsPeerOcpuAllocationParamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BlockchainPlatformComponentDetailsPeerOcpuAllocationParam)(nil)).Elem()
}

func (i *blockchainPlatformComponentDetailsPeerOcpuAllocationParamPtrType) ToBlockchainPlatformComponentDetailsPeerOcpuAllocationParamPtrOutput() BlockchainPlatformComponentDetailsPeerOcpuAllocationParamPtrOutput {
	return i.ToBlockchainPlatformComponentDetailsPeerOcpuAllocationParamPtrOutputWithContext(context.Background())
}

func (i *blockchainPlatformComponentDetailsPeerOcpuAllocationParamPtrType) ToBlockchainPlatformComponentDetailsPeerOcpuAllocationParamPtrOutputWithContext(ctx context.Context) BlockchainPlatformComponentDetailsPeerOcpuAllocationParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlockchainPlatformComponentDetailsPeerOcpuAllocationParamPtrOutput)
}

type BlockchainPlatformComponentDetailsPeerOcpuAllocationParamOutput struct{ *pulumi.OutputState }

func (BlockchainPlatformComponentDetailsPeerOcpuAllocationParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlockchainPlatformComponentDetailsPeerOcpuAllocationParam)(nil)).Elem()
}

func (o BlockchainPlatformComponentDetailsPeerOcpuAllocationParamOutput) ToBlockchainPlatformComponentDetailsPeerOcpuAllocationParamOutput() BlockchainPlatformComponentDetailsPeerOcpuAllocationParamOutput {
	return o
}

func (o BlockchainPlatformComponentDetailsPeerOcpuAllocationParamOutput) ToBlockchainPlatformComponentDetailsPeerOcpuAllocationParamOutputWithContext(ctx context.Context) BlockchainPlatformComponentDetailsPeerOcpuAllocationParamOutput {
	return o
}

func (o BlockchainPlatformComponentDetailsPeerOcpuAllocationParamOutput) ToBlockchainPlatformComponentDetailsPeerOcpuAllocationParamPtrOutput() BlockchainPlatformComponentDetailsPeerOcpuAllocationParamPtrOutput {
	return o.ToBlockchainPlatformComponentDetailsPeerOcpuAllocationParamPtrOutputWithContext(context.Background())
}

func (o BlockchainPlatformComponentDetailsPeerOcpuAllocationParamOutput) ToBlockchainPlatformComponentDetailsPeerOcpuAllocationParamPtrOutputWithContext(ctx context.Context) BlockchainPlatformComponentDetailsPeerOcpuAllocationParamPtrOutput {
	return o.ApplyT(func(v BlockchainPlatformComponentDetailsPeerOcpuAllocationParam) *BlockchainPlatformComponentDetailsPeerOcpuAllocationParam {
		return &v
	}).(BlockchainPlatformComponentDetailsPeerOcpuAllocationParamPtrOutput)
}

// Number of OCPU allocation
func (o BlockchainPlatformComponentDetailsPeerOcpuAllocationParamOutput) OcpuAllocationNumber() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v BlockchainPlatformComponentDetailsPeerOcpuAllocationParam) *float64 {
		return v.OcpuAllocationNumber
	}).(pulumi.Float64PtrOutput)
}

type BlockchainPlatformComponentDetailsPeerOcpuAllocationParamPtrOutput struct{ *pulumi.OutputState }

func (BlockchainPlatformComponentDetailsPeerOcpuAllocationParamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BlockchainPlatformComponentDetailsPeerOcpuAllocationParam)(nil)).Elem()
}

func (o BlockchainPlatformComponentDetailsPeerOcpuAllocationParamPtrOutput) ToBlockchainPlatformComponentDetailsPeerOcpuAllocationParamPtrOutput() BlockchainPlatformComponentDetailsPeerOcpuAllocationParamPtrOutput {
	return o
}

func (o BlockchainPlatformComponentDetailsPeerOcpuAllocationParamPtrOutput) ToBlockchainPlatformComponentDetailsPeerOcpuAllocationParamPtrOutputWithContext(ctx context.Context) BlockchainPlatformComponentDetailsPeerOcpuAllocationParamPtrOutput {
	return o
}

func (o BlockchainPlatformComponentDetailsPeerOcpuAllocationParamPtrOutput) Elem() BlockchainPlatformComponentDetailsPeerOcpuAllocationParamOutput {
	return o.ApplyT(func(v *BlockchainPlatformComponentDetailsPeerOcpuAllocationParam) BlockchainPlatformComponentDetailsPeerOcpuAllocationParam {
		return *v
	}).(BlockchainPlatformComponentDetailsPeerOcpuAllocationParamOutput)
}

// Number of OCPU allocation
func (o BlockchainPlatformComponentDetailsPeerOcpuAllocationParamPtrOutput) OcpuAllocationNumber() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *BlockchainPlatformComponentDetailsPeerOcpuAllocationParam) *float64 {
		if v == nil {
			return nil
		}
		return v.OcpuAllocationNumber
	}).(pulumi.Float64PtrOutput)
}

type BlockchainPlatformHostOcpuUtilizationInfo struct {
	// Host name of VM
	Host *string `pulumi:"host"`
	// Number of total OCPU capacity on the host
	OcpuCapacityNumber *float64 `pulumi:"ocpuCapacityNumber"`
	// Number of OCPU utilized
	OcpuUtilizationNumber *float64 `pulumi:"ocpuUtilizationNumber"`
}

// BlockchainPlatformHostOcpuUtilizationInfoInput is an input type that accepts BlockchainPlatformHostOcpuUtilizationInfoArgs and BlockchainPlatformHostOcpuUtilizationInfoOutput values.
// You can construct a concrete instance of `BlockchainPlatformHostOcpuUtilizationInfoInput` via:
//
//          BlockchainPlatformHostOcpuUtilizationInfoArgs{...}
type BlockchainPlatformHostOcpuUtilizationInfoInput interface {
	pulumi.Input

	ToBlockchainPlatformHostOcpuUtilizationInfoOutput() BlockchainPlatformHostOcpuUtilizationInfoOutput
	ToBlockchainPlatformHostOcpuUtilizationInfoOutputWithContext(context.Context) BlockchainPlatformHostOcpuUtilizationInfoOutput
}

type BlockchainPlatformHostOcpuUtilizationInfoArgs struct {
	// Host name of VM
	Host pulumi.StringPtrInput `pulumi:"host"`
	// Number of total OCPU capacity on the host
	OcpuCapacityNumber pulumi.Float64PtrInput `pulumi:"ocpuCapacityNumber"`
	// Number of OCPU utilized
	OcpuUtilizationNumber pulumi.Float64PtrInput `pulumi:"ocpuUtilizationNumber"`
}

func (BlockchainPlatformHostOcpuUtilizationInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BlockchainPlatformHostOcpuUtilizationInfo)(nil)).Elem()
}

func (i BlockchainPlatformHostOcpuUtilizationInfoArgs) ToBlockchainPlatformHostOcpuUtilizationInfoOutput() BlockchainPlatformHostOcpuUtilizationInfoOutput {
	return i.ToBlockchainPlatformHostOcpuUtilizationInfoOutputWithContext(context.Background())
}

func (i BlockchainPlatformHostOcpuUtilizationInfoArgs) ToBlockchainPlatformHostOcpuUtilizationInfoOutputWithContext(ctx context.Context) BlockchainPlatformHostOcpuUtilizationInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlockchainPlatformHostOcpuUtilizationInfoOutput)
}

// BlockchainPlatformHostOcpuUtilizationInfoArrayInput is an input type that accepts BlockchainPlatformHostOcpuUtilizationInfoArray and BlockchainPlatformHostOcpuUtilizationInfoArrayOutput values.
// You can construct a concrete instance of `BlockchainPlatformHostOcpuUtilizationInfoArrayInput` via:
//
//          BlockchainPlatformHostOcpuUtilizationInfoArray{ BlockchainPlatformHostOcpuUtilizationInfoArgs{...} }
type BlockchainPlatformHostOcpuUtilizationInfoArrayInput interface {
	pulumi.Input

	ToBlockchainPlatformHostOcpuUtilizationInfoArrayOutput() BlockchainPlatformHostOcpuUtilizationInfoArrayOutput
	ToBlockchainPlatformHostOcpuUtilizationInfoArrayOutputWithContext(context.Context) BlockchainPlatformHostOcpuUtilizationInfoArrayOutput
}

type BlockchainPlatformHostOcpuUtilizationInfoArray []BlockchainPlatformHostOcpuUtilizationInfoInput

func (BlockchainPlatformHostOcpuUtilizationInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BlockchainPlatformHostOcpuUtilizationInfo)(nil)).Elem()
}

func (i BlockchainPlatformHostOcpuUtilizationInfoArray) ToBlockchainPlatformHostOcpuUtilizationInfoArrayOutput() BlockchainPlatformHostOcpuUtilizationInfoArrayOutput {
	return i.ToBlockchainPlatformHostOcpuUtilizationInfoArrayOutputWithContext(context.Background())
}

func (i BlockchainPlatformHostOcpuUtilizationInfoArray) ToBlockchainPlatformHostOcpuUtilizationInfoArrayOutputWithContext(ctx context.Context) BlockchainPlatformHostOcpuUtilizationInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlockchainPlatformHostOcpuUtilizationInfoArrayOutput)
}

type BlockchainPlatformHostOcpuUtilizationInfoOutput struct{ *pulumi.OutputState }

func (BlockchainPlatformHostOcpuUtilizationInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlockchainPlatformHostOcpuUtilizationInfo)(nil)).Elem()
}

func (o BlockchainPlatformHostOcpuUtilizationInfoOutput) ToBlockchainPlatformHostOcpuUtilizationInfoOutput() BlockchainPlatformHostOcpuUtilizationInfoOutput {
	return o
}

func (o BlockchainPlatformHostOcpuUtilizationInfoOutput) ToBlockchainPlatformHostOcpuUtilizationInfoOutputWithContext(ctx context.Context) BlockchainPlatformHostOcpuUtilizationInfoOutput {
	return o
}

// Host name of VM
func (o BlockchainPlatformHostOcpuUtilizationInfoOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlockchainPlatformHostOcpuUtilizationInfo) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// Number of total OCPU capacity on the host
func (o BlockchainPlatformHostOcpuUtilizationInfoOutput) OcpuCapacityNumber() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v BlockchainPlatformHostOcpuUtilizationInfo) *float64 { return v.OcpuCapacityNumber }).(pulumi.Float64PtrOutput)
}

// Number of OCPU utilized
func (o BlockchainPlatformHostOcpuUtilizationInfoOutput) OcpuUtilizationNumber() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v BlockchainPlatformHostOcpuUtilizationInfo) *float64 { return v.OcpuUtilizationNumber }).(pulumi.Float64PtrOutput)
}

type BlockchainPlatformHostOcpuUtilizationInfoArrayOutput struct{ *pulumi.OutputState }

func (BlockchainPlatformHostOcpuUtilizationInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BlockchainPlatformHostOcpuUtilizationInfo)(nil)).Elem()
}

func (o BlockchainPlatformHostOcpuUtilizationInfoArrayOutput) ToBlockchainPlatformHostOcpuUtilizationInfoArrayOutput() BlockchainPlatformHostOcpuUtilizationInfoArrayOutput {
	return o
}

func (o BlockchainPlatformHostOcpuUtilizationInfoArrayOutput) ToBlockchainPlatformHostOcpuUtilizationInfoArrayOutputWithContext(ctx context.Context) BlockchainPlatformHostOcpuUtilizationInfoArrayOutput {
	return o
}

func (o BlockchainPlatformHostOcpuUtilizationInfoArrayOutput) Index(i pulumi.IntInput) BlockchainPlatformHostOcpuUtilizationInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BlockchainPlatformHostOcpuUtilizationInfo {
		return vs[0].([]BlockchainPlatformHostOcpuUtilizationInfo)[vs[1].(int)]
	}).(BlockchainPlatformHostOcpuUtilizationInfoOutput)
}

type BlockchainPlatformReplicas struct {
	// Number of CA replicas
	CaCount *int `pulumi:"caCount"`
	// Number of console replicas
	ConsoleCount *int `pulumi:"consoleCount"`
	// Number of REST proxy replicas
	ProxyCount *int `pulumi:"proxyCount"`
}

// BlockchainPlatformReplicasInput is an input type that accepts BlockchainPlatformReplicasArgs and BlockchainPlatformReplicasOutput values.
// You can construct a concrete instance of `BlockchainPlatformReplicasInput` via:
//
//          BlockchainPlatformReplicasArgs{...}
type BlockchainPlatformReplicasInput interface {
	pulumi.Input

	ToBlockchainPlatformReplicasOutput() BlockchainPlatformReplicasOutput
	ToBlockchainPlatformReplicasOutputWithContext(context.Context) BlockchainPlatformReplicasOutput
}

type BlockchainPlatformReplicasArgs struct {
	// Number of CA replicas
	CaCount pulumi.IntPtrInput `pulumi:"caCount"`
	// Number of console replicas
	ConsoleCount pulumi.IntPtrInput `pulumi:"consoleCount"`
	// Number of REST proxy replicas
	ProxyCount pulumi.IntPtrInput `pulumi:"proxyCount"`
}

func (BlockchainPlatformReplicasArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BlockchainPlatformReplicas)(nil)).Elem()
}

func (i BlockchainPlatformReplicasArgs) ToBlockchainPlatformReplicasOutput() BlockchainPlatformReplicasOutput {
	return i.ToBlockchainPlatformReplicasOutputWithContext(context.Background())
}

func (i BlockchainPlatformReplicasArgs) ToBlockchainPlatformReplicasOutputWithContext(ctx context.Context) BlockchainPlatformReplicasOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlockchainPlatformReplicasOutput)
}

func (i BlockchainPlatformReplicasArgs) ToBlockchainPlatformReplicasPtrOutput() BlockchainPlatformReplicasPtrOutput {
	return i.ToBlockchainPlatformReplicasPtrOutputWithContext(context.Background())
}

func (i BlockchainPlatformReplicasArgs) ToBlockchainPlatformReplicasPtrOutputWithContext(ctx context.Context) BlockchainPlatformReplicasPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlockchainPlatformReplicasOutput).ToBlockchainPlatformReplicasPtrOutputWithContext(ctx)
}

// BlockchainPlatformReplicasPtrInput is an input type that accepts BlockchainPlatformReplicasArgs, BlockchainPlatformReplicasPtr and BlockchainPlatformReplicasPtrOutput values.
// You can construct a concrete instance of `BlockchainPlatformReplicasPtrInput` via:
//
//          BlockchainPlatformReplicasArgs{...}
//
//  or:
//
//          nil
type BlockchainPlatformReplicasPtrInput interface {
	pulumi.Input

	ToBlockchainPlatformReplicasPtrOutput() BlockchainPlatformReplicasPtrOutput
	ToBlockchainPlatformReplicasPtrOutputWithContext(context.Context) BlockchainPlatformReplicasPtrOutput
}

type blockchainPlatformReplicasPtrType BlockchainPlatformReplicasArgs

func BlockchainPlatformReplicasPtr(v *BlockchainPlatformReplicasArgs) BlockchainPlatformReplicasPtrInput {
	return (*blockchainPlatformReplicasPtrType)(v)
}

func (*blockchainPlatformReplicasPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BlockchainPlatformReplicas)(nil)).Elem()
}

func (i *blockchainPlatformReplicasPtrType) ToBlockchainPlatformReplicasPtrOutput() BlockchainPlatformReplicasPtrOutput {
	return i.ToBlockchainPlatformReplicasPtrOutputWithContext(context.Background())
}

func (i *blockchainPlatformReplicasPtrType) ToBlockchainPlatformReplicasPtrOutputWithContext(ctx context.Context) BlockchainPlatformReplicasPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlockchainPlatformReplicasPtrOutput)
}

type BlockchainPlatformReplicasOutput struct{ *pulumi.OutputState }

func (BlockchainPlatformReplicasOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlockchainPlatformReplicas)(nil)).Elem()
}

func (o BlockchainPlatformReplicasOutput) ToBlockchainPlatformReplicasOutput() BlockchainPlatformReplicasOutput {
	return o
}

func (o BlockchainPlatformReplicasOutput) ToBlockchainPlatformReplicasOutputWithContext(ctx context.Context) BlockchainPlatformReplicasOutput {
	return o
}

func (o BlockchainPlatformReplicasOutput) ToBlockchainPlatformReplicasPtrOutput() BlockchainPlatformReplicasPtrOutput {
	return o.ToBlockchainPlatformReplicasPtrOutputWithContext(context.Background())
}

func (o BlockchainPlatformReplicasOutput) ToBlockchainPlatformReplicasPtrOutputWithContext(ctx context.Context) BlockchainPlatformReplicasPtrOutput {
	return o.ApplyT(func(v BlockchainPlatformReplicas) *BlockchainPlatformReplicas {
		return &v
	}).(BlockchainPlatformReplicasPtrOutput)
}

// Number of CA replicas
func (o BlockchainPlatformReplicasOutput) CaCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BlockchainPlatformReplicas) *int { return v.CaCount }).(pulumi.IntPtrOutput)
}

// Number of console replicas
func (o BlockchainPlatformReplicasOutput) ConsoleCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BlockchainPlatformReplicas) *int { return v.ConsoleCount }).(pulumi.IntPtrOutput)
}

// Number of REST proxy replicas
func (o BlockchainPlatformReplicasOutput) ProxyCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BlockchainPlatformReplicas) *int { return v.ProxyCount }).(pulumi.IntPtrOutput)
}

type BlockchainPlatformReplicasPtrOutput struct{ *pulumi.OutputState }

func (BlockchainPlatformReplicasPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BlockchainPlatformReplicas)(nil)).Elem()
}

func (o BlockchainPlatformReplicasPtrOutput) ToBlockchainPlatformReplicasPtrOutput() BlockchainPlatformReplicasPtrOutput {
	return o
}

func (o BlockchainPlatformReplicasPtrOutput) ToBlockchainPlatformReplicasPtrOutputWithContext(ctx context.Context) BlockchainPlatformReplicasPtrOutput {
	return o
}

func (o BlockchainPlatformReplicasPtrOutput) Elem() BlockchainPlatformReplicasOutput {
	return o.ApplyT(func(v *BlockchainPlatformReplicas) BlockchainPlatformReplicas { return *v }).(BlockchainPlatformReplicasOutput)
}

// Number of CA replicas
func (o BlockchainPlatformReplicasPtrOutput) CaCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BlockchainPlatformReplicas) *int {
		if v == nil {
			return nil
		}
		return v.CaCount
	}).(pulumi.IntPtrOutput)
}

// Number of console replicas
func (o BlockchainPlatformReplicasPtrOutput) ConsoleCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BlockchainPlatformReplicas) *int {
		if v == nil {
			return nil
		}
		return v.ConsoleCount
	}).(pulumi.IntPtrOutput)
}

// Number of REST proxy replicas
func (o BlockchainPlatformReplicasPtrOutput) ProxyCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BlockchainPlatformReplicas) *int {
		if v == nil {
			return nil
		}
		return v.ProxyCount
	}).(pulumi.IntPtrOutput)
}

type OsnOcpuAllocationParam struct {
	// (Updatable) Number of OCPU allocation
	OcpuAllocationNumber float64 `pulumi:"ocpuAllocationNumber"`
}

// OsnOcpuAllocationParamInput is an input type that accepts OsnOcpuAllocationParamArgs and OsnOcpuAllocationParamOutput values.
// You can construct a concrete instance of `OsnOcpuAllocationParamInput` via:
//
//          OsnOcpuAllocationParamArgs{...}
type OsnOcpuAllocationParamInput interface {
	pulumi.Input

	ToOsnOcpuAllocationParamOutput() OsnOcpuAllocationParamOutput
	ToOsnOcpuAllocationParamOutputWithContext(context.Context) OsnOcpuAllocationParamOutput
}

type OsnOcpuAllocationParamArgs struct {
	// (Updatable) Number of OCPU allocation
	OcpuAllocationNumber pulumi.Float64Input `pulumi:"ocpuAllocationNumber"`
}

func (OsnOcpuAllocationParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OsnOcpuAllocationParam)(nil)).Elem()
}

func (i OsnOcpuAllocationParamArgs) ToOsnOcpuAllocationParamOutput() OsnOcpuAllocationParamOutput {
	return i.ToOsnOcpuAllocationParamOutputWithContext(context.Background())
}

func (i OsnOcpuAllocationParamArgs) ToOsnOcpuAllocationParamOutputWithContext(ctx context.Context) OsnOcpuAllocationParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsnOcpuAllocationParamOutput)
}

func (i OsnOcpuAllocationParamArgs) ToOsnOcpuAllocationParamPtrOutput() OsnOcpuAllocationParamPtrOutput {
	return i.ToOsnOcpuAllocationParamPtrOutputWithContext(context.Background())
}

func (i OsnOcpuAllocationParamArgs) ToOsnOcpuAllocationParamPtrOutputWithContext(ctx context.Context) OsnOcpuAllocationParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsnOcpuAllocationParamOutput).ToOsnOcpuAllocationParamPtrOutputWithContext(ctx)
}

// OsnOcpuAllocationParamPtrInput is an input type that accepts OsnOcpuAllocationParamArgs, OsnOcpuAllocationParamPtr and OsnOcpuAllocationParamPtrOutput values.
// You can construct a concrete instance of `OsnOcpuAllocationParamPtrInput` via:
//
//          OsnOcpuAllocationParamArgs{...}
//
//  or:
//
//          nil
type OsnOcpuAllocationParamPtrInput interface {
	pulumi.Input

	ToOsnOcpuAllocationParamPtrOutput() OsnOcpuAllocationParamPtrOutput
	ToOsnOcpuAllocationParamPtrOutputWithContext(context.Context) OsnOcpuAllocationParamPtrOutput
}

type osnOcpuAllocationParamPtrType OsnOcpuAllocationParamArgs

func OsnOcpuAllocationParamPtr(v *OsnOcpuAllocationParamArgs) OsnOcpuAllocationParamPtrInput {
	return (*osnOcpuAllocationParamPtrType)(v)
}

func (*osnOcpuAllocationParamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OsnOcpuAllocationParam)(nil)).Elem()
}

func (i *osnOcpuAllocationParamPtrType) ToOsnOcpuAllocationParamPtrOutput() OsnOcpuAllocationParamPtrOutput {
	return i.ToOsnOcpuAllocationParamPtrOutputWithContext(context.Background())
}

func (i *osnOcpuAllocationParamPtrType) ToOsnOcpuAllocationParamPtrOutputWithContext(ctx context.Context) OsnOcpuAllocationParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsnOcpuAllocationParamPtrOutput)
}

type OsnOcpuAllocationParamOutput struct{ *pulumi.OutputState }

func (OsnOcpuAllocationParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OsnOcpuAllocationParam)(nil)).Elem()
}

func (o OsnOcpuAllocationParamOutput) ToOsnOcpuAllocationParamOutput() OsnOcpuAllocationParamOutput {
	return o
}

func (o OsnOcpuAllocationParamOutput) ToOsnOcpuAllocationParamOutputWithContext(ctx context.Context) OsnOcpuAllocationParamOutput {
	return o
}

func (o OsnOcpuAllocationParamOutput) ToOsnOcpuAllocationParamPtrOutput() OsnOcpuAllocationParamPtrOutput {
	return o.ToOsnOcpuAllocationParamPtrOutputWithContext(context.Background())
}

func (o OsnOcpuAllocationParamOutput) ToOsnOcpuAllocationParamPtrOutputWithContext(ctx context.Context) OsnOcpuAllocationParamPtrOutput {
	return o.ApplyT(func(v OsnOcpuAllocationParam) *OsnOcpuAllocationParam {
		return &v
	}).(OsnOcpuAllocationParamPtrOutput)
}

// (Updatable) Number of OCPU allocation
func (o OsnOcpuAllocationParamOutput) OcpuAllocationNumber() pulumi.Float64Output {
	return o.ApplyT(func(v OsnOcpuAllocationParam) float64 { return v.OcpuAllocationNumber }).(pulumi.Float64Output)
}

type OsnOcpuAllocationParamPtrOutput struct{ *pulumi.OutputState }

func (OsnOcpuAllocationParamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OsnOcpuAllocationParam)(nil)).Elem()
}

func (o OsnOcpuAllocationParamPtrOutput) ToOsnOcpuAllocationParamPtrOutput() OsnOcpuAllocationParamPtrOutput {
	return o
}

func (o OsnOcpuAllocationParamPtrOutput) ToOsnOcpuAllocationParamPtrOutputWithContext(ctx context.Context) OsnOcpuAllocationParamPtrOutput {
	return o
}

func (o OsnOcpuAllocationParamPtrOutput) Elem() OsnOcpuAllocationParamOutput {
	return o.ApplyT(func(v *OsnOcpuAllocationParam) OsnOcpuAllocationParam { return *v }).(OsnOcpuAllocationParamOutput)
}

// (Updatable) Number of OCPU allocation
func (o OsnOcpuAllocationParamPtrOutput) OcpuAllocationNumber() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *OsnOcpuAllocationParam) *float64 {
		if v == nil {
			return nil
		}
		return &v.OcpuAllocationNumber
	}).(pulumi.Float64PtrOutput)
}

type PeerOcpuAllocationParam struct {
	// (Updatable) Number of OCPU allocation
	OcpuAllocationNumber float64 `pulumi:"ocpuAllocationNumber"`
}

// PeerOcpuAllocationParamInput is an input type that accepts PeerOcpuAllocationParamArgs and PeerOcpuAllocationParamOutput values.
// You can construct a concrete instance of `PeerOcpuAllocationParamInput` via:
//
//          PeerOcpuAllocationParamArgs{...}
type PeerOcpuAllocationParamInput interface {
	pulumi.Input

	ToPeerOcpuAllocationParamOutput() PeerOcpuAllocationParamOutput
	ToPeerOcpuAllocationParamOutputWithContext(context.Context) PeerOcpuAllocationParamOutput
}

type PeerOcpuAllocationParamArgs struct {
	// (Updatable) Number of OCPU allocation
	OcpuAllocationNumber pulumi.Float64Input `pulumi:"ocpuAllocationNumber"`
}

func (PeerOcpuAllocationParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PeerOcpuAllocationParam)(nil)).Elem()
}

func (i PeerOcpuAllocationParamArgs) ToPeerOcpuAllocationParamOutput() PeerOcpuAllocationParamOutput {
	return i.ToPeerOcpuAllocationParamOutputWithContext(context.Background())
}

func (i PeerOcpuAllocationParamArgs) ToPeerOcpuAllocationParamOutputWithContext(ctx context.Context) PeerOcpuAllocationParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeerOcpuAllocationParamOutput)
}

func (i PeerOcpuAllocationParamArgs) ToPeerOcpuAllocationParamPtrOutput() PeerOcpuAllocationParamPtrOutput {
	return i.ToPeerOcpuAllocationParamPtrOutputWithContext(context.Background())
}

func (i PeerOcpuAllocationParamArgs) ToPeerOcpuAllocationParamPtrOutputWithContext(ctx context.Context) PeerOcpuAllocationParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeerOcpuAllocationParamOutput).ToPeerOcpuAllocationParamPtrOutputWithContext(ctx)
}

// PeerOcpuAllocationParamPtrInput is an input type that accepts PeerOcpuAllocationParamArgs, PeerOcpuAllocationParamPtr and PeerOcpuAllocationParamPtrOutput values.
// You can construct a concrete instance of `PeerOcpuAllocationParamPtrInput` via:
//
//          PeerOcpuAllocationParamArgs{...}
//
//  or:
//
//          nil
type PeerOcpuAllocationParamPtrInput interface {
	pulumi.Input

	ToPeerOcpuAllocationParamPtrOutput() PeerOcpuAllocationParamPtrOutput
	ToPeerOcpuAllocationParamPtrOutputWithContext(context.Context) PeerOcpuAllocationParamPtrOutput
}

type peerOcpuAllocationParamPtrType PeerOcpuAllocationParamArgs

func PeerOcpuAllocationParamPtr(v *PeerOcpuAllocationParamArgs) PeerOcpuAllocationParamPtrInput {
	return (*peerOcpuAllocationParamPtrType)(v)
}

func (*peerOcpuAllocationParamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PeerOcpuAllocationParam)(nil)).Elem()
}

func (i *peerOcpuAllocationParamPtrType) ToPeerOcpuAllocationParamPtrOutput() PeerOcpuAllocationParamPtrOutput {
	return i.ToPeerOcpuAllocationParamPtrOutputWithContext(context.Background())
}

func (i *peerOcpuAllocationParamPtrType) ToPeerOcpuAllocationParamPtrOutputWithContext(ctx context.Context) PeerOcpuAllocationParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeerOcpuAllocationParamPtrOutput)
}

type PeerOcpuAllocationParamOutput struct{ *pulumi.OutputState }

func (PeerOcpuAllocationParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PeerOcpuAllocationParam)(nil)).Elem()
}

func (o PeerOcpuAllocationParamOutput) ToPeerOcpuAllocationParamOutput() PeerOcpuAllocationParamOutput {
	return o
}

func (o PeerOcpuAllocationParamOutput) ToPeerOcpuAllocationParamOutputWithContext(ctx context.Context) PeerOcpuAllocationParamOutput {
	return o
}

func (o PeerOcpuAllocationParamOutput) ToPeerOcpuAllocationParamPtrOutput() PeerOcpuAllocationParamPtrOutput {
	return o.ToPeerOcpuAllocationParamPtrOutputWithContext(context.Background())
}

func (o PeerOcpuAllocationParamOutput) ToPeerOcpuAllocationParamPtrOutputWithContext(ctx context.Context) PeerOcpuAllocationParamPtrOutput {
	return o.ApplyT(func(v PeerOcpuAllocationParam) *PeerOcpuAllocationParam {
		return &v
	}).(PeerOcpuAllocationParamPtrOutput)
}

// (Updatable) Number of OCPU allocation
func (o PeerOcpuAllocationParamOutput) OcpuAllocationNumber() pulumi.Float64Output {
	return o.ApplyT(func(v PeerOcpuAllocationParam) float64 { return v.OcpuAllocationNumber }).(pulumi.Float64Output)
}

type PeerOcpuAllocationParamPtrOutput struct{ *pulumi.OutputState }

func (PeerOcpuAllocationParamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PeerOcpuAllocationParam)(nil)).Elem()
}

func (o PeerOcpuAllocationParamPtrOutput) ToPeerOcpuAllocationParamPtrOutput() PeerOcpuAllocationParamPtrOutput {
	return o
}

func (o PeerOcpuAllocationParamPtrOutput) ToPeerOcpuAllocationParamPtrOutputWithContext(ctx context.Context) PeerOcpuAllocationParamPtrOutput {
	return o
}

func (o PeerOcpuAllocationParamPtrOutput) Elem() PeerOcpuAllocationParamOutput {
	return o.ApplyT(func(v *PeerOcpuAllocationParam) PeerOcpuAllocationParam { return *v }).(PeerOcpuAllocationParamOutput)
}

// (Updatable) Number of OCPU allocation
func (o PeerOcpuAllocationParamPtrOutput) OcpuAllocationNumber() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *PeerOcpuAllocationParam) *float64 {
		if v == nil {
			return nil
		}
		return &v.OcpuAllocationNumber
	}).(pulumi.Float64PtrOutput)
}

type GetBlockchainPlatformComponentDetails struct {
	// List of OSNs
	Osns []GetBlockchainPlatformComponentDetailsOsn `pulumi:"osns"`
	// List of Peers
	Peers []GetBlockchainPlatformComponentDetailsPeer `pulumi:"peers"`
}

// GetBlockchainPlatformComponentDetailsInput is an input type that accepts GetBlockchainPlatformComponentDetailsArgs and GetBlockchainPlatformComponentDetailsOutput values.
// You can construct a concrete instance of `GetBlockchainPlatformComponentDetailsInput` via:
//
//          GetBlockchainPlatformComponentDetailsArgs{...}
type GetBlockchainPlatformComponentDetailsInput interface {
	pulumi.Input

	ToGetBlockchainPlatformComponentDetailsOutput() GetBlockchainPlatformComponentDetailsOutput
	ToGetBlockchainPlatformComponentDetailsOutputWithContext(context.Context) GetBlockchainPlatformComponentDetailsOutput
}

type GetBlockchainPlatformComponentDetailsArgs struct {
	// List of OSNs
	Osns GetBlockchainPlatformComponentDetailsOsnArrayInput `pulumi:"osns"`
	// List of Peers
	Peers GetBlockchainPlatformComponentDetailsPeerArrayInput `pulumi:"peers"`
}

func (GetBlockchainPlatformComponentDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBlockchainPlatformComponentDetails)(nil)).Elem()
}

func (i GetBlockchainPlatformComponentDetailsArgs) ToGetBlockchainPlatformComponentDetailsOutput() GetBlockchainPlatformComponentDetailsOutput {
	return i.ToGetBlockchainPlatformComponentDetailsOutputWithContext(context.Background())
}

func (i GetBlockchainPlatformComponentDetailsArgs) ToGetBlockchainPlatformComponentDetailsOutputWithContext(ctx context.Context) GetBlockchainPlatformComponentDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBlockchainPlatformComponentDetailsOutput)
}

type GetBlockchainPlatformComponentDetailsOutput struct{ *pulumi.OutputState }

func (GetBlockchainPlatformComponentDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBlockchainPlatformComponentDetails)(nil)).Elem()
}

func (o GetBlockchainPlatformComponentDetailsOutput) ToGetBlockchainPlatformComponentDetailsOutput() GetBlockchainPlatformComponentDetailsOutput {
	return o
}

func (o GetBlockchainPlatformComponentDetailsOutput) ToGetBlockchainPlatformComponentDetailsOutputWithContext(ctx context.Context) GetBlockchainPlatformComponentDetailsOutput {
	return o
}

// List of OSNs
func (o GetBlockchainPlatformComponentDetailsOutput) Osns() GetBlockchainPlatformComponentDetailsOsnArrayOutput {
	return o.ApplyT(func(v GetBlockchainPlatformComponentDetails) []GetBlockchainPlatformComponentDetailsOsn {
		return v.Osns
	}).(GetBlockchainPlatformComponentDetailsOsnArrayOutput)
}

// List of Peers
func (o GetBlockchainPlatformComponentDetailsOutput) Peers() GetBlockchainPlatformComponentDetailsPeerArrayOutput {
	return o.ApplyT(func(v GetBlockchainPlatformComponentDetails) []GetBlockchainPlatformComponentDetailsPeer {
		return v.Peers
	}).(GetBlockchainPlatformComponentDetailsPeerArrayOutput)
}

type GetBlockchainPlatformComponentDetailsOsn struct {
	// Availability Domain of peer
	Ad string `pulumi:"ad"`
	// OCPU allocation parameter
	OcpuAllocationParam GetBlockchainPlatformComponentDetailsOsnOcpuAllocationParam `pulumi:"ocpuAllocationParam"`
	// OSN identifier
	OsnKey string `pulumi:"osnKey"`
	// The current state of the Platform Instance.
	State string `pulumi:"state"`
}

// GetBlockchainPlatformComponentDetailsOsnInput is an input type that accepts GetBlockchainPlatformComponentDetailsOsnArgs and GetBlockchainPlatformComponentDetailsOsnOutput values.
// You can construct a concrete instance of `GetBlockchainPlatformComponentDetailsOsnInput` via:
//
//          GetBlockchainPlatformComponentDetailsOsnArgs{...}
type GetBlockchainPlatformComponentDetailsOsnInput interface {
	pulumi.Input

	ToGetBlockchainPlatformComponentDetailsOsnOutput() GetBlockchainPlatformComponentDetailsOsnOutput
	ToGetBlockchainPlatformComponentDetailsOsnOutputWithContext(context.Context) GetBlockchainPlatformComponentDetailsOsnOutput
}

type GetBlockchainPlatformComponentDetailsOsnArgs struct {
	// Availability Domain of peer
	Ad pulumi.StringInput `pulumi:"ad"`
	// OCPU allocation parameter
	OcpuAllocationParam GetBlockchainPlatformComponentDetailsOsnOcpuAllocationParamInput `pulumi:"ocpuAllocationParam"`
	// OSN identifier
	OsnKey pulumi.StringInput `pulumi:"osnKey"`
	// The current state of the Platform Instance.
	State pulumi.StringInput `pulumi:"state"`
}

func (GetBlockchainPlatformComponentDetailsOsnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBlockchainPlatformComponentDetailsOsn)(nil)).Elem()
}

func (i GetBlockchainPlatformComponentDetailsOsnArgs) ToGetBlockchainPlatformComponentDetailsOsnOutput() GetBlockchainPlatformComponentDetailsOsnOutput {
	return i.ToGetBlockchainPlatformComponentDetailsOsnOutputWithContext(context.Background())
}

func (i GetBlockchainPlatformComponentDetailsOsnArgs) ToGetBlockchainPlatformComponentDetailsOsnOutputWithContext(ctx context.Context) GetBlockchainPlatformComponentDetailsOsnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBlockchainPlatformComponentDetailsOsnOutput)
}

// GetBlockchainPlatformComponentDetailsOsnArrayInput is an input type that accepts GetBlockchainPlatformComponentDetailsOsnArray and GetBlockchainPlatformComponentDetailsOsnArrayOutput values.
// You can construct a concrete instance of `GetBlockchainPlatformComponentDetailsOsnArrayInput` via:
//
//          GetBlockchainPlatformComponentDetailsOsnArray{ GetBlockchainPlatformComponentDetailsOsnArgs{...} }
type GetBlockchainPlatformComponentDetailsOsnArrayInput interface {
	pulumi.Input

	ToGetBlockchainPlatformComponentDetailsOsnArrayOutput() GetBlockchainPlatformComponentDetailsOsnArrayOutput
	ToGetBlockchainPlatformComponentDetailsOsnArrayOutputWithContext(context.Context) GetBlockchainPlatformComponentDetailsOsnArrayOutput
}

type GetBlockchainPlatformComponentDetailsOsnArray []GetBlockchainPlatformComponentDetailsOsnInput

func (GetBlockchainPlatformComponentDetailsOsnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBlockchainPlatformComponentDetailsOsn)(nil)).Elem()
}

func (i GetBlockchainPlatformComponentDetailsOsnArray) ToGetBlockchainPlatformComponentDetailsOsnArrayOutput() GetBlockchainPlatformComponentDetailsOsnArrayOutput {
	return i.ToGetBlockchainPlatformComponentDetailsOsnArrayOutputWithContext(context.Background())
}

func (i GetBlockchainPlatformComponentDetailsOsnArray) ToGetBlockchainPlatformComponentDetailsOsnArrayOutputWithContext(ctx context.Context) GetBlockchainPlatformComponentDetailsOsnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBlockchainPlatformComponentDetailsOsnArrayOutput)
}

type GetBlockchainPlatformComponentDetailsOsnOutput struct{ *pulumi.OutputState }

func (GetBlockchainPlatformComponentDetailsOsnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBlockchainPlatformComponentDetailsOsn)(nil)).Elem()
}

func (o GetBlockchainPlatformComponentDetailsOsnOutput) ToGetBlockchainPlatformComponentDetailsOsnOutput() GetBlockchainPlatformComponentDetailsOsnOutput {
	return o
}

func (o GetBlockchainPlatformComponentDetailsOsnOutput) ToGetBlockchainPlatformComponentDetailsOsnOutputWithContext(ctx context.Context) GetBlockchainPlatformComponentDetailsOsnOutput {
	return o
}

// Availability Domain of peer
func (o GetBlockchainPlatformComponentDetailsOsnOutput) Ad() pulumi.StringOutput {
	return o.ApplyT(func(v GetBlockchainPlatformComponentDetailsOsn) string { return v.Ad }).(pulumi.StringOutput)
}

// OCPU allocation parameter
func (o GetBlockchainPlatformComponentDetailsOsnOutput) OcpuAllocationParam() GetBlockchainPlatformComponentDetailsOsnOcpuAllocationParamOutput {
	return o.ApplyT(func(v GetBlockchainPlatformComponentDetailsOsn) GetBlockchainPlatformComponentDetailsOsnOcpuAllocationParam {
		return v.OcpuAllocationParam
	}).(GetBlockchainPlatformComponentDetailsOsnOcpuAllocationParamOutput)
}

// OSN identifier
func (o GetBlockchainPlatformComponentDetailsOsnOutput) OsnKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetBlockchainPlatformComponentDetailsOsn) string { return v.OsnKey }).(pulumi.StringOutput)
}

// The current state of the Platform Instance.
func (o GetBlockchainPlatformComponentDetailsOsnOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetBlockchainPlatformComponentDetailsOsn) string { return v.State }).(pulumi.StringOutput)
}

type GetBlockchainPlatformComponentDetailsOsnArrayOutput struct{ *pulumi.OutputState }

func (GetBlockchainPlatformComponentDetailsOsnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBlockchainPlatformComponentDetailsOsn)(nil)).Elem()
}

func (o GetBlockchainPlatformComponentDetailsOsnArrayOutput) ToGetBlockchainPlatformComponentDetailsOsnArrayOutput() GetBlockchainPlatformComponentDetailsOsnArrayOutput {
	return o
}

func (o GetBlockchainPlatformComponentDetailsOsnArrayOutput) ToGetBlockchainPlatformComponentDetailsOsnArrayOutputWithContext(ctx context.Context) GetBlockchainPlatformComponentDetailsOsnArrayOutput {
	return o
}

func (o GetBlockchainPlatformComponentDetailsOsnArrayOutput) Index(i pulumi.IntInput) GetBlockchainPlatformComponentDetailsOsnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBlockchainPlatformComponentDetailsOsn {
		return vs[0].([]GetBlockchainPlatformComponentDetailsOsn)[vs[1].(int)]
	}).(GetBlockchainPlatformComponentDetailsOsnOutput)
}

type GetBlockchainPlatformComponentDetailsOsnOcpuAllocationParam struct {
	// Number of OCPU allocation
	OcpuAllocationNumber float64 `pulumi:"ocpuAllocationNumber"`
}

// GetBlockchainPlatformComponentDetailsOsnOcpuAllocationParamInput is an input type that accepts GetBlockchainPlatformComponentDetailsOsnOcpuAllocationParamArgs and GetBlockchainPlatformComponentDetailsOsnOcpuAllocationParamOutput values.
// You can construct a concrete instance of `GetBlockchainPlatformComponentDetailsOsnOcpuAllocationParamInput` via:
//
//          GetBlockchainPlatformComponentDetailsOsnOcpuAllocationParamArgs{...}
type GetBlockchainPlatformComponentDetailsOsnOcpuAllocationParamInput interface {
	pulumi.Input

	ToGetBlockchainPlatformComponentDetailsOsnOcpuAllocationParamOutput() GetBlockchainPlatformComponentDetailsOsnOcpuAllocationParamOutput
	ToGetBlockchainPlatformComponentDetailsOsnOcpuAllocationParamOutputWithContext(context.Context) GetBlockchainPlatformComponentDetailsOsnOcpuAllocationParamOutput
}

type GetBlockchainPlatformComponentDetailsOsnOcpuAllocationParamArgs struct {
	// Number of OCPU allocation
	OcpuAllocationNumber pulumi.Float64Input `pulumi:"ocpuAllocationNumber"`
}

func (GetBlockchainPlatformComponentDetailsOsnOcpuAllocationParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBlockchainPlatformComponentDetailsOsnOcpuAllocationParam)(nil)).Elem()
}

func (i GetBlockchainPlatformComponentDetailsOsnOcpuAllocationParamArgs) ToGetBlockchainPlatformComponentDetailsOsnOcpuAllocationParamOutput() GetBlockchainPlatformComponentDetailsOsnOcpuAllocationParamOutput {
	return i.ToGetBlockchainPlatformComponentDetailsOsnOcpuAllocationParamOutputWithContext(context.Background())
}

func (i GetBlockchainPlatformComponentDetailsOsnOcpuAllocationParamArgs) ToGetBlockchainPlatformComponentDetailsOsnOcpuAllocationParamOutputWithContext(ctx context.Context) GetBlockchainPlatformComponentDetailsOsnOcpuAllocationParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBlockchainPlatformComponentDetailsOsnOcpuAllocationParamOutput)
}

type GetBlockchainPlatformComponentDetailsOsnOcpuAllocationParamOutput struct{ *pulumi.OutputState }

func (GetBlockchainPlatformComponentDetailsOsnOcpuAllocationParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBlockchainPlatformComponentDetailsOsnOcpuAllocationParam)(nil)).Elem()
}

func (o GetBlockchainPlatformComponentDetailsOsnOcpuAllocationParamOutput) ToGetBlockchainPlatformComponentDetailsOsnOcpuAllocationParamOutput() GetBlockchainPlatformComponentDetailsOsnOcpuAllocationParamOutput {
	return o
}

func (o GetBlockchainPlatformComponentDetailsOsnOcpuAllocationParamOutput) ToGetBlockchainPlatformComponentDetailsOsnOcpuAllocationParamOutputWithContext(ctx context.Context) GetBlockchainPlatformComponentDetailsOsnOcpuAllocationParamOutput {
	return o
}

// Number of OCPU allocation
func (o GetBlockchainPlatformComponentDetailsOsnOcpuAllocationParamOutput) OcpuAllocationNumber() pulumi.Float64Output {
	return o.ApplyT(func(v GetBlockchainPlatformComponentDetailsOsnOcpuAllocationParam) float64 {
		return v.OcpuAllocationNumber
	}).(pulumi.Float64Output)
}

type GetBlockchainPlatformComponentDetailsPeer struct {
	// Availability Domain of peer
	Ad string `pulumi:"ad"`
	// peer alias
	Alias string `pulumi:"alias"`
	// Host name of VM
	Host string `pulumi:"host"`
	// OCPU allocation parameter
	OcpuAllocationParam GetBlockchainPlatformComponentDetailsPeerOcpuAllocationParam `pulumi:"ocpuAllocationParam"`
	// peer identifier
	PeerKey string `pulumi:"peerKey"`
	// Peer role
	Role string `pulumi:"role"`
	// The current state of the Platform Instance.
	State string `pulumi:"state"`
}

// GetBlockchainPlatformComponentDetailsPeerInput is an input type that accepts GetBlockchainPlatformComponentDetailsPeerArgs and GetBlockchainPlatformComponentDetailsPeerOutput values.
// You can construct a concrete instance of `GetBlockchainPlatformComponentDetailsPeerInput` via:
//
//          GetBlockchainPlatformComponentDetailsPeerArgs{...}
type GetBlockchainPlatformComponentDetailsPeerInput interface {
	pulumi.Input

	ToGetBlockchainPlatformComponentDetailsPeerOutput() GetBlockchainPlatformComponentDetailsPeerOutput
	ToGetBlockchainPlatformComponentDetailsPeerOutputWithContext(context.Context) GetBlockchainPlatformComponentDetailsPeerOutput
}

type GetBlockchainPlatformComponentDetailsPeerArgs struct {
	// Availability Domain of peer
	Ad pulumi.StringInput `pulumi:"ad"`
	// peer alias
	Alias pulumi.StringInput `pulumi:"alias"`
	// Host name of VM
	Host pulumi.StringInput `pulumi:"host"`
	// OCPU allocation parameter
	OcpuAllocationParam GetBlockchainPlatformComponentDetailsPeerOcpuAllocationParamInput `pulumi:"ocpuAllocationParam"`
	// peer identifier
	PeerKey pulumi.StringInput `pulumi:"peerKey"`
	// Peer role
	Role pulumi.StringInput `pulumi:"role"`
	// The current state of the Platform Instance.
	State pulumi.StringInput `pulumi:"state"`
}

func (GetBlockchainPlatformComponentDetailsPeerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBlockchainPlatformComponentDetailsPeer)(nil)).Elem()
}

func (i GetBlockchainPlatformComponentDetailsPeerArgs) ToGetBlockchainPlatformComponentDetailsPeerOutput() GetBlockchainPlatformComponentDetailsPeerOutput {
	return i.ToGetBlockchainPlatformComponentDetailsPeerOutputWithContext(context.Background())
}

func (i GetBlockchainPlatformComponentDetailsPeerArgs) ToGetBlockchainPlatformComponentDetailsPeerOutputWithContext(ctx context.Context) GetBlockchainPlatformComponentDetailsPeerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBlockchainPlatformComponentDetailsPeerOutput)
}

// GetBlockchainPlatformComponentDetailsPeerArrayInput is an input type that accepts GetBlockchainPlatformComponentDetailsPeerArray and GetBlockchainPlatformComponentDetailsPeerArrayOutput values.
// You can construct a concrete instance of `GetBlockchainPlatformComponentDetailsPeerArrayInput` via:
//
//          GetBlockchainPlatformComponentDetailsPeerArray{ GetBlockchainPlatformComponentDetailsPeerArgs{...} }
type GetBlockchainPlatformComponentDetailsPeerArrayInput interface {
	pulumi.Input

	ToGetBlockchainPlatformComponentDetailsPeerArrayOutput() GetBlockchainPlatformComponentDetailsPeerArrayOutput
	ToGetBlockchainPlatformComponentDetailsPeerArrayOutputWithContext(context.Context) GetBlockchainPlatformComponentDetailsPeerArrayOutput
}

type GetBlockchainPlatformComponentDetailsPeerArray []GetBlockchainPlatformComponentDetailsPeerInput

func (GetBlockchainPlatformComponentDetailsPeerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBlockchainPlatformComponentDetailsPeer)(nil)).Elem()
}

func (i GetBlockchainPlatformComponentDetailsPeerArray) ToGetBlockchainPlatformComponentDetailsPeerArrayOutput() GetBlockchainPlatformComponentDetailsPeerArrayOutput {
	return i.ToGetBlockchainPlatformComponentDetailsPeerArrayOutputWithContext(context.Background())
}

func (i GetBlockchainPlatformComponentDetailsPeerArray) ToGetBlockchainPlatformComponentDetailsPeerArrayOutputWithContext(ctx context.Context) GetBlockchainPlatformComponentDetailsPeerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBlockchainPlatformComponentDetailsPeerArrayOutput)
}

type GetBlockchainPlatformComponentDetailsPeerOutput struct{ *pulumi.OutputState }

func (GetBlockchainPlatformComponentDetailsPeerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBlockchainPlatformComponentDetailsPeer)(nil)).Elem()
}

func (o GetBlockchainPlatformComponentDetailsPeerOutput) ToGetBlockchainPlatformComponentDetailsPeerOutput() GetBlockchainPlatformComponentDetailsPeerOutput {
	return o
}

func (o GetBlockchainPlatformComponentDetailsPeerOutput) ToGetBlockchainPlatformComponentDetailsPeerOutputWithContext(ctx context.Context) GetBlockchainPlatformComponentDetailsPeerOutput {
	return o
}

// Availability Domain of peer
func (o GetBlockchainPlatformComponentDetailsPeerOutput) Ad() pulumi.StringOutput {
	return o.ApplyT(func(v GetBlockchainPlatformComponentDetailsPeer) string { return v.Ad }).(pulumi.StringOutput)
}

// peer alias
func (o GetBlockchainPlatformComponentDetailsPeerOutput) Alias() pulumi.StringOutput {
	return o.ApplyT(func(v GetBlockchainPlatformComponentDetailsPeer) string { return v.Alias }).(pulumi.StringOutput)
}

// Host name of VM
func (o GetBlockchainPlatformComponentDetailsPeerOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GetBlockchainPlatformComponentDetailsPeer) string { return v.Host }).(pulumi.StringOutput)
}

// OCPU allocation parameter
func (o GetBlockchainPlatformComponentDetailsPeerOutput) OcpuAllocationParam() GetBlockchainPlatformComponentDetailsPeerOcpuAllocationParamOutput {
	return o.ApplyT(func(v GetBlockchainPlatformComponentDetailsPeer) GetBlockchainPlatformComponentDetailsPeerOcpuAllocationParam {
		return v.OcpuAllocationParam
	}).(GetBlockchainPlatformComponentDetailsPeerOcpuAllocationParamOutput)
}

// peer identifier
func (o GetBlockchainPlatformComponentDetailsPeerOutput) PeerKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetBlockchainPlatformComponentDetailsPeer) string { return v.PeerKey }).(pulumi.StringOutput)
}

// Peer role
func (o GetBlockchainPlatformComponentDetailsPeerOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v GetBlockchainPlatformComponentDetailsPeer) string { return v.Role }).(pulumi.StringOutput)
}

// The current state of the Platform Instance.
func (o GetBlockchainPlatformComponentDetailsPeerOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetBlockchainPlatformComponentDetailsPeer) string { return v.State }).(pulumi.StringOutput)
}

type GetBlockchainPlatformComponentDetailsPeerArrayOutput struct{ *pulumi.OutputState }

func (GetBlockchainPlatformComponentDetailsPeerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBlockchainPlatformComponentDetailsPeer)(nil)).Elem()
}

func (o GetBlockchainPlatformComponentDetailsPeerArrayOutput) ToGetBlockchainPlatformComponentDetailsPeerArrayOutput() GetBlockchainPlatformComponentDetailsPeerArrayOutput {
	return o
}

func (o GetBlockchainPlatformComponentDetailsPeerArrayOutput) ToGetBlockchainPlatformComponentDetailsPeerArrayOutputWithContext(ctx context.Context) GetBlockchainPlatformComponentDetailsPeerArrayOutput {
	return o
}

func (o GetBlockchainPlatformComponentDetailsPeerArrayOutput) Index(i pulumi.IntInput) GetBlockchainPlatformComponentDetailsPeerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBlockchainPlatformComponentDetailsPeer {
		return vs[0].([]GetBlockchainPlatformComponentDetailsPeer)[vs[1].(int)]
	}).(GetBlockchainPlatformComponentDetailsPeerOutput)
}

type GetBlockchainPlatformComponentDetailsPeerOcpuAllocationParam struct {
	// Number of OCPU allocation
	OcpuAllocationNumber float64 `pulumi:"ocpuAllocationNumber"`
}

// GetBlockchainPlatformComponentDetailsPeerOcpuAllocationParamInput is an input type that accepts GetBlockchainPlatformComponentDetailsPeerOcpuAllocationParamArgs and GetBlockchainPlatformComponentDetailsPeerOcpuAllocationParamOutput values.
// You can construct a concrete instance of `GetBlockchainPlatformComponentDetailsPeerOcpuAllocationParamInput` via:
//
//          GetBlockchainPlatformComponentDetailsPeerOcpuAllocationParamArgs{...}
type GetBlockchainPlatformComponentDetailsPeerOcpuAllocationParamInput interface {
	pulumi.Input

	ToGetBlockchainPlatformComponentDetailsPeerOcpuAllocationParamOutput() GetBlockchainPlatformComponentDetailsPeerOcpuAllocationParamOutput
	ToGetBlockchainPlatformComponentDetailsPeerOcpuAllocationParamOutputWithContext(context.Context) GetBlockchainPlatformComponentDetailsPeerOcpuAllocationParamOutput
}

type GetBlockchainPlatformComponentDetailsPeerOcpuAllocationParamArgs struct {
	// Number of OCPU allocation
	OcpuAllocationNumber pulumi.Float64Input `pulumi:"ocpuAllocationNumber"`
}

func (GetBlockchainPlatformComponentDetailsPeerOcpuAllocationParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBlockchainPlatformComponentDetailsPeerOcpuAllocationParam)(nil)).Elem()
}

func (i GetBlockchainPlatformComponentDetailsPeerOcpuAllocationParamArgs) ToGetBlockchainPlatformComponentDetailsPeerOcpuAllocationParamOutput() GetBlockchainPlatformComponentDetailsPeerOcpuAllocationParamOutput {
	return i.ToGetBlockchainPlatformComponentDetailsPeerOcpuAllocationParamOutputWithContext(context.Background())
}

func (i GetBlockchainPlatformComponentDetailsPeerOcpuAllocationParamArgs) ToGetBlockchainPlatformComponentDetailsPeerOcpuAllocationParamOutputWithContext(ctx context.Context) GetBlockchainPlatformComponentDetailsPeerOcpuAllocationParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBlockchainPlatformComponentDetailsPeerOcpuAllocationParamOutput)
}

type GetBlockchainPlatformComponentDetailsPeerOcpuAllocationParamOutput struct{ *pulumi.OutputState }

func (GetBlockchainPlatformComponentDetailsPeerOcpuAllocationParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBlockchainPlatformComponentDetailsPeerOcpuAllocationParam)(nil)).Elem()
}

func (o GetBlockchainPlatformComponentDetailsPeerOcpuAllocationParamOutput) ToGetBlockchainPlatformComponentDetailsPeerOcpuAllocationParamOutput() GetBlockchainPlatformComponentDetailsPeerOcpuAllocationParamOutput {
	return o
}

func (o GetBlockchainPlatformComponentDetailsPeerOcpuAllocationParamOutput) ToGetBlockchainPlatformComponentDetailsPeerOcpuAllocationParamOutputWithContext(ctx context.Context) GetBlockchainPlatformComponentDetailsPeerOcpuAllocationParamOutput {
	return o
}

// Number of OCPU allocation
func (o GetBlockchainPlatformComponentDetailsPeerOcpuAllocationParamOutput) OcpuAllocationNumber() pulumi.Float64Output {
	return o.ApplyT(func(v GetBlockchainPlatformComponentDetailsPeerOcpuAllocationParam) float64 {
		return v.OcpuAllocationNumber
	}).(pulumi.Float64Output)
}

type GetBlockchainPlatformHostOcpuUtilizationInfo struct {
	// Host name of VM
	Host string `pulumi:"host"`
	// Number of total OCPU capacity on the host
	OcpuCapacityNumber float64 `pulumi:"ocpuCapacityNumber"`
	// Number of OCPU utilized
	OcpuUtilizationNumber float64 `pulumi:"ocpuUtilizationNumber"`
}

// GetBlockchainPlatformHostOcpuUtilizationInfoInput is an input type that accepts GetBlockchainPlatformHostOcpuUtilizationInfoArgs and GetBlockchainPlatformHostOcpuUtilizationInfoOutput values.
// You can construct a concrete instance of `GetBlockchainPlatformHostOcpuUtilizationInfoInput` via:
//
//          GetBlockchainPlatformHostOcpuUtilizationInfoArgs{...}
type GetBlockchainPlatformHostOcpuUtilizationInfoInput interface {
	pulumi.Input

	ToGetBlockchainPlatformHostOcpuUtilizationInfoOutput() GetBlockchainPlatformHostOcpuUtilizationInfoOutput
	ToGetBlockchainPlatformHostOcpuUtilizationInfoOutputWithContext(context.Context) GetBlockchainPlatformHostOcpuUtilizationInfoOutput
}

type GetBlockchainPlatformHostOcpuUtilizationInfoArgs struct {
	// Host name of VM
	Host pulumi.StringInput `pulumi:"host"`
	// Number of total OCPU capacity on the host
	OcpuCapacityNumber pulumi.Float64Input `pulumi:"ocpuCapacityNumber"`
	// Number of OCPU utilized
	OcpuUtilizationNumber pulumi.Float64Input `pulumi:"ocpuUtilizationNumber"`
}

func (GetBlockchainPlatformHostOcpuUtilizationInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBlockchainPlatformHostOcpuUtilizationInfo)(nil)).Elem()
}

func (i GetBlockchainPlatformHostOcpuUtilizationInfoArgs) ToGetBlockchainPlatformHostOcpuUtilizationInfoOutput() GetBlockchainPlatformHostOcpuUtilizationInfoOutput {
	return i.ToGetBlockchainPlatformHostOcpuUtilizationInfoOutputWithContext(context.Background())
}

func (i GetBlockchainPlatformHostOcpuUtilizationInfoArgs) ToGetBlockchainPlatformHostOcpuUtilizationInfoOutputWithContext(ctx context.Context) GetBlockchainPlatformHostOcpuUtilizationInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBlockchainPlatformHostOcpuUtilizationInfoOutput)
}

// GetBlockchainPlatformHostOcpuUtilizationInfoArrayInput is an input type that accepts GetBlockchainPlatformHostOcpuUtilizationInfoArray and GetBlockchainPlatformHostOcpuUtilizationInfoArrayOutput values.
// You can construct a concrete instance of `GetBlockchainPlatformHostOcpuUtilizationInfoArrayInput` via:
//
//          GetBlockchainPlatformHostOcpuUtilizationInfoArray{ GetBlockchainPlatformHostOcpuUtilizationInfoArgs{...} }
type GetBlockchainPlatformHostOcpuUtilizationInfoArrayInput interface {
	pulumi.Input

	ToGetBlockchainPlatformHostOcpuUtilizationInfoArrayOutput() GetBlockchainPlatformHostOcpuUtilizationInfoArrayOutput
	ToGetBlockchainPlatformHostOcpuUtilizationInfoArrayOutputWithContext(context.Context) GetBlockchainPlatformHostOcpuUtilizationInfoArrayOutput
}

type GetBlockchainPlatformHostOcpuUtilizationInfoArray []GetBlockchainPlatformHostOcpuUtilizationInfoInput

func (GetBlockchainPlatformHostOcpuUtilizationInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBlockchainPlatformHostOcpuUtilizationInfo)(nil)).Elem()
}

func (i GetBlockchainPlatformHostOcpuUtilizationInfoArray) ToGetBlockchainPlatformHostOcpuUtilizationInfoArrayOutput() GetBlockchainPlatformHostOcpuUtilizationInfoArrayOutput {
	return i.ToGetBlockchainPlatformHostOcpuUtilizationInfoArrayOutputWithContext(context.Background())
}

func (i GetBlockchainPlatformHostOcpuUtilizationInfoArray) ToGetBlockchainPlatformHostOcpuUtilizationInfoArrayOutputWithContext(ctx context.Context) GetBlockchainPlatformHostOcpuUtilizationInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBlockchainPlatformHostOcpuUtilizationInfoArrayOutput)
}

type GetBlockchainPlatformHostOcpuUtilizationInfoOutput struct{ *pulumi.OutputState }

func (GetBlockchainPlatformHostOcpuUtilizationInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBlockchainPlatformHostOcpuUtilizationInfo)(nil)).Elem()
}

func (o GetBlockchainPlatformHostOcpuUtilizationInfoOutput) ToGetBlockchainPlatformHostOcpuUtilizationInfoOutput() GetBlockchainPlatformHostOcpuUtilizationInfoOutput {
	return o
}

func (o GetBlockchainPlatformHostOcpuUtilizationInfoOutput) ToGetBlockchainPlatformHostOcpuUtilizationInfoOutputWithContext(ctx context.Context) GetBlockchainPlatformHostOcpuUtilizationInfoOutput {
	return o
}

// Host name of VM
func (o GetBlockchainPlatformHostOcpuUtilizationInfoOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GetBlockchainPlatformHostOcpuUtilizationInfo) string { return v.Host }).(pulumi.StringOutput)
}

// Number of total OCPU capacity on the host
func (o GetBlockchainPlatformHostOcpuUtilizationInfoOutput) OcpuCapacityNumber() pulumi.Float64Output {
	return o.ApplyT(func(v GetBlockchainPlatformHostOcpuUtilizationInfo) float64 { return v.OcpuCapacityNumber }).(pulumi.Float64Output)
}

// Number of OCPU utilized
func (o GetBlockchainPlatformHostOcpuUtilizationInfoOutput) OcpuUtilizationNumber() pulumi.Float64Output {
	return o.ApplyT(func(v GetBlockchainPlatformHostOcpuUtilizationInfo) float64 { return v.OcpuUtilizationNumber }).(pulumi.Float64Output)
}

type GetBlockchainPlatformHostOcpuUtilizationInfoArrayOutput struct{ *pulumi.OutputState }

func (GetBlockchainPlatformHostOcpuUtilizationInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBlockchainPlatformHostOcpuUtilizationInfo)(nil)).Elem()
}

func (o GetBlockchainPlatformHostOcpuUtilizationInfoArrayOutput) ToGetBlockchainPlatformHostOcpuUtilizationInfoArrayOutput() GetBlockchainPlatformHostOcpuUtilizationInfoArrayOutput {
	return o
}

func (o GetBlockchainPlatformHostOcpuUtilizationInfoArrayOutput) ToGetBlockchainPlatformHostOcpuUtilizationInfoArrayOutputWithContext(ctx context.Context) GetBlockchainPlatformHostOcpuUtilizationInfoArrayOutput {
	return o
}

func (o GetBlockchainPlatformHostOcpuUtilizationInfoArrayOutput) Index(i pulumi.IntInput) GetBlockchainPlatformHostOcpuUtilizationInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBlockchainPlatformHostOcpuUtilizationInfo {
		return vs[0].([]GetBlockchainPlatformHostOcpuUtilizationInfo)[vs[1].(int)]
	}).(GetBlockchainPlatformHostOcpuUtilizationInfoOutput)
}

type GetBlockchainPlatformReplicas struct {
	// Number of CA replicas
	CaCount int `pulumi:"caCount"`
	// Number of console replicas
	ConsoleCount int `pulumi:"consoleCount"`
	// Number of REST proxy replicas
	ProxyCount int `pulumi:"proxyCount"`
}

// GetBlockchainPlatformReplicasInput is an input type that accepts GetBlockchainPlatformReplicasArgs and GetBlockchainPlatformReplicasOutput values.
// You can construct a concrete instance of `GetBlockchainPlatformReplicasInput` via:
//
//          GetBlockchainPlatformReplicasArgs{...}
type GetBlockchainPlatformReplicasInput interface {
	pulumi.Input

	ToGetBlockchainPlatformReplicasOutput() GetBlockchainPlatformReplicasOutput
	ToGetBlockchainPlatformReplicasOutputWithContext(context.Context) GetBlockchainPlatformReplicasOutput
}

type GetBlockchainPlatformReplicasArgs struct {
	// Number of CA replicas
	CaCount pulumi.IntInput `pulumi:"caCount"`
	// Number of console replicas
	ConsoleCount pulumi.IntInput `pulumi:"consoleCount"`
	// Number of REST proxy replicas
	ProxyCount pulumi.IntInput `pulumi:"proxyCount"`
}

func (GetBlockchainPlatformReplicasArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBlockchainPlatformReplicas)(nil)).Elem()
}

func (i GetBlockchainPlatformReplicasArgs) ToGetBlockchainPlatformReplicasOutput() GetBlockchainPlatformReplicasOutput {
	return i.ToGetBlockchainPlatformReplicasOutputWithContext(context.Background())
}

func (i GetBlockchainPlatformReplicasArgs) ToGetBlockchainPlatformReplicasOutputWithContext(ctx context.Context) GetBlockchainPlatformReplicasOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBlockchainPlatformReplicasOutput)
}

type GetBlockchainPlatformReplicasOutput struct{ *pulumi.OutputState }

func (GetBlockchainPlatformReplicasOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBlockchainPlatformReplicas)(nil)).Elem()
}

func (o GetBlockchainPlatformReplicasOutput) ToGetBlockchainPlatformReplicasOutput() GetBlockchainPlatformReplicasOutput {
	return o
}

func (o GetBlockchainPlatformReplicasOutput) ToGetBlockchainPlatformReplicasOutputWithContext(ctx context.Context) GetBlockchainPlatformReplicasOutput {
	return o
}

// Number of CA replicas
func (o GetBlockchainPlatformReplicasOutput) CaCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetBlockchainPlatformReplicas) int { return v.CaCount }).(pulumi.IntOutput)
}

// Number of console replicas
func (o GetBlockchainPlatformReplicasOutput) ConsoleCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetBlockchainPlatformReplicas) int { return v.ConsoleCount }).(pulumi.IntOutput)
}

// Number of REST proxy replicas
func (o GetBlockchainPlatformReplicasOutput) ProxyCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetBlockchainPlatformReplicas) int { return v.ProxyCount }).(pulumi.IntOutput)
}

type GetBlockchainPlatformsBlockchainPlatformCollection struct {
	Items []GetBlockchainPlatformsBlockchainPlatformCollectionItem `pulumi:"items"`
}

// GetBlockchainPlatformsBlockchainPlatformCollectionInput is an input type that accepts GetBlockchainPlatformsBlockchainPlatformCollectionArgs and GetBlockchainPlatformsBlockchainPlatformCollectionOutput values.
// You can construct a concrete instance of `GetBlockchainPlatformsBlockchainPlatformCollectionInput` via:
//
//          GetBlockchainPlatformsBlockchainPlatformCollectionArgs{...}
type GetBlockchainPlatformsBlockchainPlatformCollectionInput interface {
	pulumi.Input

	ToGetBlockchainPlatformsBlockchainPlatformCollectionOutput() GetBlockchainPlatformsBlockchainPlatformCollectionOutput
	ToGetBlockchainPlatformsBlockchainPlatformCollectionOutputWithContext(context.Context) GetBlockchainPlatformsBlockchainPlatformCollectionOutput
}

type GetBlockchainPlatformsBlockchainPlatformCollectionArgs struct {
	Items GetBlockchainPlatformsBlockchainPlatformCollectionItemArrayInput `pulumi:"items"`
}

func (GetBlockchainPlatformsBlockchainPlatformCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBlockchainPlatformsBlockchainPlatformCollection)(nil)).Elem()
}

func (i GetBlockchainPlatformsBlockchainPlatformCollectionArgs) ToGetBlockchainPlatformsBlockchainPlatformCollectionOutput() GetBlockchainPlatformsBlockchainPlatformCollectionOutput {
	return i.ToGetBlockchainPlatformsBlockchainPlatformCollectionOutputWithContext(context.Background())
}

func (i GetBlockchainPlatformsBlockchainPlatformCollectionArgs) ToGetBlockchainPlatformsBlockchainPlatformCollectionOutputWithContext(ctx context.Context) GetBlockchainPlatformsBlockchainPlatformCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBlockchainPlatformsBlockchainPlatformCollectionOutput)
}

// GetBlockchainPlatformsBlockchainPlatformCollectionArrayInput is an input type that accepts GetBlockchainPlatformsBlockchainPlatformCollectionArray and GetBlockchainPlatformsBlockchainPlatformCollectionArrayOutput values.
// You can construct a concrete instance of `GetBlockchainPlatformsBlockchainPlatformCollectionArrayInput` via:
//
//          GetBlockchainPlatformsBlockchainPlatformCollectionArray{ GetBlockchainPlatformsBlockchainPlatformCollectionArgs{...} }
type GetBlockchainPlatformsBlockchainPlatformCollectionArrayInput interface {
	pulumi.Input

	ToGetBlockchainPlatformsBlockchainPlatformCollectionArrayOutput() GetBlockchainPlatformsBlockchainPlatformCollectionArrayOutput
	ToGetBlockchainPlatformsBlockchainPlatformCollectionArrayOutputWithContext(context.Context) GetBlockchainPlatformsBlockchainPlatformCollectionArrayOutput
}

type GetBlockchainPlatformsBlockchainPlatformCollectionArray []GetBlockchainPlatformsBlockchainPlatformCollectionInput

func (GetBlockchainPlatformsBlockchainPlatformCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBlockchainPlatformsBlockchainPlatformCollection)(nil)).Elem()
}

func (i GetBlockchainPlatformsBlockchainPlatformCollectionArray) ToGetBlockchainPlatformsBlockchainPlatformCollectionArrayOutput() GetBlockchainPlatformsBlockchainPlatformCollectionArrayOutput {
	return i.ToGetBlockchainPlatformsBlockchainPlatformCollectionArrayOutputWithContext(context.Background())
}

func (i GetBlockchainPlatformsBlockchainPlatformCollectionArray) ToGetBlockchainPlatformsBlockchainPlatformCollectionArrayOutputWithContext(ctx context.Context) GetBlockchainPlatformsBlockchainPlatformCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBlockchainPlatformsBlockchainPlatformCollectionArrayOutput)
}

type GetBlockchainPlatformsBlockchainPlatformCollectionOutput struct{ *pulumi.OutputState }

func (GetBlockchainPlatformsBlockchainPlatformCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBlockchainPlatformsBlockchainPlatformCollection)(nil)).Elem()
}

func (o GetBlockchainPlatformsBlockchainPlatformCollectionOutput) ToGetBlockchainPlatformsBlockchainPlatformCollectionOutput() GetBlockchainPlatformsBlockchainPlatformCollectionOutput {
	return o
}

func (o GetBlockchainPlatformsBlockchainPlatformCollectionOutput) ToGetBlockchainPlatformsBlockchainPlatformCollectionOutputWithContext(ctx context.Context) GetBlockchainPlatformsBlockchainPlatformCollectionOutput {
	return o
}

func (o GetBlockchainPlatformsBlockchainPlatformCollectionOutput) Items() GetBlockchainPlatformsBlockchainPlatformCollectionItemArrayOutput {
	return o.ApplyT(func(v GetBlockchainPlatformsBlockchainPlatformCollection) []GetBlockchainPlatformsBlockchainPlatformCollectionItem {
		return v.Items
	}).(GetBlockchainPlatformsBlockchainPlatformCollectionItemArrayOutput)
}

type GetBlockchainPlatformsBlockchainPlatformCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetBlockchainPlatformsBlockchainPlatformCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBlockchainPlatformsBlockchainPlatformCollection)(nil)).Elem()
}

func (o GetBlockchainPlatformsBlockchainPlatformCollectionArrayOutput) ToGetBlockchainPlatformsBlockchainPlatformCollectionArrayOutput() GetBlockchainPlatformsBlockchainPlatformCollectionArrayOutput {
	return o
}

func (o GetBlockchainPlatformsBlockchainPlatformCollectionArrayOutput) ToGetBlockchainPlatformsBlockchainPlatformCollectionArrayOutputWithContext(ctx context.Context) GetBlockchainPlatformsBlockchainPlatformCollectionArrayOutput {
	return o
}

func (o GetBlockchainPlatformsBlockchainPlatformCollectionArrayOutput) Index(i pulumi.IntInput) GetBlockchainPlatformsBlockchainPlatformCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBlockchainPlatformsBlockchainPlatformCollection {
		return vs[0].([]GetBlockchainPlatformsBlockchainPlatformCollection)[vs[1].(int)]
	}).(GetBlockchainPlatformsBlockchainPlatformCollectionOutput)
}

type GetBlockchainPlatformsBlockchainPlatformCollectionItem struct {
	CaCertArchiveText string `pulumi:"caCertArchiveText"`
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// Blockchain Platform component details.
	ComponentDetails GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetails `pulumi:"componentDetails"`
	// Compute shape - STANDARD or ENTERPRISE_SMALL or ENTERPRISE_MEDIUM or ENTERPRISE_LARGE or ENTERPRISE_EXTRA_LARGE or ENTERPRISE_CUSTOM
	ComputeShape string `pulumi:"computeShape"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// Platform Instance Description
	Description string `pulumi:"description"`
	// A user-friendly name. Does not have to be unique, and it's changeable. Example: `My new resource`
	DisplayName     string `pulumi:"displayName"`
	FederatedUserId string `pulumi:"federatedUserId"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// List of OcpuUtilization for all hosts
	HostOcpuUtilizationInfos []GetBlockchainPlatformsBlockchainPlatformCollectionItemHostOcpuUtilizationInfo `pulumi:"hostOcpuUtilizationInfos"`
	// unique identifier that is immutable on creation
	Id              string `pulumi:"id"`
	IdcsAccessToken string `pulumi:"idcsAccessToken"`
	// Bring your own license
	IsByol bool `pulumi:"isByol"`
	// True for multi-AD blockchain plaforms, false for single-AD
	IsMultiAd bool `pulumi:"isMultiAd"`
	// An message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// Type of Load Balancer shape - LB_100_MBPS or LB_400_MBPS. Default is LB_100_MBPS.
	LoadBalancerShape string `pulumi:"loadBalancerShape"`
	// Role of platform - FOUNDER or PARTICIPANT
	PlatformRole string `pulumi:"platformRole"`
	// Type of Platform shape - DEFAULT or CUSTOM
	PlatformShapeType string `pulumi:"platformShapeType"`
	// Number of replicas of service components like Rest Proxy, CA and Console
	Replicas GetBlockchainPlatformsBlockchainPlatformCollectionItemReplicas `pulumi:"replicas"`
	// Service endpoint URL, valid post-provisioning
	ServiceEndpoint string `pulumi:"serviceEndpoint"`
	// The version of the Platform Instance.
	ServiceVersion string `pulumi:"serviceVersion"`
	// A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
	State string `pulumi:"state"`
	// Storage size in TBs
	StorageSizeInTbs float64 `pulumi:"storageSizeInTbs"`
	// Storage used in TBs
	StorageUsedInTbs float64 `pulumi:"storageUsedInTbs"`
	// The time the the Platform Instance was created. An RFC3339 formatted datetime string
	TimeCreated string `pulumi:"timeCreated"`
	// The time the Platform Instance was updated. An RFC3339 formatted datetime string
	TimeUpdated string `pulumi:"timeUpdated"`
	// Number of total OCPUs allocated to the platform cluster
	TotalOcpuCapacity int `pulumi:"totalOcpuCapacity"`
}

// GetBlockchainPlatformsBlockchainPlatformCollectionItemInput is an input type that accepts GetBlockchainPlatformsBlockchainPlatformCollectionItemArgs and GetBlockchainPlatformsBlockchainPlatformCollectionItemOutput values.
// You can construct a concrete instance of `GetBlockchainPlatformsBlockchainPlatformCollectionItemInput` via:
//
//          GetBlockchainPlatformsBlockchainPlatformCollectionItemArgs{...}
type GetBlockchainPlatformsBlockchainPlatformCollectionItemInput interface {
	pulumi.Input

	ToGetBlockchainPlatformsBlockchainPlatformCollectionItemOutput() GetBlockchainPlatformsBlockchainPlatformCollectionItemOutput
	ToGetBlockchainPlatformsBlockchainPlatformCollectionItemOutputWithContext(context.Context) GetBlockchainPlatformsBlockchainPlatformCollectionItemOutput
}

type GetBlockchainPlatformsBlockchainPlatformCollectionItemArgs struct {
	CaCertArchiveText pulumi.StringInput `pulumi:"caCertArchiveText"`
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Blockchain Platform component details.
	ComponentDetails GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsInput `pulumi:"componentDetails"`
	// Compute shape - STANDARD or ENTERPRISE_SMALL or ENTERPRISE_MEDIUM or ENTERPRISE_LARGE or ENTERPRISE_EXTRA_LARGE or ENTERPRISE_CUSTOM
	ComputeShape pulumi.StringInput `pulumi:"computeShape"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// Platform Instance Description
	Description pulumi.StringInput `pulumi:"description"`
	// A user-friendly name. Does not have to be unique, and it's changeable. Example: `My new resource`
	DisplayName     pulumi.StringInput `pulumi:"displayName"`
	FederatedUserId pulumi.StringInput `pulumi:"federatedUserId"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// List of OcpuUtilization for all hosts
	HostOcpuUtilizationInfos GetBlockchainPlatformsBlockchainPlatformCollectionItemHostOcpuUtilizationInfoArrayInput `pulumi:"hostOcpuUtilizationInfos"`
	// unique identifier that is immutable on creation
	Id              pulumi.StringInput `pulumi:"id"`
	IdcsAccessToken pulumi.StringInput `pulumi:"idcsAccessToken"`
	// Bring your own license
	IsByol pulumi.BoolInput `pulumi:"isByol"`
	// True for multi-AD blockchain plaforms, false for single-AD
	IsMultiAd pulumi.BoolInput `pulumi:"isMultiAd"`
	// An message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// Type of Load Balancer shape - LB_100_MBPS or LB_400_MBPS. Default is LB_100_MBPS.
	LoadBalancerShape pulumi.StringInput `pulumi:"loadBalancerShape"`
	// Role of platform - FOUNDER or PARTICIPANT
	PlatformRole pulumi.StringInput `pulumi:"platformRole"`
	// Type of Platform shape - DEFAULT or CUSTOM
	PlatformShapeType pulumi.StringInput `pulumi:"platformShapeType"`
	// Number of replicas of service components like Rest Proxy, CA and Console
	Replicas GetBlockchainPlatformsBlockchainPlatformCollectionItemReplicasInput `pulumi:"replicas"`
	// Service endpoint URL, valid post-provisioning
	ServiceEndpoint pulumi.StringInput `pulumi:"serviceEndpoint"`
	// The version of the Platform Instance.
	ServiceVersion pulumi.StringInput `pulumi:"serviceVersion"`
	// A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
	State pulumi.StringInput `pulumi:"state"`
	// Storage size in TBs
	StorageSizeInTbs pulumi.Float64Input `pulumi:"storageSizeInTbs"`
	// Storage used in TBs
	StorageUsedInTbs pulumi.Float64Input `pulumi:"storageUsedInTbs"`
	// The time the the Platform Instance was created. An RFC3339 formatted datetime string
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The time the Platform Instance was updated. An RFC3339 formatted datetime string
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
	// Number of total OCPUs allocated to the platform cluster
	TotalOcpuCapacity pulumi.IntInput `pulumi:"totalOcpuCapacity"`
}

func (GetBlockchainPlatformsBlockchainPlatformCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBlockchainPlatformsBlockchainPlatformCollectionItem)(nil)).Elem()
}

func (i GetBlockchainPlatformsBlockchainPlatformCollectionItemArgs) ToGetBlockchainPlatformsBlockchainPlatformCollectionItemOutput() GetBlockchainPlatformsBlockchainPlatformCollectionItemOutput {
	return i.ToGetBlockchainPlatformsBlockchainPlatformCollectionItemOutputWithContext(context.Background())
}

func (i GetBlockchainPlatformsBlockchainPlatformCollectionItemArgs) ToGetBlockchainPlatformsBlockchainPlatformCollectionItemOutputWithContext(ctx context.Context) GetBlockchainPlatformsBlockchainPlatformCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBlockchainPlatformsBlockchainPlatformCollectionItemOutput)
}

// GetBlockchainPlatformsBlockchainPlatformCollectionItemArrayInput is an input type that accepts GetBlockchainPlatformsBlockchainPlatformCollectionItemArray and GetBlockchainPlatformsBlockchainPlatformCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetBlockchainPlatformsBlockchainPlatformCollectionItemArrayInput` via:
//
//          GetBlockchainPlatformsBlockchainPlatformCollectionItemArray{ GetBlockchainPlatformsBlockchainPlatformCollectionItemArgs{...} }
type GetBlockchainPlatformsBlockchainPlatformCollectionItemArrayInput interface {
	pulumi.Input

	ToGetBlockchainPlatformsBlockchainPlatformCollectionItemArrayOutput() GetBlockchainPlatformsBlockchainPlatformCollectionItemArrayOutput
	ToGetBlockchainPlatformsBlockchainPlatformCollectionItemArrayOutputWithContext(context.Context) GetBlockchainPlatformsBlockchainPlatformCollectionItemArrayOutput
}

type GetBlockchainPlatformsBlockchainPlatformCollectionItemArray []GetBlockchainPlatformsBlockchainPlatformCollectionItemInput

func (GetBlockchainPlatformsBlockchainPlatformCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBlockchainPlatformsBlockchainPlatformCollectionItem)(nil)).Elem()
}

func (i GetBlockchainPlatformsBlockchainPlatformCollectionItemArray) ToGetBlockchainPlatformsBlockchainPlatformCollectionItemArrayOutput() GetBlockchainPlatformsBlockchainPlatformCollectionItemArrayOutput {
	return i.ToGetBlockchainPlatformsBlockchainPlatformCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetBlockchainPlatformsBlockchainPlatformCollectionItemArray) ToGetBlockchainPlatformsBlockchainPlatformCollectionItemArrayOutputWithContext(ctx context.Context) GetBlockchainPlatformsBlockchainPlatformCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBlockchainPlatformsBlockchainPlatformCollectionItemArrayOutput)
}

type GetBlockchainPlatformsBlockchainPlatformCollectionItemOutput struct{ *pulumi.OutputState }

func (GetBlockchainPlatformsBlockchainPlatformCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBlockchainPlatformsBlockchainPlatformCollectionItem)(nil)).Elem()
}

func (o GetBlockchainPlatformsBlockchainPlatformCollectionItemOutput) ToGetBlockchainPlatformsBlockchainPlatformCollectionItemOutput() GetBlockchainPlatformsBlockchainPlatformCollectionItemOutput {
	return o
}

func (o GetBlockchainPlatformsBlockchainPlatformCollectionItemOutput) ToGetBlockchainPlatformsBlockchainPlatformCollectionItemOutputWithContext(ctx context.Context) GetBlockchainPlatformsBlockchainPlatformCollectionItemOutput {
	return o
}

func (o GetBlockchainPlatformsBlockchainPlatformCollectionItemOutput) CaCertArchiveText() pulumi.StringOutput {
	return o.ApplyT(func(v GetBlockchainPlatformsBlockchainPlatformCollectionItem) string { return v.CaCertArchiveText }).(pulumi.StringOutput)
}

// The ID of the compartment in which to list resources.
func (o GetBlockchainPlatformsBlockchainPlatformCollectionItemOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBlockchainPlatformsBlockchainPlatformCollectionItem) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Blockchain Platform component details.
func (o GetBlockchainPlatformsBlockchainPlatformCollectionItemOutput) ComponentDetails() GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOutput {
	return o.ApplyT(func(v GetBlockchainPlatformsBlockchainPlatformCollectionItem) GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetails {
		return v.ComponentDetails
	}).(GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOutput)
}

// Compute shape - STANDARD or ENTERPRISE_SMALL or ENTERPRISE_MEDIUM or ENTERPRISE_LARGE or ENTERPRISE_EXTRA_LARGE or ENTERPRISE_CUSTOM
func (o GetBlockchainPlatformsBlockchainPlatformCollectionItemOutput) ComputeShape() pulumi.StringOutput {
	return o.ApplyT(func(v GetBlockchainPlatformsBlockchainPlatformCollectionItem) string { return v.ComputeShape }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetBlockchainPlatformsBlockchainPlatformCollectionItemOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetBlockchainPlatformsBlockchainPlatformCollectionItem) map[string]interface{} {
		return v.DefinedTags
	}).(pulumi.MapOutput)
}

// Platform Instance Description
func (o GetBlockchainPlatformsBlockchainPlatformCollectionItemOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetBlockchainPlatformsBlockchainPlatformCollectionItem) string { return v.Description }).(pulumi.StringOutput)
}

// A user-friendly name. Does not have to be unique, and it's changeable. Example: `My new resource`
func (o GetBlockchainPlatformsBlockchainPlatformCollectionItemOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetBlockchainPlatformsBlockchainPlatformCollectionItem) string { return v.DisplayName }).(pulumi.StringOutput)
}

func (o GetBlockchainPlatformsBlockchainPlatformCollectionItemOutput) FederatedUserId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBlockchainPlatformsBlockchainPlatformCollectionItem) string { return v.FederatedUserId }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetBlockchainPlatformsBlockchainPlatformCollectionItemOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetBlockchainPlatformsBlockchainPlatformCollectionItem) map[string]interface{} {
		return v.FreeformTags
	}).(pulumi.MapOutput)
}

// List of OcpuUtilization for all hosts
func (o GetBlockchainPlatformsBlockchainPlatformCollectionItemOutput) HostOcpuUtilizationInfos() GetBlockchainPlatformsBlockchainPlatformCollectionItemHostOcpuUtilizationInfoArrayOutput {
	return o.ApplyT(func(v GetBlockchainPlatformsBlockchainPlatformCollectionItem) []GetBlockchainPlatformsBlockchainPlatformCollectionItemHostOcpuUtilizationInfo {
		return v.HostOcpuUtilizationInfos
	}).(GetBlockchainPlatformsBlockchainPlatformCollectionItemHostOcpuUtilizationInfoArrayOutput)
}

// unique identifier that is immutable on creation
func (o GetBlockchainPlatformsBlockchainPlatformCollectionItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBlockchainPlatformsBlockchainPlatformCollectionItem) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetBlockchainPlatformsBlockchainPlatformCollectionItemOutput) IdcsAccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetBlockchainPlatformsBlockchainPlatformCollectionItem) string { return v.IdcsAccessToken }).(pulumi.StringOutput)
}

// Bring your own license
func (o GetBlockchainPlatformsBlockchainPlatformCollectionItemOutput) IsByol() pulumi.BoolOutput {
	return o.ApplyT(func(v GetBlockchainPlatformsBlockchainPlatformCollectionItem) bool { return v.IsByol }).(pulumi.BoolOutput)
}

// True for multi-AD blockchain plaforms, false for single-AD
func (o GetBlockchainPlatformsBlockchainPlatformCollectionItemOutput) IsMultiAd() pulumi.BoolOutput {
	return o.ApplyT(func(v GetBlockchainPlatformsBlockchainPlatformCollectionItem) bool { return v.IsMultiAd }).(pulumi.BoolOutput)
}

// An message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o GetBlockchainPlatformsBlockchainPlatformCollectionItemOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetBlockchainPlatformsBlockchainPlatformCollectionItem) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// Type of Load Balancer shape - LB_100_MBPS or LB_400_MBPS. Default is LB_100_MBPS.
func (o GetBlockchainPlatformsBlockchainPlatformCollectionItemOutput) LoadBalancerShape() pulumi.StringOutput {
	return o.ApplyT(func(v GetBlockchainPlatformsBlockchainPlatformCollectionItem) string { return v.LoadBalancerShape }).(pulumi.StringOutput)
}

// Role of platform - FOUNDER or PARTICIPANT
func (o GetBlockchainPlatformsBlockchainPlatformCollectionItemOutput) PlatformRole() pulumi.StringOutput {
	return o.ApplyT(func(v GetBlockchainPlatformsBlockchainPlatformCollectionItem) string { return v.PlatformRole }).(pulumi.StringOutput)
}

// Type of Platform shape - DEFAULT or CUSTOM
func (o GetBlockchainPlatformsBlockchainPlatformCollectionItemOutput) PlatformShapeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetBlockchainPlatformsBlockchainPlatformCollectionItem) string { return v.PlatformShapeType }).(pulumi.StringOutput)
}

// Number of replicas of service components like Rest Proxy, CA and Console
func (o GetBlockchainPlatformsBlockchainPlatformCollectionItemOutput) Replicas() GetBlockchainPlatformsBlockchainPlatformCollectionItemReplicasOutput {
	return o.ApplyT(func(v GetBlockchainPlatformsBlockchainPlatformCollectionItem) GetBlockchainPlatformsBlockchainPlatformCollectionItemReplicas {
		return v.Replicas
	}).(GetBlockchainPlatformsBlockchainPlatformCollectionItemReplicasOutput)
}

// Service endpoint URL, valid post-provisioning
func (o GetBlockchainPlatformsBlockchainPlatformCollectionItemOutput) ServiceEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetBlockchainPlatformsBlockchainPlatformCollectionItem) string { return v.ServiceEndpoint }).(pulumi.StringOutput)
}

// The version of the Platform Instance.
func (o GetBlockchainPlatformsBlockchainPlatformCollectionItemOutput) ServiceVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetBlockchainPlatformsBlockchainPlatformCollectionItem) string { return v.ServiceVersion }).(pulumi.StringOutput)
}

// A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
func (o GetBlockchainPlatformsBlockchainPlatformCollectionItemOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetBlockchainPlatformsBlockchainPlatformCollectionItem) string { return v.State }).(pulumi.StringOutput)
}

// Storage size in TBs
func (o GetBlockchainPlatformsBlockchainPlatformCollectionItemOutput) StorageSizeInTbs() pulumi.Float64Output {
	return o.ApplyT(func(v GetBlockchainPlatformsBlockchainPlatformCollectionItem) float64 { return v.StorageSizeInTbs }).(pulumi.Float64Output)
}

// Storage used in TBs
func (o GetBlockchainPlatformsBlockchainPlatformCollectionItemOutput) StorageUsedInTbs() pulumi.Float64Output {
	return o.ApplyT(func(v GetBlockchainPlatformsBlockchainPlatformCollectionItem) float64 { return v.StorageUsedInTbs }).(pulumi.Float64Output)
}

// The time the the Platform Instance was created. An RFC3339 formatted datetime string
func (o GetBlockchainPlatformsBlockchainPlatformCollectionItemOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetBlockchainPlatformsBlockchainPlatformCollectionItem) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the Platform Instance was updated. An RFC3339 formatted datetime string
func (o GetBlockchainPlatformsBlockchainPlatformCollectionItemOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetBlockchainPlatformsBlockchainPlatformCollectionItem) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

// Number of total OCPUs allocated to the platform cluster
func (o GetBlockchainPlatformsBlockchainPlatformCollectionItemOutput) TotalOcpuCapacity() pulumi.IntOutput {
	return o.ApplyT(func(v GetBlockchainPlatformsBlockchainPlatformCollectionItem) int { return v.TotalOcpuCapacity }).(pulumi.IntOutput)
}

type GetBlockchainPlatformsBlockchainPlatformCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetBlockchainPlatformsBlockchainPlatformCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBlockchainPlatformsBlockchainPlatformCollectionItem)(nil)).Elem()
}

func (o GetBlockchainPlatformsBlockchainPlatformCollectionItemArrayOutput) ToGetBlockchainPlatformsBlockchainPlatformCollectionItemArrayOutput() GetBlockchainPlatformsBlockchainPlatformCollectionItemArrayOutput {
	return o
}

func (o GetBlockchainPlatformsBlockchainPlatformCollectionItemArrayOutput) ToGetBlockchainPlatformsBlockchainPlatformCollectionItemArrayOutputWithContext(ctx context.Context) GetBlockchainPlatformsBlockchainPlatformCollectionItemArrayOutput {
	return o
}

func (o GetBlockchainPlatformsBlockchainPlatformCollectionItemArrayOutput) Index(i pulumi.IntInput) GetBlockchainPlatformsBlockchainPlatformCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBlockchainPlatformsBlockchainPlatformCollectionItem {
		return vs[0].([]GetBlockchainPlatformsBlockchainPlatformCollectionItem)[vs[1].(int)]
	}).(GetBlockchainPlatformsBlockchainPlatformCollectionItemOutput)
}

type GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetails struct {
	// List of OSNs
	Osns []GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsn `pulumi:"osns"`
	// List of Peers
	Peers []GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeer `pulumi:"peers"`
}

// GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsInput is an input type that accepts GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsArgs and GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOutput values.
// You can construct a concrete instance of `GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsInput` via:
//
//          GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsArgs{...}
type GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsInput interface {
	pulumi.Input

	ToGetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOutput() GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOutput
	ToGetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOutputWithContext(context.Context) GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOutput
}

type GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsArgs struct {
	// List of OSNs
	Osns GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnArrayInput `pulumi:"osns"`
	// List of Peers
	Peers GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerArrayInput `pulumi:"peers"`
}

func (GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetails)(nil)).Elem()
}

func (i GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsArgs) ToGetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOutput() GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOutput {
	return i.ToGetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOutputWithContext(context.Background())
}

func (i GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsArgs) ToGetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOutputWithContext(ctx context.Context) GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOutput)
}

type GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOutput struct{ *pulumi.OutputState }

func (GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetails)(nil)).Elem()
}

func (o GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOutput) ToGetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOutput() GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOutput {
	return o
}

func (o GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOutput) ToGetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOutputWithContext(ctx context.Context) GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOutput {
	return o
}

// List of OSNs
func (o GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOutput) Osns() GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnArrayOutput {
	return o.ApplyT(func(v GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetails) []GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsn {
		return v.Osns
	}).(GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnArrayOutput)
}

// List of Peers
func (o GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOutput) Peers() GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerArrayOutput {
	return o.ApplyT(func(v GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetails) []GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeer {
		return v.Peers
	}).(GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerArrayOutput)
}

type GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsn struct {
	// Availability Domain of peer
	Ad string `pulumi:"ad"`
	// OCPU allocation parameter
	OcpuAllocationParam GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnOcpuAllocationParam `pulumi:"ocpuAllocationParam"`
	// OSN identifier
	OsnKey string `pulumi:"osnKey"`
	// A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
	State string `pulumi:"state"`
}

// GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnInput is an input type that accepts GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnArgs and GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnOutput values.
// You can construct a concrete instance of `GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnInput` via:
//
//          GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnArgs{...}
type GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnInput interface {
	pulumi.Input

	ToGetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnOutput() GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnOutput
	ToGetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnOutputWithContext(context.Context) GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnOutput
}

type GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnArgs struct {
	// Availability Domain of peer
	Ad pulumi.StringInput `pulumi:"ad"`
	// OCPU allocation parameter
	OcpuAllocationParam GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnOcpuAllocationParamInput `pulumi:"ocpuAllocationParam"`
	// OSN identifier
	OsnKey pulumi.StringInput `pulumi:"osnKey"`
	// A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
	State pulumi.StringInput `pulumi:"state"`
}

func (GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsn)(nil)).Elem()
}

func (i GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnArgs) ToGetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnOutput() GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnOutput {
	return i.ToGetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnOutputWithContext(context.Background())
}

func (i GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnArgs) ToGetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnOutputWithContext(ctx context.Context) GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnOutput)
}

// GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnArrayInput is an input type that accepts GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnArray and GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnArrayOutput values.
// You can construct a concrete instance of `GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnArrayInput` via:
//
//          GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnArray{ GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnArgs{...} }
type GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnArrayInput interface {
	pulumi.Input

	ToGetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnArrayOutput() GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnArrayOutput
	ToGetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnArrayOutputWithContext(context.Context) GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnArrayOutput
}

type GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnArray []GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnInput

func (GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsn)(nil)).Elem()
}

func (i GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnArray) ToGetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnArrayOutput() GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnArrayOutput {
	return i.ToGetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnArrayOutputWithContext(context.Background())
}

func (i GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnArray) ToGetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnArrayOutputWithContext(ctx context.Context) GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnArrayOutput)
}

type GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnOutput struct{ *pulumi.OutputState }

func (GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsn)(nil)).Elem()
}

func (o GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnOutput) ToGetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnOutput() GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnOutput {
	return o
}

func (o GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnOutput) ToGetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnOutputWithContext(ctx context.Context) GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnOutput {
	return o
}

// Availability Domain of peer
func (o GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnOutput) Ad() pulumi.StringOutput {
	return o.ApplyT(func(v GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsn) string { return v.Ad }).(pulumi.StringOutput)
}

// OCPU allocation parameter
func (o GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnOutput) OcpuAllocationParam() GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnOcpuAllocationParamOutput {
	return o.ApplyT(func(v GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsn) GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnOcpuAllocationParam {
		return v.OcpuAllocationParam
	}).(GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnOcpuAllocationParamOutput)
}

// OSN identifier
func (o GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnOutput) OsnKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsn) string {
		return v.OsnKey
	}).(pulumi.StringOutput)
}

// A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
func (o GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsn) string {
		return v.State
	}).(pulumi.StringOutput)
}

type GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnArrayOutput struct{ *pulumi.OutputState }

func (GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsn)(nil)).Elem()
}

func (o GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnArrayOutput) ToGetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnArrayOutput() GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnArrayOutput {
	return o
}

func (o GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnArrayOutput) ToGetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnArrayOutputWithContext(ctx context.Context) GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnArrayOutput {
	return o
}

func (o GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnArrayOutput) Index(i pulumi.IntInput) GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsn {
		return vs[0].([]GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsn)[vs[1].(int)]
	}).(GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnOutput)
}

type GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnOcpuAllocationParam struct {
	// Number of OCPU allocation
	OcpuAllocationNumber float64 `pulumi:"ocpuAllocationNumber"`
}

// GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnOcpuAllocationParamInput is an input type that accepts GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnOcpuAllocationParamArgs and GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnOcpuAllocationParamOutput values.
// You can construct a concrete instance of `GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnOcpuAllocationParamInput` via:
//
//          GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnOcpuAllocationParamArgs{...}
type GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnOcpuAllocationParamInput interface {
	pulumi.Input

	ToGetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnOcpuAllocationParamOutput() GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnOcpuAllocationParamOutput
	ToGetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnOcpuAllocationParamOutputWithContext(context.Context) GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnOcpuAllocationParamOutput
}

type GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnOcpuAllocationParamArgs struct {
	// Number of OCPU allocation
	OcpuAllocationNumber pulumi.Float64Input `pulumi:"ocpuAllocationNumber"`
}

func (GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnOcpuAllocationParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnOcpuAllocationParam)(nil)).Elem()
}

func (i GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnOcpuAllocationParamArgs) ToGetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnOcpuAllocationParamOutput() GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnOcpuAllocationParamOutput {
	return i.ToGetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnOcpuAllocationParamOutputWithContext(context.Background())
}

func (i GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnOcpuAllocationParamArgs) ToGetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnOcpuAllocationParamOutputWithContext(ctx context.Context) GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnOcpuAllocationParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnOcpuAllocationParamOutput)
}

type GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnOcpuAllocationParamOutput struct{ *pulumi.OutputState }

func (GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnOcpuAllocationParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnOcpuAllocationParam)(nil)).Elem()
}

func (o GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnOcpuAllocationParamOutput) ToGetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnOcpuAllocationParamOutput() GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnOcpuAllocationParamOutput {
	return o
}

func (o GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnOcpuAllocationParamOutput) ToGetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnOcpuAllocationParamOutputWithContext(ctx context.Context) GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnOcpuAllocationParamOutput {
	return o
}

// Number of OCPU allocation
func (o GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnOcpuAllocationParamOutput) OcpuAllocationNumber() pulumi.Float64Output {
	return o.ApplyT(func(v GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnOcpuAllocationParam) float64 {
		return v.OcpuAllocationNumber
	}).(pulumi.Float64Output)
}

type GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeer struct {
	// Availability Domain of peer
	Ad string `pulumi:"ad"`
	// peer alias
	Alias string `pulumi:"alias"`
	// Host name of VM
	Host string `pulumi:"host"`
	// OCPU allocation parameter
	OcpuAllocationParam GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerOcpuAllocationParam `pulumi:"ocpuAllocationParam"`
	// peer identifier
	PeerKey string `pulumi:"peerKey"`
	// Peer role
	Role string `pulumi:"role"`
	// A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
	State string `pulumi:"state"`
}

// GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerInput is an input type that accepts GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerArgs and GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerOutput values.
// You can construct a concrete instance of `GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerInput` via:
//
//          GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerArgs{...}
type GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerInput interface {
	pulumi.Input

	ToGetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerOutput() GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerOutput
	ToGetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerOutputWithContext(context.Context) GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerOutput
}

type GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerArgs struct {
	// Availability Domain of peer
	Ad pulumi.StringInput `pulumi:"ad"`
	// peer alias
	Alias pulumi.StringInput `pulumi:"alias"`
	// Host name of VM
	Host pulumi.StringInput `pulumi:"host"`
	// OCPU allocation parameter
	OcpuAllocationParam GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerOcpuAllocationParamInput `pulumi:"ocpuAllocationParam"`
	// peer identifier
	PeerKey pulumi.StringInput `pulumi:"peerKey"`
	// Peer role
	Role pulumi.StringInput `pulumi:"role"`
	// A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
	State pulumi.StringInput `pulumi:"state"`
}

func (GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeer)(nil)).Elem()
}

func (i GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerArgs) ToGetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerOutput() GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerOutput {
	return i.ToGetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerOutputWithContext(context.Background())
}

func (i GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerArgs) ToGetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerOutputWithContext(ctx context.Context) GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerOutput)
}

// GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerArrayInput is an input type that accepts GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerArray and GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerArrayOutput values.
// You can construct a concrete instance of `GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerArrayInput` via:
//
//          GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerArray{ GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerArgs{...} }
type GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerArrayInput interface {
	pulumi.Input

	ToGetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerArrayOutput() GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerArrayOutput
	ToGetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerArrayOutputWithContext(context.Context) GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerArrayOutput
}

type GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerArray []GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerInput

func (GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeer)(nil)).Elem()
}

func (i GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerArray) ToGetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerArrayOutput() GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerArrayOutput {
	return i.ToGetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerArrayOutputWithContext(context.Background())
}

func (i GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerArray) ToGetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerArrayOutputWithContext(ctx context.Context) GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerArrayOutput)
}

type GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerOutput struct{ *pulumi.OutputState }

func (GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeer)(nil)).Elem()
}

func (o GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerOutput) ToGetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerOutput() GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerOutput {
	return o
}

func (o GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerOutput) ToGetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerOutputWithContext(ctx context.Context) GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerOutput {
	return o
}

// Availability Domain of peer
func (o GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerOutput) Ad() pulumi.StringOutput {
	return o.ApplyT(func(v GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeer) string { return v.Ad }).(pulumi.StringOutput)
}

// peer alias
func (o GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerOutput) Alias() pulumi.StringOutput {
	return o.ApplyT(func(v GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeer) string {
		return v.Alias
	}).(pulumi.StringOutput)
}

// Host name of VM
func (o GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeer) string {
		return v.Host
	}).(pulumi.StringOutput)
}

// OCPU allocation parameter
func (o GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerOutput) OcpuAllocationParam() GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerOcpuAllocationParamOutput {
	return o.ApplyT(func(v GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeer) GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerOcpuAllocationParam {
		return v.OcpuAllocationParam
	}).(GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerOcpuAllocationParamOutput)
}

// peer identifier
func (o GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerOutput) PeerKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeer) string {
		return v.PeerKey
	}).(pulumi.StringOutput)
}

// Peer role
func (o GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeer) string {
		return v.Role
	}).(pulumi.StringOutput)
}

// A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
func (o GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeer) string {
		return v.State
	}).(pulumi.StringOutput)
}

type GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerArrayOutput struct{ *pulumi.OutputState }

func (GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeer)(nil)).Elem()
}

func (o GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerArrayOutput) ToGetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerArrayOutput() GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerArrayOutput {
	return o
}

func (o GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerArrayOutput) ToGetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerArrayOutputWithContext(ctx context.Context) GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerArrayOutput {
	return o
}

func (o GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerArrayOutput) Index(i pulumi.IntInput) GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeer {
		return vs[0].([]GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeer)[vs[1].(int)]
	}).(GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerOutput)
}

type GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerOcpuAllocationParam struct {
	// Number of OCPU allocation
	OcpuAllocationNumber float64 `pulumi:"ocpuAllocationNumber"`
}

// GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerOcpuAllocationParamInput is an input type that accepts GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerOcpuAllocationParamArgs and GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerOcpuAllocationParamOutput values.
// You can construct a concrete instance of `GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerOcpuAllocationParamInput` via:
//
//          GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerOcpuAllocationParamArgs{...}
type GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerOcpuAllocationParamInput interface {
	pulumi.Input

	ToGetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerOcpuAllocationParamOutput() GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerOcpuAllocationParamOutput
	ToGetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerOcpuAllocationParamOutputWithContext(context.Context) GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerOcpuAllocationParamOutput
}

type GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerOcpuAllocationParamArgs struct {
	// Number of OCPU allocation
	OcpuAllocationNumber pulumi.Float64Input `pulumi:"ocpuAllocationNumber"`
}

func (GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerOcpuAllocationParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerOcpuAllocationParam)(nil)).Elem()
}

func (i GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerOcpuAllocationParamArgs) ToGetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerOcpuAllocationParamOutput() GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerOcpuAllocationParamOutput {
	return i.ToGetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerOcpuAllocationParamOutputWithContext(context.Background())
}

func (i GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerOcpuAllocationParamArgs) ToGetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerOcpuAllocationParamOutputWithContext(ctx context.Context) GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerOcpuAllocationParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerOcpuAllocationParamOutput)
}

type GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerOcpuAllocationParamOutput struct{ *pulumi.OutputState }

func (GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerOcpuAllocationParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerOcpuAllocationParam)(nil)).Elem()
}

func (o GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerOcpuAllocationParamOutput) ToGetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerOcpuAllocationParamOutput() GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerOcpuAllocationParamOutput {
	return o
}

func (o GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerOcpuAllocationParamOutput) ToGetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerOcpuAllocationParamOutputWithContext(ctx context.Context) GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerOcpuAllocationParamOutput {
	return o
}

// Number of OCPU allocation
func (o GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerOcpuAllocationParamOutput) OcpuAllocationNumber() pulumi.Float64Output {
	return o.ApplyT(func(v GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerOcpuAllocationParam) float64 {
		return v.OcpuAllocationNumber
	}).(pulumi.Float64Output)
}

type GetBlockchainPlatformsBlockchainPlatformCollectionItemHostOcpuUtilizationInfo struct {
	// Host name of VM
	Host string `pulumi:"host"`
	// Number of total OCPU capacity on the host
	OcpuCapacityNumber float64 `pulumi:"ocpuCapacityNumber"`
	// Number of OCPU utilized
	OcpuUtilizationNumber float64 `pulumi:"ocpuUtilizationNumber"`
}

// GetBlockchainPlatformsBlockchainPlatformCollectionItemHostOcpuUtilizationInfoInput is an input type that accepts GetBlockchainPlatformsBlockchainPlatformCollectionItemHostOcpuUtilizationInfoArgs and GetBlockchainPlatformsBlockchainPlatformCollectionItemHostOcpuUtilizationInfoOutput values.
// You can construct a concrete instance of `GetBlockchainPlatformsBlockchainPlatformCollectionItemHostOcpuUtilizationInfoInput` via:
//
//          GetBlockchainPlatformsBlockchainPlatformCollectionItemHostOcpuUtilizationInfoArgs{...}
type GetBlockchainPlatformsBlockchainPlatformCollectionItemHostOcpuUtilizationInfoInput interface {
	pulumi.Input

	ToGetBlockchainPlatformsBlockchainPlatformCollectionItemHostOcpuUtilizationInfoOutput() GetBlockchainPlatformsBlockchainPlatformCollectionItemHostOcpuUtilizationInfoOutput
	ToGetBlockchainPlatformsBlockchainPlatformCollectionItemHostOcpuUtilizationInfoOutputWithContext(context.Context) GetBlockchainPlatformsBlockchainPlatformCollectionItemHostOcpuUtilizationInfoOutput
}

type GetBlockchainPlatformsBlockchainPlatformCollectionItemHostOcpuUtilizationInfoArgs struct {
	// Host name of VM
	Host pulumi.StringInput `pulumi:"host"`
	// Number of total OCPU capacity on the host
	OcpuCapacityNumber pulumi.Float64Input `pulumi:"ocpuCapacityNumber"`
	// Number of OCPU utilized
	OcpuUtilizationNumber pulumi.Float64Input `pulumi:"ocpuUtilizationNumber"`
}

func (GetBlockchainPlatformsBlockchainPlatformCollectionItemHostOcpuUtilizationInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBlockchainPlatformsBlockchainPlatformCollectionItemHostOcpuUtilizationInfo)(nil)).Elem()
}

func (i GetBlockchainPlatformsBlockchainPlatformCollectionItemHostOcpuUtilizationInfoArgs) ToGetBlockchainPlatformsBlockchainPlatformCollectionItemHostOcpuUtilizationInfoOutput() GetBlockchainPlatformsBlockchainPlatformCollectionItemHostOcpuUtilizationInfoOutput {
	return i.ToGetBlockchainPlatformsBlockchainPlatformCollectionItemHostOcpuUtilizationInfoOutputWithContext(context.Background())
}

func (i GetBlockchainPlatformsBlockchainPlatformCollectionItemHostOcpuUtilizationInfoArgs) ToGetBlockchainPlatformsBlockchainPlatformCollectionItemHostOcpuUtilizationInfoOutputWithContext(ctx context.Context) GetBlockchainPlatformsBlockchainPlatformCollectionItemHostOcpuUtilizationInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBlockchainPlatformsBlockchainPlatformCollectionItemHostOcpuUtilizationInfoOutput)
}

// GetBlockchainPlatformsBlockchainPlatformCollectionItemHostOcpuUtilizationInfoArrayInput is an input type that accepts GetBlockchainPlatformsBlockchainPlatformCollectionItemHostOcpuUtilizationInfoArray and GetBlockchainPlatformsBlockchainPlatformCollectionItemHostOcpuUtilizationInfoArrayOutput values.
// You can construct a concrete instance of `GetBlockchainPlatformsBlockchainPlatformCollectionItemHostOcpuUtilizationInfoArrayInput` via:
//
//          GetBlockchainPlatformsBlockchainPlatformCollectionItemHostOcpuUtilizationInfoArray{ GetBlockchainPlatformsBlockchainPlatformCollectionItemHostOcpuUtilizationInfoArgs{...} }
type GetBlockchainPlatformsBlockchainPlatformCollectionItemHostOcpuUtilizationInfoArrayInput interface {
	pulumi.Input

	ToGetBlockchainPlatformsBlockchainPlatformCollectionItemHostOcpuUtilizationInfoArrayOutput() GetBlockchainPlatformsBlockchainPlatformCollectionItemHostOcpuUtilizationInfoArrayOutput
	ToGetBlockchainPlatformsBlockchainPlatformCollectionItemHostOcpuUtilizationInfoArrayOutputWithContext(context.Context) GetBlockchainPlatformsBlockchainPlatformCollectionItemHostOcpuUtilizationInfoArrayOutput
}

type GetBlockchainPlatformsBlockchainPlatformCollectionItemHostOcpuUtilizationInfoArray []GetBlockchainPlatformsBlockchainPlatformCollectionItemHostOcpuUtilizationInfoInput

func (GetBlockchainPlatformsBlockchainPlatformCollectionItemHostOcpuUtilizationInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBlockchainPlatformsBlockchainPlatformCollectionItemHostOcpuUtilizationInfo)(nil)).Elem()
}

func (i GetBlockchainPlatformsBlockchainPlatformCollectionItemHostOcpuUtilizationInfoArray) ToGetBlockchainPlatformsBlockchainPlatformCollectionItemHostOcpuUtilizationInfoArrayOutput() GetBlockchainPlatformsBlockchainPlatformCollectionItemHostOcpuUtilizationInfoArrayOutput {
	return i.ToGetBlockchainPlatformsBlockchainPlatformCollectionItemHostOcpuUtilizationInfoArrayOutputWithContext(context.Background())
}

func (i GetBlockchainPlatformsBlockchainPlatformCollectionItemHostOcpuUtilizationInfoArray) ToGetBlockchainPlatformsBlockchainPlatformCollectionItemHostOcpuUtilizationInfoArrayOutputWithContext(ctx context.Context) GetBlockchainPlatformsBlockchainPlatformCollectionItemHostOcpuUtilizationInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBlockchainPlatformsBlockchainPlatformCollectionItemHostOcpuUtilizationInfoArrayOutput)
}

type GetBlockchainPlatformsBlockchainPlatformCollectionItemHostOcpuUtilizationInfoOutput struct{ *pulumi.OutputState }

func (GetBlockchainPlatformsBlockchainPlatformCollectionItemHostOcpuUtilizationInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBlockchainPlatformsBlockchainPlatformCollectionItemHostOcpuUtilizationInfo)(nil)).Elem()
}

func (o GetBlockchainPlatformsBlockchainPlatformCollectionItemHostOcpuUtilizationInfoOutput) ToGetBlockchainPlatformsBlockchainPlatformCollectionItemHostOcpuUtilizationInfoOutput() GetBlockchainPlatformsBlockchainPlatformCollectionItemHostOcpuUtilizationInfoOutput {
	return o
}

func (o GetBlockchainPlatformsBlockchainPlatformCollectionItemHostOcpuUtilizationInfoOutput) ToGetBlockchainPlatformsBlockchainPlatformCollectionItemHostOcpuUtilizationInfoOutputWithContext(ctx context.Context) GetBlockchainPlatformsBlockchainPlatformCollectionItemHostOcpuUtilizationInfoOutput {
	return o
}

// Host name of VM
func (o GetBlockchainPlatformsBlockchainPlatformCollectionItemHostOcpuUtilizationInfoOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GetBlockchainPlatformsBlockchainPlatformCollectionItemHostOcpuUtilizationInfo) string {
		return v.Host
	}).(pulumi.StringOutput)
}

// Number of total OCPU capacity on the host
func (o GetBlockchainPlatformsBlockchainPlatformCollectionItemHostOcpuUtilizationInfoOutput) OcpuCapacityNumber() pulumi.Float64Output {
	return o.ApplyT(func(v GetBlockchainPlatformsBlockchainPlatformCollectionItemHostOcpuUtilizationInfo) float64 {
		return v.OcpuCapacityNumber
	}).(pulumi.Float64Output)
}

// Number of OCPU utilized
func (o GetBlockchainPlatformsBlockchainPlatformCollectionItemHostOcpuUtilizationInfoOutput) OcpuUtilizationNumber() pulumi.Float64Output {
	return o.ApplyT(func(v GetBlockchainPlatformsBlockchainPlatformCollectionItemHostOcpuUtilizationInfo) float64 {
		return v.OcpuUtilizationNumber
	}).(pulumi.Float64Output)
}

type GetBlockchainPlatformsBlockchainPlatformCollectionItemHostOcpuUtilizationInfoArrayOutput struct{ *pulumi.OutputState }

func (GetBlockchainPlatformsBlockchainPlatformCollectionItemHostOcpuUtilizationInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBlockchainPlatformsBlockchainPlatformCollectionItemHostOcpuUtilizationInfo)(nil)).Elem()
}

func (o GetBlockchainPlatformsBlockchainPlatformCollectionItemHostOcpuUtilizationInfoArrayOutput) ToGetBlockchainPlatformsBlockchainPlatformCollectionItemHostOcpuUtilizationInfoArrayOutput() GetBlockchainPlatformsBlockchainPlatformCollectionItemHostOcpuUtilizationInfoArrayOutput {
	return o
}

func (o GetBlockchainPlatformsBlockchainPlatformCollectionItemHostOcpuUtilizationInfoArrayOutput) ToGetBlockchainPlatformsBlockchainPlatformCollectionItemHostOcpuUtilizationInfoArrayOutputWithContext(ctx context.Context) GetBlockchainPlatformsBlockchainPlatformCollectionItemHostOcpuUtilizationInfoArrayOutput {
	return o
}

func (o GetBlockchainPlatformsBlockchainPlatformCollectionItemHostOcpuUtilizationInfoArrayOutput) Index(i pulumi.IntInput) GetBlockchainPlatformsBlockchainPlatformCollectionItemHostOcpuUtilizationInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBlockchainPlatformsBlockchainPlatformCollectionItemHostOcpuUtilizationInfo {
		return vs[0].([]GetBlockchainPlatformsBlockchainPlatformCollectionItemHostOcpuUtilizationInfo)[vs[1].(int)]
	}).(GetBlockchainPlatformsBlockchainPlatformCollectionItemHostOcpuUtilizationInfoOutput)
}

type GetBlockchainPlatformsBlockchainPlatformCollectionItemReplicas struct {
	// Number of CA replicas
	CaCount int `pulumi:"caCount"`
	// Number of console replicas
	ConsoleCount int `pulumi:"consoleCount"`
	// Number of REST proxy replicas
	ProxyCount int `pulumi:"proxyCount"`
}

// GetBlockchainPlatformsBlockchainPlatformCollectionItemReplicasInput is an input type that accepts GetBlockchainPlatformsBlockchainPlatformCollectionItemReplicasArgs and GetBlockchainPlatformsBlockchainPlatformCollectionItemReplicasOutput values.
// You can construct a concrete instance of `GetBlockchainPlatformsBlockchainPlatformCollectionItemReplicasInput` via:
//
//          GetBlockchainPlatformsBlockchainPlatformCollectionItemReplicasArgs{...}
type GetBlockchainPlatformsBlockchainPlatformCollectionItemReplicasInput interface {
	pulumi.Input

	ToGetBlockchainPlatformsBlockchainPlatformCollectionItemReplicasOutput() GetBlockchainPlatformsBlockchainPlatformCollectionItemReplicasOutput
	ToGetBlockchainPlatformsBlockchainPlatformCollectionItemReplicasOutputWithContext(context.Context) GetBlockchainPlatformsBlockchainPlatformCollectionItemReplicasOutput
}

type GetBlockchainPlatformsBlockchainPlatformCollectionItemReplicasArgs struct {
	// Number of CA replicas
	CaCount pulumi.IntInput `pulumi:"caCount"`
	// Number of console replicas
	ConsoleCount pulumi.IntInput `pulumi:"consoleCount"`
	// Number of REST proxy replicas
	ProxyCount pulumi.IntInput `pulumi:"proxyCount"`
}

func (GetBlockchainPlatformsBlockchainPlatformCollectionItemReplicasArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBlockchainPlatformsBlockchainPlatformCollectionItemReplicas)(nil)).Elem()
}

func (i GetBlockchainPlatformsBlockchainPlatformCollectionItemReplicasArgs) ToGetBlockchainPlatformsBlockchainPlatformCollectionItemReplicasOutput() GetBlockchainPlatformsBlockchainPlatformCollectionItemReplicasOutput {
	return i.ToGetBlockchainPlatformsBlockchainPlatformCollectionItemReplicasOutputWithContext(context.Background())
}

func (i GetBlockchainPlatformsBlockchainPlatformCollectionItemReplicasArgs) ToGetBlockchainPlatformsBlockchainPlatformCollectionItemReplicasOutputWithContext(ctx context.Context) GetBlockchainPlatformsBlockchainPlatformCollectionItemReplicasOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBlockchainPlatformsBlockchainPlatformCollectionItemReplicasOutput)
}

type GetBlockchainPlatformsBlockchainPlatformCollectionItemReplicasOutput struct{ *pulumi.OutputState }

func (GetBlockchainPlatformsBlockchainPlatformCollectionItemReplicasOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBlockchainPlatformsBlockchainPlatformCollectionItemReplicas)(nil)).Elem()
}

func (o GetBlockchainPlatformsBlockchainPlatformCollectionItemReplicasOutput) ToGetBlockchainPlatformsBlockchainPlatformCollectionItemReplicasOutput() GetBlockchainPlatformsBlockchainPlatformCollectionItemReplicasOutput {
	return o
}

func (o GetBlockchainPlatformsBlockchainPlatformCollectionItemReplicasOutput) ToGetBlockchainPlatformsBlockchainPlatformCollectionItemReplicasOutputWithContext(ctx context.Context) GetBlockchainPlatformsBlockchainPlatformCollectionItemReplicasOutput {
	return o
}

// Number of CA replicas
func (o GetBlockchainPlatformsBlockchainPlatformCollectionItemReplicasOutput) CaCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetBlockchainPlatformsBlockchainPlatformCollectionItemReplicas) int { return v.CaCount }).(pulumi.IntOutput)
}

// Number of console replicas
func (o GetBlockchainPlatformsBlockchainPlatformCollectionItemReplicasOutput) ConsoleCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetBlockchainPlatformsBlockchainPlatformCollectionItemReplicas) int { return v.ConsoleCount }).(pulumi.IntOutput)
}

// Number of REST proxy replicas
func (o GetBlockchainPlatformsBlockchainPlatformCollectionItemReplicasOutput) ProxyCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetBlockchainPlatformsBlockchainPlatformCollectionItemReplicas) int { return v.ProxyCount }).(pulumi.IntOutput)
}

type GetBlockchainPlatformsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetBlockchainPlatformsFilterInput is an input type that accepts GetBlockchainPlatformsFilterArgs and GetBlockchainPlatformsFilterOutput values.
// You can construct a concrete instance of `GetBlockchainPlatformsFilterInput` via:
//
//          GetBlockchainPlatformsFilterArgs{...}
type GetBlockchainPlatformsFilterInput interface {
	pulumi.Input

	ToGetBlockchainPlatformsFilterOutput() GetBlockchainPlatformsFilterOutput
	ToGetBlockchainPlatformsFilterOutputWithContext(context.Context) GetBlockchainPlatformsFilterOutput
}

type GetBlockchainPlatformsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetBlockchainPlatformsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBlockchainPlatformsFilter)(nil)).Elem()
}

func (i GetBlockchainPlatformsFilterArgs) ToGetBlockchainPlatformsFilterOutput() GetBlockchainPlatformsFilterOutput {
	return i.ToGetBlockchainPlatformsFilterOutputWithContext(context.Background())
}

func (i GetBlockchainPlatformsFilterArgs) ToGetBlockchainPlatformsFilterOutputWithContext(ctx context.Context) GetBlockchainPlatformsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBlockchainPlatformsFilterOutput)
}

// GetBlockchainPlatformsFilterArrayInput is an input type that accepts GetBlockchainPlatformsFilterArray and GetBlockchainPlatformsFilterArrayOutput values.
// You can construct a concrete instance of `GetBlockchainPlatformsFilterArrayInput` via:
//
//          GetBlockchainPlatformsFilterArray{ GetBlockchainPlatformsFilterArgs{...} }
type GetBlockchainPlatformsFilterArrayInput interface {
	pulumi.Input

	ToGetBlockchainPlatformsFilterArrayOutput() GetBlockchainPlatformsFilterArrayOutput
	ToGetBlockchainPlatformsFilterArrayOutputWithContext(context.Context) GetBlockchainPlatformsFilterArrayOutput
}

type GetBlockchainPlatformsFilterArray []GetBlockchainPlatformsFilterInput

func (GetBlockchainPlatformsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBlockchainPlatformsFilter)(nil)).Elem()
}

func (i GetBlockchainPlatformsFilterArray) ToGetBlockchainPlatformsFilterArrayOutput() GetBlockchainPlatformsFilterArrayOutput {
	return i.ToGetBlockchainPlatformsFilterArrayOutputWithContext(context.Background())
}

func (i GetBlockchainPlatformsFilterArray) ToGetBlockchainPlatformsFilterArrayOutputWithContext(ctx context.Context) GetBlockchainPlatformsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBlockchainPlatformsFilterArrayOutput)
}

type GetBlockchainPlatformsFilterOutput struct{ *pulumi.OutputState }

func (GetBlockchainPlatformsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBlockchainPlatformsFilter)(nil)).Elem()
}

func (o GetBlockchainPlatformsFilterOutput) ToGetBlockchainPlatformsFilterOutput() GetBlockchainPlatformsFilterOutput {
	return o
}

func (o GetBlockchainPlatformsFilterOutput) ToGetBlockchainPlatformsFilterOutputWithContext(ctx context.Context) GetBlockchainPlatformsFilterOutput {
	return o
}

func (o GetBlockchainPlatformsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetBlockchainPlatformsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetBlockchainPlatformsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetBlockchainPlatformsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetBlockchainPlatformsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetBlockchainPlatformsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetBlockchainPlatformsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetBlockchainPlatformsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBlockchainPlatformsFilter)(nil)).Elem()
}

func (o GetBlockchainPlatformsFilterArrayOutput) ToGetBlockchainPlatformsFilterArrayOutput() GetBlockchainPlatformsFilterArrayOutput {
	return o
}

func (o GetBlockchainPlatformsFilterArrayOutput) ToGetBlockchainPlatformsFilterArrayOutputWithContext(ctx context.Context) GetBlockchainPlatformsFilterArrayOutput {
	return o
}

func (o GetBlockchainPlatformsFilterArrayOutput) Index(i pulumi.IntInput) GetBlockchainPlatformsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBlockchainPlatformsFilter {
		return vs[0].([]GetBlockchainPlatformsFilter)[vs[1].(int)]
	}).(GetBlockchainPlatformsFilterOutput)
}

type GetOsnOcpuAllocationParam struct {
	// Number of OCPU allocation
	OcpuAllocationNumber float64 `pulumi:"ocpuAllocationNumber"`
}

// GetOsnOcpuAllocationParamInput is an input type that accepts GetOsnOcpuAllocationParamArgs and GetOsnOcpuAllocationParamOutput values.
// You can construct a concrete instance of `GetOsnOcpuAllocationParamInput` via:
//
//          GetOsnOcpuAllocationParamArgs{...}
type GetOsnOcpuAllocationParamInput interface {
	pulumi.Input

	ToGetOsnOcpuAllocationParamOutput() GetOsnOcpuAllocationParamOutput
	ToGetOsnOcpuAllocationParamOutputWithContext(context.Context) GetOsnOcpuAllocationParamOutput
}

type GetOsnOcpuAllocationParamArgs struct {
	// Number of OCPU allocation
	OcpuAllocationNumber pulumi.Float64Input `pulumi:"ocpuAllocationNumber"`
}

func (GetOsnOcpuAllocationParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOsnOcpuAllocationParam)(nil)).Elem()
}

func (i GetOsnOcpuAllocationParamArgs) ToGetOsnOcpuAllocationParamOutput() GetOsnOcpuAllocationParamOutput {
	return i.ToGetOsnOcpuAllocationParamOutputWithContext(context.Background())
}

func (i GetOsnOcpuAllocationParamArgs) ToGetOsnOcpuAllocationParamOutputWithContext(ctx context.Context) GetOsnOcpuAllocationParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOsnOcpuAllocationParamOutput)
}

type GetOsnOcpuAllocationParamOutput struct{ *pulumi.OutputState }

func (GetOsnOcpuAllocationParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOsnOcpuAllocationParam)(nil)).Elem()
}

func (o GetOsnOcpuAllocationParamOutput) ToGetOsnOcpuAllocationParamOutput() GetOsnOcpuAllocationParamOutput {
	return o
}

func (o GetOsnOcpuAllocationParamOutput) ToGetOsnOcpuAllocationParamOutputWithContext(ctx context.Context) GetOsnOcpuAllocationParamOutput {
	return o
}

// Number of OCPU allocation
func (o GetOsnOcpuAllocationParamOutput) OcpuAllocationNumber() pulumi.Float64Output {
	return o.ApplyT(func(v GetOsnOcpuAllocationParam) float64 { return v.OcpuAllocationNumber }).(pulumi.Float64Output)
}

type GetOsnsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetOsnsFilterInput is an input type that accepts GetOsnsFilterArgs and GetOsnsFilterOutput values.
// You can construct a concrete instance of `GetOsnsFilterInput` via:
//
//          GetOsnsFilterArgs{...}
type GetOsnsFilterInput interface {
	pulumi.Input

	ToGetOsnsFilterOutput() GetOsnsFilterOutput
	ToGetOsnsFilterOutputWithContext(context.Context) GetOsnsFilterOutput
}

type GetOsnsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetOsnsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOsnsFilter)(nil)).Elem()
}

func (i GetOsnsFilterArgs) ToGetOsnsFilterOutput() GetOsnsFilterOutput {
	return i.ToGetOsnsFilterOutputWithContext(context.Background())
}

func (i GetOsnsFilterArgs) ToGetOsnsFilterOutputWithContext(ctx context.Context) GetOsnsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOsnsFilterOutput)
}

// GetOsnsFilterArrayInput is an input type that accepts GetOsnsFilterArray and GetOsnsFilterArrayOutput values.
// You can construct a concrete instance of `GetOsnsFilterArrayInput` via:
//
//          GetOsnsFilterArray{ GetOsnsFilterArgs{...} }
type GetOsnsFilterArrayInput interface {
	pulumi.Input

	ToGetOsnsFilterArrayOutput() GetOsnsFilterArrayOutput
	ToGetOsnsFilterArrayOutputWithContext(context.Context) GetOsnsFilterArrayOutput
}

type GetOsnsFilterArray []GetOsnsFilterInput

func (GetOsnsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOsnsFilter)(nil)).Elem()
}

func (i GetOsnsFilterArray) ToGetOsnsFilterArrayOutput() GetOsnsFilterArrayOutput {
	return i.ToGetOsnsFilterArrayOutputWithContext(context.Background())
}

func (i GetOsnsFilterArray) ToGetOsnsFilterArrayOutputWithContext(ctx context.Context) GetOsnsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOsnsFilterArrayOutput)
}

type GetOsnsFilterOutput struct{ *pulumi.OutputState }

func (GetOsnsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOsnsFilter)(nil)).Elem()
}

func (o GetOsnsFilterOutput) ToGetOsnsFilterOutput() GetOsnsFilterOutput {
	return o
}

func (o GetOsnsFilterOutput) ToGetOsnsFilterOutputWithContext(ctx context.Context) GetOsnsFilterOutput {
	return o
}

func (o GetOsnsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetOsnsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetOsnsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetOsnsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetOsnsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetOsnsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetOsnsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetOsnsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOsnsFilter)(nil)).Elem()
}

func (o GetOsnsFilterArrayOutput) ToGetOsnsFilterArrayOutput() GetOsnsFilterArrayOutput {
	return o
}

func (o GetOsnsFilterArrayOutput) ToGetOsnsFilterArrayOutputWithContext(ctx context.Context) GetOsnsFilterArrayOutput {
	return o
}

func (o GetOsnsFilterArrayOutput) Index(i pulumi.IntInput) GetOsnsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOsnsFilter {
		return vs[0].([]GetOsnsFilter)[vs[1].(int)]
	}).(GetOsnsFilterOutput)
}

type GetOsnsOsnCollection struct {
	Items []GetOsnsOsnCollectionItem `pulumi:"items"`
}

// GetOsnsOsnCollectionInput is an input type that accepts GetOsnsOsnCollectionArgs and GetOsnsOsnCollectionOutput values.
// You can construct a concrete instance of `GetOsnsOsnCollectionInput` via:
//
//          GetOsnsOsnCollectionArgs{...}
type GetOsnsOsnCollectionInput interface {
	pulumi.Input

	ToGetOsnsOsnCollectionOutput() GetOsnsOsnCollectionOutput
	ToGetOsnsOsnCollectionOutputWithContext(context.Context) GetOsnsOsnCollectionOutput
}

type GetOsnsOsnCollectionArgs struct {
	Items GetOsnsOsnCollectionItemArrayInput `pulumi:"items"`
}

func (GetOsnsOsnCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOsnsOsnCollection)(nil)).Elem()
}

func (i GetOsnsOsnCollectionArgs) ToGetOsnsOsnCollectionOutput() GetOsnsOsnCollectionOutput {
	return i.ToGetOsnsOsnCollectionOutputWithContext(context.Background())
}

func (i GetOsnsOsnCollectionArgs) ToGetOsnsOsnCollectionOutputWithContext(ctx context.Context) GetOsnsOsnCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOsnsOsnCollectionOutput)
}

// GetOsnsOsnCollectionArrayInput is an input type that accepts GetOsnsOsnCollectionArray and GetOsnsOsnCollectionArrayOutput values.
// You can construct a concrete instance of `GetOsnsOsnCollectionArrayInput` via:
//
//          GetOsnsOsnCollectionArray{ GetOsnsOsnCollectionArgs{...} }
type GetOsnsOsnCollectionArrayInput interface {
	pulumi.Input

	ToGetOsnsOsnCollectionArrayOutput() GetOsnsOsnCollectionArrayOutput
	ToGetOsnsOsnCollectionArrayOutputWithContext(context.Context) GetOsnsOsnCollectionArrayOutput
}

type GetOsnsOsnCollectionArray []GetOsnsOsnCollectionInput

func (GetOsnsOsnCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOsnsOsnCollection)(nil)).Elem()
}

func (i GetOsnsOsnCollectionArray) ToGetOsnsOsnCollectionArrayOutput() GetOsnsOsnCollectionArrayOutput {
	return i.ToGetOsnsOsnCollectionArrayOutputWithContext(context.Background())
}

func (i GetOsnsOsnCollectionArray) ToGetOsnsOsnCollectionArrayOutputWithContext(ctx context.Context) GetOsnsOsnCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOsnsOsnCollectionArrayOutput)
}

type GetOsnsOsnCollectionOutput struct{ *pulumi.OutputState }

func (GetOsnsOsnCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOsnsOsnCollection)(nil)).Elem()
}

func (o GetOsnsOsnCollectionOutput) ToGetOsnsOsnCollectionOutput() GetOsnsOsnCollectionOutput {
	return o
}

func (o GetOsnsOsnCollectionOutput) ToGetOsnsOsnCollectionOutputWithContext(ctx context.Context) GetOsnsOsnCollectionOutput {
	return o
}

func (o GetOsnsOsnCollectionOutput) Items() GetOsnsOsnCollectionItemArrayOutput {
	return o.ApplyT(func(v GetOsnsOsnCollection) []GetOsnsOsnCollectionItem { return v.Items }).(GetOsnsOsnCollectionItemArrayOutput)
}

type GetOsnsOsnCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetOsnsOsnCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOsnsOsnCollection)(nil)).Elem()
}

func (o GetOsnsOsnCollectionArrayOutput) ToGetOsnsOsnCollectionArrayOutput() GetOsnsOsnCollectionArrayOutput {
	return o
}

func (o GetOsnsOsnCollectionArrayOutput) ToGetOsnsOsnCollectionArrayOutputWithContext(ctx context.Context) GetOsnsOsnCollectionArrayOutput {
	return o
}

func (o GetOsnsOsnCollectionArrayOutput) Index(i pulumi.IntInput) GetOsnsOsnCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOsnsOsnCollection {
		return vs[0].([]GetOsnsOsnCollection)[vs[1].(int)]
	}).(GetOsnsOsnCollectionOutput)
}

type GetOsnsOsnCollectionItem struct {
	// Availability Domain of OSN
	Ad string `pulumi:"ad"`
	// Unique service identifier.
	BlockchainPlatformId string `pulumi:"blockchainPlatformId"`
	// OCPU allocation parameter
	OcpuAllocationParam GetOsnsOsnCollectionItemOcpuAllocationParam `pulumi:"ocpuAllocationParam"`
	// OSN identifier
	OsnKey string `pulumi:"osnKey"`
	// The current state of the OSN.
	State string `pulumi:"state"`
}

// GetOsnsOsnCollectionItemInput is an input type that accepts GetOsnsOsnCollectionItemArgs and GetOsnsOsnCollectionItemOutput values.
// You can construct a concrete instance of `GetOsnsOsnCollectionItemInput` via:
//
//          GetOsnsOsnCollectionItemArgs{...}
type GetOsnsOsnCollectionItemInput interface {
	pulumi.Input

	ToGetOsnsOsnCollectionItemOutput() GetOsnsOsnCollectionItemOutput
	ToGetOsnsOsnCollectionItemOutputWithContext(context.Context) GetOsnsOsnCollectionItemOutput
}

type GetOsnsOsnCollectionItemArgs struct {
	// Availability Domain of OSN
	Ad pulumi.StringInput `pulumi:"ad"`
	// Unique service identifier.
	BlockchainPlatformId pulumi.StringInput `pulumi:"blockchainPlatformId"`
	// OCPU allocation parameter
	OcpuAllocationParam GetOsnsOsnCollectionItemOcpuAllocationParamInput `pulumi:"ocpuAllocationParam"`
	// OSN identifier
	OsnKey pulumi.StringInput `pulumi:"osnKey"`
	// The current state of the OSN.
	State pulumi.StringInput `pulumi:"state"`
}

func (GetOsnsOsnCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOsnsOsnCollectionItem)(nil)).Elem()
}

func (i GetOsnsOsnCollectionItemArgs) ToGetOsnsOsnCollectionItemOutput() GetOsnsOsnCollectionItemOutput {
	return i.ToGetOsnsOsnCollectionItemOutputWithContext(context.Background())
}

func (i GetOsnsOsnCollectionItemArgs) ToGetOsnsOsnCollectionItemOutputWithContext(ctx context.Context) GetOsnsOsnCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOsnsOsnCollectionItemOutput)
}

// GetOsnsOsnCollectionItemArrayInput is an input type that accepts GetOsnsOsnCollectionItemArray and GetOsnsOsnCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetOsnsOsnCollectionItemArrayInput` via:
//
//          GetOsnsOsnCollectionItemArray{ GetOsnsOsnCollectionItemArgs{...} }
type GetOsnsOsnCollectionItemArrayInput interface {
	pulumi.Input

	ToGetOsnsOsnCollectionItemArrayOutput() GetOsnsOsnCollectionItemArrayOutput
	ToGetOsnsOsnCollectionItemArrayOutputWithContext(context.Context) GetOsnsOsnCollectionItemArrayOutput
}

type GetOsnsOsnCollectionItemArray []GetOsnsOsnCollectionItemInput

func (GetOsnsOsnCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOsnsOsnCollectionItem)(nil)).Elem()
}

func (i GetOsnsOsnCollectionItemArray) ToGetOsnsOsnCollectionItemArrayOutput() GetOsnsOsnCollectionItemArrayOutput {
	return i.ToGetOsnsOsnCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetOsnsOsnCollectionItemArray) ToGetOsnsOsnCollectionItemArrayOutputWithContext(ctx context.Context) GetOsnsOsnCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOsnsOsnCollectionItemArrayOutput)
}

type GetOsnsOsnCollectionItemOutput struct{ *pulumi.OutputState }

func (GetOsnsOsnCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOsnsOsnCollectionItem)(nil)).Elem()
}

func (o GetOsnsOsnCollectionItemOutput) ToGetOsnsOsnCollectionItemOutput() GetOsnsOsnCollectionItemOutput {
	return o
}

func (o GetOsnsOsnCollectionItemOutput) ToGetOsnsOsnCollectionItemOutputWithContext(ctx context.Context) GetOsnsOsnCollectionItemOutput {
	return o
}

// Availability Domain of OSN
func (o GetOsnsOsnCollectionItemOutput) Ad() pulumi.StringOutput {
	return o.ApplyT(func(v GetOsnsOsnCollectionItem) string { return v.Ad }).(pulumi.StringOutput)
}

// Unique service identifier.
func (o GetOsnsOsnCollectionItemOutput) BlockchainPlatformId() pulumi.StringOutput {
	return o.ApplyT(func(v GetOsnsOsnCollectionItem) string { return v.BlockchainPlatformId }).(pulumi.StringOutput)
}

// OCPU allocation parameter
func (o GetOsnsOsnCollectionItemOutput) OcpuAllocationParam() GetOsnsOsnCollectionItemOcpuAllocationParamOutput {
	return o.ApplyT(func(v GetOsnsOsnCollectionItem) GetOsnsOsnCollectionItemOcpuAllocationParam {
		return v.OcpuAllocationParam
	}).(GetOsnsOsnCollectionItemOcpuAllocationParamOutput)
}

// OSN identifier
func (o GetOsnsOsnCollectionItemOutput) OsnKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetOsnsOsnCollectionItem) string { return v.OsnKey }).(pulumi.StringOutput)
}

// The current state of the OSN.
func (o GetOsnsOsnCollectionItemOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetOsnsOsnCollectionItem) string { return v.State }).(pulumi.StringOutput)
}

type GetOsnsOsnCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetOsnsOsnCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOsnsOsnCollectionItem)(nil)).Elem()
}

func (o GetOsnsOsnCollectionItemArrayOutput) ToGetOsnsOsnCollectionItemArrayOutput() GetOsnsOsnCollectionItemArrayOutput {
	return o
}

func (o GetOsnsOsnCollectionItemArrayOutput) ToGetOsnsOsnCollectionItemArrayOutputWithContext(ctx context.Context) GetOsnsOsnCollectionItemArrayOutput {
	return o
}

func (o GetOsnsOsnCollectionItemArrayOutput) Index(i pulumi.IntInput) GetOsnsOsnCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOsnsOsnCollectionItem {
		return vs[0].([]GetOsnsOsnCollectionItem)[vs[1].(int)]
	}).(GetOsnsOsnCollectionItemOutput)
}

type GetOsnsOsnCollectionItemOcpuAllocationParam struct {
	// Number of OCPU allocation
	OcpuAllocationNumber float64 `pulumi:"ocpuAllocationNumber"`
}

// GetOsnsOsnCollectionItemOcpuAllocationParamInput is an input type that accepts GetOsnsOsnCollectionItemOcpuAllocationParamArgs and GetOsnsOsnCollectionItemOcpuAllocationParamOutput values.
// You can construct a concrete instance of `GetOsnsOsnCollectionItemOcpuAllocationParamInput` via:
//
//          GetOsnsOsnCollectionItemOcpuAllocationParamArgs{...}
type GetOsnsOsnCollectionItemOcpuAllocationParamInput interface {
	pulumi.Input

	ToGetOsnsOsnCollectionItemOcpuAllocationParamOutput() GetOsnsOsnCollectionItemOcpuAllocationParamOutput
	ToGetOsnsOsnCollectionItemOcpuAllocationParamOutputWithContext(context.Context) GetOsnsOsnCollectionItemOcpuAllocationParamOutput
}

type GetOsnsOsnCollectionItemOcpuAllocationParamArgs struct {
	// Number of OCPU allocation
	OcpuAllocationNumber pulumi.Float64Input `pulumi:"ocpuAllocationNumber"`
}

func (GetOsnsOsnCollectionItemOcpuAllocationParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOsnsOsnCollectionItemOcpuAllocationParam)(nil)).Elem()
}

func (i GetOsnsOsnCollectionItemOcpuAllocationParamArgs) ToGetOsnsOsnCollectionItemOcpuAllocationParamOutput() GetOsnsOsnCollectionItemOcpuAllocationParamOutput {
	return i.ToGetOsnsOsnCollectionItemOcpuAllocationParamOutputWithContext(context.Background())
}

func (i GetOsnsOsnCollectionItemOcpuAllocationParamArgs) ToGetOsnsOsnCollectionItemOcpuAllocationParamOutputWithContext(ctx context.Context) GetOsnsOsnCollectionItemOcpuAllocationParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOsnsOsnCollectionItemOcpuAllocationParamOutput)
}

type GetOsnsOsnCollectionItemOcpuAllocationParamOutput struct{ *pulumi.OutputState }

func (GetOsnsOsnCollectionItemOcpuAllocationParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOsnsOsnCollectionItemOcpuAllocationParam)(nil)).Elem()
}

func (o GetOsnsOsnCollectionItemOcpuAllocationParamOutput) ToGetOsnsOsnCollectionItemOcpuAllocationParamOutput() GetOsnsOsnCollectionItemOcpuAllocationParamOutput {
	return o
}

func (o GetOsnsOsnCollectionItemOcpuAllocationParamOutput) ToGetOsnsOsnCollectionItemOcpuAllocationParamOutputWithContext(ctx context.Context) GetOsnsOsnCollectionItemOcpuAllocationParamOutput {
	return o
}

// Number of OCPU allocation
func (o GetOsnsOsnCollectionItemOcpuAllocationParamOutput) OcpuAllocationNumber() pulumi.Float64Output {
	return o.ApplyT(func(v GetOsnsOsnCollectionItemOcpuAllocationParam) float64 { return v.OcpuAllocationNumber }).(pulumi.Float64Output)
}

type GetPeerOcpuAllocationParam struct {
	// Number of OCPU allocation
	OcpuAllocationNumber float64 `pulumi:"ocpuAllocationNumber"`
}

// GetPeerOcpuAllocationParamInput is an input type that accepts GetPeerOcpuAllocationParamArgs and GetPeerOcpuAllocationParamOutput values.
// You can construct a concrete instance of `GetPeerOcpuAllocationParamInput` via:
//
//          GetPeerOcpuAllocationParamArgs{...}
type GetPeerOcpuAllocationParamInput interface {
	pulumi.Input

	ToGetPeerOcpuAllocationParamOutput() GetPeerOcpuAllocationParamOutput
	ToGetPeerOcpuAllocationParamOutputWithContext(context.Context) GetPeerOcpuAllocationParamOutput
}

type GetPeerOcpuAllocationParamArgs struct {
	// Number of OCPU allocation
	OcpuAllocationNumber pulumi.Float64Input `pulumi:"ocpuAllocationNumber"`
}

func (GetPeerOcpuAllocationParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPeerOcpuAllocationParam)(nil)).Elem()
}

func (i GetPeerOcpuAllocationParamArgs) ToGetPeerOcpuAllocationParamOutput() GetPeerOcpuAllocationParamOutput {
	return i.ToGetPeerOcpuAllocationParamOutputWithContext(context.Background())
}

func (i GetPeerOcpuAllocationParamArgs) ToGetPeerOcpuAllocationParamOutputWithContext(ctx context.Context) GetPeerOcpuAllocationParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPeerOcpuAllocationParamOutput)
}

type GetPeerOcpuAllocationParamOutput struct{ *pulumi.OutputState }

func (GetPeerOcpuAllocationParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPeerOcpuAllocationParam)(nil)).Elem()
}

func (o GetPeerOcpuAllocationParamOutput) ToGetPeerOcpuAllocationParamOutput() GetPeerOcpuAllocationParamOutput {
	return o
}

func (o GetPeerOcpuAllocationParamOutput) ToGetPeerOcpuAllocationParamOutputWithContext(ctx context.Context) GetPeerOcpuAllocationParamOutput {
	return o
}

// Number of OCPU allocation
func (o GetPeerOcpuAllocationParamOutput) OcpuAllocationNumber() pulumi.Float64Output {
	return o.ApplyT(func(v GetPeerOcpuAllocationParam) float64 { return v.OcpuAllocationNumber }).(pulumi.Float64Output)
}

type GetPeersFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetPeersFilterInput is an input type that accepts GetPeersFilterArgs and GetPeersFilterOutput values.
// You can construct a concrete instance of `GetPeersFilterInput` via:
//
//          GetPeersFilterArgs{...}
type GetPeersFilterInput interface {
	pulumi.Input

	ToGetPeersFilterOutput() GetPeersFilterOutput
	ToGetPeersFilterOutputWithContext(context.Context) GetPeersFilterOutput
}

type GetPeersFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetPeersFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPeersFilter)(nil)).Elem()
}

func (i GetPeersFilterArgs) ToGetPeersFilterOutput() GetPeersFilterOutput {
	return i.ToGetPeersFilterOutputWithContext(context.Background())
}

func (i GetPeersFilterArgs) ToGetPeersFilterOutputWithContext(ctx context.Context) GetPeersFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPeersFilterOutput)
}

// GetPeersFilterArrayInput is an input type that accepts GetPeersFilterArray and GetPeersFilterArrayOutput values.
// You can construct a concrete instance of `GetPeersFilterArrayInput` via:
//
//          GetPeersFilterArray{ GetPeersFilterArgs{...} }
type GetPeersFilterArrayInput interface {
	pulumi.Input

	ToGetPeersFilterArrayOutput() GetPeersFilterArrayOutput
	ToGetPeersFilterArrayOutputWithContext(context.Context) GetPeersFilterArrayOutput
}

type GetPeersFilterArray []GetPeersFilterInput

func (GetPeersFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPeersFilter)(nil)).Elem()
}

func (i GetPeersFilterArray) ToGetPeersFilterArrayOutput() GetPeersFilterArrayOutput {
	return i.ToGetPeersFilterArrayOutputWithContext(context.Background())
}

func (i GetPeersFilterArray) ToGetPeersFilterArrayOutputWithContext(ctx context.Context) GetPeersFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPeersFilterArrayOutput)
}

type GetPeersFilterOutput struct{ *pulumi.OutputState }

func (GetPeersFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPeersFilter)(nil)).Elem()
}

func (o GetPeersFilterOutput) ToGetPeersFilterOutput() GetPeersFilterOutput {
	return o
}

func (o GetPeersFilterOutput) ToGetPeersFilterOutputWithContext(ctx context.Context) GetPeersFilterOutput {
	return o
}

func (o GetPeersFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPeersFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetPeersFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetPeersFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetPeersFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPeersFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetPeersFilterArrayOutput struct{ *pulumi.OutputState }

func (GetPeersFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPeersFilter)(nil)).Elem()
}

func (o GetPeersFilterArrayOutput) ToGetPeersFilterArrayOutput() GetPeersFilterArrayOutput {
	return o
}

func (o GetPeersFilterArrayOutput) ToGetPeersFilterArrayOutputWithContext(ctx context.Context) GetPeersFilterArrayOutput {
	return o
}

func (o GetPeersFilterArrayOutput) Index(i pulumi.IntInput) GetPeersFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPeersFilter {
		return vs[0].([]GetPeersFilter)[vs[1].(int)]
	}).(GetPeersFilterOutput)
}

type GetPeersPeerCollection struct {
	Items []GetPeersPeerCollectionItem `pulumi:"items"`
}

// GetPeersPeerCollectionInput is an input type that accepts GetPeersPeerCollectionArgs and GetPeersPeerCollectionOutput values.
// You can construct a concrete instance of `GetPeersPeerCollectionInput` via:
//
//          GetPeersPeerCollectionArgs{...}
type GetPeersPeerCollectionInput interface {
	pulumi.Input

	ToGetPeersPeerCollectionOutput() GetPeersPeerCollectionOutput
	ToGetPeersPeerCollectionOutputWithContext(context.Context) GetPeersPeerCollectionOutput
}

type GetPeersPeerCollectionArgs struct {
	Items GetPeersPeerCollectionItemArrayInput `pulumi:"items"`
}

func (GetPeersPeerCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPeersPeerCollection)(nil)).Elem()
}

func (i GetPeersPeerCollectionArgs) ToGetPeersPeerCollectionOutput() GetPeersPeerCollectionOutput {
	return i.ToGetPeersPeerCollectionOutputWithContext(context.Background())
}

func (i GetPeersPeerCollectionArgs) ToGetPeersPeerCollectionOutputWithContext(ctx context.Context) GetPeersPeerCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPeersPeerCollectionOutput)
}

// GetPeersPeerCollectionArrayInput is an input type that accepts GetPeersPeerCollectionArray and GetPeersPeerCollectionArrayOutput values.
// You can construct a concrete instance of `GetPeersPeerCollectionArrayInput` via:
//
//          GetPeersPeerCollectionArray{ GetPeersPeerCollectionArgs{...} }
type GetPeersPeerCollectionArrayInput interface {
	pulumi.Input

	ToGetPeersPeerCollectionArrayOutput() GetPeersPeerCollectionArrayOutput
	ToGetPeersPeerCollectionArrayOutputWithContext(context.Context) GetPeersPeerCollectionArrayOutput
}

type GetPeersPeerCollectionArray []GetPeersPeerCollectionInput

func (GetPeersPeerCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPeersPeerCollection)(nil)).Elem()
}

func (i GetPeersPeerCollectionArray) ToGetPeersPeerCollectionArrayOutput() GetPeersPeerCollectionArrayOutput {
	return i.ToGetPeersPeerCollectionArrayOutputWithContext(context.Background())
}

func (i GetPeersPeerCollectionArray) ToGetPeersPeerCollectionArrayOutputWithContext(ctx context.Context) GetPeersPeerCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPeersPeerCollectionArrayOutput)
}

type GetPeersPeerCollectionOutput struct{ *pulumi.OutputState }

func (GetPeersPeerCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPeersPeerCollection)(nil)).Elem()
}

func (o GetPeersPeerCollectionOutput) ToGetPeersPeerCollectionOutput() GetPeersPeerCollectionOutput {
	return o
}

func (o GetPeersPeerCollectionOutput) ToGetPeersPeerCollectionOutputWithContext(ctx context.Context) GetPeersPeerCollectionOutput {
	return o
}

func (o GetPeersPeerCollectionOutput) Items() GetPeersPeerCollectionItemArrayOutput {
	return o.ApplyT(func(v GetPeersPeerCollection) []GetPeersPeerCollectionItem { return v.Items }).(GetPeersPeerCollectionItemArrayOutput)
}

type GetPeersPeerCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetPeersPeerCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPeersPeerCollection)(nil)).Elem()
}

func (o GetPeersPeerCollectionArrayOutput) ToGetPeersPeerCollectionArrayOutput() GetPeersPeerCollectionArrayOutput {
	return o
}

func (o GetPeersPeerCollectionArrayOutput) ToGetPeersPeerCollectionArrayOutputWithContext(ctx context.Context) GetPeersPeerCollectionArrayOutput {
	return o
}

func (o GetPeersPeerCollectionArrayOutput) Index(i pulumi.IntInput) GetPeersPeerCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPeersPeerCollection {
		return vs[0].([]GetPeersPeerCollection)[vs[1].(int)]
	}).(GetPeersPeerCollectionOutput)
}

type GetPeersPeerCollectionItem struct {
	// Availability Domain of peer
	Ad string `pulumi:"ad"`
	// peer alias
	Alias string `pulumi:"alias"`
	// Unique service identifier.
	BlockchainPlatformId string `pulumi:"blockchainPlatformId"`
	// Host on which the Peer exists
	Host string `pulumi:"host"`
	// OCPU allocation parameter
	OcpuAllocationParam GetPeersPeerCollectionItemOcpuAllocationParam `pulumi:"ocpuAllocationParam"`
	// peer identifier
	PeerKey string `pulumi:"peerKey"`
	// Peer role
	Role string `pulumi:"role"`
	// The current state of the peer.
	State string `pulumi:"state"`
}

// GetPeersPeerCollectionItemInput is an input type that accepts GetPeersPeerCollectionItemArgs and GetPeersPeerCollectionItemOutput values.
// You can construct a concrete instance of `GetPeersPeerCollectionItemInput` via:
//
//          GetPeersPeerCollectionItemArgs{...}
type GetPeersPeerCollectionItemInput interface {
	pulumi.Input

	ToGetPeersPeerCollectionItemOutput() GetPeersPeerCollectionItemOutput
	ToGetPeersPeerCollectionItemOutputWithContext(context.Context) GetPeersPeerCollectionItemOutput
}

type GetPeersPeerCollectionItemArgs struct {
	// Availability Domain of peer
	Ad pulumi.StringInput `pulumi:"ad"`
	// peer alias
	Alias pulumi.StringInput `pulumi:"alias"`
	// Unique service identifier.
	BlockchainPlatformId pulumi.StringInput `pulumi:"blockchainPlatformId"`
	// Host on which the Peer exists
	Host pulumi.StringInput `pulumi:"host"`
	// OCPU allocation parameter
	OcpuAllocationParam GetPeersPeerCollectionItemOcpuAllocationParamInput `pulumi:"ocpuAllocationParam"`
	// peer identifier
	PeerKey pulumi.StringInput `pulumi:"peerKey"`
	// Peer role
	Role pulumi.StringInput `pulumi:"role"`
	// The current state of the peer.
	State pulumi.StringInput `pulumi:"state"`
}

func (GetPeersPeerCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPeersPeerCollectionItem)(nil)).Elem()
}

func (i GetPeersPeerCollectionItemArgs) ToGetPeersPeerCollectionItemOutput() GetPeersPeerCollectionItemOutput {
	return i.ToGetPeersPeerCollectionItemOutputWithContext(context.Background())
}

func (i GetPeersPeerCollectionItemArgs) ToGetPeersPeerCollectionItemOutputWithContext(ctx context.Context) GetPeersPeerCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPeersPeerCollectionItemOutput)
}

// GetPeersPeerCollectionItemArrayInput is an input type that accepts GetPeersPeerCollectionItemArray and GetPeersPeerCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetPeersPeerCollectionItemArrayInput` via:
//
//          GetPeersPeerCollectionItemArray{ GetPeersPeerCollectionItemArgs{...} }
type GetPeersPeerCollectionItemArrayInput interface {
	pulumi.Input

	ToGetPeersPeerCollectionItemArrayOutput() GetPeersPeerCollectionItemArrayOutput
	ToGetPeersPeerCollectionItemArrayOutputWithContext(context.Context) GetPeersPeerCollectionItemArrayOutput
}

type GetPeersPeerCollectionItemArray []GetPeersPeerCollectionItemInput

func (GetPeersPeerCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPeersPeerCollectionItem)(nil)).Elem()
}

func (i GetPeersPeerCollectionItemArray) ToGetPeersPeerCollectionItemArrayOutput() GetPeersPeerCollectionItemArrayOutput {
	return i.ToGetPeersPeerCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetPeersPeerCollectionItemArray) ToGetPeersPeerCollectionItemArrayOutputWithContext(ctx context.Context) GetPeersPeerCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPeersPeerCollectionItemArrayOutput)
}

type GetPeersPeerCollectionItemOutput struct{ *pulumi.OutputState }

func (GetPeersPeerCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPeersPeerCollectionItem)(nil)).Elem()
}

func (o GetPeersPeerCollectionItemOutput) ToGetPeersPeerCollectionItemOutput() GetPeersPeerCollectionItemOutput {
	return o
}

func (o GetPeersPeerCollectionItemOutput) ToGetPeersPeerCollectionItemOutputWithContext(ctx context.Context) GetPeersPeerCollectionItemOutput {
	return o
}

// Availability Domain of peer
func (o GetPeersPeerCollectionItemOutput) Ad() pulumi.StringOutput {
	return o.ApplyT(func(v GetPeersPeerCollectionItem) string { return v.Ad }).(pulumi.StringOutput)
}

// peer alias
func (o GetPeersPeerCollectionItemOutput) Alias() pulumi.StringOutput {
	return o.ApplyT(func(v GetPeersPeerCollectionItem) string { return v.Alias }).(pulumi.StringOutput)
}

// Unique service identifier.
func (o GetPeersPeerCollectionItemOutput) BlockchainPlatformId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPeersPeerCollectionItem) string { return v.BlockchainPlatformId }).(pulumi.StringOutput)
}

// Host on which the Peer exists
func (o GetPeersPeerCollectionItemOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GetPeersPeerCollectionItem) string { return v.Host }).(pulumi.StringOutput)
}

// OCPU allocation parameter
func (o GetPeersPeerCollectionItemOutput) OcpuAllocationParam() GetPeersPeerCollectionItemOcpuAllocationParamOutput {
	return o.ApplyT(func(v GetPeersPeerCollectionItem) GetPeersPeerCollectionItemOcpuAllocationParam {
		return v.OcpuAllocationParam
	}).(GetPeersPeerCollectionItemOcpuAllocationParamOutput)
}

// peer identifier
func (o GetPeersPeerCollectionItemOutput) PeerKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetPeersPeerCollectionItem) string { return v.PeerKey }).(pulumi.StringOutput)
}

// Peer role
func (o GetPeersPeerCollectionItemOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v GetPeersPeerCollectionItem) string { return v.Role }).(pulumi.StringOutput)
}

// The current state of the peer.
func (o GetPeersPeerCollectionItemOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetPeersPeerCollectionItem) string { return v.State }).(pulumi.StringOutput)
}

type GetPeersPeerCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetPeersPeerCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPeersPeerCollectionItem)(nil)).Elem()
}

func (o GetPeersPeerCollectionItemArrayOutput) ToGetPeersPeerCollectionItemArrayOutput() GetPeersPeerCollectionItemArrayOutput {
	return o
}

func (o GetPeersPeerCollectionItemArrayOutput) ToGetPeersPeerCollectionItemArrayOutputWithContext(ctx context.Context) GetPeersPeerCollectionItemArrayOutput {
	return o
}

func (o GetPeersPeerCollectionItemArrayOutput) Index(i pulumi.IntInput) GetPeersPeerCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPeersPeerCollectionItem {
		return vs[0].([]GetPeersPeerCollectionItem)[vs[1].(int)]
	}).(GetPeersPeerCollectionItemOutput)
}

type GetPeersPeerCollectionItemOcpuAllocationParam struct {
	// Number of OCPU allocation
	OcpuAllocationNumber float64 `pulumi:"ocpuAllocationNumber"`
}

// GetPeersPeerCollectionItemOcpuAllocationParamInput is an input type that accepts GetPeersPeerCollectionItemOcpuAllocationParamArgs and GetPeersPeerCollectionItemOcpuAllocationParamOutput values.
// You can construct a concrete instance of `GetPeersPeerCollectionItemOcpuAllocationParamInput` via:
//
//          GetPeersPeerCollectionItemOcpuAllocationParamArgs{...}
type GetPeersPeerCollectionItemOcpuAllocationParamInput interface {
	pulumi.Input

	ToGetPeersPeerCollectionItemOcpuAllocationParamOutput() GetPeersPeerCollectionItemOcpuAllocationParamOutput
	ToGetPeersPeerCollectionItemOcpuAllocationParamOutputWithContext(context.Context) GetPeersPeerCollectionItemOcpuAllocationParamOutput
}

type GetPeersPeerCollectionItemOcpuAllocationParamArgs struct {
	// Number of OCPU allocation
	OcpuAllocationNumber pulumi.Float64Input `pulumi:"ocpuAllocationNumber"`
}

func (GetPeersPeerCollectionItemOcpuAllocationParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPeersPeerCollectionItemOcpuAllocationParam)(nil)).Elem()
}

func (i GetPeersPeerCollectionItemOcpuAllocationParamArgs) ToGetPeersPeerCollectionItemOcpuAllocationParamOutput() GetPeersPeerCollectionItemOcpuAllocationParamOutput {
	return i.ToGetPeersPeerCollectionItemOcpuAllocationParamOutputWithContext(context.Background())
}

func (i GetPeersPeerCollectionItemOcpuAllocationParamArgs) ToGetPeersPeerCollectionItemOcpuAllocationParamOutputWithContext(ctx context.Context) GetPeersPeerCollectionItemOcpuAllocationParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPeersPeerCollectionItemOcpuAllocationParamOutput)
}

type GetPeersPeerCollectionItemOcpuAllocationParamOutput struct{ *pulumi.OutputState }

func (GetPeersPeerCollectionItemOcpuAllocationParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPeersPeerCollectionItemOcpuAllocationParam)(nil)).Elem()
}

func (o GetPeersPeerCollectionItemOcpuAllocationParamOutput) ToGetPeersPeerCollectionItemOcpuAllocationParamOutput() GetPeersPeerCollectionItemOcpuAllocationParamOutput {
	return o
}

func (o GetPeersPeerCollectionItemOcpuAllocationParamOutput) ToGetPeersPeerCollectionItemOcpuAllocationParamOutputWithContext(ctx context.Context) GetPeersPeerCollectionItemOcpuAllocationParamOutput {
	return o
}

// Number of OCPU allocation
func (o GetPeersPeerCollectionItemOcpuAllocationParamOutput) OcpuAllocationNumber() pulumi.Float64Output {
	return o.ApplyT(func(v GetPeersPeerCollectionItemOcpuAllocationParam) float64 { return v.OcpuAllocationNumber }).(pulumi.Float64Output)
}

func init() {
	pulumi.RegisterOutputType(BlockchainPlatformComponentDetailsOutput{})
	pulumi.RegisterOutputType(BlockchainPlatformComponentDetailsPtrOutput{})
	pulumi.RegisterOutputType(BlockchainPlatformComponentDetailsOsnOutput{})
	pulumi.RegisterOutputType(BlockchainPlatformComponentDetailsOsnArrayOutput{})
	pulumi.RegisterOutputType(BlockchainPlatformComponentDetailsOsnOcpuAllocationParamOutput{})
	pulumi.RegisterOutputType(BlockchainPlatformComponentDetailsOsnOcpuAllocationParamPtrOutput{})
	pulumi.RegisterOutputType(BlockchainPlatformComponentDetailsPeerOutput{})
	pulumi.RegisterOutputType(BlockchainPlatformComponentDetailsPeerArrayOutput{})
	pulumi.RegisterOutputType(BlockchainPlatformComponentDetailsPeerOcpuAllocationParamOutput{})
	pulumi.RegisterOutputType(BlockchainPlatformComponentDetailsPeerOcpuAllocationParamPtrOutput{})
	pulumi.RegisterOutputType(BlockchainPlatformHostOcpuUtilizationInfoOutput{})
	pulumi.RegisterOutputType(BlockchainPlatformHostOcpuUtilizationInfoArrayOutput{})
	pulumi.RegisterOutputType(BlockchainPlatformReplicasOutput{})
	pulumi.RegisterOutputType(BlockchainPlatformReplicasPtrOutput{})
	pulumi.RegisterOutputType(OsnOcpuAllocationParamOutput{})
	pulumi.RegisterOutputType(OsnOcpuAllocationParamPtrOutput{})
	pulumi.RegisterOutputType(PeerOcpuAllocationParamOutput{})
	pulumi.RegisterOutputType(PeerOcpuAllocationParamPtrOutput{})
	pulumi.RegisterOutputType(GetBlockchainPlatformComponentDetailsOutput{})
	pulumi.RegisterOutputType(GetBlockchainPlatformComponentDetailsOsnOutput{})
	pulumi.RegisterOutputType(GetBlockchainPlatformComponentDetailsOsnArrayOutput{})
	pulumi.RegisterOutputType(GetBlockchainPlatformComponentDetailsOsnOcpuAllocationParamOutput{})
	pulumi.RegisterOutputType(GetBlockchainPlatformComponentDetailsPeerOutput{})
	pulumi.RegisterOutputType(GetBlockchainPlatformComponentDetailsPeerArrayOutput{})
	pulumi.RegisterOutputType(GetBlockchainPlatformComponentDetailsPeerOcpuAllocationParamOutput{})
	pulumi.RegisterOutputType(GetBlockchainPlatformHostOcpuUtilizationInfoOutput{})
	pulumi.RegisterOutputType(GetBlockchainPlatformHostOcpuUtilizationInfoArrayOutput{})
	pulumi.RegisterOutputType(GetBlockchainPlatformReplicasOutput{})
	pulumi.RegisterOutputType(GetBlockchainPlatformsBlockchainPlatformCollectionOutput{})
	pulumi.RegisterOutputType(GetBlockchainPlatformsBlockchainPlatformCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetBlockchainPlatformsBlockchainPlatformCollectionItemOutput{})
	pulumi.RegisterOutputType(GetBlockchainPlatformsBlockchainPlatformCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOutput{})
	pulumi.RegisterOutputType(GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnOutput{})
	pulumi.RegisterOutputType(GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnArrayOutput{})
	pulumi.RegisterOutputType(GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsOsnOcpuAllocationParamOutput{})
	pulumi.RegisterOutputType(GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerOutput{})
	pulumi.RegisterOutputType(GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerArrayOutput{})
	pulumi.RegisterOutputType(GetBlockchainPlatformsBlockchainPlatformCollectionItemComponentDetailsPeerOcpuAllocationParamOutput{})
	pulumi.RegisterOutputType(GetBlockchainPlatformsBlockchainPlatformCollectionItemHostOcpuUtilizationInfoOutput{})
	pulumi.RegisterOutputType(GetBlockchainPlatformsBlockchainPlatformCollectionItemHostOcpuUtilizationInfoArrayOutput{})
	pulumi.RegisterOutputType(GetBlockchainPlatformsBlockchainPlatformCollectionItemReplicasOutput{})
	pulumi.RegisterOutputType(GetBlockchainPlatformsFilterOutput{})
	pulumi.RegisterOutputType(GetBlockchainPlatformsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetOsnOcpuAllocationParamOutput{})
	pulumi.RegisterOutputType(GetOsnsFilterOutput{})
	pulumi.RegisterOutputType(GetOsnsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetOsnsOsnCollectionOutput{})
	pulumi.RegisterOutputType(GetOsnsOsnCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetOsnsOsnCollectionItemOutput{})
	pulumi.RegisterOutputType(GetOsnsOsnCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetOsnsOsnCollectionItemOcpuAllocationParamOutput{})
	pulumi.RegisterOutputType(GetPeerOcpuAllocationParamOutput{})
	pulumi.RegisterOutputType(GetPeersFilterOutput{})
	pulumi.RegisterOutputType(GetPeersFilterArrayOutput{})
	pulumi.RegisterOutputType(GetPeersPeerCollectionOutput{})
	pulumi.RegisterOutputType(GetPeersPeerCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetPeersPeerCollectionItemOutput{})
	pulumi.RegisterOutputType(GetPeersPeerCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetPeersPeerCollectionItemOcpuAllocationParamOutput{})
}
