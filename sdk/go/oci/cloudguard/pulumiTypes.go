// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package cloudguard

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DataMaskRuleTargetSelected struct {
	// (Updatable) Target selection.
	Kind string `pulumi:"kind"`
	// (Updatable) Types of Targets
	Values []string `pulumi:"values"`
}

// DataMaskRuleTargetSelectedInput is an input type that accepts DataMaskRuleTargetSelectedArgs and DataMaskRuleTargetSelectedOutput values.
// You can construct a concrete instance of `DataMaskRuleTargetSelectedInput` via:
//
//          DataMaskRuleTargetSelectedArgs{...}
type DataMaskRuleTargetSelectedInput interface {
	pulumi.Input

	ToDataMaskRuleTargetSelectedOutput() DataMaskRuleTargetSelectedOutput
	ToDataMaskRuleTargetSelectedOutputWithContext(context.Context) DataMaskRuleTargetSelectedOutput
}

type DataMaskRuleTargetSelectedArgs struct {
	// (Updatable) Target selection.
	Kind pulumi.StringInput `pulumi:"kind"`
	// (Updatable) Types of Targets
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (DataMaskRuleTargetSelectedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataMaskRuleTargetSelected)(nil)).Elem()
}

func (i DataMaskRuleTargetSelectedArgs) ToDataMaskRuleTargetSelectedOutput() DataMaskRuleTargetSelectedOutput {
	return i.ToDataMaskRuleTargetSelectedOutputWithContext(context.Background())
}

func (i DataMaskRuleTargetSelectedArgs) ToDataMaskRuleTargetSelectedOutputWithContext(ctx context.Context) DataMaskRuleTargetSelectedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataMaskRuleTargetSelectedOutput)
}

func (i DataMaskRuleTargetSelectedArgs) ToDataMaskRuleTargetSelectedPtrOutput() DataMaskRuleTargetSelectedPtrOutput {
	return i.ToDataMaskRuleTargetSelectedPtrOutputWithContext(context.Background())
}

func (i DataMaskRuleTargetSelectedArgs) ToDataMaskRuleTargetSelectedPtrOutputWithContext(ctx context.Context) DataMaskRuleTargetSelectedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataMaskRuleTargetSelectedOutput).ToDataMaskRuleTargetSelectedPtrOutputWithContext(ctx)
}

// DataMaskRuleTargetSelectedPtrInput is an input type that accepts DataMaskRuleTargetSelectedArgs, DataMaskRuleTargetSelectedPtr and DataMaskRuleTargetSelectedPtrOutput values.
// You can construct a concrete instance of `DataMaskRuleTargetSelectedPtrInput` via:
//
//          DataMaskRuleTargetSelectedArgs{...}
//
//  or:
//
//          nil
type DataMaskRuleTargetSelectedPtrInput interface {
	pulumi.Input

	ToDataMaskRuleTargetSelectedPtrOutput() DataMaskRuleTargetSelectedPtrOutput
	ToDataMaskRuleTargetSelectedPtrOutputWithContext(context.Context) DataMaskRuleTargetSelectedPtrOutput
}

type dataMaskRuleTargetSelectedPtrType DataMaskRuleTargetSelectedArgs

func DataMaskRuleTargetSelectedPtr(v *DataMaskRuleTargetSelectedArgs) DataMaskRuleTargetSelectedPtrInput {
	return (*dataMaskRuleTargetSelectedPtrType)(v)
}

func (*dataMaskRuleTargetSelectedPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataMaskRuleTargetSelected)(nil)).Elem()
}

func (i *dataMaskRuleTargetSelectedPtrType) ToDataMaskRuleTargetSelectedPtrOutput() DataMaskRuleTargetSelectedPtrOutput {
	return i.ToDataMaskRuleTargetSelectedPtrOutputWithContext(context.Background())
}

func (i *dataMaskRuleTargetSelectedPtrType) ToDataMaskRuleTargetSelectedPtrOutputWithContext(ctx context.Context) DataMaskRuleTargetSelectedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataMaskRuleTargetSelectedPtrOutput)
}

type DataMaskRuleTargetSelectedOutput struct{ *pulumi.OutputState }

func (DataMaskRuleTargetSelectedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataMaskRuleTargetSelected)(nil)).Elem()
}

func (o DataMaskRuleTargetSelectedOutput) ToDataMaskRuleTargetSelectedOutput() DataMaskRuleTargetSelectedOutput {
	return o
}

func (o DataMaskRuleTargetSelectedOutput) ToDataMaskRuleTargetSelectedOutputWithContext(ctx context.Context) DataMaskRuleTargetSelectedOutput {
	return o
}

func (o DataMaskRuleTargetSelectedOutput) ToDataMaskRuleTargetSelectedPtrOutput() DataMaskRuleTargetSelectedPtrOutput {
	return o.ToDataMaskRuleTargetSelectedPtrOutputWithContext(context.Background())
}

func (o DataMaskRuleTargetSelectedOutput) ToDataMaskRuleTargetSelectedPtrOutputWithContext(ctx context.Context) DataMaskRuleTargetSelectedPtrOutput {
	return o.ApplyT(func(v DataMaskRuleTargetSelected) *DataMaskRuleTargetSelected {
		return &v
	}).(DataMaskRuleTargetSelectedPtrOutput)
}

// (Updatable) Target selection.
func (o DataMaskRuleTargetSelectedOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v DataMaskRuleTargetSelected) string { return v.Kind }).(pulumi.StringOutput)
}

// (Updatable) Types of Targets
func (o DataMaskRuleTargetSelectedOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DataMaskRuleTargetSelected) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type DataMaskRuleTargetSelectedPtrOutput struct{ *pulumi.OutputState }

func (DataMaskRuleTargetSelectedPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataMaskRuleTargetSelected)(nil)).Elem()
}

func (o DataMaskRuleTargetSelectedPtrOutput) ToDataMaskRuleTargetSelectedPtrOutput() DataMaskRuleTargetSelectedPtrOutput {
	return o
}

func (o DataMaskRuleTargetSelectedPtrOutput) ToDataMaskRuleTargetSelectedPtrOutputWithContext(ctx context.Context) DataMaskRuleTargetSelectedPtrOutput {
	return o
}

func (o DataMaskRuleTargetSelectedPtrOutput) Elem() DataMaskRuleTargetSelectedOutput {
	return o.ApplyT(func(v *DataMaskRuleTargetSelected) DataMaskRuleTargetSelected { return *v }).(DataMaskRuleTargetSelectedOutput)
}

// (Updatable) Target selection.
func (o DataMaskRuleTargetSelectedPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataMaskRuleTargetSelected) *string {
		if v == nil {
			return nil
		}
		return &v.Kind
	}).(pulumi.StringPtrOutput)
}

// (Updatable) Types of Targets
func (o DataMaskRuleTargetSelectedPtrOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DataMaskRuleTargetSelected) []string {
		if v == nil {
			return nil
		}
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type DetectorRecipeDetectorRule struct {
	// List of CandidateResponderRule related to this rule
	CandidateResponderRules []DetectorRecipeDetectorRuleCandidateResponderRule `pulumi:"candidateResponderRules"`
	// (Updatable) DetectorRecipe Description
	Description *string `pulumi:"description"`
	// (Updatable) Details of a Detector Rule to be overriden in Detector Recipe
	Details DetectorRecipeDetectorRuleDetails `pulumi:"details"`
	// detector for the rule
	Detector *string `pulumi:"detector"`
	// (Updatable) DetectorRecipeRule Identifier
	DetectorRuleId string `pulumi:"detectorRuleId"`
	// (Updatable) DetectorRecipe Display Name
	DisplayName *string `pulumi:"displayName"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// List of cloudguard managed list types related to this rule
	ManagedListTypes []string `pulumi:"managedListTypes"`
	// Recommendation for DetectorRecipeDetectorRule
	Recommendation *string `pulumi:"recommendation"`
	// resource type of the configuration to which the rule is applied
	ResourceType *string `pulumi:"resourceType"`
	// service type of the configuration to which the rule is applied
	ServiceType *string `pulumi:"serviceType"`
	// The current state of the resource.
	State *string `pulumi:"state"`
	// The date and time the detector recipe was created. Format defined by RFC3339.
	TimeCreated *string `pulumi:"timeCreated"`
	// The date and time the detector recipe was updated. Format defined by RFC3339.
	TimeUpdated *string `pulumi:"timeUpdated"`
}

// DetectorRecipeDetectorRuleInput is an input type that accepts DetectorRecipeDetectorRuleArgs and DetectorRecipeDetectorRuleOutput values.
// You can construct a concrete instance of `DetectorRecipeDetectorRuleInput` via:
//
//          DetectorRecipeDetectorRuleArgs{...}
type DetectorRecipeDetectorRuleInput interface {
	pulumi.Input

	ToDetectorRecipeDetectorRuleOutput() DetectorRecipeDetectorRuleOutput
	ToDetectorRecipeDetectorRuleOutputWithContext(context.Context) DetectorRecipeDetectorRuleOutput
}

type DetectorRecipeDetectorRuleArgs struct {
	// List of CandidateResponderRule related to this rule
	CandidateResponderRules DetectorRecipeDetectorRuleCandidateResponderRuleArrayInput `pulumi:"candidateResponderRules"`
	// (Updatable) DetectorRecipe Description
	Description pulumi.StringPtrInput `pulumi:"description"`
	// (Updatable) Details of a Detector Rule to be overriden in Detector Recipe
	Details DetectorRecipeDetectorRuleDetailsInput `pulumi:"details"`
	// detector for the rule
	Detector pulumi.StringPtrInput `pulumi:"detector"`
	// (Updatable) DetectorRecipeRule Identifier
	DetectorRuleId pulumi.StringInput `pulumi:"detectorRuleId"`
	// (Updatable) DetectorRecipe Display Name
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringPtrInput `pulumi:"lifecycleDetails"`
	// List of cloudguard managed list types related to this rule
	ManagedListTypes pulumi.StringArrayInput `pulumi:"managedListTypes"`
	// Recommendation for DetectorRecipeDetectorRule
	Recommendation pulumi.StringPtrInput `pulumi:"recommendation"`
	// resource type of the configuration to which the rule is applied
	ResourceType pulumi.StringPtrInput `pulumi:"resourceType"`
	// service type of the configuration to which the rule is applied
	ServiceType pulumi.StringPtrInput `pulumi:"serviceType"`
	// The current state of the resource.
	State pulumi.StringPtrInput `pulumi:"state"`
	// The date and time the detector recipe was created. Format defined by RFC3339.
	TimeCreated pulumi.StringPtrInput `pulumi:"timeCreated"`
	// The date and time the detector recipe was updated. Format defined by RFC3339.
	TimeUpdated pulumi.StringPtrInput `pulumi:"timeUpdated"`
}

func (DetectorRecipeDetectorRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorRecipeDetectorRule)(nil)).Elem()
}

func (i DetectorRecipeDetectorRuleArgs) ToDetectorRecipeDetectorRuleOutput() DetectorRecipeDetectorRuleOutput {
	return i.ToDetectorRecipeDetectorRuleOutputWithContext(context.Background())
}

func (i DetectorRecipeDetectorRuleArgs) ToDetectorRecipeDetectorRuleOutputWithContext(ctx context.Context) DetectorRecipeDetectorRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorRecipeDetectorRuleOutput)
}

// DetectorRecipeDetectorRuleArrayInput is an input type that accepts DetectorRecipeDetectorRuleArray and DetectorRecipeDetectorRuleArrayOutput values.
// You can construct a concrete instance of `DetectorRecipeDetectorRuleArrayInput` via:
//
//          DetectorRecipeDetectorRuleArray{ DetectorRecipeDetectorRuleArgs{...} }
type DetectorRecipeDetectorRuleArrayInput interface {
	pulumi.Input

	ToDetectorRecipeDetectorRuleArrayOutput() DetectorRecipeDetectorRuleArrayOutput
	ToDetectorRecipeDetectorRuleArrayOutputWithContext(context.Context) DetectorRecipeDetectorRuleArrayOutput
}

type DetectorRecipeDetectorRuleArray []DetectorRecipeDetectorRuleInput

func (DetectorRecipeDetectorRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DetectorRecipeDetectorRule)(nil)).Elem()
}

func (i DetectorRecipeDetectorRuleArray) ToDetectorRecipeDetectorRuleArrayOutput() DetectorRecipeDetectorRuleArrayOutput {
	return i.ToDetectorRecipeDetectorRuleArrayOutputWithContext(context.Background())
}

func (i DetectorRecipeDetectorRuleArray) ToDetectorRecipeDetectorRuleArrayOutputWithContext(ctx context.Context) DetectorRecipeDetectorRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorRecipeDetectorRuleArrayOutput)
}

type DetectorRecipeDetectorRuleOutput struct{ *pulumi.OutputState }

func (DetectorRecipeDetectorRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorRecipeDetectorRule)(nil)).Elem()
}

func (o DetectorRecipeDetectorRuleOutput) ToDetectorRecipeDetectorRuleOutput() DetectorRecipeDetectorRuleOutput {
	return o
}

func (o DetectorRecipeDetectorRuleOutput) ToDetectorRecipeDetectorRuleOutputWithContext(ctx context.Context) DetectorRecipeDetectorRuleOutput {
	return o
}

// List of CandidateResponderRule related to this rule
func (o DetectorRecipeDetectorRuleOutput) CandidateResponderRules() DetectorRecipeDetectorRuleCandidateResponderRuleArrayOutput {
	return o.ApplyT(func(v DetectorRecipeDetectorRule) []DetectorRecipeDetectorRuleCandidateResponderRule {
		return v.CandidateResponderRules
	}).(DetectorRecipeDetectorRuleCandidateResponderRuleArrayOutput)
}

// (Updatable) DetectorRecipe Description
func (o DetectorRecipeDetectorRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorRecipeDetectorRule) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// (Updatable) Details of a Detector Rule to be overriden in Detector Recipe
func (o DetectorRecipeDetectorRuleOutput) Details() DetectorRecipeDetectorRuleDetailsOutput {
	return o.ApplyT(func(v DetectorRecipeDetectorRule) DetectorRecipeDetectorRuleDetails { return v.Details }).(DetectorRecipeDetectorRuleDetailsOutput)
}

// detector for the rule
func (o DetectorRecipeDetectorRuleOutput) Detector() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorRecipeDetectorRule) *string { return v.Detector }).(pulumi.StringPtrOutput)
}

// (Updatable) DetectorRecipeRule Identifier
func (o DetectorRecipeDetectorRuleOutput) DetectorRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v DetectorRecipeDetectorRule) string { return v.DetectorRuleId }).(pulumi.StringOutput)
}

// (Updatable) DetectorRecipe Display Name
func (o DetectorRecipeDetectorRuleOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorRecipeDetectorRule) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o DetectorRecipeDetectorRuleOutput) LifecycleDetails() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorRecipeDetectorRule) *string { return v.LifecycleDetails }).(pulumi.StringPtrOutput)
}

// List of cloudguard managed list types related to this rule
func (o DetectorRecipeDetectorRuleOutput) ManagedListTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DetectorRecipeDetectorRule) []string { return v.ManagedListTypes }).(pulumi.StringArrayOutput)
}

// Recommendation for DetectorRecipeDetectorRule
func (o DetectorRecipeDetectorRuleOutput) Recommendation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorRecipeDetectorRule) *string { return v.Recommendation }).(pulumi.StringPtrOutput)
}

// resource type of the configuration to which the rule is applied
func (o DetectorRecipeDetectorRuleOutput) ResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorRecipeDetectorRule) *string { return v.ResourceType }).(pulumi.StringPtrOutput)
}

// service type of the configuration to which the rule is applied
func (o DetectorRecipeDetectorRuleOutput) ServiceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorRecipeDetectorRule) *string { return v.ServiceType }).(pulumi.StringPtrOutput)
}

// The current state of the resource.
func (o DetectorRecipeDetectorRuleOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorRecipeDetectorRule) *string { return v.State }).(pulumi.StringPtrOutput)
}

// The date and time the detector recipe was created. Format defined by RFC3339.
func (o DetectorRecipeDetectorRuleOutput) TimeCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorRecipeDetectorRule) *string { return v.TimeCreated }).(pulumi.StringPtrOutput)
}

// The date and time the detector recipe was updated. Format defined by RFC3339.
func (o DetectorRecipeDetectorRuleOutput) TimeUpdated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorRecipeDetectorRule) *string { return v.TimeUpdated }).(pulumi.StringPtrOutput)
}

type DetectorRecipeDetectorRuleArrayOutput struct{ *pulumi.OutputState }

func (DetectorRecipeDetectorRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DetectorRecipeDetectorRule)(nil)).Elem()
}

func (o DetectorRecipeDetectorRuleArrayOutput) ToDetectorRecipeDetectorRuleArrayOutput() DetectorRecipeDetectorRuleArrayOutput {
	return o
}

func (o DetectorRecipeDetectorRuleArrayOutput) ToDetectorRecipeDetectorRuleArrayOutputWithContext(ctx context.Context) DetectorRecipeDetectorRuleArrayOutput {
	return o
}

func (o DetectorRecipeDetectorRuleArrayOutput) Index(i pulumi.IntInput) DetectorRecipeDetectorRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DetectorRecipeDetectorRule {
		return vs[0].([]DetectorRecipeDetectorRule)[vs[1].(int)]
	}).(DetectorRecipeDetectorRuleOutput)
}

type DetectorRecipeDetectorRuleCandidateResponderRule struct {
	// (Updatable) DetectorRecipe Display Name
	DisplayName *string `pulumi:"displayName"`
	// Ocid for detector recipe
	Id *string `pulumi:"id"`
	// Preferred state
	IsPreferred *bool `pulumi:"isPreferred"`
}

// DetectorRecipeDetectorRuleCandidateResponderRuleInput is an input type that accepts DetectorRecipeDetectorRuleCandidateResponderRuleArgs and DetectorRecipeDetectorRuleCandidateResponderRuleOutput values.
// You can construct a concrete instance of `DetectorRecipeDetectorRuleCandidateResponderRuleInput` via:
//
//          DetectorRecipeDetectorRuleCandidateResponderRuleArgs{...}
type DetectorRecipeDetectorRuleCandidateResponderRuleInput interface {
	pulumi.Input

	ToDetectorRecipeDetectorRuleCandidateResponderRuleOutput() DetectorRecipeDetectorRuleCandidateResponderRuleOutput
	ToDetectorRecipeDetectorRuleCandidateResponderRuleOutputWithContext(context.Context) DetectorRecipeDetectorRuleCandidateResponderRuleOutput
}

type DetectorRecipeDetectorRuleCandidateResponderRuleArgs struct {
	// (Updatable) DetectorRecipe Display Name
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// Ocid for detector recipe
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Preferred state
	IsPreferred pulumi.BoolPtrInput `pulumi:"isPreferred"`
}

func (DetectorRecipeDetectorRuleCandidateResponderRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorRecipeDetectorRuleCandidateResponderRule)(nil)).Elem()
}

func (i DetectorRecipeDetectorRuleCandidateResponderRuleArgs) ToDetectorRecipeDetectorRuleCandidateResponderRuleOutput() DetectorRecipeDetectorRuleCandidateResponderRuleOutput {
	return i.ToDetectorRecipeDetectorRuleCandidateResponderRuleOutputWithContext(context.Background())
}

func (i DetectorRecipeDetectorRuleCandidateResponderRuleArgs) ToDetectorRecipeDetectorRuleCandidateResponderRuleOutputWithContext(ctx context.Context) DetectorRecipeDetectorRuleCandidateResponderRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorRecipeDetectorRuleCandidateResponderRuleOutput)
}

// DetectorRecipeDetectorRuleCandidateResponderRuleArrayInput is an input type that accepts DetectorRecipeDetectorRuleCandidateResponderRuleArray and DetectorRecipeDetectorRuleCandidateResponderRuleArrayOutput values.
// You can construct a concrete instance of `DetectorRecipeDetectorRuleCandidateResponderRuleArrayInput` via:
//
//          DetectorRecipeDetectorRuleCandidateResponderRuleArray{ DetectorRecipeDetectorRuleCandidateResponderRuleArgs{...} }
type DetectorRecipeDetectorRuleCandidateResponderRuleArrayInput interface {
	pulumi.Input

	ToDetectorRecipeDetectorRuleCandidateResponderRuleArrayOutput() DetectorRecipeDetectorRuleCandidateResponderRuleArrayOutput
	ToDetectorRecipeDetectorRuleCandidateResponderRuleArrayOutputWithContext(context.Context) DetectorRecipeDetectorRuleCandidateResponderRuleArrayOutput
}

type DetectorRecipeDetectorRuleCandidateResponderRuleArray []DetectorRecipeDetectorRuleCandidateResponderRuleInput

func (DetectorRecipeDetectorRuleCandidateResponderRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DetectorRecipeDetectorRuleCandidateResponderRule)(nil)).Elem()
}

func (i DetectorRecipeDetectorRuleCandidateResponderRuleArray) ToDetectorRecipeDetectorRuleCandidateResponderRuleArrayOutput() DetectorRecipeDetectorRuleCandidateResponderRuleArrayOutput {
	return i.ToDetectorRecipeDetectorRuleCandidateResponderRuleArrayOutputWithContext(context.Background())
}

func (i DetectorRecipeDetectorRuleCandidateResponderRuleArray) ToDetectorRecipeDetectorRuleCandidateResponderRuleArrayOutputWithContext(ctx context.Context) DetectorRecipeDetectorRuleCandidateResponderRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorRecipeDetectorRuleCandidateResponderRuleArrayOutput)
}

type DetectorRecipeDetectorRuleCandidateResponderRuleOutput struct{ *pulumi.OutputState }

func (DetectorRecipeDetectorRuleCandidateResponderRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorRecipeDetectorRuleCandidateResponderRule)(nil)).Elem()
}

func (o DetectorRecipeDetectorRuleCandidateResponderRuleOutput) ToDetectorRecipeDetectorRuleCandidateResponderRuleOutput() DetectorRecipeDetectorRuleCandidateResponderRuleOutput {
	return o
}

func (o DetectorRecipeDetectorRuleCandidateResponderRuleOutput) ToDetectorRecipeDetectorRuleCandidateResponderRuleOutputWithContext(ctx context.Context) DetectorRecipeDetectorRuleCandidateResponderRuleOutput {
	return o
}

// (Updatable) DetectorRecipe Display Name
func (o DetectorRecipeDetectorRuleCandidateResponderRuleOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorRecipeDetectorRuleCandidateResponderRule) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Ocid for detector recipe
func (o DetectorRecipeDetectorRuleCandidateResponderRuleOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorRecipeDetectorRuleCandidateResponderRule) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Preferred state
func (o DetectorRecipeDetectorRuleCandidateResponderRuleOutput) IsPreferred() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DetectorRecipeDetectorRuleCandidateResponderRule) *bool { return v.IsPreferred }).(pulumi.BoolPtrOutput)
}

type DetectorRecipeDetectorRuleCandidateResponderRuleArrayOutput struct{ *pulumi.OutputState }

func (DetectorRecipeDetectorRuleCandidateResponderRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DetectorRecipeDetectorRuleCandidateResponderRule)(nil)).Elem()
}

func (o DetectorRecipeDetectorRuleCandidateResponderRuleArrayOutput) ToDetectorRecipeDetectorRuleCandidateResponderRuleArrayOutput() DetectorRecipeDetectorRuleCandidateResponderRuleArrayOutput {
	return o
}

func (o DetectorRecipeDetectorRuleCandidateResponderRuleArrayOutput) ToDetectorRecipeDetectorRuleCandidateResponderRuleArrayOutputWithContext(ctx context.Context) DetectorRecipeDetectorRuleCandidateResponderRuleArrayOutput {
	return o
}

func (o DetectorRecipeDetectorRuleCandidateResponderRuleArrayOutput) Index(i pulumi.IntInput) DetectorRecipeDetectorRuleCandidateResponderRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DetectorRecipeDetectorRuleCandidateResponderRule {
		return vs[0].([]DetectorRecipeDetectorRuleCandidateResponderRule)[vs[1].(int)]
	}).(DetectorRecipeDetectorRuleCandidateResponderRuleOutput)
}

type DetectorRecipeDetectorRuleDetails struct {
	// (Updatable)
	Condition *string `pulumi:"condition"`
	// (Updatable) Configuration details
	Configurations []DetectorRecipeDetectorRuleDetailsConfiguration `pulumi:"configurations"`
	// configuration allowed or not
	IsConfigurationAllowed *bool `pulumi:"isConfigurationAllowed"`
	// (Updatable) Enables the control
	IsEnabled bool `pulumi:"isEnabled"`
	// (Updatable) user defined labels for a detector rule
	Labels []string `pulumi:"labels"`
	// (Updatable) The Risk Level
	RiskLevel string `pulumi:"riskLevel"`
}

// DetectorRecipeDetectorRuleDetailsInput is an input type that accepts DetectorRecipeDetectorRuleDetailsArgs and DetectorRecipeDetectorRuleDetailsOutput values.
// You can construct a concrete instance of `DetectorRecipeDetectorRuleDetailsInput` via:
//
//          DetectorRecipeDetectorRuleDetailsArgs{...}
type DetectorRecipeDetectorRuleDetailsInput interface {
	pulumi.Input

	ToDetectorRecipeDetectorRuleDetailsOutput() DetectorRecipeDetectorRuleDetailsOutput
	ToDetectorRecipeDetectorRuleDetailsOutputWithContext(context.Context) DetectorRecipeDetectorRuleDetailsOutput
}

type DetectorRecipeDetectorRuleDetailsArgs struct {
	// (Updatable)
	Condition pulumi.StringPtrInput `pulumi:"condition"`
	// (Updatable) Configuration details
	Configurations DetectorRecipeDetectorRuleDetailsConfigurationArrayInput `pulumi:"configurations"`
	// configuration allowed or not
	IsConfigurationAllowed pulumi.BoolPtrInput `pulumi:"isConfigurationAllowed"`
	// (Updatable) Enables the control
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// (Updatable) user defined labels for a detector rule
	Labels pulumi.StringArrayInput `pulumi:"labels"`
	// (Updatable) The Risk Level
	RiskLevel pulumi.StringInput `pulumi:"riskLevel"`
}

func (DetectorRecipeDetectorRuleDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorRecipeDetectorRuleDetails)(nil)).Elem()
}

func (i DetectorRecipeDetectorRuleDetailsArgs) ToDetectorRecipeDetectorRuleDetailsOutput() DetectorRecipeDetectorRuleDetailsOutput {
	return i.ToDetectorRecipeDetectorRuleDetailsOutputWithContext(context.Background())
}

func (i DetectorRecipeDetectorRuleDetailsArgs) ToDetectorRecipeDetectorRuleDetailsOutputWithContext(ctx context.Context) DetectorRecipeDetectorRuleDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorRecipeDetectorRuleDetailsOutput)
}

type DetectorRecipeDetectorRuleDetailsOutput struct{ *pulumi.OutputState }

func (DetectorRecipeDetectorRuleDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorRecipeDetectorRuleDetails)(nil)).Elem()
}

func (o DetectorRecipeDetectorRuleDetailsOutput) ToDetectorRecipeDetectorRuleDetailsOutput() DetectorRecipeDetectorRuleDetailsOutput {
	return o
}

func (o DetectorRecipeDetectorRuleDetailsOutput) ToDetectorRecipeDetectorRuleDetailsOutputWithContext(ctx context.Context) DetectorRecipeDetectorRuleDetailsOutput {
	return o
}

// (Updatable)
func (o DetectorRecipeDetectorRuleDetailsOutput) Condition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorRecipeDetectorRuleDetails) *string { return v.Condition }).(pulumi.StringPtrOutput)
}

// (Updatable) Configuration details
func (o DetectorRecipeDetectorRuleDetailsOutput) Configurations() DetectorRecipeDetectorRuleDetailsConfigurationArrayOutput {
	return o.ApplyT(func(v DetectorRecipeDetectorRuleDetails) []DetectorRecipeDetectorRuleDetailsConfiguration {
		return v.Configurations
	}).(DetectorRecipeDetectorRuleDetailsConfigurationArrayOutput)
}

// configuration allowed or not
func (o DetectorRecipeDetectorRuleDetailsOutput) IsConfigurationAllowed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DetectorRecipeDetectorRuleDetails) *bool { return v.IsConfigurationAllowed }).(pulumi.BoolPtrOutput)
}

// (Updatable) Enables the control
func (o DetectorRecipeDetectorRuleDetailsOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v DetectorRecipeDetectorRuleDetails) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// (Updatable) user defined labels for a detector rule
func (o DetectorRecipeDetectorRuleDetailsOutput) Labels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DetectorRecipeDetectorRuleDetails) []string { return v.Labels }).(pulumi.StringArrayOutput)
}

// (Updatable) The Risk Level
func (o DetectorRecipeDetectorRuleDetailsOutput) RiskLevel() pulumi.StringOutput {
	return o.ApplyT(func(v DetectorRecipeDetectorRuleDetails) string { return v.RiskLevel }).(pulumi.StringOutput)
}

type DetectorRecipeDetectorRuleDetailsConfiguration struct {
	// (Updatable) Unique name of the configuration
	ConfigKey string `pulumi:"configKey"`
	// (Updatable) configuration data type
	DataType *string `pulumi:"dataType"`
	// (Updatable) configuration name
	Name string `pulumi:"name"`
	// (Updatable) configuration value
	Value *string `pulumi:"value"`
	// (Updatable) List of configuration values
	Values []DetectorRecipeDetectorRuleDetailsConfigurationValue `pulumi:"values"`
}

// DetectorRecipeDetectorRuleDetailsConfigurationInput is an input type that accepts DetectorRecipeDetectorRuleDetailsConfigurationArgs and DetectorRecipeDetectorRuleDetailsConfigurationOutput values.
// You can construct a concrete instance of `DetectorRecipeDetectorRuleDetailsConfigurationInput` via:
//
//          DetectorRecipeDetectorRuleDetailsConfigurationArgs{...}
type DetectorRecipeDetectorRuleDetailsConfigurationInput interface {
	pulumi.Input

	ToDetectorRecipeDetectorRuleDetailsConfigurationOutput() DetectorRecipeDetectorRuleDetailsConfigurationOutput
	ToDetectorRecipeDetectorRuleDetailsConfigurationOutputWithContext(context.Context) DetectorRecipeDetectorRuleDetailsConfigurationOutput
}

type DetectorRecipeDetectorRuleDetailsConfigurationArgs struct {
	// (Updatable) Unique name of the configuration
	ConfigKey pulumi.StringInput `pulumi:"configKey"`
	// (Updatable) configuration data type
	DataType pulumi.StringPtrInput `pulumi:"dataType"`
	// (Updatable) configuration name
	Name pulumi.StringInput `pulumi:"name"`
	// (Updatable) configuration value
	Value pulumi.StringPtrInput `pulumi:"value"`
	// (Updatable) List of configuration values
	Values DetectorRecipeDetectorRuleDetailsConfigurationValueArrayInput `pulumi:"values"`
}

func (DetectorRecipeDetectorRuleDetailsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorRecipeDetectorRuleDetailsConfiguration)(nil)).Elem()
}

func (i DetectorRecipeDetectorRuleDetailsConfigurationArgs) ToDetectorRecipeDetectorRuleDetailsConfigurationOutput() DetectorRecipeDetectorRuleDetailsConfigurationOutput {
	return i.ToDetectorRecipeDetectorRuleDetailsConfigurationOutputWithContext(context.Background())
}

func (i DetectorRecipeDetectorRuleDetailsConfigurationArgs) ToDetectorRecipeDetectorRuleDetailsConfigurationOutputWithContext(ctx context.Context) DetectorRecipeDetectorRuleDetailsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorRecipeDetectorRuleDetailsConfigurationOutput)
}

// DetectorRecipeDetectorRuleDetailsConfigurationArrayInput is an input type that accepts DetectorRecipeDetectorRuleDetailsConfigurationArray and DetectorRecipeDetectorRuleDetailsConfigurationArrayOutput values.
// You can construct a concrete instance of `DetectorRecipeDetectorRuleDetailsConfigurationArrayInput` via:
//
//          DetectorRecipeDetectorRuleDetailsConfigurationArray{ DetectorRecipeDetectorRuleDetailsConfigurationArgs{...} }
type DetectorRecipeDetectorRuleDetailsConfigurationArrayInput interface {
	pulumi.Input

	ToDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput() DetectorRecipeDetectorRuleDetailsConfigurationArrayOutput
	ToDetectorRecipeDetectorRuleDetailsConfigurationArrayOutputWithContext(context.Context) DetectorRecipeDetectorRuleDetailsConfigurationArrayOutput
}

type DetectorRecipeDetectorRuleDetailsConfigurationArray []DetectorRecipeDetectorRuleDetailsConfigurationInput

func (DetectorRecipeDetectorRuleDetailsConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DetectorRecipeDetectorRuleDetailsConfiguration)(nil)).Elem()
}

func (i DetectorRecipeDetectorRuleDetailsConfigurationArray) ToDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput() DetectorRecipeDetectorRuleDetailsConfigurationArrayOutput {
	return i.ToDetectorRecipeDetectorRuleDetailsConfigurationArrayOutputWithContext(context.Background())
}

func (i DetectorRecipeDetectorRuleDetailsConfigurationArray) ToDetectorRecipeDetectorRuleDetailsConfigurationArrayOutputWithContext(ctx context.Context) DetectorRecipeDetectorRuleDetailsConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorRecipeDetectorRuleDetailsConfigurationArrayOutput)
}

type DetectorRecipeDetectorRuleDetailsConfigurationOutput struct{ *pulumi.OutputState }

func (DetectorRecipeDetectorRuleDetailsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorRecipeDetectorRuleDetailsConfiguration)(nil)).Elem()
}

func (o DetectorRecipeDetectorRuleDetailsConfigurationOutput) ToDetectorRecipeDetectorRuleDetailsConfigurationOutput() DetectorRecipeDetectorRuleDetailsConfigurationOutput {
	return o
}

func (o DetectorRecipeDetectorRuleDetailsConfigurationOutput) ToDetectorRecipeDetectorRuleDetailsConfigurationOutputWithContext(ctx context.Context) DetectorRecipeDetectorRuleDetailsConfigurationOutput {
	return o
}

// (Updatable) Unique name of the configuration
func (o DetectorRecipeDetectorRuleDetailsConfigurationOutput) ConfigKey() pulumi.StringOutput {
	return o.ApplyT(func(v DetectorRecipeDetectorRuleDetailsConfiguration) string { return v.ConfigKey }).(pulumi.StringOutput)
}

// (Updatable) configuration data type
func (o DetectorRecipeDetectorRuleDetailsConfigurationOutput) DataType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorRecipeDetectorRuleDetailsConfiguration) *string { return v.DataType }).(pulumi.StringPtrOutput)
}

// (Updatable) configuration name
func (o DetectorRecipeDetectorRuleDetailsConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DetectorRecipeDetectorRuleDetailsConfiguration) string { return v.Name }).(pulumi.StringOutput)
}

// (Updatable) configuration value
func (o DetectorRecipeDetectorRuleDetailsConfigurationOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorRecipeDetectorRuleDetailsConfiguration) *string { return v.Value }).(pulumi.StringPtrOutput)
}

// (Updatable) List of configuration values
func (o DetectorRecipeDetectorRuleDetailsConfigurationOutput) Values() DetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput {
	return o.ApplyT(func(v DetectorRecipeDetectorRuleDetailsConfiguration) []DetectorRecipeDetectorRuleDetailsConfigurationValue {
		return v.Values
	}).(DetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput)
}

type DetectorRecipeDetectorRuleDetailsConfigurationArrayOutput struct{ *pulumi.OutputState }

func (DetectorRecipeDetectorRuleDetailsConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DetectorRecipeDetectorRuleDetailsConfiguration)(nil)).Elem()
}

func (o DetectorRecipeDetectorRuleDetailsConfigurationArrayOutput) ToDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput() DetectorRecipeDetectorRuleDetailsConfigurationArrayOutput {
	return o
}

func (o DetectorRecipeDetectorRuleDetailsConfigurationArrayOutput) ToDetectorRecipeDetectorRuleDetailsConfigurationArrayOutputWithContext(ctx context.Context) DetectorRecipeDetectorRuleDetailsConfigurationArrayOutput {
	return o
}

func (o DetectorRecipeDetectorRuleDetailsConfigurationArrayOutput) Index(i pulumi.IntInput) DetectorRecipeDetectorRuleDetailsConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DetectorRecipeDetectorRuleDetailsConfiguration {
		return vs[0].([]DetectorRecipeDetectorRuleDetailsConfiguration)[vs[1].(int)]
	}).(DetectorRecipeDetectorRuleDetailsConfigurationOutput)
}

type DetectorRecipeDetectorRuleDetailsConfigurationValue struct {
	// (Updatable) configuration list item type, either CUSTOM or MANAGED
	ListType string `pulumi:"listType"`
	// (Updatable) type of the managed list
	ManagedListType string `pulumi:"managedListType"`
	// (Updatable) configuration value
	Value string `pulumi:"value"`
}

// DetectorRecipeDetectorRuleDetailsConfigurationValueInput is an input type that accepts DetectorRecipeDetectorRuleDetailsConfigurationValueArgs and DetectorRecipeDetectorRuleDetailsConfigurationValueOutput values.
// You can construct a concrete instance of `DetectorRecipeDetectorRuleDetailsConfigurationValueInput` via:
//
//          DetectorRecipeDetectorRuleDetailsConfigurationValueArgs{...}
type DetectorRecipeDetectorRuleDetailsConfigurationValueInput interface {
	pulumi.Input

	ToDetectorRecipeDetectorRuleDetailsConfigurationValueOutput() DetectorRecipeDetectorRuleDetailsConfigurationValueOutput
	ToDetectorRecipeDetectorRuleDetailsConfigurationValueOutputWithContext(context.Context) DetectorRecipeDetectorRuleDetailsConfigurationValueOutput
}

type DetectorRecipeDetectorRuleDetailsConfigurationValueArgs struct {
	// (Updatable) configuration list item type, either CUSTOM or MANAGED
	ListType pulumi.StringInput `pulumi:"listType"`
	// (Updatable) type of the managed list
	ManagedListType pulumi.StringInput `pulumi:"managedListType"`
	// (Updatable) configuration value
	Value pulumi.StringInput `pulumi:"value"`
}

func (DetectorRecipeDetectorRuleDetailsConfigurationValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorRecipeDetectorRuleDetailsConfigurationValue)(nil)).Elem()
}

func (i DetectorRecipeDetectorRuleDetailsConfigurationValueArgs) ToDetectorRecipeDetectorRuleDetailsConfigurationValueOutput() DetectorRecipeDetectorRuleDetailsConfigurationValueOutput {
	return i.ToDetectorRecipeDetectorRuleDetailsConfigurationValueOutputWithContext(context.Background())
}

func (i DetectorRecipeDetectorRuleDetailsConfigurationValueArgs) ToDetectorRecipeDetectorRuleDetailsConfigurationValueOutputWithContext(ctx context.Context) DetectorRecipeDetectorRuleDetailsConfigurationValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorRecipeDetectorRuleDetailsConfigurationValueOutput)
}

// DetectorRecipeDetectorRuleDetailsConfigurationValueArrayInput is an input type that accepts DetectorRecipeDetectorRuleDetailsConfigurationValueArray and DetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput values.
// You can construct a concrete instance of `DetectorRecipeDetectorRuleDetailsConfigurationValueArrayInput` via:
//
//          DetectorRecipeDetectorRuleDetailsConfigurationValueArray{ DetectorRecipeDetectorRuleDetailsConfigurationValueArgs{...} }
type DetectorRecipeDetectorRuleDetailsConfigurationValueArrayInput interface {
	pulumi.Input

	ToDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput() DetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput
	ToDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutputWithContext(context.Context) DetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput
}

type DetectorRecipeDetectorRuleDetailsConfigurationValueArray []DetectorRecipeDetectorRuleDetailsConfigurationValueInput

func (DetectorRecipeDetectorRuleDetailsConfigurationValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DetectorRecipeDetectorRuleDetailsConfigurationValue)(nil)).Elem()
}

func (i DetectorRecipeDetectorRuleDetailsConfigurationValueArray) ToDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput() DetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput {
	return i.ToDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutputWithContext(context.Background())
}

func (i DetectorRecipeDetectorRuleDetailsConfigurationValueArray) ToDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutputWithContext(ctx context.Context) DetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput)
}

type DetectorRecipeDetectorRuleDetailsConfigurationValueOutput struct{ *pulumi.OutputState }

func (DetectorRecipeDetectorRuleDetailsConfigurationValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorRecipeDetectorRuleDetailsConfigurationValue)(nil)).Elem()
}

func (o DetectorRecipeDetectorRuleDetailsConfigurationValueOutput) ToDetectorRecipeDetectorRuleDetailsConfigurationValueOutput() DetectorRecipeDetectorRuleDetailsConfigurationValueOutput {
	return o
}

func (o DetectorRecipeDetectorRuleDetailsConfigurationValueOutput) ToDetectorRecipeDetectorRuleDetailsConfigurationValueOutputWithContext(ctx context.Context) DetectorRecipeDetectorRuleDetailsConfigurationValueOutput {
	return o
}

// (Updatable) configuration list item type, either CUSTOM or MANAGED
func (o DetectorRecipeDetectorRuleDetailsConfigurationValueOutput) ListType() pulumi.StringOutput {
	return o.ApplyT(func(v DetectorRecipeDetectorRuleDetailsConfigurationValue) string { return v.ListType }).(pulumi.StringOutput)
}

// (Updatable) type of the managed list
func (o DetectorRecipeDetectorRuleDetailsConfigurationValueOutput) ManagedListType() pulumi.StringOutput {
	return o.ApplyT(func(v DetectorRecipeDetectorRuleDetailsConfigurationValue) string { return v.ManagedListType }).(pulumi.StringOutput)
}

// (Updatable) configuration value
func (o DetectorRecipeDetectorRuleDetailsConfigurationValueOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v DetectorRecipeDetectorRuleDetailsConfigurationValue) string { return v.Value }).(pulumi.StringOutput)
}

type DetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput struct{ *pulumi.OutputState }

func (DetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DetectorRecipeDetectorRuleDetailsConfigurationValue)(nil)).Elem()
}

func (o DetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput) ToDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput() DetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput {
	return o
}

func (o DetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput) ToDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutputWithContext(ctx context.Context) DetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput {
	return o
}

func (o DetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput) Index(i pulumi.IntInput) DetectorRecipeDetectorRuleDetailsConfigurationValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DetectorRecipeDetectorRuleDetailsConfigurationValue {
		return vs[0].([]DetectorRecipeDetectorRuleDetailsConfigurationValue)[vs[1].(int)]
	}).(DetectorRecipeDetectorRuleDetailsConfigurationValueOutput)
}

type DetectorRecipeEffectiveDetectorRule struct {
	// List of CandidateResponderRule related to this rule
	CandidateResponderRules []DetectorRecipeEffectiveDetectorRuleCandidateResponderRule `pulumi:"candidateResponderRules"`
	// (Updatable) DetectorRecipe Description
	Description *string `pulumi:"description"`
	// (Updatable) Details of a Detector Rule to be overriden in Detector Recipe
	Details *DetectorRecipeEffectiveDetectorRuleDetails `pulumi:"details"`
	// detector for the rule
	Detector *string `pulumi:"detector"`
	// (Updatable) DetectorRecipeRule Identifier
	DetectorRuleId *string `pulumi:"detectorRuleId"`
	// (Updatable) DetectorRecipe Display Name
	DisplayName *string `pulumi:"displayName"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// List of cloudguard managed list types related to this rule
	ManagedListTypes []string `pulumi:"managedListTypes"`
	// Recommendation for DetectorRecipeDetectorRule
	Recommendation *string `pulumi:"recommendation"`
	// resource type of the configuration to which the rule is applied
	ResourceType *string `pulumi:"resourceType"`
	// service type of the configuration to which the rule is applied
	ServiceType *string `pulumi:"serviceType"`
	// The current state of the resource.
	State *string `pulumi:"state"`
	// The date and time the detector recipe was created. Format defined by RFC3339.
	TimeCreated *string `pulumi:"timeCreated"`
	// The date and time the detector recipe was updated. Format defined by RFC3339.
	TimeUpdated *string `pulumi:"timeUpdated"`
}

// DetectorRecipeEffectiveDetectorRuleInput is an input type that accepts DetectorRecipeEffectiveDetectorRuleArgs and DetectorRecipeEffectiveDetectorRuleOutput values.
// You can construct a concrete instance of `DetectorRecipeEffectiveDetectorRuleInput` via:
//
//          DetectorRecipeEffectiveDetectorRuleArgs{...}
type DetectorRecipeEffectiveDetectorRuleInput interface {
	pulumi.Input

	ToDetectorRecipeEffectiveDetectorRuleOutput() DetectorRecipeEffectiveDetectorRuleOutput
	ToDetectorRecipeEffectiveDetectorRuleOutputWithContext(context.Context) DetectorRecipeEffectiveDetectorRuleOutput
}

type DetectorRecipeEffectiveDetectorRuleArgs struct {
	// List of CandidateResponderRule related to this rule
	CandidateResponderRules DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayInput `pulumi:"candidateResponderRules"`
	// (Updatable) DetectorRecipe Description
	Description pulumi.StringPtrInput `pulumi:"description"`
	// (Updatable) Details of a Detector Rule to be overriden in Detector Recipe
	Details DetectorRecipeEffectiveDetectorRuleDetailsPtrInput `pulumi:"details"`
	// detector for the rule
	Detector pulumi.StringPtrInput `pulumi:"detector"`
	// (Updatable) DetectorRecipeRule Identifier
	DetectorRuleId pulumi.StringPtrInput `pulumi:"detectorRuleId"`
	// (Updatable) DetectorRecipe Display Name
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringPtrInput `pulumi:"lifecycleDetails"`
	// List of cloudguard managed list types related to this rule
	ManagedListTypes pulumi.StringArrayInput `pulumi:"managedListTypes"`
	// Recommendation for DetectorRecipeDetectorRule
	Recommendation pulumi.StringPtrInput `pulumi:"recommendation"`
	// resource type of the configuration to which the rule is applied
	ResourceType pulumi.StringPtrInput `pulumi:"resourceType"`
	// service type of the configuration to which the rule is applied
	ServiceType pulumi.StringPtrInput `pulumi:"serviceType"`
	// The current state of the resource.
	State pulumi.StringPtrInput `pulumi:"state"`
	// The date and time the detector recipe was created. Format defined by RFC3339.
	TimeCreated pulumi.StringPtrInput `pulumi:"timeCreated"`
	// The date and time the detector recipe was updated. Format defined by RFC3339.
	TimeUpdated pulumi.StringPtrInput `pulumi:"timeUpdated"`
}

func (DetectorRecipeEffectiveDetectorRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorRecipeEffectiveDetectorRule)(nil)).Elem()
}

func (i DetectorRecipeEffectiveDetectorRuleArgs) ToDetectorRecipeEffectiveDetectorRuleOutput() DetectorRecipeEffectiveDetectorRuleOutput {
	return i.ToDetectorRecipeEffectiveDetectorRuleOutputWithContext(context.Background())
}

func (i DetectorRecipeEffectiveDetectorRuleArgs) ToDetectorRecipeEffectiveDetectorRuleOutputWithContext(ctx context.Context) DetectorRecipeEffectiveDetectorRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorRecipeEffectiveDetectorRuleOutput)
}

// DetectorRecipeEffectiveDetectorRuleArrayInput is an input type that accepts DetectorRecipeEffectiveDetectorRuleArray and DetectorRecipeEffectiveDetectorRuleArrayOutput values.
// You can construct a concrete instance of `DetectorRecipeEffectiveDetectorRuleArrayInput` via:
//
//          DetectorRecipeEffectiveDetectorRuleArray{ DetectorRecipeEffectiveDetectorRuleArgs{...} }
type DetectorRecipeEffectiveDetectorRuleArrayInput interface {
	pulumi.Input

	ToDetectorRecipeEffectiveDetectorRuleArrayOutput() DetectorRecipeEffectiveDetectorRuleArrayOutput
	ToDetectorRecipeEffectiveDetectorRuleArrayOutputWithContext(context.Context) DetectorRecipeEffectiveDetectorRuleArrayOutput
}

type DetectorRecipeEffectiveDetectorRuleArray []DetectorRecipeEffectiveDetectorRuleInput

func (DetectorRecipeEffectiveDetectorRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DetectorRecipeEffectiveDetectorRule)(nil)).Elem()
}

func (i DetectorRecipeEffectiveDetectorRuleArray) ToDetectorRecipeEffectiveDetectorRuleArrayOutput() DetectorRecipeEffectiveDetectorRuleArrayOutput {
	return i.ToDetectorRecipeEffectiveDetectorRuleArrayOutputWithContext(context.Background())
}

func (i DetectorRecipeEffectiveDetectorRuleArray) ToDetectorRecipeEffectiveDetectorRuleArrayOutputWithContext(ctx context.Context) DetectorRecipeEffectiveDetectorRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorRecipeEffectiveDetectorRuleArrayOutput)
}

type DetectorRecipeEffectiveDetectorRuleOutput struct{ *pulumi.OutputState }

func (DetectorRecipeEffectiveDetectorRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorRecipeEffectiveDetectorRule)(nil)).Elem()
}

func (o DetectorRecipeEffectiveDetectorRuleOutput) ToDetectorRecipeEffectiveDetectorRuleOutput() DetectorRecipeEffectiveDetectorRuleOutput {
	return o
}

func (o DetectorRecipeEffectiveDetectorRuleOutput) ToDetectorRecipeEffectiveDetectorRuleOutputWithContext(ctx context.Context) DetectorRecipeEffectiveDetectorRuleOutput {
	return o
}

// List of CandidateResponderRule related to this rule
func (o DetectorRecipeEffectiveDetectorRuleOutput) CandidateResponderRules() DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutput {
	return o.ApplyT(func(v DetectorRecipeEffectiveDetectorRule) []DetectorRecipeEffectiveDetectorRuleCandidateResponderRule {
		return v.CandidateResponderRules
	}).(DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutput)
}

// (Updatable) DetectorRecipe Description
func (o DetectorRecipeEffectiveDetectorRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorRecipeEffectiveDetectorRule) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// (Updatable) Details of a Detector Rule to be overriden in Detector Recipe
func (o DetectorRecipeEffectiveDetectorRuleOutput) Details() DetectorRecipeEffectiveDetectorRuleDetailsPtrOutput {
	return o.ApplyT(func(v DetectorRecipeEffectiveDetectorRule) *DetectorRecipeEffectiveDetectorRuleDetails {
		return v.Details
	}).(DetectorRecipeEffectiveDetectorRuleDetailsPtrOutput)
}

// detector for the rule
func (o DetectorRecipeEffectiveDetectorRuleOutput) Detector() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorRecipeEffectiveDetectorRule) *string { return v.Detector }).(pulumi.StringPtrOutput)
}

// (Updatable) DetectorRecipeRule Identifier
func (o DetectorRecipeEffectiveDetectorRuleOutput) DetectorRuleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorRecipeEffectiveDetectorRule) *string { return v.DetectorRuleId }).(pulumi.StringPtrOutput)
}

// (Updatable) DetectorRecipe Display Name
func (o DetectorRecipeEffectiveDetectorRuleOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorRecipeEffectiveDetectorRule) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o DetectorRecipeEffectiveDetectorRuleOutput) LifecycleDetails() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorRecipeEffectiveDetectorRule) *string { return v.LifecycleDetails }).(pulumi.StringPtrOutput)
}

// List of cloudguard managed list types related to this rule
func (o DetectorRecipeEffectiveDetectorRuleOutput) ManagedListTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DetectorRecipeEffectiveDetectorRule) []string { return v.ManagedListTypes }).(pulumi.StringArrayOutput)
}

// Recommendation for DetectorRecipeDetectorRule
func (o DetectorRecipeEffectiveDetectorRuleOutput) Recommendation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorRecipeEffectiveDetectorRule) *string { return v.Recommendation }).(pulumi.StringPtrOutput)
}

// resource type of the configuration to which the rule is applied
func (o DetectorRecipeEffectiveDetectorRuleOutput) ResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorRecipeEffectiveDetectorRule) *string { return v.ResourceType }).(pulumi.StringPtrOutput)
}

// service type of the configuration to which the rule is applied
func (o DetectorRecipeEffectiveDetectorRuleOutput) ServiceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorRecipeEffectiveDetectorRule) *string { return v.ServiceType }).(pulumi.StringPtrOutput)
}

// The current state of the resource.
func (o DetectorRecipeEffectiveDetectorRuleOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorRecipeEffectiveDetectorRule) *string { return v.State }).(pulumi.StringPtrOutput)
}

// The date and time the detector recipe was created. Format defined by RFC3339.
func (o DetectorRecipeEffectiveDetectorRuleOutput) TimeCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorRecipeEffectiveDetectorRule) *string { return v.TimeCreated }).(pulumi.StringPtrOutput)
}

// The date and time the detector recipe was updated. Format defined by RFC3339.
func (o DetectorRecipeEffectiveDetectorRuleOutput) TimeUpdated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorRecipeEffectiveDetectorRule) *string { return v.TimeUpdated }).(pulumi.StringPtrOutput)
}

type DetectorRecipeEffectiveDetectorRuleArrayOutput struct{ *pulumi.OutputState }

func (DetectorRecipeEffectiveDetectorRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DetectorRecipeEffectiveDetectorRule)(nil)).Elem()
}

func (o DetectorRecipeEffectiveDetectorRuleArrayOutput) ToDetectorRecipeEffectiveDetectorRuleArrayOutput() DetectorRecipeEffectiveDetectorRuleArrayOutput {
	return o
}

func (o DetectorRecipeEffectiveDetectorRuleArrayOutput) ToDetectorRecipeEffectiveDetectorRuleArrayOutputWithContext(ctx context.Context) DetectorRecipeEffectiveDetectorRuleArrayOutput {
	return o
}

func (o DetectorRecipeEffectiveDetectorRuleArrayOutput) Index(i pulumi.IntInput) DetectorRecipeEffectiveDetectorRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DetectorRecipeEffectiveDetectorRule {
		return vs[0].([]DetectorRecipeEffectiveDetectorRule)[vs[1].(int)]
	}).(DetectorRecipeEffectiveDetectorRuleOutput)
}

type DetectorRecipeEffectiveDetectorRuleCandidateResponderRule struct {
	// (Updatable) DetectorRecipe Display Name
	DisplayName *string `pulumi:"displayName"`
	// Ocid for detector recipe
	Id *string `pulumi:"id"`
	// Preferred state
	IsPreferred *bool `pulumi:"isPreferred"`
}

// DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleInput is an input type that accepts DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArgs and DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutput values.
// You can construct a concrete instance of `DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleInput` via:
//
//          DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArgs{...}
type DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleInput interface {
	pulumi.Input

	ToDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutput() DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutput
	ToDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutputWithContext(context.Context) DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutput
}

type DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArgs struct {
	// (Updatable) DetectorRecipe Display Name
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// Ocid for detector recipe
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Preferred state
	IsPreferred pulumi.BoolPtrInput `pulumi:"isPreferred"`
}

func (DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorRecipeEffectiveDetectorRuleCandidateResponderRule)(nil)).Elem()
}

func (i DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArgs) ToDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutput() DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutput {
	return i.ToDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutputWithContext(context.Background())
}

func (i DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArgs) ToDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutputWithContext(ctx context.Context) DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutput)
}

// DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayInput is an input type that accepts DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArray and DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutput values.
// You can construct a concrete instance of `DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayInput` via:
//
//          DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArray{ DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArgs{...} }
type DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayInput interface {
	pulumi.Input

	ToDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutput() DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutput
	ToDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutputWithContext(context.Context) DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutput
}

type DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArray []DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleInput

func (DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DetectorRecipeEffectiveDetectorRuleCandidateResponderRule)(nil)).Elem()
}

func (i DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArray) ToDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutput() DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutput {
	return i.ToDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutputWithContext(context.Background())
}

func (i DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArray) ToDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutputWithContext(ctx context.Context) DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutput)
}

type DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutput struct{ *pulumi.OutputState }

func (DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorRecipeEffectiveDetectorRuleCandidateResponderRule)(nil)).Elem()
}

func (o DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutput) ToDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutput() DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutput {
	return o
}

func (o DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutput) ToDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutputWithContext(ctx context.Context) DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutput {
	return o
}

// (Updatable) DetectorRecipe Display Name
func (o DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorRecipeEffectiveDetectorRuleCandidateResponderRule) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Ocid for detector recipe
func (o DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorRecipeEffectiveDetectorRuleCandidateResponderRule) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Preferred state
func (o DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutput) IsPreferred() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DetectorRecipeEffectiveDetectorRuleCandidateResponderRule) *bool { return v.IsPreferred }).(pulumi.BoolPtrOutput)
}

type DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutput struct{ *pulumi.OutputState }

func (DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DetectorRecipeEffectiveDetectorRuleCandidateResponderRule)(nil)).Elem()
}

func (o DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutput) ToDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutput() DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutput {
	return o
}

func (o DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutput) ToDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutputWithContext(ctx context.Context) DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutput {
	return o
}

func (o DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutput) Index(i pulumi.IntInput) DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DetectorRecipeEffectiveDetectorRuleCandidateResponderRule {
		return vs[0].([]DetectorRecipeEffectiveDetectorRuleCandidateResponderRule)[vs[1].(int)]
	}).(DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutput)
}

type DetectorRecipeEffectiveDetectorRuleDetails struct {
	// (Updatable)
	Condition *string `pulumi:"condition"`
	// (Updatable) Configuration details
	Configurations []DetectorRecipeEffectiveDetectorRuleDetailsConfiguration `pulumi:"configurations"`
	// configuration allowed or not
	IsConfigurationAllowed *bool `pulumi:"isConfigurationAllowed"`
	// (Updatable) Enables the control
	IsEnabled *bool `pulumi:"isEnabled"`
	// (Updatable) user defined labels for a detector rule
	Labels []string `pulumi:"labels"`
	// (Updatable) The Risk Level
	RiskLevel *string `pulumi:"riskLevel"`
}

// DetectorRecipeEffectiveDetectorRuleDetailsInput is an input type that accepts DetectorRecipeEffectiveDetectorRuleDetailsArgs and DetectorRecipeEffectiveDetectorRuleDetailsOutput values.
// You can construct a concrete instance of `DetectorRecipeEffectiveDetectorRuleDetailsInput` via:
//
//          DetectorRecipeEffectiveDetectorRuleDetailsArgs{...}
type DetectorRecipeEffectiveDetectorRuleDetailsInput interface {
	pulumi.Input

	ToDetectorRecipeEffectiveDetectorRuleDetailsOutput() DetectorRecipeEffectiveDetectorRuleDetailsOutput
	ToDetectorRecipeEffectiveDetectorRuleDetailsOutputWithContext(context.Context) DetectorRecipeEffectiveDetectorRuleDetailsOutput
}

type DetectorRecipeEffectiveDetectorRuleDetailsArgs struct {
	// (Updatable)
	Condition pulumi.StringPtrInput `pulumi:"condition"`
	// (Updatable) Configuration details
	Configurations DetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayInput `pulumi:"configurations"`
	// configuration allowed or not
	IsConfigurationAllowed pulumi.BoolPtrInput `pulumi:"isConfigurationAllowed"`
	// (Updatable) Enables the control
	IsEnabled pulumi.BoolPtrInput `pulumi:"isEnabled"`
	// (Updatable) user defined labels for a detector rule
	Labels pulumi.StringArrayInput `pulumi:"labels"`
	// (Updatable) The Risk Level
	RiskLevel pulumi.StringPtrInput `pulumi:"riskLevel"`
}

func (DetectorRecipeEffectiveDetectorRuleDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorRecipeEffectiveDetectorRuleDetails)(nil)).Elem()
}

func (i DetectorRecipeEffectiveDetectorRuleDetailsArgs) ToDetectorRecipeEffectiveDetectorRuleDetailsOutput() DetectorRecipeEffectiveDetectorRuleDetailsOutput {
	return i.ToDetectorRecipeEffectiveDetectorRuleDetailsOutputWithContext(context.Background())
}

func (i DetectorRecipeEffectiveDetectorRuleDetailsArgs) ToDetectorRecipeEffectiveDetectorRuleDetailsOutputWithContext(ctx context.Context) DetectorRecipeEffectiveDetectorRuleDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorRecipeEffectiveDetectorRuleDetailsOutput)
}

func (i DetectorRecipeEffectiveDetectorRuleDetailsArgs) ToDetectorRecipeEffectiveDetectorRuleDetailsPtrOutput() DetectorRecipeEffectiveDetectorRuleDetailsPtrOutput {
	return i.ToDetectorRecipeEffectiveDetectorRuleDetailsPtrOutputWithContext(context.Background())
}

func (i DetectorRecipeEffectiveDetectorRuleDetailsArgs) ToDetectorRecipeEffectiveDetectorRuleDetailsPtrOutputWithContext(ctx context.Context) DetectorRecipeEffectiveDetectorRuleDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorRecipeEffectiveDetectorRuleDetailsOutput).ToDetectorRecipeEffectiveDetectorRuleDetailsPtrOutputWithContext(ctx)
}

// DetectorRecipeEffectiveDetectorRuleDetailsPtrInput is an input type that accepts DetectorRecipeEffectiveDetectorRuleDetailsArgs, DetectorRecipeEffectiveDetectorRuleDetailsPtr and DetectorRecipeEffectiveDetectorRuleDetailsPtrOutput values.
// You can construct a concrete instance of `DetectorRecipeEffectiveDetectorRuleDetailsPtrInput` via:
//
//          DetectorRecipeEffectiveDetectorRuleDetailsArgs{...}
//
//  or:
//
//          nil
type DetectorRecipeEffectiveDetectorRuleDetailsPtrInput interface {
	pulumi.Input

	ToDetectorRecipeEffectiveDetectorRuleDetailsPtrOutput() DetectorRecipeEffectiveDetectorRuleDetailsPtrOutput
	ToDetectorRecipeEffectiveDetectorRuleDetailsPtrOutputWithContext(context.Context) DetectorRecipeEffectiveDetectorRuleDetailsPtrOutput
}

type detectorRecipeEffectiveDetectorRuleDetailsPtrType DetectorRecipeEffectiveDetectorRuleDetailsArgs

func DetectorRecipeEffectiveDetectorRuleDetailsPtr(v *DetectorRecipeEffectiveDetectorRuleDetailsArgs) DetectorRecipeEffectiveDetectorRuleDetailsPtrInput {
	return (*detectorRecipeEffectiveDetectorRuleDetailsPtrType)(v)
}

func (*detectorRecipeEffectiveDetectorRuleDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DetectorRecipeEffectiveDetectorRuleDetails)(nil)).Elem()
}

func (i *detectorRecipeEffectiveDetectorRuleDetailsPtrType) ToDetectorRecipeEffectiveDetectorRuleDetailsPtrOutput() DetectorRecipeEffectiveDetectorRuleDetailsPtrOutput {
	return i.ToDetectorRecipeEffectiveDetectorRuleDetailsPtrOutputWithContext(context.Background())
}

func (i *detectorRecipeEffectiveDetectorRuleDetailsPtrType) ToDetectorRecipeEffectiveDetectorRuleDetailsPtrOutputWithContext(ctx context.Context) DetectorRecipeEffectiveDetectorRuleDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorRecipeEffectiveDetectorRuleDetailsPtrOutput)
}

type DetectorRecipeEffectiveDetectorRuleDetailsOutput struct{ *pulumi.OutputState }

func (DetectorRecipeEffectiveDetectorRuleDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorRecipeEffectiveDetectorRuleDetails)(nil)).Elem()
}

func (o DetectorRecipeEffectiveDetectorRuleDetailsOutput) ToDetectorRecipeEffectiveDetectorRuleDetailsOutput() DetectorRecipeEffectiveDetectorRuleDetailsOutput {
	return o
}

func (o DetectorRecipeEffectiveDetectorRuleDetailsOutput) ToDetectorRecipeEffectiveDetectorRuleDetailsOutputWithContext(ctx context.Context) DetectorRecipeEffectiveDetectorRuleDetailsOutput {
	return o
}

func (o DetectorRecipeEffectiveDetectorRuleDetailsOutput) ToDetectorRecipeEffectiveDetectorRuleDetailsPtrOutput() DetectorRecipeEffectiveDetectorRuleDetailsPtrOutput {
	return o.ToDetectorRecipeEffectiveDetectorRuleDetailsPtrOutputWithContext(context.Background())
}

func (o DetectorRecipeEffectiveDetectorRuleDetailsOutput) ToDetectorRecipeEffectiveDetectorRuleDetailsPtrOutputWithContext(ctx context.Context) DetectorRecipeEffectiveDetectorRuleDetailsPtrOutput {
	return o.ApplyT(func(v DetectorRecipeEffectiveDetectorRuleDetails) *DetectorRecipeEffectiveDetectorRuleDetails {
		return &v
	}).(DetectorRecipeEffectiveDetectorRuleDetailsPtrOutput)
}

// (Updatable)
func (o DetectorRecipeEffectiveDetectorRuleDetailsOutput) Condition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorRecipeEffectiveDetectorRuleDetails) *string { return v.Condition }).(pulumi.StringPtrOutput)
}

// (Updatable) Configuration details
func (o DetectorRecipeEffectiveDetectorRuleDetailsOutput) Configurations() DetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput {
	return o.ApplyT(func(v DetectorRecipeEffectiveDetectorRuleDetails) []DetectorRecipeEffectiveDetectorRuleDetailsConfiguration {
		return v.Configurations
	}).(DetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput)
}

// configuration allowed or not
func (o DetectorRecipeEffectiveDetectorRuleDetailsOutput) IsConfigurationAllowed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DetectorRecipeEffectiveDetectorRuleDetails) *bool { return v.IsConfigurationAllowed }).(pulumi.BoolPtrOutput)
}

// (Updatable) Enables the control
func (o DetectorRecipeEffectiveDetectorRuleDetailsOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DetectorRecipeEffectiveDetectorRuleDetails) *bool { return v.IsEnabled }).(pulumi.BoolPtrOutput)
}

// (Updatable) user defined labels for a detector rule
func (o DetectorRecipeEffectiveDetectorRuleDetailsOutput) Labels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DetectorRecipeEffectiveDetectorRuleDetails) []string { return v.Labels }).(pulumi.StringArrayOutput)
}

// (Updatable) The Risk Level
func (o DetectorRecipeEffectiveDetectorRuleDetailsOutput) RiskLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorRecipeEffectiveDetectorRuleDetails) *string { return v.RiskLevel }).(pulumi.StringPtrOutput)
}

type DetectorRecipeEffectiveDetectorRuleDetailsPtrOutput struct{ *pulumi.OutputState }

func (DetectorRecipeEffectiveDetectorRuleDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DetectorRecipeEffectiveDetectorRuleDetails)(nil)).Elem()
}

func (o DetectorRecipeEffectiveDetectorRuleDetailsPtrOutput) ToDetectorRecipeEffectiveDetectorRuleDetailsPtrOutput() DetectorRecipeEffectiveDetectorRuleDetailsPtrOutput {
	return o
}

func (o DetectorRecipeEffectiveDetectorRuleDetailsPtrOutput) ToDetectorRecipeEffectiveDetectorRuleDetailsPtrOutputWithContext(ctx context.Context) DetectorRecipeEffectiveDetectorRuleDetailsPtrOutput {
	return o
}

func (o DetectorRecipeEffectiveDetectorRuleDetailsPtrOutput) Elem() DetectorRecipeEffectiveDetectorRuleDetailsOutput {
	return o.ApplyT(func(v *DetectorRecipeEffectiveDetectorRuleDetails) DetectorRecipeEffectiveDetectorRuleDetails {
		return *v
	}).(DetectorRecipeEffectiveDetectorRuleDetailsOutput)
}

// (Updatable)
func (o DetectorRecipeEffectiveDetectorRuleDetailsPtrOutput) Condition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DetectorRecipeEffectiveDetectorRuleDetails) *string {
		if v == nil {
			return nil
		}
		return v.Condition
	}).(pulumi.StringPtrOutput)
}

// (Updatable) Configuration details
func (o DetectorRecipeEffectiveDetectorRuleDetailsPtrOutput) Configurations() DetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput {
	return o.ApplyT(func(v *DetectorRecipeEffectiveDetectorRuleDetails) []DetectorRecipeEffectiveDetectorRuleDetailsConfiguration {
		if v == nil {
			return nil
		}
		return v.Configurations
	}).(DetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput)
}

// configuration allowed or not
func (o DetectorRecipeEffectiveDetectorRuleDetailsPtrOutput) IsConfigurationAllowed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DetectorRecipeEffectiveDetectorRuleDetails) *bool {
		if v == nil {
			return nil
		}
		return v.IsConfigurationAllowed
	}).(pulumi.BoolPtrOutput)
}

// (Updatable) Enables the control
func (o DetectorRecipeEffectiveDetectorRuleDetailsPtrOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DetectorRecipeEffectiveDetectorRuleDetails) *bool {
		if v == nil {
			return nil
		}
		return v.IsEnabled
	}).(pulumi.BoolPtrOutput)
}

// (Updatable) user defined labels for a detector rule
func (o DetectorRecipeEffectiveDetectorRuleDetailsPtrOutput) Labels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DetectorRecipeEffectiveDetectorRuleDetails) []string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringArrayOutput)
}

// (Updatable) The Risk Level
func (o DetectorRecipeEffectiveDetectorRuleDetailsPtrOutput) RiskLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DetectorRecipeEffectiveDetectorRuleDetails) *string {
		if v == nil {
			return nil
		}
		return v.RiskLevel
	}).(pulumi.StringPtrOutput)
}

type DetectorRecipeEffectiveDetectorRuleDetailsConfiguration struct {
	// (Updatable) Unique name of the configuration
	ConfigKey *string `pulumi:"configKey"`
	// (Updatable) configuration data type
	DataType *string `pulumi:"dataType"`
	// (Updatable) configuration name
	Name *string `pulumi:"name"`
	// (Updatable) configuration value
	Value *string `pulumi:"value"`
	// (Updatable) List of configuration values
	Values []DetectorRecipeEffectiveDetectorRuleDetailsConfigurationValue `pulumi:"values"`
}

// DetectorRecipeEffectiveDetectorRuleDetailsConfigurationInput is an input type that accepts DetectorRecipeEffectiveDetectorRuleDetailsConfigurationArgs and DetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput values.
// You can construct a concrete instance of `DetectorRecipeEffectiveDetectorRuleDetailsConfigurationInput` via:
//
//          DetectorRecipeEffectiveDetectorRuleDetailsConfigurationArgs{...}
type DetectorRecipeEffectiveDetectorRuleDetailsConfigurationInput interface {
	pulumi.Input

	ToDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput() DetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput
	ToDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutputWithContext(context.Context) DetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput
}

type DetectorRecipeEffectiveDetectorRuleDetailsConfigurationArgs struct {
	// (Updatable) Unique name of the configuration
	ConfigKey pulumi.StringPtrInput `pulumi:"configKey"`
	// (Updatable) configuration data type
	DataType pulumi.StringPtrInput `pulumi:"dataType"`
	// (Updatable) configuration name
	Name pulumi.StringPtrInput `pulumi:"name"`
	// (Updatable) configuration value
	Value pulumi.StringPtrInput `pulumi:"value"`
	// (Updatable) List of configuration values
	Values DetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayInput `pulumi:"values"`
}

func (DetectorRecipeEffectiveDetectorRuleDetailsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorRecipeEffectiveDetectorRuleDetailsConfiguration)(nil)).Elem()
}

func (i DetectorRecipeEffectiveDetectorRuleDetailsConfigurationArgs) ToDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput() DetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput {
	return i.ToDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutputWithContext(context.Background())
}

func (i DetectorRecipeEffectiveDetectorRuleDetailsConfigurationArgs) ToDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutputWithContext(ctx context.Context) DetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput)
}

// DetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayInput is an input type that accepts DetectorRecipeEffectiveDetectorRuleDetailsConfigurationArray and DetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput values.
// You can construct a concrete instance of `DetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayInput` via:
//
//          DetectorRecipeEffectiveDetectorRuleDetailsConfigurationArray{ DetectorRecipeEffectiveDetectorRuleDetailsConfigurationArgs{...} }
type DetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayInput interface {
	pulumi.Input

	ToDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput() DetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput
	ToDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutputWithContext(context.Context) DetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput
}

type DetectorRecipeEffectiveDetectorRuleDetailsConfigurationArray []DetectorRecipeEffectiveDetectorRuleDetailsConfigurationInput

func (DetectorRecipeEffectiveDetectorRuleDetailsConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DetectorRecipeEffectiveDetectorRuleDetailsConfiguration)(nil)).Elem()
}

func (i DetectorRecipeEffectiveDetectorRuleDetailsConfigurationArray) ToDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput() DetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput {
	return i.ToDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutputWithContext(context.Background())
}

func (i DetectorRecipeEffectiveDetectorRuleDetailsConfigurationArray) ToDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutputWithContext(ctx context.Context) DetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput)
}

type DetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput struct{ *pulumi.OutputState }

func (DetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorRecipeEffectiveDetectorRuleDetailsConfiguration)(nil)).Elem()
}

func (o DetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput) ToDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput() DetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput {
	return o
}

func (o DetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput) ToDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutputWithContext(ctx context.Context) DetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput {
	return o
}

// (Updatable) Unique name of the configuration
func (o DetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput) ConfigKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorRecipeEffectiveDetectorRuleDetailsConfiguration) *string { return v.ConfigKey }).(pulumi.StringPtrOutput)
}

// (Updatable) configuration data type
func (o DetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput) DataType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorRecipeEffectiveDetectorRuleDetailsConfiguration) *string { return v.DataType }).(pulumi.StringPtrOutput)
}

// (Updatable) configuration name
func (o DetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorRecipeEffectiveDetectorRuleDetailsConfiguration) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// (Updatable) configuration value
func (o DetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorRecipeEffectiveDetectorRuleDetailsConfiguration) *string { return v.Value }).(pulumi.StringPtrOutput)
}

// (Updatable) List of configuration values
func (o DetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput) Values() DetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput {
	return o.ApplyT(func(v DetectorRecipeEffectiveDetectorRuleDetailsConfiguration) []DetectorRecipeEffectiveDetectorRuleDetailsConfigurationValue {
		return v.Values
	}).(DetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput)
}

type DetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput struct{ *pulumi.OutputState }

func (DetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DetectorRecipeEffectiveDetectorRuleDetailsConfiguration)(nil)).Elem()
}

func (o DetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput) ToDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput() DetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput {
	return o
}

func (o DetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput) ToDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutputWithContext(ctx context.Context) DetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput {
	return o
}

func (o DetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput) Index(i pulumi.IntInput) DetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DetectorRecipeEffectiveDetectorRuleDetailsConfiguration {
		return vs[0].([]DetectorRecipeEffectiveDetectorRuleDetailsConfiguration)[vs[1].(int)]
	}).(DetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput)
}

type DetectorRecipeEffectiveDetectorRuleDetailsConfigurationValue struct {
	// (Updatable) configuration list item type, either CUSTOM or MANAGED
	ListType *string `pulumi:"listType"`
	// (Updatable) type of the managed list
	ManagedListType *string `pulumi:"managedListType"`
	// (Updatable) configuration value
	Value *string `pulumi:"value"`
}

// DetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueInput is an input type that accepts DetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArgs and DetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput values.
// You can construct a concrete instance of `DetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueInput` via:
//
//          DetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArgs{...}
type DetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueInput interface {
	pulumi.Input

	ToDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput() DetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput
	ToDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutputWithContext(context.Context) DetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput
}

type DetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArgs struct {
	// (Updatable) configuration list item type, either CUSTOM or MANAGED
	ListType pulumi.StringPtrInput `pulumi:"listType"`
	// (Updatable) type of the managed list
	ManagedListType pulumi.StringPtrInput `pulumi:"managedListType"`
	// (Updatable) configuration value
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (DetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorRecipeEffectiveDetectorRuleDetailsConfigurationValue)(nil)).Elem()
}

func (i DetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArgs) ToDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput() DetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput {
	return i.ToDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutputWithContext(context.Background())
}

func (i DetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArgs) ToDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutputWithContext(ctx context.Context) DetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput)
}

// DetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayInput is an input type that accepts DetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArray and DetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput values.
// You can construct a concrete instance of `DetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayInput` via:
//
//          DetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArray{ DetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArgs{...} }
type DetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayInput interface {
	pulumi.Input

	ToDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput() DetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput
	ToDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutputWithContext(context.Context) DetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput
}

type DetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArray []DetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueInput

func (DetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DetectorRecipeEffectiveDetectorRuleDetailsConfigurationValue)(nil)).Elem()
}

func (i DetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArray) ToDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput() DetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput {
	return i.ToDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutputWithContext(context.Background())
}

func (i DetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArray) ToDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutputWithContext(ctx context.Context) DetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput)
}

type DetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput struct{ *pulumi.OutputState }

func (DetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorRecipeEffectiveDetectorRuleDetailsConfigurationValue)(nil)).Elem()
}

func (o DetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput) ToDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput() DetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput {
	return o
}

func (o DetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput) ToDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutputWithContext(ctx context.Context) DetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput {
	return o
}

// (Updatable) configuration list item type, either CUSTOM or MANAGED
func (o DetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput) ListType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorRecipeEffectiveDetectorRuleDetailsConfigurationValue) *string { return v.ListType }).(pulumi.StringPtrOutput)
}

// (Updatable) type of the managed list
func (o DetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput) ManagedListType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorRecipeEffectiveDetectorRuleDetailsConfigurationValue) *string { return v.ManagedListType }).(pulumi.StringPtrOutput)
}

// (Updatable) configuration value
func (o DetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorRecipeEffectiveDetectorRuleDetailsConfigurationValue) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type DetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput struct{ *pulumi.OutputState }

func (DetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DetectorRecipeEffectiveDetectorRuleDetailsConfigurationValue)(nil)).Elem()
}

func (o DetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput) ToDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput() DetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput {
	return o
}

func (o DetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput) ToDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutputWithContext(ctx context.Context) DetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput {
	return o
}

func (o DetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput) Index(i pulumi.IntInput) DetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DetectorRecipeEffectiveDetectorRuleDetailsConfigurationValue {
		return vs[0].([]DetectorRecipeEffectiveDetectorRuleDetailsConfigurationValue)[vs[1].(int)]
	}).(DetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput)
}

type ResponderRecipeEffectiveResponderRule struct {
	// (Updatable) Compartment Identifier
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) ResponderRecipe Description
	Description *string `pulumi:"description"`
	// (Updatable) Details of UpdateResponderRuleDetails.
	Details *ResponderRecipeEffectiveResponderRuleDetails `pulumi:"details"`
	// (Updatable) ResponderRecipe Display Name
	DisplayName *string `pulumi:"displayName"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// List of Policy
	Policies []string `pulumi:"policies"`
	// (Updatable) ResponderRecipeRule Identifier
	ResponderRuleId *string `pulumi:"responderRuleId"`
	// The current state of the Example.
	State *string `pulumi:"state"`
	// Supported Execution Modes
	SupportedModes []string `pulumi:"supportedModes"`
	// The date and time the responder recipe was created. Format defined by RFC3339.
	TimeCreated *string `pulumi:"timeCreated"`
	// The date and time the responder recipe was updated. Format defined by RFC3339.
	TimeUpdated *string `pulumi:"timeUpdated"`
	// Type of Responder
	Type *string `pulumi:"type"`
}

// ResponderRecipeEffectiveResponderRuleInput is an input type that accepts ResponderRecipeEffectiveResponderRuleArgs and ResponderRecipeEffectiveResponderRuleOutput values.
// You can construct a concrete instance of `ResponderRecipeEffectiveResponderRuleInput` via:
//
//          ResponderRecipeEffectiveResponderRuleArgs{...}
type ResponderRecipeEffectiveResponderRuleInput interface {
	pulumi.Input

	ToResponderRecipeEffectiveResponderRuleOutput() ResponderRecipeEffectiveResponderRuleOutput
	ToResponderRecipeEffectiveResponderRuleOutputWithContext(context.Context) ResponderRecipeEffectiveResponderRuleOutput
}

type ResponderRecipeEffectiveResponderRuleArgs struct {
	// (Updatable) Compartment Identifier
	CompartmentId pulumi.StringPtrInput `pulumi:"compartmentId"`
	// (Updatable) ResponderRecipe Description
	Description pulumi.StringPtrInput `pulumi:"description"`
	// (Updatable) Details of UpdateResponderRuleDetails.
	Details ResponderRecipeEffectiveResponderRuleDetailsPtrInput `pulumi:"details"`
	// (Updatable) ResponderRecipe Display Name
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringPtrInput `pulumi:"lifecycleDetails"`
	// List of Policy
	Policies pulumi.StringArrayInput `pulumi:"policies"`
	// (Updatable) ResponderRecipeRule Identifier
	ResponderRuleId pulumi.StringPtrInput `pulumi:"responderRuleId"`
	// The current state of the Example.
	State pulumi.StringPtrInput `pulumi:"state"`
	// Supported Execution Modes
	SupportedModes pulumi.StringArrayInput `pulumi:"supportedModes"`
	// The date and time the responder recipe was created. Format defined by RFC3339.
	TimeCreated pulumi.StringPtrInput `pulumi:"timeCreated"`
	// The date and time the responder recipe was updated. Format defined by RFC3339.
	TimeUpdated pulumi.StringPtrInput `pulumi:"timeUpdated"`
	// Type of Responder
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ResponderRecipeEffectiveResponderRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponderRecipeEffectiveResponderRule)(nil)).Elem()
}

func (i ResponderRecipeEffectiveResponderRuleArgs) ToResponderRecipeEffectiveResponderRuleOutput() ResponderRecipeEffectiveResponderRuleOutput {
	return i.ToResponderRecipeEffectiveResponderRuleOutputWithContext(context.Background())
}

func (i ResponderRecipeEffectiveResponderRuleArgs) ToResponderRecipeEffectiveResponderRuleOutputWithContext(ctx context.Context) ResponderRecipeEffectiveResponderRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponderRecipeEffectiveResponderRuleOutput)
}

// ResponderRecipeEffectiveResponderRuleArrayInput is an input type that accepts ResponderRecipeEffectiveResponderRuleArray and ResponderRecipeEffectiveResponderRuleArrayOutput values.
// You can construct a concrete instance of `ResponderRecipeEffectiveResponderRuleArrayInput` via:
//
//          ResponderRecipeEffectiveResponderRuleArray{ ResponderRecipeEffectiveResponderRuleArgs{...} }
type ResponderRecipeEffectiveResponderRuleArrayInput interface {
	pulumi.Input

	ToResponderRecipeEffectiveResponderRuleArrayOutput() ResponderRecipeEffectiveResponderRuleArrayOutput
	ToResponderRecipeEffectiveResponderRuleArrayOutputWithContext(context.Context) ResponderRecipeEffectiveResponderRuleArrayOutput
}

type ResponderRecipeEffectiveResponderRuleArray []ResponderRecipeEffectiveResponderRuleInput

func (ResponderRecipeEffectiveResponderRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResponderRecipeEffectiveResponderRule)(nil)).Elem()
}

func (i ResponderRecipeEffectiveResponderRuleArray) ToResponderRecipeEffectiveResponderRuleArrayOutput() ResponderRecipeEffectiveResponderRuleArrayOutput {
	return i.ToResponderRecipeEffectiveResponderRuleArrayOutputWithContext(context.Background())
}

func (i ResponderRecipeEffectiveResponderRuleArray) ToResponderRecipeEffectiveResponderRuleArrayOutputWithContext(ctx context.Context) ResponderRecipeEffectiveResponderRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponderRecipeEffectiveResponderRuleArrayOutput)
}

type ResponderRecipeEffectiveResponderRuleOutput struct{ *pulumi.OutputState }

func (ResponderRecipeEffectiveResponderRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponderRecipeEffectiveResponderRule)(nil)).Elem()
}

func (o ResponderRecipeEffectiveResponderRuleOutput) ToResponderRecipeEffectiveResponderRuleOutput() ResponderRecipeEffectiveResponderRuleOutput {
	return o
}

func (o ResponderRecipeEffectiveResponderRuleOutput) ToResponderRecipeEffectiveResponderRuleOutputWithContext(ctx context.Context) ResponderRecipeEffectiveResponderRuleOutput {
	return o
}

// (Updatable) Compartment Identifier
func (o ResponderRecipeEffectiveResponderRuleOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResponderRecipeEffectiveResponderRule) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

// (Updatable) ResponderRecipe Description
func (o ResponderRecipeEffectiveResponderRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResponderRecipeEffectiveResponderRule) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// (Updatable) Details of UpdateResponderRuleDetails.
func (o ResponderRecipeEffectiveResponderRuleOutput) Details() ResponderRecipeEffectiveResponderRuleDetailsPtrOutput {
	return o.ApplyT(func(v ResponderRecipeEffectiveResponderRule) *ResponderRecipeEffectiveResponderRuleDetails {
		return v.Details
	}).(ResponderRecipeEffectiveResponderRuleDetailsPtrOutput)
}

// (Updatable) ResponderRecipe Display Name
func (o ResponderRecipeEffectiveResponderRuleOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResponderRecipeEffectiveResponderRule) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o ResponderRecipeEffectiveResponderRuleOutput) LifecycleDetails() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResponderRecipeEffectiveResponderRule) *string { return v.LifecycleDetails }).(pulumi.StringPtrOutput)
}

// List of Policy
func (o ResponderRecipeEffectiveResponderRuleOutput) Policies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ResponderRecipeEffectiveResponderRule) []string { return v.Policies }).(pulumi.StringArrayOutput)
}

// (Updatable) ResponderRecipeRule Identifier
func (o ResponderRecipeEffectiveResponderRuleOutput) ResponderRuleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResponderRecipeEffectiveResponderRule) *string { return v.ResponderRuleId }).(pulumi.StringPtrOutput)
}

// The current state of the Example.
func (o ResponderRecipeEffectiveResponderRuleOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResponderRecipeEffectiveResponderRule) *string { return v.State }).(pulumi.StringPtrOutput)
}

// Supported Execution Modes
func (o ResponderRecipeEffectiveResponderRuleOutput) SupportedModes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ResponderRecipeEffectiveResponderRule) []string { return v.SupportedModes }).(pulumi.StringArrayOutput)
}

// The date and time the responder recipe was created. Format defined by RFC3339.
func (o ResponderRecipeEffectiveResponderRuleOutput) TimeCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResponderRecipeEffectiveResponderRule) *string { return v.TimeCreated }).(pulumi.StringPtrOutput)
}

// The date and time the responder recipe was updated. Format defined by RFC3339.
func (o ResponderRecipeEffectiveResponderRuleOutput) TimeUpdated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResponderRecipeEffectiveResponderRule) *string { return v.TimeUpdated }).(pulumi.StringPtrOutput)
}

// Type of Responder
func (o ResponderRecipeEffectiveResponderRuleOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResponderRecipeEffectiveResponderRule) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ResponderRecipeEffectiveResponderRuleArrayOutput struct{ *pulumi.OutputState }

func (ResponderRecipeEffectiveResponderRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResponderRecipeEffectiveResponderRule)(nil)).Elem()
}

func (o ResponderRecipeEffectiveResponderRuleArrayOutput) ToResponderRecipeEffectiveResponderRuleArrayOutput() ResponderRecipeEffectiveResponderRuleArrayOutput {
	return o
}

func (o ResponderRecipeEffectiveResponderRuleArrayOutput) ToResponderRecipeEffectiveResponderRuleArrayOutputWithContext(ctx context.Context) ResponderRecipeEffectiveResponderRuleArrayOutput {
	return o
}

func (o ResponderRecipeEffectiveResponderRuleArrayOutput) Index(i pulumi.IntInput) ResponderRecipeEffectiveResponderRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResponderRecipeEffectiveResponderRule {
		return vs[0].([]ResponderRecipeEffectiveResponderRule)[vs[1].(int)]
	}).(ResponderRecipeEffectiveResponderRuleOutput)
}

type ResponderRecipeEffectiveResponderRuleDetails struct {
	Condition *string `pulumi:"condition"`
	// ResponderRule configurations
	Configurations []ResponderRecipeEffectiveResponderRuleDetailsConfiguration `pulumi:"configurations"`
	// (Updatable) Identifies state for ResponderRule
	IsEnabled *bool `pulumi:"isEnabled"`
	// Execution Mode for ResponderRule
	Mode *string `pulumi:"mode"`
}

// ResponderRecipeEffectiveResponderRuleDetailsInput is an input type that accepts ResponderRecipeEffectiveResponderRuleDetailsArgs and ResponderRecipeEffectiveResponderRuleDetailsOutput values.
// You can construct a concrete instance of `ResponderRecipeEffectiveResponderRuleDetailsInput` via:
//
//          ResponderRecipeEffectiveResponderRuleDetailsArgs{...}
type ResponderRecipeEffectiveResponderRuleDetailsInput interface {
	pulumi.Input

	ToResponderRecipeEffectiveResponderRuleDetailsOutput() ResponderRecipeEffectiveResponderRuleDetailsOutput
	ToResponderRecipeEffectiveResponderRuleDetailsOutputWithContext(context.Context) ResponderRecipeEffectiveResponderRuleDetailsOutput
}

type ResponderRecipeEffectiveResponderRuleDetailsArgs struct {
	Condition pulumi.StringPtrInput `pulumi:"condition"`
	// ResponderRule configurations
	Configurations ResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayInput `pulumi:"configurations"`
	// (Updatable) Identifies state for ResponderRule
	IsEnabled pulumi.BoolPtrInput `pulumi:"isEnabled"`
	// Execution Mode for ResponderRule
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (ResponderRecipeEffectiveResponderRuleDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponderRecipeEffectiveResponderRuleDetails)(nil)).Elem()
}

func (i ResponderRecipeEffectiveResponderRuleDetailsArgs) ToResponderRecipeEffectiveResponderRuleDetailsOutput() ResponderRecipeEffectiveResponderRuleDetailsOutput {
	return i.ToResponderRecipeEffectiveResponderRuleDetailsOutputWithContext(context.Background())
}

func (i ResponderRecipeEffectiveResponderRuleDetailsArgs) ToResponderRecipeEffectiveResponderRuleDetailsOutputWithContext(ctx context.Context) ResponderRecipeEffectiveResponderRuleDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponderRecipeEffectiveResponderRuleDetailsOutput)
}

func (i ResponderRecipeEffectiveResponderRuleDetailsArgs) ToResponderRecipeEffectiveResponderRuleDetailsPtrOutput() ResponderRecipeEffectiveResponderRuleDetailsPtrOutput {
	return i.ToResponderRecipeEffectiveResponderRuleDetailsPtrOutputWithContext(context.Background())
}

func (i ResponderRecipeEffectiveResponderRuleDetailsArgs) ToResponderRecipeEffectiveResponderRuleDetailsPtrOutputWithContext(ctx context.Context) ResponderRecipeEffectiveResponderRuleDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponderRecipeEffectiveResponderRuleDetailsOutput).ToResponderRecipeEffectiveResponderRuleDetailsPtrOutputWithContext(ctx)
}

// ResponderRecipeEffectiveResponderRuleDetailsPtrInput is an input type that accepts ResponderRecipeEffectiveResponderRuleDetailsArgs, ResponderRecipeEffectiveResponderRuleDetailsPtr and ResponderRecipeEffectiveResponderRuleDetailsPtrOutput values.
// You can construct a concrete instance of `ResponderRecipeEffectiveResponderRuleDetailsPtrInput` via:
//
//          ResponderRecipeEffectiveResponderRuleDetailsArgs{...}
//
//  or:
//
//          nil
type ResponderRecipeEffectiveResponderRuleDetailsPtrInput interface {
	pulumi.Input

	ToResponderRecipeEffectiveResponderRuleDetailsPtrOutput() ResponderRecipeEffectiveResponderRuleDetailsPtrOutput
	ToResponderRecipeEffectiveResponderRuleDetailsPtrOutputWithContext(context.Context) ResponderRecipeEffectiveResponderRuleDetailsPtrOutput
}

type responderRecipeEffectiveResponderRuleDetailsPtrType ResponderRecipeEffectiveResponderRuleDetailsArgs

func ResponderRecipeEffectiveResponderRuleDetailsPtr(v *ResponderRecipeEffectiveResponderRuleDetailsArgs) ResponderRecipeEffectiveResponderRuleDetailsPtrInput {
	return (*responderRecipeEffectiveResponderRuleDetailsPtrType)(v)
}

func (*responderRecipeEffectiveResponderRuleDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResponderRecipeEffectiveResponderRuleDetails)(nil)).Elem()
}

func (i *responderRecipeEffectiveResponderRuleDetailsPtrType) ToResponderRecipeEffectiveResponderRuleDetailsPtrOutput() ResponderRecipeEffectiveResponderRuleDetailsPtrOutput {
	return i.ToResponderRecipeEffectiveResponderRuleDetailsPtrOutputWithContext(context.Background())
}

func (i *responderRecipeEffectiveResponderRuleDetailsPtrType) ToResponderRecipeEffectiveResponderRuleDetailsPtrOutputWithContext(ctx context.Context) ResponderRecipeEffectiveResponderRuleDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponderRecipeEffectiveResponderRuleDetailsPtrOutput)
}

type ResponderRecipeEffectiveResponderRuleDetailsOutput struct{ *pulumi.OutputState }

func (ResponderRecipeEffectiveResponderRuleDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponderRecipeEffectiveResponderRuleDetails)(nil)).Elem()
}

func (o ResponderRecipeEffectiveResponderRuleDetailsOutput) ToResponderRecipeEffectiveResponderRuleDetailsOutput() ResponderRecipeEffectiveResponderRuleDetailsOutput {
	return o
}

func (o ResponderRecipeEffectiveResponderRuleDetailsOutput) ToResponderRecipeEffectiveResponderRuleDetailsOutputWithContext(ctx context.Context) ResponderRecipeEffectiveResponderRuleDetailsOutput {
	return o
}

func (o ResponderRecipeEffectiveResponderRuleDetailsOutput) ToResponderRecipeEffectiveResponderRuleDetailsPtrOutput() ResponderRecipeEffectiveResponderRuleDetailsPtrOutput {
	return o.ToResponderRecipeEffectiveResponderRuleDetailsPtrOutputWithContext(context.Background())
}

func (o ResponderRecipeEffectiveResponderRuleDetailsOutput) ToResponderRecipeEffectiveResponderRuleDetailsPtrOutputWithContext(ctx context.Context) ResponderRecipeEffectiveResponderRuleDetailsPtrOutput {
	return o.ApplyT(func(v ResponderRecipeEffectiveResponderRuleDetails) *ResponderRecipeEffectiveResponderRuleDetails {
		return &v
	}).(ResponderRecipeEffectiveResponderRuleDetailsPtrOutput)
}
func (o ResponderRecipeEffectiveResponderRuleDetailsOutput) Condition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResponderRecipeEffectiveResponderRuleDetails) *string { return v.Condition }).(pulumi.StringPtrOutput)
}

// ResponderRule configurations
func (o ResponderRecipeEffectiveResponderRuleDetailsOutput) Configurations() ResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput {
	return o.ApplyT(func(v ResponderRecipeEffectiveResponderRuleDetails) []ResponderRecipeEffectiveResponderRuleDetailsConfiguration {
		return v.Configurations
	}).(ResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput)
}

// (Updatable) Identifies state for ResponderRule
func (o ResponderRecipeEffectiveResponderRuleDetailsOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ResponderRecipeEffectiveResponderRuleDetails) *bool { return v.IsEnabled }).(pulumi.BoolPtrOutput)
}

// Execution Mode for ResponderRule
func (o ResponderRecipeEffectiveResponderRuleDetailsOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResponderRecipeEffectiveResponderRuleDetails) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type ResponderRecipeEffectiveResponderRuleDetailsPtrOutput struct{ *pulumi.OutputState }

func (ResponderRecipeEffectiveResponderRuleDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResponderRecipeEffectiveResponderRuleDetails)(nil)).Elem()
}

func (o ResponderRecipeEffectiveResponderRuleDetailsPtrOutput) ToResponderRecipeEffectiveResponderRuleDetailsPtrOutput() ResponderRecipeEffectiveResponderRuleDetailsPtrOutput {
	return o
}

func (o ResponderRecipeEffectiveResponderRuleDetailsPtrOutput) ToResponderRecipeEffectiveResponderRuleDetailsPtrOutputWithContext(ctx context.Context) ResponderRecipeEffectiveResponderRuleDetailsPtrOutput {
	return o
}

func (o ResponderRecipeEffectiveResponderRuleDetailsPtrOutput) Elem() ResponderRecipeEffectiveResponderRuleDetailsOutput {
	return o.ApplyT(func(v *ResponderRecipeEffectiveResponderRuleDetails) ResponderRecipeEffectiveResponderRuleDetails {
		return *v
	}).(ResponderRecipeEffectiveResponderRuleDetailsOutput)
}

func (o ResponderRecipeEffectiveResponderRuleDetailsPtrOutput) Condition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResponderRecipeEffectiveResponderRuleDetails) *string {
		if v == nil {
			return nil
		}
		return v.Condition
	}).(pulumi.StringPtrOutput)
}

// ResponderRule configurations
func (o ResponderRecipeEffectiveResponderRuleDetailsPtrOutput) Configurations() ResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput {
	return o.ApplyT(func(v *ResponderRecipeEffectiveResponderRuleDetails) []ResponderRecipeEffectiveResponderRuleDetailsConfiguration {
		if v == nil {
			return nil
		}
		return v.Configurations
	}).(ResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput)
}

// (Updatable) Identifies state for ResponderRule
func (o ResponderRecipeEffectiveResponderRuleDetailsPtrOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ResponderRecipeEffectiveResponderRuleDetails) *bool {
		if v == nil {
			return nil
		}
		return v.IsEnabled
	}).(pulumi.BoolPtrOutput)
}

// Execution Mode for ResponderRule
func (o ResponderRecipeEffectiveResponderRuleDetailsPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResponderRecipeEffectiveResponderRuleDetails) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

type ResponderRecipeEffectiveResponderRuleDetailsConfiguration struct {
	// Unique name of the configuration
	ConfigKey *string `pulumi:"configKey"`
	// configuration name
	Name *string `pulumi:"name"`
	// configuration value
	Value *string `pulumi:"value"`
}

// ResponderRecipeEffectiveResponderRuleDetailsConfigurationInput is an input type that accepts ResponderRecipeEffectiveResponderRuleDetailsConfigurationArgs and ResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput values.
// You can construct a concrete instance of `ResponderRecipeEffectiveResponderRuleDetailsConfigurationInput` via:
//
//          ResponderRecipeEffectiveResponderRuleDetailsConfigurationArgs{...}
type ResponderRecipeEffectiveResponderRuleDetailsConfigurationInput interface {
	pulumi.Input

	ToResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput() ResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput
	ToResponderRecipeEffectiveResponderRuleDetailsConfigurationOutputWithContext(context.Context) ResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput
}

type ResponderRecipeEffectiveResponderRuleDetailsConfigurationArgs struct {
	// Unique name of the configuration
	ConfigKey pulumi.StringPtrInput `pulumi:"configKey"`
	// configuration name
	Name pulumi.StringPtrInput `pulumi:"name"`
	// configuration value
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ResponderRecipeEffectiveResponderRuleDetailsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponderRecipeEffectiveResponderRuleDetailsConfiguration)(nil)).Elem()
}

func (i ResponderRecipeEffectiveResponderRuleDetailsConfigurationArgs) ToResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput() ResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput {
	return i.ToResponderRecipeEffectiveResponderRuleDetailsConfigurationOutputWithContext(context.Background())
}

func (i ResponderRecipeEffectiveResponderRuleDetailsConfigurationArgs) ToResponderRecipeEffectiveResponderRuleDetailsConfigurationOutputWithContext(ctx context.Context) ResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput)
}

// ResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayInput is an input type that accepts ResponderRecipeEffectiveResponderRuleDetailsConfigurationArray and ResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput values.
// You can construct a concrete instance of `ResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayInput` via:
//
//          ResponderRecipeEffectiveResponderRuleDetailsConfigurationArray{ ResponderRecipeEffectiveResponderRuleDetailsConfigurationArgs{...} }
type ResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayInput interface {
	pulumi.Input

	ToResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput() ResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput
	ToResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutputWithContext(context.Context) ResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput
}

type ResponderRecipeEffectiveResponderRuleDetailsConfigurationArray []ResponderRecipeEffectiveResponderRuleDetailsConfigurationInput

func (ResponderRecipeEffectiveResponderRuleDetailsConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResponderRecipeEffectiveResponderRuleDetailsConfiguration)(nil)).Elem()
}

func (i ResponderRecipeEffectiveResponderRuleDetailsConfigurationArray) ToResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput() ResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput {
	return i.ToResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutputWithContext(context.Background())
}

func (i ResponderRecipeEffectiveResponderRuleDetailsConfigurationArray) ToResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutputWithContext(ctx context.Context) ResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput)
}

type ResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput struct{ *pulumi.OutputState }

func (ResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponderRecipeEffectiveResponderRuleDetailsConfiguration)(nil)).Elem()
}

func (o ResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput) ToResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput() ResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput {
	return o
}

func (o ResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput) ToResponderRecipeEffectiveResponderRuleDetailsConfigurationOutputWithContext(ctx context.Context) ResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput {
	return o
}

// Unique name of the configuration
func (o ResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput) ConfigKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResponderRecipeEffectiveResponderRuleDetailsConfiguration) *string { return v.ConfigKey }).(pulumi.StringPtrOutput)
}

// configuration name
func (o ResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResponderRecipeEffectiveResponderRuleDetailsConfiguration) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// configuration value
func (o ResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResponderRecipeEffectiveResponderRuleDetailsConfiguration) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput struct{ *pulumi.OutputState }

func (ResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResponderRecipeEffectiveResponderRuleDetailsConfiguration)(nil)).Elem()
}

func (o ResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput) ToResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput() ResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput {
	return o
}

func (o ResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput) ToResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutputWithContext(ctx context.Context) ResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput {
	return o
}

func (o ResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput) Index(i pulumi.IntInput) ResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResponderRecipeEffectiveResponderRuleDetailsConfiguration {
		return vs[0].([]ResponderRecipeEffectiveResponderRuleDetailsConfiguration)[vs[1].(int)]
	}).(ResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput)
}

type ResponderRecipeResponderRule struct {
	// (Updatable) Compartment Identifier
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) ResponderRecipe Description
	Description *string `pulumi:"description"`
	// (Updatable) Details of UpdateResponderRuleDetails.
	Details ResponderRecipeResponderRuleDetails `pulumi:"details"`
	// (Updatable) ResponderRecipe Display Name
	DisplayName *string `pulumi:"displayName"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// List of Policy
	Policies []string `pulumi:"policies"`
	// (Updatable) ResponderRecipeRule Identifier
	ResponderRuleId string `pulumi:"responderRuleId"`
	// The current state of the Example.
	State *string `pulumi:"state"`
	// Supported Execution Modes
	SupportedModes []string `pulumi:"supportedModes"`
	// The date and time the responder recipe was created. Format defined by RFC3339.
	TimeCreated *string `pulumi:"timeCreated"`
	// The date and time the responder recipe was updated. Format defined by RFC3339.
	TimeUpdated *string `pulumi:"timeUpdated"`
	// Type of Responder
	Type *string `pulumi:"type"`
}

// ResponderRecipeResponderRuleInput is an input type that accepts ResponderRecipeResponderRuleArgs and ResponderRecipeResponderRuleOutput values.
// You can construct a concrete instance of `ResponderRecipeResponderRuleInput` via:
//
//          ResponderRecipeResponderRuleArgs{...}
type ResponderRecipeResponderRuleInput interface {
	pulumi.Input

	ToResponderRecipeResponderRuleOutput() ResponderRecipeResponderRuleOutput
	ToResponderRecipeResponderRuleOutputWithContext(context.Context) ResponderRecipeResponderRuleOutput
}

type ResponderRecipeResponderRuleArgs struct {
	// (Updatable) Compartment Identifier
	CompartmentId pulumi.StringPtrInput `pulumi:"compartmentId"`
	// (Updatable) ResponderRecipe Description
	Description pulumi.StringPtrInput `pulumi:"description"`
	// (Updatable) Details of UpdateResponderRuleDetails.
	Details ResponderRecipeResponderRuleDetailsInput `pulumi:"details"`
	// (Updatable) ResponderRecipe Display Name
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringPtrInput `pulumi:"lifecycleDetails"`
	// List of Policy
	Policies pulumi.StringArrayInput `pulumi:"policies"`
	// (Updatable) ResponderRecipeRule Identifier
	ResponderRuleId pulumi.StringInput `pulumi:"responderRuleId"`
	// The current state of the Example.
	State pulumi.StringPtrInput `pulumi:"state"`
	// Supported Execution Modes
	SupportedModes pulumi.StringArrayInput `pulumi:"supportedModes"`
	// The date and time the responder recipe was created. Format defined by RFC3339.
	TimeCreated pulumi.StringPtrInput `pulumi:"timeCreated"`
	// The date and time the responder recipe was updated. Format defined by RFC3339.
	TimeUpdated pulumi.StringPtrInput `pulumi:"timeUpdated"`
	// Type of Responder
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ResponderRecipeResponderRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponderRecipeResponderRule)(nil)).Elem()
}

func (i ResponderRecipeResponderRuleArgs) ToResponderRecipeResponderRuleOutput() ResponderRecipeResponderRuleOutput {
	return i.ToResponderRecipeResponderRuleOutputWithContext(context.Background())
}

func (i ResponderRecipeResponderRuleArgs) ToResponderRecipeResponderRuleOutputWithContext(ctx context.Context) ResponderRecipeResponderRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponderRecipeResponderRuleOutput)
}

// ResponderRecipeResponderRuleArrayInput is an input type that accepts ResponderRecipeResponderRuleArray and ResponderRecipeResponderRuleArrayOutput values.
// You can construct a concrete instance of `ResponderRecipeResponderRuleArrayInput` via:
//
//          ResponderRecipeResponderRuleArray{ ResponderRecipeResponderRuleArgs{...} }
type ResponderRecipeResponderRuleArrayInput interface {
	pulumi.Input

	ToResponderRecipeResponderRuleArrayOutput() ResponderRecipeResponderRuleArrayOutput
	ToResponderRecipeResponderRuleArrayOutputWithContext(context.Context) ResponderRecipeResponderRuleArrayOutput
}

type ResponderRecipeResponderRuleArray []ResponderRecipeResponderRuleInput

func (ResponderRecipeResponderRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResponderRecipeResponderRule)(nil)).Elem()
}

func (i ResponderRecipeResponderRuleArray) ToResponderRecipeResponderRuleArrayOutput() ResponderRecipeResponderRuleArrayOutput {
	return i.ToResponderRecipeResponderRuleArrayOutputWithContext(context.Background())
}

func (i ResponderRecipeResponderRuleArray) ToResponderRecipeResponderRuleArrayOutputWithContext(ctx context.Context) ResponderRecipeResponderRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponderRecipeResponderRuleArrayOutput)
}

type ResponderRecipeResponderRuleOutput struct{ *pulumi.OutputState }

func (ResponderRecipeResponderRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponderRecipeResponderRule)(nil)).Elem()
}

func (o ResponderRecipeResponderRuleOutput) ToResponderRecipeResponderRuleOutput() ResponderRecipeResponderRuleOutput {
	return o
}

func (o ResponderRecipeResponderRuleOutput) ToResponderRecipeResponderRuleOutputWithContext(ctx context.Context) ResponderRecipeResponderRuleOutput {
	return o
}

// (Updatable) Compartment Identifier
func (o ResponderRecipeResponderRuleOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResponderRecipeResponderRule) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

// (Updatable) ResponderRecipe Description
func (o ResponderRecipeResponderRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResponderRecipeResponderRule) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// (Updatable) Details of UpdateResponderRuleDetails.
func (o ResponderRecipeResponderRuleOutput) Details() ResponderRecipeResponderRuleDetailsOutput {
	return o.ApplyT(func(v ResponderRecipeResponderRule) ResponderRecipeResponderRuleDetails { return v.Details }).(ResponderRecipeResponderRuleDetailsOutput)
}

// (Updatable) ResponderRecipe Display Name
func (o ResponderRecipeResponderRuleOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResponderRecipeResponderRule) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o ResponderRecipeResponderRuleOutput) LifecycleDetails() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResponderRecipeResponderRule) *string { return v.LifecycleDetails }).(pulumi.StringPtrOutput)
}

// List of Policy
func (o ResponderRecipeResponderRuleOutput) Policies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ResponderRecipeResponderRule) []string { return v.Policies }).(pulumi.StringArrayOutput)
}

// (Updatable) ResponderRecipeRule Identifier
func (o ResponderRecipeResponderRuleOutput) ResponderRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v ResponderRecipeResponderRule) string { return v.ResponderRuleId }).(pulumi.StringOutput)
}

// The current state of the Example.
func (o ResponderRecipeResponderRuleOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResponderRecipeResponderRule) *string { return v.State }).(pulumi.StringPtrOutput)
}

// Supported Execution Modes
func (o ResponderRecipeResponderRuleOutput) SupportedModes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ResponderRecipeResponderRule) []string { return v.SupportedModes }).(pulumi.StringArrayOutput)
}

// The date and time the responder recipe was created. Format defined by RFC3339.
func (o ResponderRecipeResponderRuleOutput) TimeCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResponderRecipeResponderRule) *string { return v.TimeCreated }).(pulumi.StringPtrOutput)
}

// The date and time the responder recipe was updated. Format defined by RFC3339.
func (o ResponderRecipeResponderRuleOutput) TimeUpdated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResponderRecipeResponderRule) *string { return v.TimeUpdated }).(pulumi.StringPtrOutput)
}

// Type of Responder
func (o ResponderRecipeResponderRuleOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResponderRecipeResponderRule) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ResponderRecipeResponderRuleArrayOutput struct{ *pulumi.OutputState }

func (ResponderRecipeResponderRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResponderRecipeResponderRule)(nil)).Elem()
}

func (o ResponderRecipeResponderRuleArrayOutput) ToResponderRecipeResponderRuleArrayOutput() ResponderRecipeResponderRuleArrayOutput {
	return o
}

func (o ResponderRecipeResponderRuleArrayOutput) ToResponderRecipeResponderRuleArrayOutputWithContext(ctx context.Context) ResponderRecipeResponderRuleArrayOutput {
	return o
}

func (o ResponderRecipeResponderRuleArrayOutput) Index(i pulumi.IntInput) ResponderRecipeResponderRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResponderRecipeResponderRule {
		return vs[0].([]ResponderRecipeResponderRule)[vs[1].(int)]
	}).(ResponderRecipeResponderRuleOutput)
}

type ResponderRecipeResponderRuleDetails struct {
	Condition *string `pulumi:"condition"`
	// ResponderRule configurations
	Configurations []ResponderRecipeResponderRuleDetailsConfiguration `pulumi:"configurations"`
	// (Updatable) Identifies state for ResponderRule
	IsEnabled bool `pulumi:"isEnabled"`
	// Execution Mode for ResponderRule
	Mode *string `pulumi:"mode"`
}

// ResponderRecipeResponderRuleDetailsInput is an input type that accepts ResponderRecipeResponderRuleDetailsArgs and ResponderRecipeResponderRuleDetailsOutput values.
// You can construct a concrete instance of `ResponderRecipeResponderRuleDetailsInput` via:
//
//          ResponderRecipeResponderRuleDetailsArgs{...}
type ResponderRecipeResponderRuleDetailsInput interface {
	pulumi.Input

	ToResponderRecipeResponderRuleDetailsOutput() ResponderRecipeResponderRuleDetailsOutput
	ToResponderRecipeResponderRuleDetailsOutputWithContext(context.Context) ResponderRecipeResponderRuleDetailsOutput
}

type ResponderRecipeResponderRuleDetailsArgs struct {
	Condition pulumi.StringPtrInput `pulumi:"condition"`
	// ResponderRule configurations
	Configurations ResponderRecipeResponderRuleDetailsConfigurationArrayInput `pulumi:"configurations"`
	// (Updatable) Identifies state for ResponderRule
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// Execution Mode for ResponderRule
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (ResponderRecipeResponderRuleDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponderRecipeResponderRuleDetails)(nil)).Elem()
}

func (i ResponderRecipeResponderRuleDetailsArgs) ToResponderRecipeResponderRuleDetailsOutput() ResponderRecipeResponderRuleDetailsOutput {
	return i.ToResponderRecipeResponderRuleDetailsOutputWithContext(context.Background())
}

func (i ResponderRecipeResponderRuleDetailsArgs) ToResponderRecipeResponderRuleDetailsOutputWithContext(ctx context.Context) ResponderRecipeResponderRuleDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponderRecipeResponderRuleDetailsOutput)
}

type ResponderRecipeResponderRuleDetailsOutput struct{ *pulumi.OutputState }

func (ResponderRecipeResponderRuleDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponderRecipeResponderRuleDetails)(nil)).Elem()
}

func (o ResponderRecipeResponderRuleDetailsOutput) ToResponderRecipeResponderRuleDetailsOutput() ResponderRecipeResponderRuleDetailsOutput {
	return o
}

func (o ResponderRecipeResponderRuleDetailsOutput) ToResponderRecipeResponderRuleDetailsOutputWithContext(ctx context.Context) ResponderRecipeResponderRuleDetailsOutput {
	return o
}

func (o ResponderRecipeResponderRuleDetailsOutput) Condition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResponderRecipeResponderRuleDetails) *string { return v.Condition }).(pulumi.StringPtrOutput)
}

// ResponderRule configurations
func (o ResponderRecipeResponderRuleDetailsOutput) Configurations() ResponderRecipeResponderRuleDetailsConfigurationArrayOutput {
	return o.ApplyT(func(v ResponderRecipeResponderRuleDetails) []ResponderRecipeResponderRuleDetailsConfiguration {
		return v.Configurations
	}).(ResponderRecipeResponderRuleDetailsConfigurationArrayOutput)
}

// (Updatable) Identifies state for ResponderRule
func (o ResponderRecipeResponderRuleDetailsOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ResponderRecipeResponderRuleDetails) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// Execution Mode for ResponderRule
func (o ResponderRecipeResponderRuleDetailsOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResponderRecipeResponderRuleDetails) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type ResponderRecipeResponderRuleDetailsConfiguration struct {
	// Unique name of the configuration
	ConfigKey *string `pulumi:"configKey"`
	// configuration name
	Name *string `pulumi:"name"`
	// configuration value
	Value *string `pulumi:"value"`
}

// ResponderRecipeResponderRuleDetailsConfigurationInput is an input type that accepts ResponderRecipeResponderRuleDetailsConfigurationArgs and ResponderRecipeResponderRuleDetailsConfigurationOutput values.
// You can construct a concrete instance of `ResponderRecipeResponderRuleDetailsConfigurationInput` via:
//
//          ResponderRecipeResponderRuleDetailsConfigurationArgs{...}
type ResponderRecipeResponderRuleDetailsConfigurationInput interface {
	pulumi.Input

	ToResponderRecipeResponderRuleDetailsConfigurationOutput() ResponderRecipeResponderRuleDetailsConfigurationOutput
	ToResponderRecipeResponderRuleDetailsConfigurationOutputWithContext(context.Context) ResponderRecipeResponderRuleDetailsConfigurationOutput
}

type ResponderRecipeResponderRuleDetailsConfigurationArgs struct {
	// Unique name of the configuration
	ConfigKey pulumi.StringPtrInput `pulumi:"configKey"`
	// configuration name
	Name pulumi.StringPtrInput `pulumi:"name"`
	// configuration value
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ResponderRecipeResponderRuleDetailsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponderRecipeResponderRuleDetailsConfiguration)(nil)).Elem()
}

func (i ResponderRecipeResponderRuleDetailsConfigurationArgs) ToResponderRecipeResponderRuleDetailsConfigurationOutput() ResponderRecipeResponderRuleDetailsConfigurationOutput {
	return i.ToResponderRecipeResponderRuleDetailsConfigurationOutputWithContext(context.Background())
}

func (i ResponderRecipeResponderRuleDetailsConfigurationArgs) ToResponderRecipeResponderRuleDetailsConfigurationOutputWithContext(ctx context.Context) ResponderRecipeResponderRuleDetailsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponderRecipeResponderRuleDetailsConfigurationOutput)
}

// ResponderRecipeResponderRuleDetailsConfigurationArrayInput is an input type that accepts ResponderRecipeResponderRuleDetailsConfigurationArray and ResponderRecipeResponderRuleDetailsConfigurationArrayOutput values.
// You can construct a concrete instance of `ResponderRecipeResponderRuleDetailsConfigurationArrayInput` via:
//
//          ResponderRecipeResponderRuleDetailsConfigurationArray{ ResponderRecipeResponderRuleDetailsConfigurationArgs{...} }
type ResponderRecipeResponderRuleDetailsConfigurationArrayInput interface {
	pulumi.Input

	ToResponderRecipeResponderRuleDetailsConfigurationArrayOutput() ResponderRecipeResponderRuleDetailsConfigurationArrayOutput
	ToResponderRecipeResponderRuleDetailsConfigurationArrayOutputWithContext(context.Context) ResponderRecipeResponderRuleDetailsConfigurationArrayOutput
}

type ResponderRecipeResponderRuleDetailsConfigurationArray []ResponderRecipeResponderRuleDetailsConfigurationInput

func (ResponderRecipeResponderRuleDetailsConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResponderRecipeResponderRuleDetailsConfiguration)(nil)).Elem()
}

func (i ResponderRecipeResponderRuleDetailsConfigurationArray) ToResponderRecipeResponderRuleDetailsConfigurationArrayOutput() ResponderRecipeResponderRuleDetailsConfigurationArrayOutput {
	return i.ToResponderRecipeResponderRuleDetailsConfigurationArrayOutputWithContext(context.Background())
}

func (i ResponderRecipeResponderRuleDetailsConfigurationArray) ToResponderRecipeResponderRuleDetailsConfigurationArrayOutputWithContext(ctx context.Context) ResponderRecipeResponderRuleDetailsConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponderRecipeResponderRuleDetailsConfigurationArrayOutput)
}

type ResponderRecipeResponderRuleDetailsConfigurationOutput struct{ *pulumi.OutputState }

func (ResponderRecipeResponderRuleDetailsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponderRecipeResponderRuleDetailsConfiguration)(nil)).Elem()
}

func (o ResponderRecipeResponderRuleDetailsConfigurationOutput) ToResponderRecipeResponderRuleDetailsConfigurationOutput() ResponderRecipeResponderRuleDetailsConfigurationOutput {
	return o
}

func (o ResponderRecipeResponderRuleDetailsConfigurationOutput) ToResponderRecipeResponderRuleDetailsConfigurationOutputWithContext(ctx context.Context) ResponderRecipeResponderRuleDetailsConfigurationOutput {
	return o
}

// Unique name of the configuration
func (o ResponderRecipeResponderRuleDetailsConfigurationOutput) ConfigKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResponderRecipeResponderRuleDetailsConfiguration) *string { return v.ConfigKey }).(pulumi.StringPtrOutput)
}

// configuration name
func (o ResponderRecipeResponderRuleDetailsConfigurationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResponderRecipeResponderRuleDetailsConfiguration) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// configuration value
func (o ResponderRecipeResponderRuleDetailsConfigurationOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResponderRecipeResponderRuleDetailsConfiguration) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ResponderRecipeResponderRuleDetailsConfigurationArrayOutput struct{ *pulumi.OutputState }

func (ResponderRecipeResponderRuleDetailsConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResponderRecipeResponderRuleDetailsConfiguration)(nil)).Elem()
}

func (o ResponderRecipeResponderRuleDetailsConfigurationArrayOutput) ToResponderRecipeResponderRuleDetailsConfigurationArrayOutput() ResponderRecipeResponderRuleDetailsConfigurationArrayOutput {
	return o
}

func (o ResponderRecipeResponderRuleDetailsConfigurationArrayOutput) ToResponderRecipeResponderRuleDetailsConfigurationArrayOutputWithContext(ctx context.Context) ResponderRecipeResponderRuleDetailsConfigurationArrayOutput {
	return o
}

func (o ResponderRecipeResponderRuleDetailsConfigurationArrayOutput) Index(i pulumi.IntInput) ResponderRecipeResponderRuleDetailsConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResponderRecipeResponderRuleDetailsConfiguration {
		return vs[0].([]ResponderRecipeResponderRuleDetailsConfiguration)[vs[1].(int)]
	}).(ResponderRecipeResponderRuleDetailsConfigurationOutput)
}

type TargetTargetDetectorRecipe struct {
	// (Updatable) compartment associated with condition
	CompartmentId *string `pulumi:"compartmentId"`
	// The target description.
	Description *string `pulumi:"description"`
	// detector for the rule
	Detector *string `pulumi:"detector"`
	// Identifier for DetectorRecipe.
	DetectorRecipeId string `pulumi:"detectorRecipeId"`
	// (Updatable) Overrides to be applied to Detector Rule associated with the target
	DetectorRules []TargetTargetDetectorRecipeDetectorRule `pulumi:"detectorRules"`
	// (Updatable) DetectorTemplate Identifier
	DisplayName *string `pulumi:"displayName"`
	// List of effective detector rules for the detector type for recipe after applying defaults
	EffectiveDetectorRules []TargetTargetDetectorRecipeEffectiveDetectorRule `pulumi:"effectiveDetectorRules"`
	// Unique identifier of TargetResponderRecipe that is immutable on creation
	Id *string `pulumi:"id"`
	// Owner of ResponderRecipe
	Owner *string `pulumi:"owner"`
	// (Updatable) The current state of the DetectorRule.
	State *string `pulumi:"state"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated *string `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated *string `pulumi:"timeUpdated"`
}

// TargetTargetDetectorRecipeInput is an input type that accepts TargetTargetDetectorRecipeArgs and TargetTargetDetectorRecipeOutput values.
// You can construct a concrete instance of `TargetTargetDetectorRecipeInput` via:
//
//          TargetTargetDetectorRecipeArgs{...}
type TargetTargetDetectorRecipeInput interface {
	pulumi.Input

	ToTargetTargetDetectorRecipeOutput() TargetTargetDetectorRecipeOutput
	ToTargetTargetDetectorRecipeOutputWithContext(context.Context) TargetTargetDetectorRecipeOutput
}

type TargetTargetDetectorRecipeArgs struct {
	// (Updatable) compartment associated with condition
	CompartmentId pulumi.StringPtrInput `pulumi:"compartmentId"`
	// The target description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// detector for the rule
	Detector pulumi.StringPtrInput `pulumi:"detector"`
	// Identifier for DetectorRecipe.
	DetectorRecipeId pulumi.StringInput `pulumi:"detectorRecipeId"`
	// (Updatable) Overrides to be applied to Detector Rule associated with the target
	DetectorRules TargetTargetDetectorRecipeDetectorRuleArrayInput `pulumi:"detectorRules"`
	// (Updatable) DetectorTemplate Identifier
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// List of effective detector rules for the detector type for recipe after applying defaults
	EffectiveDetectorRules TargetTargetDetectorRecipeEffectiveDetectorRuleArrayInput `pulumi:"effectiveDetectorRules"`
	// Unique identifier of TargetResponderRecipe that is immutable on creation
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Owner of ResponderRecipe
	Owner pulumi.StringPtrInput `pulumi:"owner"`
	// (Updatable) The current state of the DetectorRule.
	State pulumi.StringPtrInput `pulumi:"state"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated pulumi.StringPtrInput `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated pulumi.StringPtrInput `pulumi:"timeUpdated"`
}

func (TargetTargetDetectorRecipeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetTargetDetectorRecipe)(nil)).Elem()
}

func (i TargetTargetDetectorRecipeArgs) ToTargetTargetDetectorRecipeOutput() TargetTargetDetectorRecipeOutput {
	return i.ToTargetTargetDetectorRecipeOutputWithContext(context.Background())
}

func (i TargetTargetDetectorRecipeArgs) ToTargetTargetDetectorRecipeOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetTargetDetectorRecipeOutput)
}

// TargetTargetDetectorRecipeArrayInput is an input type that accepts TargetTargetDetectorRecipeArray and TargetTargetDetectorRecipeArrayOutput values.
// You can construct a concrete instance of `TargetTargetDetectorRecipeArrayInput` via:
//
//          TargetTargetDetectorRecipeArray{ TargetTargetDetectorRecipeArgs{...} }
type TargetTargetDetectorRecipeArrayInput interface {
	pulumi.Input

	ToTargetTargetDetectorRecipeArrayOutput() TargetTargetDetectorRecipeArrayOutput
	ToTargetTargetDetectorRecipeArrayOutputWithContext(context.Context) TargetTargetDetectorRecipeArrayOutput
}

type TargetTargetDetectorRecipeArray []TargetTargetDetectorRecipeInput

func (TargetTargetDetectorRecipeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetTargetDetectorRecipe)(nil)).Elem()
}

func (i TargetTargetDetectorRecipeArray) ToTargetTargetDetectorRecipeArrayOutput() TargetTargetDetectorRecipeArrayOutput {
	return i.ToTargetTargetDetectorRecipeArrayOutputWithContext(context.Background())
}

func (i TargetTargetDetectorRecipeArray) ToTargetTargetDetectorRecipeArrayOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetTargetDetectorRecipeArrayOutput)
}

type TargetTargetDetectorRecipeOutput struct{ *pulumi.OutputState }

func (TargetTargetDetectorRecipeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetTargetDetectorRecipe)(nil)).Elem()
}

func (o TargetTargetDetectorRecipeOutput) ToTargetTargetDetectorRecipeOutput() TargetTargetDetectorRecipeOutput {
	return o
}

func (o TargetTargetDetectorRecipeOutput) ToTargetTargetDetectorRecipeOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeOutput {
	return o
}

// (Updatable) compartment associated with condition
func (o TargetTargetDetectorRecipeOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipe) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

// The target description.
func (o TargetTargetDetectorRecipeOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipe) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// detector for the rule
func (o TargetTargetDetectorRecipeOutput) Detector() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipe) *string { return v.Detector }).(pulumi.StringPtrOutput)
}

// Identifier for DetectorRecipe.
func (o TargetTargetDetectorRecipeOutput) DetectorRecipeId() pulumi.StringOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipe) string { return v.DetectorRecipeId }).(pulumi.StringOutput)
}

// (Updatable) Overrides to be applied to Detector Rule associated with the target
func (o TargetTargetDetectorRecipeOutput) DetectorRules() TargetTargetDetectorRecipeDetectorRuleArrayOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipe) []TargetTargetDetectorRecipeDetectorRule { return v.DetectorRules }).(TargetTargetDetectorRecipeDetectorRuleArrayOutput)
}

// (Updatable) DetectorTemplate Identifier
func (o TargetTargetDetectorRecipeOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipe) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// List of effective detector rules for the detector type for recipe after applying defaults
func (o TargetTargetDetectorRecipeOutput) EffectiveDetectorRules() TargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipe) []TargetTargetDetectorRecipeEffectiveDetectorRule {
		return v.EffectiveDetectorRules
	}).(TargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutput)
}

// Unique identifier of TargetResponderRecipe that is immutable on creation
func (o TargetTargetDetectorRecipeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipe) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Owner of ResponderRecipe
func (o TargetTargetDetectorRecipeOutput) Owner() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipe) *string { return v.Owner }).(pulumi.StringPtrOutput)
}

// (Updatable) The current state of the DetectorRule.
func (o TargetTargetDetectorRecipeOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipe) *string { return v.State }).(pulumi.StringPtrOutput)
}

// The date and time the target was created. Format defined by RFC3339.
func (o TargetTargetDetectorRecipeOutput) TimeCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipe) *string { return v.TimeCreated }).(pulumi.StringPtrOutput)
}

// The date and time the target was updated. Format defined by RFC3339.
func (o TargetTargetDetectorRecipeOutput) TimeUpdated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipe) *string { return v.TimeUpdated }).(pulumi.StringPtrOutput)
}

type TargetTargetDetectorRecipeArrayOutput struct{ *pulumi.OutputState }

func (TargetTargetDetectorRecipeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetTargetDetectorRecipe)(nil)).Elem()
}

func (o TargetTargetDetectorRecipeArrayOutput) ToTargetTargetDetectorRecipeArrayOutput() TargetTargetDetectorRecipeArrayOutput {
	return o
}

func (o TargetTargetDetectorRecipeArrayOutput) ToTargetTargetDetectorRecipeArrayOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeArrayOutput {
	return o
}

func (o TargetTargetDetectorRecipeArrayOutput) Index(i pulumi.IntInput) TargetTargetDetectorRecipeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TargetTargetDetectorRecipe {
		return vs[0].([]TargetTargetDetectorRecipe)[vs[1].(int)]
	}).(TargetTargetDetectorRecipeOutput)
}

type TargetTargetDetectorRecipeDetectorRule struct {
	// The target description.
	Description *string `pulumi:"description"`
	// (Updatable) Details of ResponderRule.
	Details TargetTargetDetectorRecipeDetectorRuleDetails `pulumi:"details"`
	// detector for the rule
	Detector *string `pulumi:"detector"`
	// (Updatable) Identifier for DetectorRule.
	DetectorRuleId string `pulumi:"detectorRuleId"`
	// (Updatable) DetectorTemplate Identifier
	DisplayName *string `pulumi:"displayName"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// List of cloudguard managed list types related to this rule
	ManagedListTypes []string `pulumi:"managedListTypes"`
	// Recommendation for TargetDetectorRecipeDetectorRule
	Recommendation *string `pulumi:"recommendation"`
	// resource type of the configuration to which the rule is applied
	ResourceType *string `pulumi:"resourceType"`
	// service type of the configuration to which the rule is applied
	ServiceType *string `pulumi:"serviceType"`
	// (Updatable) The current state of the DetectorRule.
	State *string `pulumi:"state"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated *string `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated *string `pulumi:"timeUpdated"`
}

// TargetTargetDetectorRecipeDetectorRuleInput is an input type that accepts TargetTargetDetectorRecipeDetectorRuleArgs and TargetTargetDetectorRecipeDetectorRuleOutput values.
// You can construct a concrete instance of `TargetTargetDetectorRecipeDetectorRuleInput` via:
//
//          TargetTargetDetectorRecipeDetectorRuleArgs{...}
type TargetTargetDetectorRecipeDetectorRuleInput interface {
	pulumi.Input

	ToTargetTargetDetectorRecipeDetectorRuleOutput() TargetTargetDetectorRecipeDetectorRuleOutput
	ToTargetTargetDetectorRecipeDetectorRuleOutputWithContext(context.Context) TargetTargetDetectorRecipeDetectorRuleOutput
}

type TargetTargetDetectorRecipeDetectorRuleArgs struct {
	// The target description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// (Updatable) Details of ResponderRule.
	Details TargetTargetDetectorRecipeDetectorRuleDetailsInput `pulumi:"details"`
	// detector for the rule
	Detector pulumi.StringPtrInput `pulumi:"detector"`
	// (Updatable) Identifier for DetectorRule.
	DetectorRuleId pulumi.StringInput `pulumi:"detectorRuleId"`
	// (Updatable) DetectorTemplate Identifier
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringPtrInput `pulumi:"lifecycleDetails"`
	// List of cloudguard managed list types related to this rule
	ManagedListTypes pulumi.StringArrayInput `pulumi:"managedListTypes"`
	// Recommendation for TargetDetectorRecipeDetectorRule
	Recommendation pulumi.StringPtrInput `pulumi:"recommendation"`
	// resource type of the configuration to which the rule is applied
	ResourceType pulumi.StringPtrInput `pulumi:"resourceType"`
	// service type of the configuration to which the rule is applied
	ServiceType pulumi.StringPtrInput `pulumi:"serviceType"`
	// (Updatable) The current state of the DetectorRule.
	State pulumi.StringPtrInput `pulumi:"state"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated pulumi.StringPtrInput `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated pulumi.StringPtrInput `pulumi:"timeUpdated"`
}

func (TargetTargetDetectorRecipeDetectorRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetTargetDetectorRecipeDetectorRule)(nil)).Elem()
}

func (i TargetTargetDetectorRecipeDetectorRuleArgs) ToTargetTargetDetectorRecipeDetectorRuleOutput() TargetTargetDetectorRecipeDetectorRuleOutput {
	return i.ToTargetTargetDetectorRecipeDetectorRuleOutputWithContext(context.Background())
}

func (i TargetTargetDetectorRecipeDetectorRuleArgs) ToTargetTargetDetectorRecipeDetectorRuleOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeDetectorRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetTargetDetectorRecipeDetectorRuleOutput)
}

// TargetTargetDetectorRecipeDetectorRuleArrayInput is an input type that accepts TargetTargetDetectorRecipeDetectorRuleArray and TargetTargetDetectorRecipeDetectorRuleArrayOutput values.
// You can construct a concrete instance of `TargetTargetDetectorRecipeDetectorRuleArrayInput` via:
//
//          TargetTargetDetectorRecipeDetectorRuleArray{ TargetTargetDetectorRecipeDetectorRuleArgs{...} }
type TargetTargetDetectorRecipeDetectorRuleArrayInput interface {
	pulumi.Input

	ToTargetTargetDetectorRecipeDetectorRuleArrayOutput() TargetTargetDetectorRecipeDetectorRuleArrayOutput
	ToTargetTargetDetectorRecipeDetectorRuleArrayOutputWithContext(context.Context) TargetTargetDetectorRecipeDetectorRuleArrayOutput
}

type TargetTargetDetectorRecipeDetectorRuleArray []TargetTargetDetectorRecipeDetectorRuleInput

func (TargetTargetDetectorRecipeDetectorRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetTargetDetectorRecipeDetectorRule)(nil)).Elem()
}

func (i TargetTargetDetectorRecipeDetectorRuleArray) ToTargetTargetDetectorRecipeDetectorRuleArrayOutput() TargetTargetDetectorRecipeDetectorRuleArrayOutput {
	return i.ToTargetTargetDetectorRecipeDetectorRuleArrayOutputWithContext(context.Background())
}

func (i TargetTargetDetectorRecipeDetectorRuleArray) ToTargetTargetDetectorRecipeDetectorRuleArrayOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeDetectorRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetTargetDetectorRecipeDetectorRuleArrayOutput)
}

type TargetTargetDetectorRecipeDetectorRuleOutput struct{ *pulumi.OutputState }

func (TargetTargetDetectorRecipeDetectorRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetTargetDetectorRecipeDetectorRule)(nil)).Elem()
}

func (o TargetTargetDetectorRecipeDetectorRuleOutput) ToTargetTargetDetectorRecipeDetectorRuleOutput() TargetTargetDetectorRecipeDetectorRuleOutput {
	return o
}

func (o TargetTargetDetectorRecipeDetectorRuleOutput) ToTargetTargetDetectorRecipeDetectorRuleOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeDetectorRuleOutput {
	return o
}

// The target description.
func (o TargetTargetDetectorRecipeDetectorRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeDetectorRule) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// (Updatable) Details of ResponderRule.
func (o TargetTargetDetectorRecipeDetectorRuleOutput) Details() TargetTargetDetectorRecipeDetectorRuleDetailsOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeDetectorRule) TargetTargetDetectorRecipeDetectorRuleDetails {
		return v.Details
	}).(TargetTargetDetectorRecipeDetectorRuleDetailsOutput)
}

// detector for the rule
func (o TargetTargetDetectorRecipeDetectorRuleOutput) Detector() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeDetectorRule) *string { return v.Detector }).(pulumi.StringPtrOutput)
}

// (Updatable) Identifier for DetectorRule.
func (o TargetTargetDetectorRecipeDetectorRuleOutput) DetectorRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeDetectorRule) string { return v.DetectorRuleId }).(pulumi.StringOutput)
}

// (Updatable) DetectorTemplate Identifier
func (o TargetTargetDetectorRecipeDetectorRuleOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeDetectorRule) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o TargetTargetDetectorRecipeDetectorRuleOutput) LifecycleDetails() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeDetectorRule) *string { return v.LifecycleDetails }).(pulumi.StringPtrOutput)
}

// List of cloudguard managed list types related to this rule
func (o TargetTargetDetectorRecipeDetectorRuleOutput) ManagedListTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeDetectorRule) []string { return v.ManagedListTypes }).(pulumi.StringArrayOutput)
}

// Recommendation for TargetDetectorRecipeDetectorRule
func (o TargetTargetDetectorRecipeDetectorRuleOutput) Recommendation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeDetectorRule) *string { return v.Recommendation }).(pulumi.StringPtrOutput)
}

// resource type of the configuration to which the rule is applied
func (o TargetTargetDetectorRecipeDetectorRuleOutput) ResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeDetectorRule) *string { return v.ResourceType }).(pulumi.StringPtrOutput)
}

// service type of the configuration to which the rule is applied
func (o TargetTargetDetectorRecipeDetectorRuleOutput) ServiceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeDetectorRule) *string { return v.ServiceType }).(pulumi.StringPtrOutput)
}

// (Updatable) The current state of the DetectorRule.
func (o TargetTargetDetectorRecipeDetectorRuleOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeDetectorRule) *string { return v.State }).(pulumi.StringPtrOutput)
}

// The date and time the target was created. Format defined by RFC3339.
func (o TargetTargetDetectorRecipeDetectorRuleOutput) TimeCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeDetectorRule) *string { return v.TimeCreated }).(pulumi.StringPtrOutput)
}

// The date and time the target was updated. Format defined by RFC3339.
func (o TargetTargetDetectorRecipeDetectorRuleOutput) TimeUpdated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeDetectorRule) *string { return v.TimeUpdated }).(pulumi.StringPtrOutput)
}

type TargetTargetDetectorRecipeDetectorRuleArrayOutput struct{ *pulumi.OutputState }

func (TargetTargetDetectorRecipeDetectorRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetTargetDetectorRecipeDetectorRule)(nil)).Elem()
}

func (o TargetTargetDetectorRecipeDetectorRuleArrayOutput) ToTargetTargetDetectorRecipeDetectorRuleArrayOutput() TargetTargetDetectorRecipeDetectorRuleArrayOutput {
	return o
}

func (o TargetTargetDetectorRecipeDetectorRuleArrayOutput) ToTargetTargetDetectorRecipeDetectorRuleArrayOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeDetectorRuleArrayOutput {
	return o
}

func (o TargetTargetDetectorRecipeDetectorRuleArrayOutput) Index(i pulumi.IntInput) TargetTargetDetectorRecipeDetectorRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TargetTargetDetectorRecipeDetectorRule {
		return vs[0].([]TargetTargetDetectorRecipeDetectorRule)[vs[1].(int)]
	}).(TargetTargetDetectorRecipeDetectorRuleOutput)
}

type TargetTargetDetectorRecipeDetectorRuleDetails struct {
	// (Updatable) Condition group corresponding to each compartment
	ConditionGroups []TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroup `pulumi:"conditionGroups"`
	// (Updatable) Configurations associated with the ResponderRule
	Configurations []TargetTargetDetectorRecipeDetectorRuleDetailsConfiguration `pulumi:"configurations"`
	// configuration allowed or not
	IsConfigurationAllowed *bool `pulumi:"isConfigurationAllowed"`
	// Identifies state for ResponderRule
	IsEnabled *bool `pulumi:"isEnabled"`
	// user defined labels for a detector rule
	Labels []string `pulumi:"labels"`
	// The Risk Level
	RiskLevel *string `pulumi:"riskLevel"`
}

// TargetTargetDetectorRecipeDetectorRuleDetailsInput is an input type that accepts TargetTargetDetectorRecipeDetectorRuleDetailsArgs and TargetTargetDetectorRecipeDetectorRuleDetailsOutput values.
// You can construct a concrete instance of `TargetTargetDetectorRecipeDetectorRuleDetailsInput` via:
//
//          TargetTargetDetectorRecipeDetectorRuleDetailsArgs{...}
type TargetTargetDetectorRecipeDetectorRuleDetailsInput interface {
	pulumi.Input

	ToTargetTargetDetectorRecipeDetectorRuleDetailsOutput() TargetTargetDetectorRecipeDetectorRuleDetailsOutput
	ToTargetTargetDetectorRecipeDetectorRuleDetailsOutputWithContext(context.Context) TargetTargetDetectorRecipeDetectorRuleDetailsOutput
}

type TargetTargetDetectorRecipeDetectorRuleDetailsArgs struct {
	// (Updatable) Condition group corresponding to each compartment
	ConditionGroups TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayInput `pulumi:"conditionGroups"`
	// (Updatable) Configurations associated with the ResponderRule
	Configurations TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayInput `pulumi:"configurations"`
	// configuration allowed or not
	IsConfigurationAllowed pulumi.BoolPtrInput `pulumi:"isConfigurationAllowed"`
	// Identifies state for ResponderRule
	IsEnabled pulumi.BoolPtrInput `pulumi:"isEnabled"`
	// user defined labels for a detector rule
	Labels pulumi.StringArrayInput `pulumi:"labels"`
	// The Risk Level
	RiskLevel pulumi.StringPtrInput `pulumi:"riskLevel"`
}

func (TargetTargetDetectorRecipeDetectorRuleDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetTargetDetectorRecipeDetectorRuleDetails)(nil)).Elem()
}

func (i TargetTargetDetectorRecipeDetectorRuleDetailsArgs) ToTargetTargetDetectorRecipeDetectorRuleDetailsOutput() TargetTargetDetectorRecipeDetectorRuleDetailsOutput {
	return i.ToTargetTargetDetectorRecipeDetectorRuleDetailsOutputWithContext(context.Background())
}

func (i TargetTargetDetectorRecipeDetectorRuleDetailsArgs) ToTargetTargetDetectorRecipeDetectorRuleDetailsOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeDetectorRuleDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetTargetDetectorRecipeDetectorRuleDetailsOutput)
}

type TargetTargetDetectorRecipeDetectorRuleDetailsOutput struct{ *pulumi.OutputState }

func (TargetTargetDetectorRecipeDetectorRuleDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetTargetDetectorRecipeDetectorRuleDetails)(nil)).Elem()
}

func (o TargetTargetDetectorRecipeDetectorRuleDetailsOutput) ToTargetTargetDetectorRecipeDetectorRuleDetailsOutput() TargetTargetDetectorRecipeDetectorRuleDetailsOutput {
	return o
}

func (o TargetTargetDetectorRecipeDetectorRuleDetailsOutput) ToTargetTargetDetectorRecipeDetectorRuleDetailsOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeDetectorRuleDetailsOutput {
	return o
}

// (Updatable) Condition group corresponding to each compartment
func (o TargetTargetDetectorRecipeDetectorRuleDetailsOutput) ConditionGroups() TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeDetectorRuleDetails) []TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroup {
		return v.ConditionGroups
	}).(TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutput)
}

// (Updatable) Configurations associated with the ResponderRule
func (o TargetTargetDetectorRecipeDetectorRuleDetailsOutput) Configurations() TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeDetectorRuleDetails) []TargetTargetDetectorRecipeDetectorRuleDetailsConfiguration {
		return v.Configurations
	}).(TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput)
}

// configuration allowed or not
func (o TargetTargetDetectorRecipeDetectorRuleDetailsOutput) IsConfigurationAllowed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeDetectorRuleDetails) *bool { return v.IsConfigurationAllowed }).(pulumi.BoolPtrOutput)
}

// Identifies state for ResponderRule
func (o TargetTargetDetectorRecipeDetectorRuleDetailsOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeDetectorRuleDetails) *bool { return v.IsEnabled }).(pulumi.BoolPtrOutput)
}

// user defined labels for a detector rule
func (o TargetTargetDetectorRecipeDetectorRuleDetailsOutput) Labels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeDetectorRuleDetails) []string { return v.Labels }).(pulumi.StringArrayOutput)
}

// The Risk Level
func (o TargetTargetDetectorRecipeDetectorRuleDetailsOutput) RiskLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeDetectorRuleDetails) *string { return v.RiskLevel }).(pulumi.StringPtrOutput)
}

type TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroup struct {
	// (Updatable) compartment associated with condition
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable)
	Condition string `pulumi:"condition"`
}

// TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupInput is an input type that accepts TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArgs and TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutput values.
// You can construct a concrete instance of `TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupInput` via:
//
//          TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArgs{...}
type TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupInput interface {
	pulumi.Input

	ToTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutput() TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutput
	ToTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutputWithContext(context.Context) TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutput
}

type TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArgs struct {
	// (Updatable) compartment associated with condition
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// (Updatable)
	Condition pulumi.StringInput `pulumi:"condition"`
}

func (TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroup)(nil)).Elem()
}

func (i TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArgs) ToTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutput() TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutput {
	return i.ToTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutputWithContext(context.Background())
}

func (i TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArgs) ToTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutput)
}

// TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayInput is an input type that accepts TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArray and TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutput values.
// You can construct a concrete instance of `TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayInput` via:
//
//          TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArray{ TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArgs{...} }
type TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayInput interface {
	pulumi.Input

	ToTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutput() TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutput
	ToTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutputWithContext(context.Context) TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutput
}

type TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArray []TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupInput

func (TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroup)(nil)).Elem()
}

func (i TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArray) ToTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutput() TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutput {
	return i.ToTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutputWithContext(context.Background())
}

func (i TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArray) ToTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutput)
}

type TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutput struct{ *pulumi.OutputState }

func (TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroup)(nil)).Elem()
}

func (o TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutput) ToTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutput() TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutput {
	return o
}

func (o TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutput) ToTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutput {
	return o
}

// (Updatable) compartment associated with condition
func (o TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroup) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// (Updatable)
func (o TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroup) string { return v.Condition }).(pulumi.StringOutput)
}

type TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutput struct{ *pulumi.OutputState }

func (TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroup)(nil)).Elem()
}

func (o TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutput) ToTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutput() TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutput {
	return o
}

func (o TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutput) ToTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutput {
	return o
}

func (o TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutput) Index(i pulumi.IntInput) TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroup {
		return vs[0].([]TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroup)[vs[1].(int)]
	}).(TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutput)
}

type TargetTargetDetectorRecipeDetectorRuleDetailsConfiguration struct {
	// (Updatable) Unique name of the configuration
	ConfigKey *string `pulumi:"configKey"`
	// configuration data type
	DataType *string `pulumi:"dataType"`
	// (Updatable) configuration name
	Name *string `pulumi:"name"`
	// (Updatable) configuration value
	Value *string `pulumi:"value"`
	// List of configuration values
	Values []TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValue `pulumi:"values"`
}

// TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationInput is an input type that accepts TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArgs and TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput values.
// You can construct a concrete instance of `TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationInput` via:
//
//          TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArgs{...}
type TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationInput interface {
	pulumi.Input

	ToTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput() TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput
	ToTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationOutputWithContext(context.Context) TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput
}

type TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArgs struct {
	// (Updatable) Unique name of the configuration
	ConfigKey pulumi.StringPtrInput `pulumi:"configKey"`
	// configuration data type
	DataType pulumi.StringPtrInput `pulumi:"dataType"`
	// (Updatable) configuration name
	Name pulumi.StringPtrInput `pulumi:"name"`
	// (Updatable) configuration value
	Value pulumi.StringPtrInput `pulumi:"value"`
	// List of configuration values
	Values TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayInput `pulumi:"values"`
}

func (TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetTargetDetectorRecipeDetectorRuleDetailsConfiguration)(nil)).Elem()
}

func (i TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArgs) ToTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput() TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput {
	return i.ToTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationOutputWithContext(context.Background())
}

func (i TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArgs) ToTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput)
}

// TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayInput is an input type that accepts TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArray and TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput values.
// You can construct a concrete instance of `TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayInput` via:
//
//          TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArray{ TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArgs{...} }
type TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayInput interface {
	pulumi.Input

	ToTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput() TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput
	ToTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutputWithContext(context.Context) TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput
}

type TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArray []TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationInput

func (TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetTargetDetectorRecipeDetectorRuleDetailsConfiguration)(nil)).Elem()
}

func (i TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArray) ToTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput() TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput {
	return i.ToTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutputWithContext(context.Background())
}

func (i TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArray) ToTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput)
}

type TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput struct{ *pulumi.OutputState }

func (TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetTargetDetectorRecipeDetectorRuleDetailsConfiguration)(nil)).Elem()
}

func (o TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput) ToTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput() TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput {
	return o
}

func (o TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput) ToTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput {
	return o
}

// (Updatable) Unique name of the configuration
func (o TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput) ConfigKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeDetectorRuleDetailsConfiguration) *string { return v.ConfigKey }).(pulumi.StringPtrOutput)
}

// configuration data type
func (o TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput) DataType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeDetectorRuleDetailsConfiguration) *string { return v.DataType }).(pulumi.StringPtrOutput)
}

// (Updatable) configuration name
func (o TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeDetectorRuleDetailsConfiguration) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// (Updatable) configuration value
func (o TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeDetectorRuleDetailsConfiguration) *string { return v.Value }).(pulumi.StringPtrOutput)
}

// List of configuration values
func (o TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput) Values() TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeDetectorRuleDetailsConfiguration) []TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValue {
		return v.Values
	}).(TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput)
}

type TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput struct{ *pulumi.OutputState }

func (TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetTargetDetectorRecipeDetectorRuleDetailsConfiguration)(nil)).Elem()
}

func (o TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput) ToTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput() TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput {
	return o
}

func (o TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput) ToTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput {
	return o
}

func (o TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput) Index(i pulumi.IntInput) TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TargetTargetDetectorRecipeDetectorRuleDetailsConfiguration {
		return vs[0].([]TargetTargetDetectorRecipeDetectorRuleDetailsConfiguration)[vs[1].(int)]
	}).(TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput)
}

type TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValue struct {
	// configuration list item type, either CUSTOM or MANAGED
	ListType *string `pulumi:"listType"`
	// type of the managed list
	ManagedListType *string `pulumi:"managedListType"`
	// (Updatable) configuration value
	Value *string `pulumi:"value"`
}

// TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueInput is an input type that accepts TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArgs and TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput values.
// You can construct a concrete instance of `TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueInput` via:
//
//          TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArgs{...}
type TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueInput interface {
	pulumi.Input

	ToTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput() TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput
	ToTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutputWithContext(context.Context) TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput
}

type TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArgs struct {
	// configuration list item type, either CUSTOM or MANAGED
	ListType pulumi.StringPtrInput `pulumi:"listType"`
	// type of the managed list
	ManagedListType pulumi.StringPtrInput `pulumi:"managedListType"`
	// (Updatable) configuration value
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValue)(nil)).Elem()
}

func (i TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArgs) ToTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput() TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput {
	return i.ToTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutputWithContext(context.Background())
}

func (i TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArgs) ToTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput)
}

// TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayInput is an input type that accepts TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArray and TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput values.
// You can construct a concrete instance of `TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayInput` via:
//
//          TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArray{ TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArgs{...} }
type TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayInput interface {
	pulumi.Input

	ToTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput() TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput
	ToTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutputWithContext(context.Context) TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput
}

type TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArray []TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueInput

func (TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValue)(nil)).Elem()
}

func (i TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArray) ToTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput() TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput {
	return i.ToTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutputWithContext(context.Background())
}

func (i TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArray) ToTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput)
}

type TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput struct{ *pulumi.OutputState }

func (TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValue)(nil)).Elem()
}

func (o TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput) ToTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput() TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput {
	return o
}

func (o TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput) ToTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput {
	return o
}

// configuration list item type, either CUSTOM or MANAGED
func (o TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput) ListType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValue) *string { return v.ListType }).(pulumi.StringPtrOutput)
}

// type of the managed list
func (o TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput) ManagedListType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValue) *string {
		return v.ManagedListType
	}).(pulumi.StringPtrOutput)
}

// (Updatable) configuration value
func (o TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValue) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput struct{ *pulumi.OutputState }

func (TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValue)(nil)).Elem()
}

func (o TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput) ToTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput() TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput {
	return o
}

func (o TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput) ToTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput {
	return o
}

func (o TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput) Index(i pulumi.IntInput) TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValue {
		return vs[0].([]TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValue)[vs[1].(int)]
	}).(TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput)
}

type TargetTargetDetectorRecipeEffectiveDetectorRule struct {
	// The target description.
	Description *string `pulumi:"description"`
	// (Updatable) Details of ResponderRule.
	Details *TargetTargetDetectorRecipeEffectiveDetectorRuleDetails `pulumi:"details"`
	// detector for the rule
	Detector *string `pulumi:"detector"`
	// (Updatable) Identifier for DetectorRule.
	DetectorRuleId *string `pulumi:"detectorRuleId"`
	// (Updatable) DetectorTemplate Identifier
	DisplayName *string `pulumi:"displayName"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// List of cloudguard managed list types related to this rule
	ManagedListTypes []string `pulumi:"managedListTypes"`
	// Recommendation for TargetDetectorRecipeDetectorRule
	Recommendation *string `pulumi:"recommendation"`
	// resource type of the configuration to which the rule is applied
	ResourceType *string `pulumi:"resourceType"`
	// service type of the configuration to which the rule is applied
	ServiceType *string `pulumi:"serviceType"`
	// (Updatable) The current state of the DetectorRule.
	State *string `pulumi:"state"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated *string `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated *string `pulumi:"timeUpdated"`
}

// TargetTargetDetectorRecipeEffectiveDetectorRuleInput is an input type that accepts TargetTargetDetectorRecipeEffectiveDetectorRuleArgs and TargetTargetDetectorRecipeEffectiveDetectorRuleOutput values.
// You can construct a concrete instance of `TargetTargetDetectorRecipeEffectiveDetectorRuleInput` via:
//
//          TargetTargetDetectorRecipeEffectiveDetectorRuleArgs{...}
type TargetTargetDetectorRecipeEffectiveDetectorRuleInput interface {
	pulumi.Input

	ToTargetTargetDetectorRecipeEffectiveDetectorRuleOutput() TargetTargetDetectorRecipeEffectiveDetectorRuleOutput
	ToTargetTargetDetectorRecipeEffectiveDetectorRuleOutputWithContext(context.Context) TargetTargetDetectorRecipeEffectiveDetectorRuleOutput
}

type TargetTargetDetectorRecipeEffectiveDetectorRuleArgs struct {
	// The target description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// (Updatable) Details of ResponderRule.
	Details TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsPtrInput `pulumi:"details"`
	// detector for the rule
	Detector pulumi.StringPtrInput `pulumi:"detector"`
	// (Updatable) Identifier for DetectorRule.
	DetectorRuleId pulumi.StringPtrInput `pulumi:"detectorRuleId"`
	// (Updatable) DetectorTemplate Identifier
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringPtrInput `pulumi:"lifecycleDetails"`
	// List of cloudguard managed list types related to this rule
	ManagedListTypes pulumi.StringArrayInput `pulumi:"managedListTypes"`
	// Recommendation for TargetDetectorRecipeDetectorRule
	Recommendation pulumi.StringPtrInput `pulumi:"recommendation"`
	// resource type of the configuration to which the rule is applied
	ResourceType pulumi.StringPtrInput `pulumi:"resourceType"`
	// service type of the configuration to which the rule is applied
	ServiceType pulumi.StringPtrInput `pulumi:"serviceType"`
	// (Updatable) The current state of the DetectorRule.
	State pulumi.StringPtrInput `pulumi:"state"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated pulumi.StringPtrInput `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated pulumi.StringPtrInput `pulumi:"timeUpdated"`
}

func (TargetTargetDetectorRecipeEffectiveDetectorRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetTargetDetectorRecipeEffectiveDetectorRule)(nil)).Elem()
}

func (i TargetTargetDetectorRecipeEffectiveDetectorRuleArgs) ToTargetTargetDetectorRecipeEffectiveDetectorRuleOutput() TargetTargetDetectorRecipeEffectiveDetectorRuleOutput {
	return i.ToTargetTargetDetectorRecipeEffectiveDetectorRuleOutputWithContext(context.Background())
}

func (i TargetTargetDetectorRecipeEffectiveDetectorRuleArgs) ToTargetTargetDetectorRecipeEffectiveDetectorRuleOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeEffectiveDetectorRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetTargetDetectorRecipeEffectiveDetectorRuleOutput)
}

// TargetTargetDetectorRecipeEffectiveDetectorRuleArrayInput is an input type that accepts TargetTargetDetectorRecipeEffectiveDetectorRuleArray and TargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutput values.
// You can construct a concrete instance of `TargetTargetDetectorRecipeEffectiveDetectorRuleArrayInput` via:
//
//          TargetTargetDetectorRecipeEffectiveDetectorRuleArray{ TargetTargetDetectorRecipeEffectiveDetectorRuleArgs{...} }
type TargetTargetDetectorRecipeEffectiveDetectorRuleArrayInput interface {
	pulumi.Input

	ToTargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutput() TargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutput
	ToTargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutputWithContext(context.Context) TargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutput
}

type TargetTargetDetectorRecipeEffectiveDetectorRuleArray []TargetTargetDetectorRecipeEffectiveDetectorRuleInput

func (TargetTargetDetectorRecipeEffectiveDetectorRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetTargetDetectorRecipeEffectiveDetectorRule)(nil)).Elem()
}

func (i TargetTargetDetectorRecipeEffectiveDetectorRuleArray) ToTargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutput() TargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutput {
	return i.ToTargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutputWithContext(context.Background())
}

func (i TargetTargetDetectorRecipeEffectiveDetectorRuleArray) ToTargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutput)
}

type TargetTargetDetectorRecipeEffectiveDetectorRuleOutput struct{ *pulumi.OutputState }

func (TargetTargetDetectorRecipeEffectiveDetectorRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetTargetDetectorRecipeEffectiveDetectorRule)(nil)).Elem()
}

func (o TargetTargetDetectorRecipeEffectiveDetectorRuleOutput) ToTargetTargetDetectorRecipeEffectiveDetectorRuleOutput() TargetTargetDetectorRecipeEffectiveDetectorRuleOutput {
	return o
}

func (o TargetTargetDetectorRecipeEffectiveDetectorRuleOutput) ToTargetTargetDetectorRecipeEffectiveDetectorRuleOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeEffectiveDetectorRuleOutput {
	return o
}

// The target description.
func (o TargetTargetDetectorRecipeEffectiveDetectorRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeEffectiveDetectorRule) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// (Updatable) Details of ResponderRule.
func (o TargetTargetDetectorRecipeEffectiveDetectorRuleOutput) Details() TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeEffectiveDetectorRule) *TargetTargetDetectorRecipeEffectiveDetectorRuleDetails {
		return v.Details
	}).(TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsPtrOutput)
}

// detector for the rule
func (o TargetTargetDetectorRecipeEffectiveDetectorRuleOutput) Detector() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeEffectiveDetectorRule) *string { return v.Detector }).(pulumi.StringPtrOutput)
}

// (Updatable) Identifier for DetectorRule.
func (o TargetTargetDetectorRecipeEffectiveDetectorRuleOutput) DetectorRuleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeEffectiveDetectorRule) *string { return v.DetectorRuleId }).(pulumi.StringPtrOutput)
}

// (Updatable) DetectorTemplate Identifier
func (o TargetTargetDetectorRecipeEffectiveDetectorRuleOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeEffectiveDetectorRule) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o TargetTargetDetectorRecipeEffectiveDetectorRuleOutput) LifecycleDetails() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeEffectiveDetectorRule) *string { return v.LifecycleDetails }).(pulumi.StringPtrOutput)
}

// List of cloudguard managed list types related to this rule
func (o TargetTargetDetectorRecipeEffectiveDetectorRuleOutput) ManagedListTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeEffectiveDetectorRule) []string { return v.ManagedListTypes }).(pulumi.StringArrayOutput)
}

// Recommendation for TargetDetectorRecipeDetectorRule
func (o TargetTargetDetectorRecipeEffectiveDetectorRuleOutput) Recommendation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeEffectiveDetectorRule) *string { return v.Recommendation }).(pulumi.StringPtrOutput)
}

// resource type of the configuration to which the rule is applied
func (o TargetTargetDetectorRecipeEffectiveDetectorRuleOutput) ResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeEffectiveDetectorRule) *string { return v.ResourceType }).(pulumi.StringPtrOutput)
}

// service type of the configuration to which the rule is applied
func (o TargetTargetDetectorRecipeEffectiveDetectorRuleOutput) ServiceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeEffectiveDetectorRule) *string { return v.ServiceType }).(pulumi.StringPtrOutput)
}

// (Updatable) The current state of the DetectorRule.
func (o TargetTargetDetectorRecipeEffectiveDetectorRuleOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeEffectiveDetectorRule) *string { return v.State }).(pulumi.StringPtrOutput)
}

// The date and time the target was created. Format defined by RFC3339.
func (o TargetTargetDetectorRecipeEffectiveDetectorRuleOutput) TimeCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeEffectiveDetectorRule) *string { return v.TimeCreated }).(pulumi.StringPtrOutput)
}

// The date and time the target was updated. Format defined by RFC3339.
func (o TargetTargetDetectorRecipeEffectiveDetectorRuleOutput) TimeUpdated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeEffectiveDetectorRule) *string { return v.TimeUpdated }).(pulumi.StringPtrOutput)
}

type TargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutput struct{ *pulumi.OutputState }

func (TargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetTargetDetectorRecipeEffectiveDetectorRule)(nil)).Elem()
}

func (o TargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutput) ToTargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutput() TargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutput {
	return o
}

func (o TargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutput) ToTargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutput {
	return o
}

func (o TargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutput) Index(i pulumi.IntInput) TargetTargetDetectorRecipeEffectiveDetectorRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TargetTargetDetectorRecipeEffectiveDetectorRule {
		return vs[0].([]TargetTargetDetectorRecipeEffectiveDetectorRule)[vs[1].(int)]
	}).(TargetTargetDetectorRecipeEffectiveDetectorRuleOutput)
}

type TargetTargetDetectorRecipeEffectiveDetectorRuleDetails struct {
	// (Updatable) Condition group corresponding to each compartment
	ConditionGroups []TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroup `pulumi:"conditionGroups"`
	// (Updatable) Configurations associated with the ResponderRule
	Configurations []TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfiguration `pulumi:"configurations"`
	// configuration allowed or not
	IsConfigurationAllowed *bool `pulumi:"isConfigurationAllowed"`
	// Identifies state for ResponderRule
	IsEnabled *bool `pulumi:"isEnabled"`
	// user defined labels for a detector rule
	Labels []string `pulumi:"labels"`
	// The Risk Level
	RiskLevel *string `pulumi:"riskLevel"`
}

// TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsInput is an input type that accepts TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsArgs and TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsOutput values.
// You can construct a concrete instance of `TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsInput` via:
//
//          TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsArgs{...}
type TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsInput interface {
	pulumi.Input

	ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsOutput() TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsOutput
	ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsOutputWithContext(context.Context) TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsOutput
}

type TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsArgs struct {
	// (Updatable) Condition group corresponding to each compartment
	ConditionGroups TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArrayInput `pulumi:"conditionGroups"`
	// (Updatable) Configurations associated with the ResponderRule
	Configurations TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayInput `pulumi:"configurations"`
	// configuration allowed or not
	IsConfigurationAllowed pulumi.BoolPtrInput `pulumi:"isConfigurationAllowed"`
	// Identifies state for ResponderRule
	IsEnabled pulumi.BoolPtrInput `pulumi:"isEnabled"`
	// user defined labels for a detector rule
	Labels pulumi.StringArrayInput `pulumi:"labels"`
	// The Risk Level
	RiskLevel pulumi.StringPtrInput `pulumi:"riskLevel"`
}

func (TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetTargetDetectorRecipeEffectiveDetectorRuleDetails)(nil)).Elem()
}

func (i TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsArgs) ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsOutput() TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsOutput {
	return i.ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsOutputWithContext(context.Background())
}

func (i TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsArgs) ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsOutput)
}

func (i TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsArgs) ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsPtrOutput() TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsPtrOutput {
	return i.ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsPtrOutputWithContext(context.Background())
}

func (i TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsArgs) ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsPtrOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsOutput).ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsPtrOutputWithContext(ctx)
}

// TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsPtrInput is an input type that accepts TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsArgs, TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsPtr and TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsPtrOutput values.
// You can construct a concrete instance of `TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsPtrInput` via:
//
//          TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsArgs{...}
//
//  or:
//
//          nil
type TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsPtrInput interface {
	pulumi.Input

	ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsPtrOutput() TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsPtrOutput
	ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsPtrOutputWithContext(context.Context) TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsPtrOutput
}

type targetTargetDetectorRecipeEffectiveDetectorRuleDetailsPtrType TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsArgs

func TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsPtr(v *TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsArgs) TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsPtrInput {
	return (*targetTargetDetectorRecipeEffectiveDetectorRuleDetailsPtrType)(v)
}

func (*targetTargetDetectorRecipeEffectiveDetectorRuleDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TargetTargetDetectorRecipeEffectiveDetectorRuleDetails)(nil)).Elem()
}

func (i *targetTargetDetectorRecipeEffectiveDetectorRuleDetailsPtrType) ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsPtrOutput() TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsPtrOutput {
	return i.ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsPtrOutputWithContext(context.Background())
}

func (i *targetTargetDetectorRecipeEffectiveDetectorRuleDetailsPtrType) ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsPtrOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsPtrOutput)
}

type TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsOutput struct{ *pulumi.OutputState }

func (TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetTargetDetectorRecipeEffectiveDetectorRuleDetails)(nil)).Elem()
}

func (o TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsOutput) ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsOutput() TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsOutput {
	return o
}

func (o TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsOutput) ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsOutput {
	return o
}

func (o TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsOutput) ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsPtrOutput() TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsPtrOutput {
	return o.ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsPtrOutputWithContext(context.Background())
}

func (o TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsOutput) ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsPtrOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeEffectiveDetectorRuleDetails) *TargetTargetDetectorRecipeEffectiveDetectorRuleDetails {
		return &v
	}).(TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsPtrOutput)
}

// (Updatable) Condition group corresponding to each compartment
func (o TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsOutput) ConditionGroups() TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArrayOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeEffectiveDetectorRuleDetails) []TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroup {
		return v.ConditionGroups
	}).(TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArrayOutput)
}

// (Updatable) Configurations associated with the ResponderRule
func (o TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsOutput) Configurations() TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeEffectiveDetectorRuleDetails) []TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfiguration {
		return v.Configurations
	}).(TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput)
}

// configuration allowed or not
func (o TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsOutput) IsConfigurationAllowed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeEffectiveDetectorRuleDetails) *bool { return v.IsConfigurationAllowed }).(pulumi.BoolPtrOutput)
}

// Identifies state for ResponderRule
func (o TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeEffectiveDetectorRuleDetails) *bool { return v.IsEnabled }).(pulumi.BoolPtrOutput)
}

// user defined labels for a detector rule
func (o TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsOutput) Labels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeEffectiveDetectorRuleDetails) []string { return v.Labels }).(pulumi.StringArrayOutput)
}

// The Risk Level
func (o TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsOutput) RiskLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeEffectiveDetectorRuleDetails) *string { return v.RiskLevel }).(pulumi.StringPtrOutput)
}

type TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsPtrOutput struct{ *pulumi.OutputState }

func (TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TargetTargetDetectorRecipeEffectiveDetectorRuleDetails)(nil)).Elem()
}

func (o TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsPtrOutput) ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsPtrOutput() TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsPtrOutput {
	return o
}

func (o TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsPtrOutput) ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsPtrOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsPtrOutput {
	return o
}

func (o TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsPtrOutput) Elem() TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsOutput {
	return o.ApplyT(func(v *TargetTargetDetectorRecipeEffectiveDetectorRuleDetails) TargetTargetDetectorRecipeEffectiveDetectorRuleDetails {
		return *v
	}).(TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsOutput)
}

// (Updatable) Condition group corresponding to each compartment
func (o TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsPtrOutput) ConditionGroups() TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArrayOutput {
	return o.ApplyT(func(v *TargetTargetDetectorRecipeEffectiveDetectorRuleDetails) []TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroup {
		if v == nil {
			return nil
		}
		return v.ConditionGroups
	}).(TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArrayOutput)
}

// (Updatable) Configurations associated with the ResponderRule
func (o TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsPtrOutput) Configurations() TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput {
	return o.ApplyT(func(v *TargetTargetDetectorRecipeEffectiveDetectorRuleDetails) []TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfiguration {
		if v == nil {
			return nil
		}
		return v.Configurations
	}).(TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput)
}

// configuration allowed or not
func (o TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsPtrOutput) IsConfigurationAllowed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TargetTargetDetectorRecipeEffectiveDetectorRuleDetails) *bool {
		if v == nil {
			return nil
		}
		return v.IsConfigurationAllowed
	}).(pulumi.BoolPtrOutput)
}

// Identifies state for ResponderRule
func (o TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsPtrOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TargetTargetDetectorRecipeEffectiveDetectorRuleDetails) *bool {
		if v == nil {
			return nil
		}
		return v.IsEnabled
	}).(pulumi.BoolPtrOutput)
}

// user defined labels for a detector rule
func (o TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsPtrOutput) Labels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TargetTargetDetectorRecipeEffectiveDetectorRuleDetails) []string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringArrayOutput)
}

// The Risk Level
func (o TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsPtrOutput) RiskLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TargetTargetDetectorRecipeEffectiveDetectorRuleDetails) *string {
		if v == nil {
			return nil
		}
		return v.RiskLevel
	}).(pulumi.StringPtrOutput)
}

type TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroup struct {
	// (Updatable) compartment associated with condition
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable)
	Condition *string `pulumi:"condition"`
}

// TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupInput is an input type that accepts TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArgs and TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupOutput values.
// You can construct a concrete instance of `TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupInput` via:
//
//          TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArgs{...}
type TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupInput interface {
	pulumi.Input

	ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupOutput() TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupOutput
	ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupOutputWithContext(context.Context) TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupOutput
}

type TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArgs struct {
	// (Updatable) compartment associated with condition
	CompartmentId pulumi.StringPtrInput `pulumi:"compartmentId"`
	// (Updatable)
	Condition pulumi.StringPtrInput `pulumi:"condition"`
}

func (TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroup)(nil)).Elem()
}

func (i TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArgs) ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupOutput() TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupOutput {
	return i.ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupOutputWithContext(context.Background())
}

func (i TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArgs) ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupOutput)
}

// TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArrayInput is an input type that accepts TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArray and TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArrayOutput values.
// You can construct a concrete instance of `TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArrayInput` via:
//
//          TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArray{ TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArgs{...} }
type TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArrayInput interface {
	pulumi.Input

	ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArrayOutput() TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArrayOutput
	ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArrayOutputWithContext(context.Context) TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArrayOutput
}

type TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArray []TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupInput

func (TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroup)(nil)).Elem()
}

func (i TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArray) ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArrayOutput() TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArrayOutput {
	return i.ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArrayOutputWithContext(context.Background())
}

func (i TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArray) ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArrayOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArrayOutput)
}

type TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupOutput struct{ *pulumi.OutputState }

func (TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroup)(nil)).Elem()
}

func (o TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupOutput) ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupOutput() TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupOutput {
	return o
}

func (o TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupOutput) ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupOutput {
	return o
}

// (Updatable) compartment associated with condition
func (o TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroup) *string {
		return v.CompartmentId
	}).(pulumi.StringPtrOutput)
}

// (Updatable)
func (o TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupOutput) Condition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroup) *string {
		return v.Condition
	}).(pulumi.StringPtrOutput)
}

type TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArrayOutput struct{ *pulumi.OutputState }

func (TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroup)(nil)).Elem()
}

func (o TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArrayOutput) ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArrayOutput() TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArrayOutput {
	return o
}

func (o TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArrayOutput) ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArrayOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArrayOutput {
	return o
}

func (o TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArrayOutput) Index(i pulumi.IntInput) TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroup {
		return vs[0].([]TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroup)[vs[1].(int)]
	}).(TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupOutput)
}

type TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfiguration struct {
	// (Updatable) Unique name of the configuration
	ConfigKey *string `pulumi:"configKey"`
	// configuration data type
	DataType *string `pulumi:"dataType"`
	// (Updatable) configuration name
	Name *string `pulumi:"name"`
	// (Updatable) configuration value
	Value *string `pulumi:"value"`
	// List of configuration values
	Values []TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValue `pulumi:"values"`
}

// TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationInput is an input type that accepts TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArgs and TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput values.
// You can construct a concrete instance of `TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationInput` via:
//
//          TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArgs{...}
type TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationInput interface {
	pulumi.Input

	ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput() TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput
	ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutputWithContext(context.Context) TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput
}

type TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArgs struct {
	// (Updatable) Unique name of the configuration
	ConfigKey pulumi.StringPtrInput `pulumi:"configKey"`
	// configuration data type
	DataType pulumi.StringPtrInput `pulumi:"dataType"`
	// (Updatable) configuration name
	Name pulumi.StringPtrInput `pulumi:"name"`
	// (Updatable) configuration value
	Value pulumi.StringPtrInput `pulumi:"value"`
	// List of configuration values
	Values TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayInput `pulumi:"values"`
}

func (TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfiguration)(nil)).Elem()
}

func (i TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArgs) ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput() TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput {
	return i.ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutputWithContext(context.Background())
}

func (i TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArgs) ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput)
}

// TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayInput is an input type that accepts TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArray and TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput values.
// You can construct a concrete instance of `TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayInput` via:
//
//          TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArray{ TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArgs{...} }
type TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayInput interface {
	pulumi.Input

	ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput() TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput
	ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutputWithContext(context.Context) TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput
}

type TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArray []TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationInput

func (TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfiguration)(nil)).Elem()
}

func (i TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArray) ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput() TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput {
	return i.ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutputWithContext(context.Background())
}

func (i TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArray) ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput)
}

type TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput struct{ *pulumi.OutputState }

func (TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfiguration)(nil)).Elem()
}

func (o TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput) ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput() TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput {
	return o
}

func (o TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput) ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput {
	return o
}

// (Updatable) Unique name of the configuration
func (o TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput) ConfigKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfiguration) *string {
		return v.ConfigKey
	}).(pulumi.StringPtrOutput)
}

// configuration data type
func (o TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput) DataType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfiguration) *string { return v.DataType }).(pulumi.StringPtrOutput)
}

// (Updatable) configuration name
func (o TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfiguration) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// (Updatable) configuration value
func (o TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfiguration) *string { return v.Value }).(pulumi.StringPtrOutput)
}

// List of configuration values
func (o TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput) Values() TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfiguration) []TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValue {
		return v.Values
	}).(TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput)
}

type TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput struct{ *pulumi.OutputState }

func (TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfiguration)(nil)).Elem()
}

func (o TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput) ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput() TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput {
	return o
}

func (o TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput) ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput {
	return o
}

func (o TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput) Index(i pulumi.IntInput) TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfiguration {
		return vs[0].([]TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfiguration)[vs[1].(int)]
	}).(TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput)
}

type TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValue struct {
	// configuration list item type, either CUSTOM or MANAGED
	ListType *string `pulumi:"listType"`
	// type of the managed list
	ManagedListType *string `pulumi:"managedListType"`
	// (Updatable) configuration value
	Value *string `pulumi:"value"`
}

// TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueInput is an input type that accepts TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArgs and TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput values.
// You can construct a concrete instance of `TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueInput` via:
//
//          TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArgs{...}
type TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueInput interface {
	pulumi.Input

	ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput() TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput
	ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutputWithContext(context.Context) TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput
}

type TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArgs struct {
	// configuration list item type, either CUSTOM or MANAGED
	ListType pulumi.StringPtrInput `pulumi:"listType"`
	// type of the managed list
	ManagedListType pulumi.StringPtrInput `pulumi:"managedListType"`
	// (Updatable) configuration value
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValue)(nil)).Elem()
}

func (i TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArgs) ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput() TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput {
	return i.ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutputWithContext(context.Background())
}

func (i TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArgs) ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput)
}

// TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayInput is an input type that accepts TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArray and TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput values.
// You can construct a concrete instance of `TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayInput` via:
//
//          TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArray{ TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArgs{...} }
type TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayInput interface {
	pulumi.Input

	ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput() TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput
	ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutputWithContext(context.Context) TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput
}

type TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArray []TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueInput

func (TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValue)(nil)).Elem()
}

func (i TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArray) ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput() TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput {
	return i.ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutputWithContext(context.Background())
}

func (i TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArray) ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput)
}

type TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput struct{ *pulumi.OutputState }

func (TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValue)(nil)).Elem()
}

func (o TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput) ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput() TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput {
	return o
}

func (o TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput) ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput {
	return o
}

// configuration list item type, either CUSTOM or MANAGED
func (o TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput) ListType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValue) *string {
		return v.ListType
	}).(pulumi.StringPtrOutput)
}

// type of the managed list
func (o TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput) ManagedListType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValue) *string {
		return v.ManagedListType
	}).(pulumi.StringPtrOutput)
}

// (Updatable) configuration value
func (o TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValue) *string {
		return v.Value
	}).(pulumi.StringPtrOutput)
}

type TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput struct{ *pulumi.OutputState }

func (TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValue)(nil)).Elem()
}

func (o TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput) ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput() TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput {
	return o
}

func (o TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput) ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput {
	return o
}

func (o TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput) Index(i pulumi.IntInput) TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValue {
		return vs[0].([]TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValue)[vs[1].(int)]
	}).(TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput)
}

type TargetTargetResponderRecipe struct {
	// (Updatable) compartment associated with condition
	CompartmentId *string `pulumi:"compartmentId"`
	// The target description.
	Description *string `pulumi:"description"`
	// (Updatable) DetectorTemplate Identifier
	DisplayName *string `pulumi:"displayName"`
	// List of responder rules associated with the recipe after applying all defaults
	EffectiveResponderRules []TargetTargetResponderRecipeEffectiveResponderRule `pulumi:"effectiveResponderRules"`
	// Unique identifier of TargetResponderRecipe that is immutable on creation
	Id *string `pulumi:"id"`
	// Owner of ResponderRecipe
	Owner *string `pulumi:"owner"`
	// Identifier for ResponderRecipe.
	ResponderRecipeId string `pulumi:"responderRecipeId"`
	// (Updatable) Override responder rules associated with reponder recipe in a target.
	ResponderRules []TargetTargetResponderRecipeResponderRule `pulumi:"responderRules"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated *string `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated *string `pulumi:"timeUpdated"`
}

// TargetTargetResponderRecipeInput is an input type that accepts TargetTargetResponderRecipeArgs and TargetTargetResponderRecipeOutput values.
// You can construct a concrete instance of `TargetTargetResponderRecipeInput` via:
//
//          TargetTargetResponderRecipeArgs{...}
type TargetTargetResponderRecipeInput interface {
	pulumi.Input

	ToTargetTargetResponderRecipeOutput() TargetTargetResponderRecipeOutput
	ToTargetTargetResponderRecipeOutputWithContext(context.Context) TargetTargetResponderRecipeOutput
}

type TargetTargetResponderRecipeArgs struct {
	// (Updatable) compartment associated with condition
	CompartmentId pulumi.StringPtrInput `pulumi:"compartmentId"`
	// The target description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// (Updatable) DetectorTemplate Identifier
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// List of responder rules associated with the recipe after applying all defaults
	EffectiveResponderRules TargetTargetResponderRecipeEffectiveResponderRuleArrayInput `pulumi:"effectiveResponderRules"`
	// Unique identifier of TargetResponderRecipe that is immutable on creation
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Owner of ResponderRecipe
	Owner pulumi.StringPtrInput `pulumi:"owner"`
	// Identifier for ResponderRecipe.
	ResponderRecipeId pulumi.StringInput `pulumi:"responderRecipeId"`
	// (Updatable) Override responder rules associated with reponder recipe in a target.
	ResponderRules TargetTargetResponderRecipeResponderRuleArrayInput `pulumi:"responderRules"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated pulumi.StringPtrInput `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated pulumi.StringPtrInput `pulumi:"timeUpdated"`
}

func (TargetTargetResponderRecipeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetTargetResponderRecipe)(nil)).Elem()
}

func (i TargetTargetResponderRecipeArgs) ToTargetTargetResponderRecipeOutput() TargetTargetResponderRecipeOutput {
	return i.ToTargetTargetResponderRecipeOutputWithContext(context.Background())
}

func (i TargetTargetResponderRecipeArgs) ToTargetTargetResponderRecipeOutputWithContext(ctx context.Context) TargetTargetResponderRecipeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetTargetResponderRecipeOutput)
}

// TargetTargetResponderRecipeArrayInput is an input type that accepts TargetTargetResponderRecipeArray and TargetTargetResponderRecipeArrayOutput values.
// You can construct a concrete instance of `TargetTargetResponderRecipeArrayInput` via:
//
//          TargetTargetResponderRecipeArray{ TargetTargetResponderRecipeArgs{...} }
type TargetTargetResponderRecipeArrayInput interface {
	pulumi.Input

	ToTargetTargetResponderRecipeArrayOutput() TargetTargetResponderRecipeArrayOutput
	ToTargetTargetResponderRecipeArrayOutputWithContext(context.Context) TargetTargetResponderRecipeArrayOutput
}

type TargetTargetResponderRecipeArray []TargetTargetResponderRecipeInput

func (TargetTargetResponderRecipeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetTargetResponderRecipe)(nil)).Elem()
}

func (i TargetTargetResponderRecipeArray) ToTargetTargetResponderRecipeArrayOutput() TargetTargetResponderRecipeArrayOutput {
	return i.ToTargetTargetResponderRecipeArrayOutputWithContext(context.Background())
}

func (i TargetTargetResponderRecipeArray) ToTargetTargetResponderRecipeArrayOutputWithContext(ctx context.Context) TargetTargetResponderRecipeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetTargetResponderRecipeArrayOutput)
}

type TargetTargetResponderRecipeOutput struct{ *pulumi.OutputState }

func (TargetTargetResponderRecipeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetTargetResponderRecipe)(nil)).Elem()
}

func (o TargetTargetResponderRecipeOutput) ToTargetTargetResponderRecipeOutput() TargetTargetResponderRecipeOutput {
	return o
}

func (o TargetTargetResponderRecipeOutput) ToTargetTargetResponderRecipeOutputWithContext(ctx context.Context) TargetTargetResponderRecipeOutput {
	return o
}

// (Updatable) compartment associated with condition
func (o TargetTargetResponderRecipeOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipe) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

// The target description.
func (o TargetTargetResponderRecipeOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipe) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// (Updatable) DetectorTemplate Identifier
func (o TargetTargetResponderRecipeOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipe) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// List of responder rules associated with the recipe after applying all defaults
func (o TargetTargetResponderRecipeOutput) EffectiveResponderRules() TargetTargetResponderRecipeEffectiveResponderRuleArrayOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipe) []TargetTargetResponderRecipeEffectiveResponderRule {
		return v.EffectiveResponderRules
	}).(TargetTargetResponderRecipeEffectiveResponderRuleArrayOutput)
}

// Unique identifier of TargetResponderRecipe that is immutable on creation
func (o TargetTargetResponderRecipeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipe) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Owner of ResponderRecipe
func (o TargetTargetResponderRecipeOutput) Owner() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipe) *string { return v.Owner }).(pulumi.StringPtrOutput)
}

// Identifier for ResponderRecipe.
func (o TargetTargetResponderRecipeOutput) ResponderRecipeId() pulumi.StringOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipe) string { return v.ResponderRecipeId }).(pulumi.StringOutput)
}

// (Updatable) Override responder rules associated with reponder recipe in a target.
func (o TargetTargetResponderRecipeOutput) ResponderRules() TargetTargetResponderRecipeResponderRuleArrayOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipe) []TargetTargetResponderRecipeResponderRule {
		return v.ResponderRules
	}).(TargetTargetResponderRecipeResponderRuleArrayOutput)
}

// The date and time the target was created. Format defined by RFC3339.
func (o TargetTargetResponderRecipeOutput) TimeCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipe) *string { return v.TimeCreated }).(pulumi.StringPtrOutput)
}

// The date and time the target was updated. Format defined by RFC3339.
func (o TargetTargetResponderRecipeOutput) TimeUpdated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipe) *string { return v.TimeUpdated }).(pulumi.StringPtrOutput)
}

type TargetTargetResponderRecipeArrayOutput struct{ *pulumi.OutputState }

func (TargetTargetResponderRecipeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetTargetResponderRecipe)(nil)).Elem()
}

func (o TargetTargetResponderRecipeArrayOutput) ToTargetTargetResponderRecipeArrayOutput() TargetTargetResponderRecipeArrayOutput {
	return o
}

func (o TargetTargetResponderRecipeArrayOutput) ToTargetTargetResponderRecipeArrayOutputWithContext(ctx context.Context) TargetTargetResponderRecipeArrayOutput {
	return o
}

func (o TargetTargetResponderRecipeArrayOutput) Index(i pulumi.IntInput) TargetTargetResponderRecipeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TargetTargetResponderRecipe {
		return vs[0].([]TargetTargetResponderRecipe)[vs[1].(int)]
	}).(TargetTargetResponderRecipeOutput)
}

type TargetTargetResponderRecipeEffectiveResponderRule struct {
	// (Updatable) compartment associated with condition
	CompartmentId *string `pulumi:"compartmentId"`
	// The target description.
	Description *string `pulumi:"description"`
	// (Updatable) Details of ResponderRule.
	Details *TargetTargetResponderRecipeEffectiveResponderRuleDetails `pulumi:"details"`
	// (Updatable) DetectorTemplate Identifier
	DisplayName *string `pulumi:"displayName"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// List of Policy
	Policies []string `pulumi:"policies"`
	// (Updatable) Identifier for ResponderRule.
	ResponderRuleId *string `pulumi:"responderRuleId"`
	// (Updatable) The current state of the DetectorRule.
	State *string `pulumi:"state"`
	// Supported Execution Modes
	SupportedModes []string `pulumi:"supportedModes"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated *string `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated *string `pulumi:"timeUpdated"`
	// Type of Responder
	Type *string `pulumi:"type"`
}

// TargetTargetResponderRecipeEffectiveResponderRuleInput is an input type that accepts TargetTargetResponderRecipeEffectiveResponderRuleArgs and TargetTargetResponderRecipeEffectiveResponderRuleOutput values.
// You can construct a concrete instance of `TargetTargetResponderRecipeEffectiveResponderRuleInput` via:
//
//          TargetTargetResponderRecipeEffectiveResponderRuleArgs{...}
type TargetTargetResponderRecipeEffectiveResponderRuleInput interface {
	pulumi.Input

	ToTargetTargetResponderRecipeEffectiveResponderRuleOutput() TargetTargetResponderRecipeEffectiveResponderRuleOutput
	ToTargetTargetResponderRecipeEffectiveResponderRuleOutputWithContext(context.Context) TargetTargetResponderRecipeEffectiveResponderRuleOutput
}

type TargetTargetResponderRecipeEffectiveResponderRuleArgs struct {
	// (Updatable) compartment associated with condition
	CompartmentId pulumi.StringPtrInput `pulumi:"compartmentId"`
	// The target description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// (Updatable) Details of ResponderRule.
	Details TargetTargetResponderRecipeEffectiveResponderRuleDetailsPtrInput `pulumi:"details"`
	// (Updatable) DetectorTemplate Identifier
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringPtrInput `pulumi:"lifecycleDetails"`
	// List of Policy
	Policies pulumi.StringArrayInput `pulumi:"policies"`
	// (Updatable) Identifier for ResponderRule.
	ResponderRuleId pulumi.StringPtrInput `pulumi:"responderRuleId"`
	// (Updatable) The current state of the DetectorRule.
	State pulumi.StringPtrInput `pulumi:"state"`
	// Supported Execution Modes
	SupportedModes pulumi.StringArrayInput `pulumi:"supportedModes"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated pulumi.StringPtrInput `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated pulumi.StringPtrInput `pulumi:"timeUpdated"`
	// Type of Responder
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (TargetTargetResponderRecipeEffectiveResponderRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetTargetResponderRecipeEffectiveResponderRule)(nil)).Elem()
}

func (i TargetTargetResponderRecipeEffectiveResponderRuleArgs) ToTargetTargetResponderRecipeEffectiveResponderRuleOutput() TargetTargetResponderRecipeEffectiveResponderRuleOutput {
	return i.ToTargetTargetResponderRecipeEffectiveResponderRuleOutputWithContext(context.Background())
}

func (i TargetTargetResponderRecipeEffectiveResponderRuleArgs) ToTargetTargetResponderRecipeEffectiveResponderRuleOutputWithContext(ctx context.Context) TargetTargetResponderRecipeEffectiveResponderRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetTargetResponderRecipeEffectiveResponderRuleOutput)
}

// TargetTargetResponderRecipeEffectiveResponderRuleArrayInput is an input type that accepts TargetTargetResponderRecipeEffectiveResponderRuleArray and TargetTargetResponderRecipeEffectiveResponderRuleArrayOutput values.
// You can construct a concrete instance of `TargetTargetResponderRecipeEffectiveResponderRuleArrayInput` via:
//
//          TargetTargetResponderRecipeEffectiveResponderRuleArray{ TargetTargetResponderRecipeEffectiveResponderRuleArgs{...} }
type TargetTargetResponderRecipeEffectiveResponderRuleArrayInput interface {
	pulumi.Input

	ToTargetTargetResponderRecipeEffectiveResponderRuleArrayOutput() TargetTargetResponderRecipeEffectiveResponderRuleArrayOutput
	ToTargetTargetResponderRecipeEffectiveResponderRuleArrayOutputWithContext(context.Context) TargetTargetResponderRecipeEffectiveResponderRuleArrayOutput
}

type TargetTargetResponderRecipeEffectiveResponderRuleArray []TargetTargetResponderRecipeEffectiveResponderRuleInput

func (TargetTargetResponderRecipeEffectiveResponderRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetTargetResponderRecipeEffectiveResponderRule)(nil)).Elem()
}

func (i TargetTargetResponderRecipeEffectiveResponderRuleArray) ToTargetTargetResponderRecipeEffectiveResponderRuleArrayOutput() TargetTargetResponderRecipeEffectiveResponderRuleArrayOutput {
	return i.ToTargetTargetResponderRecipeEffectiveResponderRuleArrayOutputWithContext(context.Background())
}

func (i TargetTargetResponderRecipeEffectiveResponderRuleArray) ToTargetTargetResponderRecipeEffectiveResponderRuleArrayOutputWithContext(ctx context.Context) TargetTargetResponderRecipeEffectiveResponderRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetTargetResponderRecipeEffectiveResponderRuleArrayOutput)
}

type TargetTargetResponderRecipeEffectiveResponderRuleOutput struct{ *pulumi.OutputState }

func (TargetTargetResponderRecipeEffectiveResponderRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetTargetResponderRecipeEffectiveResponderRule)(nil)).Elem()
}

func (o TargetTargetResponderRecipeEffectiveResponderRuleOutput) ToTargetTargetResponderRecipeEffectiveResponderRuleOutput() TargetTargetResponderRecipeEffectiveResponderRuleOutput {
	return o
}

func (o TargetTargetResponderRecipeEffectiveResponderRuleOutput) ToTargetTargetResponderRecipeEffectiveResponderRuleOutputWithContext(ctx context.Context) TargetTargetResponderRecipeEffectiveResponderRuleOutput {
	return o
}

// (Updatable) compartment associated with condition
func (o TargetTargetResponderRecipeEffectiveResponderRuleOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipeEffectiveResponderRule) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

// The target description.
func (o TargetTargetResponderRecipeEffectiveResponderRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipeEffectiveResponderRule) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// (Updatable) Details of ResponderRule.
func (o TargetTargetResponderRecipeEffectiveResponderRuleOutput) Details() TargetTargetResponderRecipeEffectiveResponderRuleDetailsPtrOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipeEffectiveResponderRule) *TargetTargetResponderRecipeEffectiveResponderRuleDetails {
		return v.Details
	}).(TargetTargetResponderRecipeEffectiveResponderRuleDetailsPtrOutput)
}

// (Updatable) DetectorTemplate Identifier
func (o TargetTargetResponderRecipeEffectiveResponderRuleOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipeEffectiveResponderRule) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o TargetTargetResponderRecipeEffectiveResponderRuleOutput) LifecycleDetails() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipeEffectiveResponderRule) *string { return v.LifecycleDetails }).(pulumi.StringPtrOutput)
}

// List of Policy
func (o TargetTargetResponderRecipeEffectiveResponderRuleOutput) Policies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipeEffectiveResponderRule) []string { return v.Policies }).(pulumi.StringArrayOutput)
}

// (Updatable) Identifier for ResponderRule.
func (o TargetTargetResponderRecipeEffectiveResponderRuleOutput) ResponderRuleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipeEffectiveResponderRule) *string { return v.ResponderRuleId }).(pulumi.StringPtrOutput)
}

// (Updatable) The current state of the DetectorRule.
func (o TargetTargetResponderRecipeEffectiveResponderRuleOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipeEffectiveResponderRule) *string { return v.State }).(pulumi.StringPtrOutput)
}

// Supported Execution Modes
func (o TargetTargetResponderRecipeEffectiveResponderRuleOutput) SupportedModes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipeEffectiveResponderRule) []string { return v.SupportedModes }).(pulumi.StringArrayOutput)
}

// The date and time the target was created. Format defined by RFC3339.
func (o TargetTargetResponderRecipeEffectiveResponderRuleOutput) TimeCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipeEffectiveResponderRule) *string { return v.TimeCreated }).(pulumi.StringPtrOutput)
}

// The date and time the target was updated. Format defined by RFC3339.
func (o TargetTargetResponderRecipeEffectiveResponderRuleOutput) TimeUpdated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipeEffectiveResponderRule) *string { return v.TimeUpdated }).(pulumi.StringPtrOutput)
}

// Type of Responder
func (o TargetTargetResponderRecipeEffectiveResponderRuleOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipeEffectiveResponderRule) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type TargetTargetResponderRecipeEffectiveResponderRuleArrayOutput struct{ *pulumi.OutputState }

func (TargetTargetResponderRecipeEffectiveResponderRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetTargetResponderRecipeEffectiveResponderRule)(nil)).Elem()
}

func (o TargetTargetResponderRecipeEffectiveResponderRuleArrayOutput) ToTargetTargetResponderRecipeEffectiveResponderRuleArrayOutput() TargetTargetResponderRecipeEffectiveResponderRuleArrayOutput {
	return o
}

func (o TargetTargetResponderRecipeEffectiveResponderRuleArrayOutput) ToTargetTargetResponderRecipeEffectiveResponderRuleArrayOutputWithContext(ctx context.Context) TargetTargetResponderRecipeEffectiveResponderRuleArrayOutput {
	return o
}

func (o TargetTargetResponderRecipeEffectiveResponderRuleArrayOutput) Index(i pulumi.IntInput) TargetTargetResponderRecipeEffectiveResponderRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TargetTargetResponderRecipeEffectiveResponderRule {
		return vs[0].([]TargetTargetResponderRecipeEffectiveResponderRule)[vs[1].(int)]
	}).(TargetTargetResponderRecipeEffectiveResponderRuleOutput)
}

type TargetTargetResponderRecipeEffectiveResponderRuleDetails struct {
	// (Updatable)
	Condition *string `pulumi:"condition"`
	// (Updatable) Configurations associated with the ResponderRule
	Configurations []TargetTargetResponderRecipeEffectiveResponderRuleDetailsConfiguration `pulumi:"configurations"`
	// Identifies state for ResponderRule
	IsEnabled *bool `pulumi:"isEnabled"`
	// (Updatable) Execution Mode for ResponderRule
	Mode *string `pulumi:"mode"`
}

// TargetTargetResponderRecipeEffectiveResponderRuleDetailsInput is an input type that accepts TargetTargetResponderRecipeEffectiveResponderRuleDetailsArgs and TargetTargetResponderRecipeEffectiveResponderRuleDetailsOutput values.
// You can construct a concrete instance of `TargetTargetResponderRecipeEffectiveResponderRuleDetailsInput` via:
//
//          TargetTargetResponderRecipeEffectiveResponderRuleDetailsArgs{...}
type TargetTargetResponderRecipeEffectiveResponderRuleDetailsInput interface {
	pulumi.Input

	ToTargetTargetResponderRecipeEffectiveResponderRuleDetailsOutput() TargetTargetResponderRecipeEffectiveResponderRuleDetailsOutput
	ToTargetTargetResponderRecipeEffectiveResponderRuleDetailsOutputWithContext(context.Context) TargetTargetResponderRecipeEffectiveResponderRuleDetailsOutput
}

type TargetTargetResponderRecipeEffectiveResponderRuleDetailsArgs struct {
	// (Updatable)
	Condition pulumi.StringPtrInput `pulumi:"condition"`
	// (Updatable) Configurations associated with the ResponderRule
	Configurations TargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayInput `pulumi:"configurations"`
	// Identifies state for ResponderRule
	IsEnabled pulumi.BoolPtrInput `pulumi:"isEnabled"`
	// (Updatable) Execution Mode for ResponderRule
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (TargetTargetResponderRecipeEffectiveResponderRuleDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetTargetResponderRecipeEffectiveResponderRuleDetails)(nil)).Elem()
}

func (i TargetTargetResponderRecipeEffectiveResponderRuleDetailsArgs) ToTargetTargetResponderRecipeEffectiveResponderRuleDetailsOutput() TargetTargetResponderRecipeEffectiveResponderRuleDetailsOutput {
	return i.ToTargetTargetResponderRecipeEffectiveResponderRuleDetailsOutputWithContext(context.Background())
}

func (i TargetTargetResponderRecipeEffectiveResponderRuleDetailsArgs) ToTargetTargetResponderRecipeEffectiveResponderRuleDetailsOutputWithContext(ctx context.Context) TargetTargetResponderRecipeEffectiveResponderRuleDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetTargetResponderRecipeEffectiveResponderRuleDetailsOutput)
}

func (i TargetTargetResponderRecipeEffectiveResponderRuleDetailsArgs) ToTargetTargetResponderRecipeEffectiveResponderRuleDetailsPtrOutput() TargetTargetResponderRecipeEffectiveResponderRuleDetailsPtrOutput {
	return i.ToTargetTargetResponderRecipeEffectiveResponderRuleDetailsPtrOutputWithContext(context.Background())
}

func (i TargetTargetResponderRecipeEffectiveResponderRuleDetailsArgs) ToTargetTargetResponderRecipeEffectiveResponderRuleDetailsPtrOutputWithContext(ctx context.Context) TargetTargetResponderRecipeEffectiveResponderRuleDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetTargetResponderRecipeEffectiveResponderRuleDetailsOutput).ToTargetTargetResponderRecipeEffectiveResponderRuleDetailsPtrOutputWithContext(ctx)
}

// TargetTargetResponderRecipeEffectiveResponderRuleDetailsPtrInput is an input type that accepts TargetTargetResponderRecipeEffectiveResponderRuleDetailsArgs, TargetTargetResponderRecipeEffectiveResponderRuleDetailsPtr and TargetTargetResponderRecipeEffectiveResponderRuleDetailsPtrOutput values.
// You can construct a concrete instance of `TargetTargetResponderRecipeEffectiveResponderRuleDetailsPtrInput` via:
//
//          TargetTargetResponderRecipeEffectiveResponderRuleDetailsArgs{...}
//
//  or:
//
//          nil
type TargetTargetResponderRecipeEffectiveResponderRuleDetailsPtrInput interface {
	pulumi.Input

	ToTargetTargetResponderRecipeEffectiveResponderRuleDetailsPtrOutput() TargetTargetResponderRecipeEffectiveResponderRuleDetailsPtrOutput
	ToTargetTargetResponderRecipeEffectiveResponderRuleDetailsPtrOutputWithContext(context.Context) TargetTargetResponderRecipeEffectiveResponderRuleDetailsPtrOutput
}

type targetTargetResponderRecipeEffectiveResponderRuleDetailsPtrType TargetTargetResponderRecipeEffectiveResponderRuleDetailsArgs

func TargetTargetResponderRecipeEffectiveResponderRuleDetailsPtr(v *TargetTargetResponderRecipeEffectiveResponderRuleDetailsArgs) TargetTargetResponderRecipeEffectiveResponderRuleDetailsPtrInput {
	return (*targetTargetResponderRecipeEffectiveResponderRuleDetailsPtrType)(v)
}

func (*targetTargetResponderRecipeEffectiveResponderRuleDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TargetTargetResponderRecipeEffectiveResponderRuleDetails)(nil)).Elem()
}

func (i *targetTargetResponderRecipeEffectiveResponderRuleDetailsPtrType) ToTargetTargetResponderRecipeEffectiveResponderRuleDetailsPtrOutput() TargetTargetResponderRecipeEffectiveResponderRuleDetailsPtrOutput {
	return i.ToTargetTargetResponderRecipeEffectiveResponderRuleDetailsPtrOutputWithContext(context.Background())
}

func (i *targetTargetResponderRecipeEffectiveResponderRuleDetailsPtrType) ToTargetTargetResponderRecipeEffectiveResponderRuleDetailsPtrOutputWithContext(ctx context.Context) TargetTargetResponderRecipeEffectiveResponderRuleDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetTargetResponderRecipeEffectiveResponderRuleDetailsPtrOutput)
}

type TargetTargetResponderRecipeEffectiveResponderRuleDetailsOutput struct{ *pulumi.OutputState }

func (TargetTargetResponderRecipeEffectiveResponderRuleDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetTargetResponderRecipeEffectiveResponderRuleDetails)(nil)).Elem()
}

func (o TargetTargetResponderRecipeEffectiveResponderRuleDetailsOutput) ToTargetTargetResponderRecipeEffectiveResponderRuleDetailsOutput() TargetTargetResponderRecipeEffectiveResponderRuleDetailsOutput {
	return o
}

func (o TargetTargetResponderRecipeEffectiveResponderRuleDetailsOutput) ToTargetTargetResponderRecipeEffectiveResponderRuleDetailsOutputWithContext(ctx context.Context) TargetTargetResponderRecipeEffectiveResponderRuleDetailsOutput {
	return o
}

func (o TargetTargetResponderRecipeEffectiveResponderRuleDetailsOutput) ToTargetTargetResponderRecipeEffectiveResponderRuleDetailsPtrOutput() TargetTargetResponderRecipeEffectiveResponderRuleDetailsPtrOutput {
	return o.ToTargetTargetResponderRecipeEffectiveResponderRuleDetailsPtrOutputWithContext(context.Background())
}

func (o TargetTargetResponderRecipeEffectiveResponderRuleDetailsOutput) ToTargetTargetResponderRecipeEffectiveResponderRuleDetailsPtrOutputWithContext(ctx context.Context) TargetTargetResponderRecipeEffectiveResponderRuleDetailsPtrOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipeEffectiveResponderRuleDetails) *TargetTargetResponderRecipeEffectiveResponderRuleDetails {
		return &v
	}).(TargetTargetResponderRecipeEffectiveResponderRuleDetailsPtrOutput)
}

// (Updatable)
func (o TargetTargetResponderRecipeEffectiveResponderRuleDetailsOutput) Condition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipeEffectiveResponderRuleDetails) *string { return v.Condition }).(pulumi.StringPtrOutput)
}

// (Updatable) Configurations associated with the ResponderRule
func (o TargetTargetResponderRecipeEffectiveResponderRuleDetailsOutput) Configurations() TargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipeEffectiveResponderRuleDetails) []TargetTargetResponderRecipeEffectiveResponderRuleDetailsConfiguration {
		return v.Configurations
	}).(TargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput)
}

// Identifies state for ResponderRule
func (o TargetTargetResponderRecipeEffectiveResponderRuleDetailsOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipeEffectiveResponderRuleDetails) *bool { return v.IsEnabled }).(pulumi.BoolPtrOutput)
}

// (Updatable) Execution Mode for ResponderRule
func (o TargetTargetResponderRecipeEffectiveResponderRuleDetailsOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipeEffectiveResponderRuleDetails) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type TargetTargetResponderRecipeEffectiveResponderRuleDetailsPtrOutput struct{ *pulumi.OutputState }

func (TargetTargetResponderRecipeEffectiveResponderRuleDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TargetTargetResponderRecipeEffectiveResponderRuleDetails)(nil)).Elem()
}

func (o TargetTargetResponderRecipeEffectiveResponderRuleDetailsPtrOutput) ToTargetTargetResponderRecipeEffectiveResponderRuleDetailsPtrOutput() TargetTargetResponderRecipeEffectiveResponderRuleDetailsPtrOutput {
	return o
}

func (o TargetTargetResponderRecipeEffectiveResponderRuleDetailsPtrOutput) ToTargetTargetResponderRecipeEffectiveResponderRuleDetailsPtrOutputWithContext(ctx context.Context) TargetTargetResponderRecipeEffectiveResponderRuleDetailsPtrOutput {
	return o
}

func (o TargetTargetResponderRecipeEffectiveResponderRuleDetailsPtrOutput) Elem() TargetTargetResponderRecipeEffectiveResponderRuleDetailsOutput {
	return o.ApplyT(func(v *TargetTargetResponderRecipeEffectiveResponderRuleDetails) TargetTargetResponderRecipeEffectiveResponderRuleDetails {
		return *v
	}).(TargetTargetResponderRecipeEffectiveResponderRuleDetailsOutput)
}

// (Updatable)
func (o TargetTargetResponderRecipeEffectiveResponderRuleDetailsPtrOutput) Condition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TargetTargetResponderRecipeEffectiveResponderRuleDetails) *string {
		if v == nil {
			return nil
		}
		return v.Condition
	}).(pulumi.StringPtrOutput)
}

// (Updatable) Configurations associated with the ResponderRule
func (o TargetTargetResponderRecipeEffectiveResponderRuleDetailsPtrOutput) Configurations() TargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput {
	return o.ApplyT(func(v *TargetTargetResponderRecipeEffectiveResponderRuleDetails) []TargetTargetResponderRecipeEffectiveResponderRuleDetailsConfiguration {
		if v == nil {
			return nil
		}
		return v.Configurations
	}).(TargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput)
}

// Identifies state for ResponderRule
func (o TargetTargetResponderRecipeEffectiveResponderRuleDetailsPtrOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TargetTargetResponderRecipeEffectiveResponderRuleDetails) *bool {
		if v == nil {
			return nil
		}
		return v.IsEnabled
	}).(pulumi.BoolPtrOutput)
}

// (Updatable) Execution Mode for ResponderRule
func (o TargetTargetResponderRecipeEffectiveResponderRuleDetailsPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TargetTargetResponderRecipeEffectiveResponderRuleDetails) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

type TargetTargetResponderRecipeEffectiveResponderRuleDetailsConfiguration struct {
	// (Updatable) Unique name of the configuration
	ConfigKey *string `pulumi:"configKey"`
	// (Updatable) configuration name
	Name *string `pulumi:"name"`
	// (Updatable) configuration value
	Value *string `pulumi:"value"`
}

// TargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationInput is an input type that accepts TargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArgs and TargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput values.
// You can construct a concrete instance of `TargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationInput` via:
//
//          TargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArgs{...}
type TargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationInput interface {
	pulumi.Input

	ToTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput() TargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput
	ToTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutputWithContext(context.Context) TargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput
}

type TargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArgs struct {
	// (Updatable) Unique name of the configuration
	ConfigKey pulumi.StringPtrInput `pulumi:"configKey"`
	// (Updatable) configuration name
	Name pulumi.StringPtrInput `pulumi:"name"`
	// (Updatable) configuration value
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (TargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetTargetResponderRecipeEffectiveResponderRuleDetailsConfiguration)(nil)).Elem()
}

func (i TargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArgs) ToTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput() TargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput {
	return i.ToTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutputWithContext(context.Background())
}

func (i TargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArgs) ToTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutputWithContext(ctx context.Context) TargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput)
}

// TargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayInput is an input type that accepts TargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArray and TargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput values.
// You can construct a concrete instance of `TargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayInput` via:
//
//          TargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArray{ TargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArgs{...} }
type TargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayInput interface {
	pulumi.Input

	ToTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput() TargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput
	ToTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutputWithContext(context.Context) TargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput
}

type TargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArray []TargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationInput

func (TargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetTargetResponderRecipeEffectiveResponderRuleDetailsConfiguration)(nil)).Elem()
}

func (i TargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArray) ToTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput() TargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput {
	return i.ToTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutputWithContext(context.Background())
}

func (i TargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArray) ToTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutputWithContext(ctx context.Context) TargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput)
}

type TargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput struct{ *pulumi.OutputState }

func (TargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetTargetResponderRecipeEffectiveResponderRuleDetailsConfiguration)(nil)).Elem()
}

func (o TargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput) ToTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput() TargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput {
	return o
}

func (o TargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput) ToTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutputWithContext(ctx context.Context) TargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput {
	return o
}

// (Updatable) Unique name of the configuration
func (o TargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput) ConfigKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipeEffectiveResponderRuleDetailsConfiguration) *string {
		return v.ConfigKey
	}).(pulumi.StringPtrOutput)
}

// (Updatable) configuration name
func (o TargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipeEffectiveResponderRuleDetailsConfiguration) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// (Updatable) configuration value
func (o TargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipeEffectiveResponderRuleDetailsConfiguration) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type TargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput struct{ *pulumi.OutputState }

func (TargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetTargetResponderRecipeEffectiveResponderRuleDetailsConfiguration)(nil)).Elem()
}

func (o TargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput) ToTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput() TargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput {
	return o
}

func (o TargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput) ToTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutputWithContext(ctx context.Context) TargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput {
	return o
}

func (o TargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput) Index(i pulumi.IntInput) TargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TargetTargetResponderRecipeEffectiveResponderRuleDetailsConfiguration {
		return vs[0].([]TargetTargetResponderRecipeEffectiveResponderRuleDetailsConfiguration)[vs[1].(int)]
	}).(TargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput)
}

type TargetTargetResponderRecipeResponderRule struct {
	// (Updatable) compartment associated with condition
	CompartmentId *string `pulumi:"compartmentId"`
	// The target description.
	Description *string `pulumi:"description"`
	// (Updatable) Details of ResponderRule.
	Details TargetTargetResponderRecipeResponderRuleDetails `pulumi:"details"`
	// (Updatable) DetectorTemplate Identifier
	DisplayName *string `pulumi:"displayName"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// List of Policy
	Policies []string `pulumi:"policies"`
	// (Updatable) Identifier for ResponderRule.
	ResponderRuleId string `pulumi:"responderRuleId"`
	// (Updatable) The current state of the DetectorRule.
	State *string `pulumi:"state"`
	// Supported Execution Modes
	SupportedModes []string `pulumi:"supportedModes"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated *string `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated *string `pulumi:"timeUpdated"`
	// Type of Responder
	Type *string `pulumi:"type"`
}

// TargetTargetResponderRecipeResponderRuleInput is an input type that accepts TargetTargetResponderRecipeResponderRuleArgs and TargetTargetResponderRecipeResponderRuleOutput values.
// You can construct a concrete instance of `TargetTargetResponderRecipeResponderRuleInput` via:
//
//          TargetTargetResponderRecipeResponderRuleArgs{...}
type TargetTargetResponderRecipeResponderRuleInput interface {
	pulumi.Input

	ToTargetTargetResponderRecipeResponderRuleOutput() TargetTargetResponderRecipeResponderRuleOutput
	ToTargetTargetResponderRecipeResponderRuleOutputWithContext(context.Context) TargetTargetResponderRecipeResponderRuleOutput
}

type TargetTargetResponderRecipeResponderRuleArgs struct {
	// (Updatable) compartment associated with condition
	CompartmentId pulumi.StringPtrInput `pulumi:"compartmentId"`
	// The target description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// (Updatable) Details of ResponderRule.
	Details TargetTargetResponderRecipeResponderRuleDetailsInput `pulumi:"details"`
	// (Updatable) DetectorTemplate Identifier
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringPtrInput `pulumi:"lifecycleDetails"`
	// List of Policy
	Policies pulumi.StringArrayInput `pulumi:"policies"`
	// (Updatable) Identifier for ResponderRule.
	ResponderRuleId pulumi.StringInput `pulumi:"responderRuleId"`
	// (Updatable) The current state of the DetectorRule.
	State pulumi.StringPtrInput `pulumi:"state"`
	// Supported Execution Modes
	SupportedModes pulumi.StringArrayInput `pulumi:"supportedModes"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated pulumi.StringPtrInput `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated pulumi.StringPtrInput `pulumi:"timeUpdated"`
	// Type of Responder
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (TargetTargetResponderRecipeResponderRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetTargetResponderRecipeResponderRule)(nil)).Elem()
}

func (i TargetTargetResponderRecipeResponderRuleArgs) ToTargetTargetResponderRecipeResponderRuleOutput() TargetTargetResponderRecipeResponderRuleOutput {
	return i.ToTargetTargetResponderRecipeResponderRuleOutputWithContext(context.Background())
}

func (i TargetTargetResponderRecipeResponderRuleArgs) ToTargetTargetResponderRecipeResponderRuleOutputWithContext(ctx context.Context) TargetTargetResponderRecipeResponderRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetTargetResponderRecipeResponderRuleOutput)
}

// TargetTargetResponderRecipeResponderRuleArrayInput is an input type that accepts TargetTargetResponderRecipeResponderRuleArray and TargetTargetResponderRecipeResponderRuleArrayOutput values.
// You can construct a concrete instance of `TargetTargetResponderRecipeResponderRuleArrayInput` via:
//
//          TargetTargetResponderRecipeResponderRuleArray{ TargetTargetResponderRecipeResponderRuleArgs{...} }
type TargetTargetResponderRecipeResponderRuleArrayInput interface {
	pulumi.Input

	ToTargetTargetResponderRecipeResponderRuleArrayOutput() TargetTargetResponderRecipeResponderRuleArrayOutput
	ToTargetTargetResponderRecipeResponderRuleArrayOutputWithContext(context.Context) TargetTargetResponderRecipeResponderRuleArrayOutput
}

type TargetTargetResponderRecipeResponderRuleArray []TargetTargetResponderRecipeResponderRuleInput

func (TargetTargetResponderRecipeResponderRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetTargetResponderRecipeResponderRule)(nil)).Elem()
}

func (i TargetTargetResponderRecipeResponderRuleArray) ToTargetTargetResponderRecipeResponderRuleArrayOutput() TargetTargetResponderRecipeResponderRuleArrayOutput {
	return i.ToTargetTargetResponderRecipeResponderRuleArrayOutputWithContext(context.Background())
}

func (i TargetTargetResponderRecipeResponderRuleArray) ToTargetTargetResponderRecipeResponderRuleArrayOutputWithContext(ctx context.Context) TargetTargetResponderRecipeResponderRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetTargetResponderRecipeResponderRuleArrayOutput)
}

type TargetTargetResponderRecipeResponderRuleOutput struct{ *pulumi.OutputState }

func (TargetTargetResponderRecipeResponderRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetTargetResponderRecipeResponderRule)(nil)).Elem()
}

func (o TargetTargetResponderRecipeResponderRuleOutput) ToTargetTargetResponderRecipeResponderRuleOutput() TargetTargetResponderRecipeResponderRuleOutput {
	return o
}

func (o TargetTargetResponderRecipeResponderRuleOutput) ToTargetTargetResponderRecipeResponderRuleOutputWithContext(ctx context.Context) TargetTargetResponderRecipeResponderRuleOutput {
	return o
}

// (Updatable) compartment associated with condition
func (o TargetTargetResponderRecipeResponderRuleOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipeResponderRule) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

// The target description.
func (o TargetTargetResponderRecipeResponderRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipeResponderRule) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// (Updatable) Details of ResponderRule.
func (o TargetTargetResponderRecipeResponderRuleOutput) Details() TargetTargetResponderRecipeResponderRuleDetailsOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipeResponderRule) TargetTargetResponderRecipeResponderRuleDetails {
		return v.Details
	}).(TargetTargetResponderRecipeResponderRuleDetailsOutput)
}

// (Updatable) DetectorTemplate Identifier
func (o TargetTargetResponderRecipeResponderRuleOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipeResponderRule) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o TargetTargetResponderRecipeResponderRuleOutput) LifecycleDetails() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipeResponderRule) *string { return v.LifecycleDetails }).(pulumi.StringPtrOutput)
}

// List of Policy
func (o TargetTargetResponderRecipeResponderRuleOutput) Policies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipeResponderRule) []string { return v.Policies }).(pulumi.StringArrayOutput)
}

// (Updatable) Identifier for ResponderRule.
func (o TargetTargetResponderRecipeResponderRuleOutput) ResponderRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipeResponderRule) string { return v.ResponderRuleId }).(pulumi.StringOutput)
}

// (Updatable) The current state of the DetectorRule.
func (o TargetTargetResponderRecipeResponderRuleOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipeResponderRule) *string { return v.State }).(pulumi.StringPtrOutput)
}

// Supported Execution Modes
func (o TargetTargetResponderRecipeResponderRuleOutput) SupportedModes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipeResponderRule) []string { return v.SupportedModes }).(pulumi.StringArrayOutput)
}

// The date and time the target was created. Format defined by RFC3339.
func (o TargetTargetResponderRecipeResponderRuleOutput) TimeCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipeResponderRule) *string { return v.TimeCreated }).(pulumi.StringPtrOutput)
}

// The date and time the target was updated. Format defined by RFC3339.
func (o TargetTargetResponderRecipeResponderRuleOutput) TimeUpdated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipeResponderRule) *string { return v.TimeUpdated }).(pulumi.StringPtrOutput)
}

// Type of Responder
func (o TargetTargetResponderRecipeResponderRuleOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipeResponderRule) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type TargetTargetResponderRecipeResponderRuleArrayOutput struct{ *pulumi.OutputState }

func (TargetTargetResponderRecipeResponderRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetTargetResponderRecipeResponderRule)(nil)).Elem()
}

func (o TargetTargetResponderRecipeResponderRuleArrayOutput) ToTargetTargetResponderRecipeResponderRuleArrayOutput() TargetTargetResponderRecipeResponderRuleArrayOutput {
	return o
}

func (o TargetTargetResponderRecipeResponderRuleArrayOutput) ToTargetTargetResponderRecipeResponderRuleArrayOutputWithContext(ctx context.Context) TargetTargetResponderRecipeResponderRuleArrayOutput {
	return o
}

func (o TargetTargetResponderRecipeResponderRuleArrayOutput) Index(i pulumi.IntInput) TargetTargetResponderRecipeResponderRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TargetTargetResponderRecipeResponderRule {
		return vs[0].([]TargetTargetResponderRecipeResponderRule)[vs[1].(int)]
	}).(TargetTargetResponderRecipeResponderRuleOutput)
}

type TargetTargetResponderRecipeResponderRuleDetails struct {
	// (Updatable)
	Condition *string `pulumi:"condition"`
	// (Updatable) Configurations associated with the ResponderRule
	Configurations []TargetTargetResponderRecipeResponderRuleDetailsConfiguration `pulumi:"configurations"`
	// Identifies state for ResponderRule
	IsEnabled *bool `pulumi:"isEnabled"`
	// (Updatable) Execution Mode for ResponderRule
	Mode *string `pulumi:"mode"`
}

// TargetTargetResponderRecipeResponderRuleDetailsInput is an input type that accepts TargetTargetResponderRecipeResponderRuleDetailsArgs and TargetTargetResponderRecipeResponderRuleDetailsOutput values.
// You can construct a concrete instance of `TargetTargetResponderRecipeResponderRuleDetailsInput` via:
//
//          TargetTargetResponderRecipeResponderRuleDetailsArgs{...}
type TargetTargetResponderRecipeResponderRuleDetailsInput interface {
	pulumi.Input

	ToTargetTargetResponderRecipeResponderRuleDetailsOutput() TargetTargetResponderRecipeResponderRuleDetailsOutput
	ToTargetTargetResponderRecipeResponderRuleDetailsOutputWithContext(context.Context) TargetTargetResponderRecipeResponderRuleDetailsOutput
}

type TargetTargetResponderRecipeResponderRuleDetailsArgs struct {
	// (Updatable)
	Condition pulumi.StringPtrInput `pulumi:"condition"`
	// (Updatable) Configurations associated with the ResponderRule
	Configurations TargetTargetResponderRecipeResponderRuleDetailsConfigurationArrayInput `pulumi:"configurations"`
	// Identifies state for ResponderRule
	IsEnabled pulumi.BoolPtrInput `pulumi:"isEnabled"`
	// (Updatable) Execution Mode for ResponderRule
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (TargetTargetResponderRecipeResponderRuleDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetTargetResponderRecipeResponderRuleDetails)(nil)).Elem()
}

func (i TargetTargetResponderRecipeResponderRuleDetailsArgs) ToTargetTargetResponderRecipeResponderRuleDetailsOutput() TargetTargetResponderRecipeResponderRuleDetailsOutput {
	return i.ToTargetTargetResponderRecipeResponderRuleDetailsOutputWithContext(context.Background())
}

func (i TargetTargetResponderRecipeResponderRuleDetailsArgs) ToTargetTargetResponderRecipeResponderRuleDetailsOutputWithContext(ctx context.Context) TargetTargetResponderRecipeResponderRuleDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetTargetResponderRecipeResponderRuleDetailsOutput)
}

type TargetTargetResponderRecipeResponderRuleDetailsOutput struct{ *pulumi.OutputState }

func (TargetTargetResponderRecipeResponderRuleDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetTargetResponderRecipeResponderRuleDetails)(nil)).Elem()
}

func (o TargetTargetResponderRecipeResponderRuleDetailsOutput) ToTargetTargetResponderRecipeResponderRuleDetailsOutput() TargetTargetResponderRecipeResponderRuleDetailsOutput {
	return o
}

func (o TargetTargetResponderRecipeResponderRuleDetailsOutput) ToTargetTargetResponderRecipeResponderRuleDetailsOutputWithContext(ctx context.Context) TargetTargetResponderRecipeResponderRuleDetailsOutput {
	return o
}

// (Updatable)
func (o TargetTargetResponderRecipeResponderRuleDetailsOutput) Condition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipeResponderRuleDetails) *string { return v.Condition }).(pulumi.StringPtrOutput)
}

// (Updatable) Configurations associated with the ResponderRule
func (o TargetTargetResponderRecipeResponderRuleDetailsOutput) Configurations() TargetTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipeResponderRuleDetails) []TargetTargetResponderRecipeResponderRuleDetailsConfiguration {
		return v.Configurations
	}).(TargetTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutput)
}

// Identifies state for ResponderRule
func (o TargetTargetResponderRecipeResponderRuleDetailsOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipeResponderRuleDetails) *bool { return v.IsEnabled }).(pulumi.BoolPtrOutput)
}

// (Updatable) Execution Mode for ResponderRule
func (o TargetTargetResponderRecipeResponderRuleDetailsOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipeResponderRuleDetails) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type TargetTargetResponderRecipeResponderRuleDetailsConfiguration struct {
	// (Updatable) Unique name of the configuration
	ConfigKey string `pulumi:"configKey"`
	// (Updatable) configuration name
	Name string `pulumi:"name"`
	// (Updatable) configuration value
	Value string `pulumi:"value"`
}

// TargetTargetResponderRecipeResponderRuleDetailsConfigurationInput is an input type that accepts TargetTargetResponderRecipeResponderRuleDetailsConfigurationArgs and TargetTargetResponderRecipeResponderRuleDetailsConfigurationOutput values.
// You can construct a concrete instance of `TargetTargetResponderRecipeResponderRuleDetailsConfigurationInput` via:
//
//          TargetTargetResponderRecipeResponderRuleDetailsConfigurationArgs{...}
type TargetTargetResponderRecipeResponderRuleDetailsConfigurationInput interface {
	pulumi.Input

	ToTargetTargetResponderRecipeResponderRuleDetailsConfigurationOutput() TargetTargetResponderRecipeResponderRuleDetailsConfigurationOutput
	ToTargetTargetResponderRecipeResponderRuleDetailsConfigurationOutputWithContext(context.Context) TargetTargetResponderRecipeResponderRuleDetailsConfigurationOutput
}

type TargetTargetResponderRecipeResponderRuleDetailsConfigurationArgs struct {
	// (Updatable) Unique name of the configuration
	ConfigKey pulumi.StringInput `pulumi:"configKey"`
	// (Updatable) configuration name
	Name pulumi.StringInput `pulumi:"name"`
	// (Updatable) configuration value
	Value pulumi.StringInput `pulumi:"value"`
}

func (TargetTargetResponderRecipeResponderRuleDetailsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetTargetResponderRecipeResponderRuleDetailsConfiguration)(nil)).Elem()
}

func (i TargetTargetResponderRecipeResponderRuleDetailsConfigurationArgs) ToTargetTargetResponderRecipeResponderRuleDetailsConfigurationOutput() TargetTargetResponderRecipeResponderRuleDetailsConfigurationOutput {
	return i.ToTargetTargetResponderRecipeResponderRuleDetailsConfigurationOutputWithContext(context.Background())
}

func (i TargetTargetResponderRecipeResponderRuleDetailsConfigurationArgs) ToTargetTargetResponderRecipeResponderRuleDetailsConfigurationOutputWithContext(ctx context.Context) TargetTargetResponderRecipeResponderRuleDetailsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetTargetResponderRecipeResponderRuleDetailsConfigurationOutput)
}

// TargetTargetResponderRecipeResponderRuleDetailsConfigurationArrayInput is an input type that accepts TargetTargetResponderRecipeResponderRuleDetailsConfigurationArray and TargetTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutput values.
// You can construct a concrete instance of `TargetTargetResponderRecipeResponderRuleDetailsConfigurationArrayInput` via:
//
//          TargetTargetResponderRecipeResponderRuleDetailsConfigurationArray{ TargetTargetResponderRecipeResponderRuleDetailsConfigurationArgs{...} }
type TargetTargetResponderRecipeResponderRuleDetailsConfigurationArrayInput interface {
	pulumi.Input

	ToTargetTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutput() TargetTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutput
	ToTargetTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutputWithContext(context.Context) TargetTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutput
}

type TargetTargetResponderRecipeResponderRuleDetailsConfigurationArray []TargetTargetResponderRecipeResponderRuleDetailsConfigurationInput

func (TargetTargetResponderRecipeResponderRuleDetailsConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetTargetResponderRecipeResponderRuleDetailsConfiguration)(nil)).Elem()
}

func (i TargetTargetResponderRecipeResponderRuleDetailsConfigurationArray) ToTargetTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutput() TargetTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutput {
	return i.ToTargetTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutputWithContext(context.Background())
}

func (i TargetTargetResponderRecipeResponderRuleDetailsConfigurationArray) ToTargetTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutputWithContext(ctx context.Context) TargetTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutput)
}

type TargetTargetResponderRecipeResponderRuleDetailsConfigurationOutput struct{ *pulumi.OutputState }

func (TargetTargetResponderRecipeResponderRuleDetailsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetTargetResponderRecipeResponderRuleDetailsConfiguration)(nil)).Elem()
}

func (o TargetTargetResponderRecipeResponderRuleDetailsConfigurationOutput) ToTargetTargetResponderRecipeResponderRuleDetailsConfigurationOutput() TargetTargetResponderRecipeResponderRuleDetailsConfigurationOutput {
	return o
}

func (o TargetTargetResponderRecipeResponderRuleDetailsConfigurationOutput) ToTargetTargetResponderRecipeResponderRuleDetailsConfigurationOutputWithContext(ctx context.Context) TargetTargetResponderRecipeResponderRuleDetailsConfigurationOutput {
	return o
}

// (Updatable) Unique name of the configuration
func (o TargetTargetResponderRecipeResponderRuleDetailsConfigurationOutput) ConfigKey() pulumi.StringOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipeResponderRuleDetailsConfiguration) string { return v.ConfigKey }).(pulumi.StringOutput)
}

// (Updatable) configuration name
func (o TargetTargetResponderRecipeResponderRuleDetailsConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipeResponderRuleDetailsConfiguration) string { return v.Name }).(pulumi.StringOutput)
}

// (Updatable) configuration value
func (o TargetTargetResponderRecipeResponderRuleDetailsConfigurationOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipeResponderRuleDetailsConfiguration) string { return v.Value }).(pulumi.StringOutput)
}

type TargetTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutput struct{ *pulumi.OutputState }

func (TargetTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetTargetResponderRecipeResponderRuleDetailsConfiguration)(nil)).Elem()
}

func (o TargetTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutput) ToTargetTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutput() TargetTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutput {
	return o
}

func (o TargetTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutput) ToTargetTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutputWithContext(ctx context.Context) TargetTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutput {
	return o
}

func (o TargetTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutput) Index(i pulumi.IntInput) TargetTargetResponderRecipeResponderRuleDetailsConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TargetTargetResponderRecipeResponderRuleDetailsConfiguration {
		return vs[0].([]TargetTargetResponderRecipeResponderRuleDetailsConfiguration)[vs[1].(int)]
	}).(TargetTargetResponderRecipeResponderRuleDetailsConfigurationOutput)
}

type GetDataMaskRuleTargetSelected struct {
	// Target selection.
	Kind string `pulumi:"kind"`
	// Types of Targets
	Values []string `pulumi:"values"`
}

// GetDataMaskRuleTargetSelectedInput is an input type that accepts GetDataMaskRuleTargetSelectedArgs and GetDataMaskRuleTargetSelectedOutput values.
// You can construct a concrete instance of `GetDataMaskRuleTargetSelectedInput` via:
//
//          GetDataMaskRuleTargetSelectedArgs{...}
type GetDataMaskRuleTargetSelectedInput interface {
	pulumi.Input

	ToGetDataMaskRuleTargetSelectedOutput() GetDataMaskRuleTargetSelectedOutput
	ToGetDataMaskRuleTargetSelectedOutputWithContext(context.Context) GetDataMaskRuleTargetSelectedOutput
}

type GetDataMaskRuleTargetSelectedArgs struct {
	// Target selection.
	Kind pulumi.StringInput `pulumi:"kind"`
	// Types of Targets
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetDataMaskRuleTargetSelectedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataMaskRuleTargetSelected)(nil)).Elem()
}

func (i GetDataMaskRuleTargetSelectedArgs) ToGetDataMaskRuleTargetSelectedOutput() GetDataMaskRuleTargetSelectedOutput {
	return i.ToGetDataMaskRuleTargetSelectedOutputWithContext(context.Background())
}

func (i GetDataMaskRuleTargetSelectedArgs) ToGetDataMaskRuleTargetSelectedOutputWithContext(ctx context.Context) GetDataMaskRuleTargetSelectedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataMaskRuleTargetSelectedOutput)
}

type GetDataMaskRuleTargetSelectedOutput struct{ *pulumi.OutputState }

func (GetDataMaskRuleTargetSelectedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataMaskRuleTargetSelected)(nil)).Elem()
}

func (o GetDataMaskRuleTargetSelectedOutput) ToGetDataMaskRuleTargetSelectedOutput() GetDataMaskRuleTargetSelectedOutput {
	return o
}

func (o GetDataMaskRuleTargetSelectedOutput) ToGetDataMaskRuleTargetSelectedOutputWithContext(ctx context.Context) GetDataMaskRuleTargetSelectedOutput {
	return o
}

// Target selection.
func (o GetDataMaskRuleTargetSelectedOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataMaskRuleTargetSelected) string { return v.Kind }).(pulumi.StringOutput)
}

// Types of Targets
func (o GetDataMaskRuleTargetSelectedOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDataMaskRuleTargetSelected) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetDataMaskRulesDataMaskRuleCollection struct {
	Items []GetDataMaskRulesDataMaskRuleCollectionItem `pulumi:"items"`
}

// GetDataMaskRulesDataMaskRuleCollectionInput is an input type that accepts GetDataMaskRulesDataMaskRuleCollectionArgs and GetDataMaskRulesDataMaskRuleCollectionOutput values.
// You can construct a concrete instance of `GetDataMaskRulesDataMaskRuleCollectionInput` via:
//
//          GetDataMaskRulesDataMaskRuleCollectionArgs{...}
type GetDataMaskRulesDataMaskRuleCollectionInput interface {
	pulumi.Input

	ToGetDataMaskRulesDataMaskRuleCollectionOutput() GetDataMaskRulesDataMaskRuleCollectionOutput
	ToGetDataMaskRulesDataMaskRuleCollectionOutputWithContext(context.Context) GetDataMaskRulesDataMaskRuleCollectionOutput
}

type GetDataMaskRulesDataMaskRuleCollectionArgs struct {
	Items GetDataMaskRulesDataMaskRuleCollectionItemArrayInput `pulumi:"items"`
}

func (GetDataMaskRulesDataMaskRuleCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataMaskRulesDataMaskRuleCollection)(nil)).Elem()
}

func (i GetDataMaskRulesDataMaskRuleCollectionArgs) ToGetDataMaskRulesDataMaskRuleCollectionOutput() GetDataMaskRulesDataMaskRuleCollectionOutput {
	return i.ToGetDataMaskRulesDataMaskRuleCollectionOutputWithContext(context.Background())
}

func (i GetDataMaskRulesDataMaskRuleCollectionArgs) ToGetDataMaskRulesDataMaskRuleCollectionOutputWithContext(ctx context.Context) GetDataMaskRulesDataMaskRuleCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataMaskRulesDataMaskRuleCollectionOutput)
}

// GetDataMaskRulesDataMaskRuleCollectionArrayInput is an input type that accepts GetDataMaskRulesDataMaskRuleCollectionArray and GetDataMaskRulesDataMaskRuleCollectionArrayOutput values.
// You can construct a concrete instance of `GetDataMaskRulesDataMaskRuleCollectionArrayInput` via:
//
//          GetDataMaskRulesDataMaskRuleCollectionArray{ GetDataMaskRulesDataMaskRuleCollectionArgs{...} }
type GetDataMaskRulesDataMaskRuleCollectionArrayInput interface {
	pulumi.Input

	ToGetDataMaskRulesDataMaskRuleCollectionArrayOutput() GetDataMaskRulesDataMaskRuleCollectionArrayOutput
	ToGetDataMaskRulesDataMaskRuleCollectionArrayOutputWithContext(context.Context) GetDataMaskRulesDataMaskRuleCollectionArrayOutput
}

type GetDataMaskRulesDataMaskRuleCollectionArray []GetDataMaskRulesDataMaskRuleCollectionInput

func (GetDataMaskRulesDataMaskRuleCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataMaskRulesDataMaskRuleCollection)(nil)).Elem()
}

func (i GetDataMaskRulesDataMaskRuleCollectionArray) ToGetDataMaskRulesDataMaskRuleCollectionArrayOutput() GetDataMaskRulesDataMaskRuleCollectionArrayOutput {
	return i.ToGetDataMaskRulesDataMaskRuleCollectionArrayOutputWithContext(context.Background())
}

func (i GetDataMaskRulesDataMaskRuleCollectionArray) ToGetDataMaskRulesDataMaskRuleCollectionArrayOutputWithContext(ctx context.Context) GetDataMaskRulesDataMaskRuleCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataMaskRulesDataMaskRuleCollectionArrayOutput)
}

type GetDataMaskRulesDataMaskRuleCollectionOutput struct{ *pulumi.OutputState }

func (GetDataMaskRulesDataMaskRuleCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataMaskRulesDataMaskRuleCollection)(nil)).Elem()
}

func (o GetDataMaskRulesDataMaskRuleCollectionOutput) ToGetDataMaskRulesDataMaskRuleCollectionOutput() GetDataMaskRulesDataMaskRuleCollectionOutput {
	return o
}

func (o GetDataMaskRulesDataMaskRuleCollectionOutput) ToGetDataMaskRulesDataMaskRuleCollectionOutputWithContext(ctx context.Context) GetDataMaskRulesDataMaskRuleCollectionOutput {
	return o
}

func (o GetDataMaskRulesDataMaskRuleCollectionOutput) Items() GetDataMaskRulesDataMaskRuleCollectionItemArrayOutput {
	return o.ApplyT(func(v GetDataMaskRulesDataMaskRuleCollection) []GetDataMaskRulesDataMaskRuleCollectionItem {
		return v.Items
	}).(GetDataMaskRulesDataMaskRuleCollectionItemArrayOutput)
}

type GetDataMaskRulesDataMaskRuleCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetDataMaskRulesDataMaskRuleCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataMaskRulesDataMaskRuleCollection)(nil)).Elem()
}

func (o GetDataMaskRulesDataMaskRuleCollectionArrayOutput) ToGetDataMaskRulesDataMaskRuleCollectionArrayOutput() GetDataMaskRulesDataMaskRuleCollectionArrayOutput {
	return o
}

func (o GetDataMaskRulesDataMaskRuleCollectionArrayOutput) ToGetDataMaskRulesDataMaskRuleCollectionArrayOutputWithContext(ctx context.Context) GetDataMaskRulesDataMaskRuleCollectionArrayOutput {
	return o
}

func (o GetDataMaskRulesDataMaskRuleCollectionArrayOutput) Index(i pulumi.IntInput) GetDataMaskRulesDataMaskRuleCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataMaskRulesDataMaskRuleCollection {
		return vs[0].([]GetDataMaskRulesDataMaskRuleCollection)[vs[1].(int)]
	}).(GetDataMaskRulesDataMaskRuleCollectionOutput)
}

type GetDataMaskRulesDataMaskRuleCollectionItem struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// Data Mask Categories
	DataMaskCategories []string `pulumi:"dataMaskCategories"`
	// The status of the dataMaskRule.
	DataMaskRuleStatus string `pulumi:"dataMaskRuleStatus"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// The data mask rule description.
	Description string `pulumi:"description"`
	// A filter to return only resources that match the entire display name given.
	DisplayName string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// OCID of iamGroup
	IamGroupId string `pulumi:"iamGroupId"`
	// Unique identifier that is immutable on creation
	Id string `pulumi:"id"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecyleDetails string `pulumi:"lifecyleDetails"`
	// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
	State string `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// Target Selection eg select ALL or select on basis of TargetResourceTypes or TargetIds.
	TargetSelected GetDataMaskRulesDataMaskRuleCollectionItemTargetSelected `pulumi:"targetSelected"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetDataMaskRulesDataMaskRuleCollectionItemInput is an input type that accepts GetDataMaskRulesDataMaskRuleCollectionItemArgs and GetDataMaskRulesDataMaskRuleCollectionItemOutput values.
// You can construct a concrete instance of `GetDataMaskRulesDataMaskRuleCollectionItemInput` via:
//
//          GetDataMaskRulesDataMaskRuleCollectionItemArgs{...}
type GetDataMaskRulesDataMaskRuleCollectionItemInput interface {
	pulumi.Input

	ToGetDataMaskRulesDataMaskRuleCollectionItemOutput() GetDataMaskRulesDataMaskRuleCollectionItemOutput
	ToGetDataMaskRulesDataMaskRuleCollectionItemOutputWithContext(context.Context) GetDataMaskRulesDataMaskRuleCollectionItemOutput
}

type GetDataMaskRulesDataMaskRuleCollectionItemArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Data Mask Categories
	DataMaskCategories pulumi.StringArrayInput `pulumi:"dataMaskCategories"`
	// The status of the dataMaskRule.
	DataMaskRuleStatus pulumi.StringInput `pulumi:"dataMaskRuleStatus"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// The data mask rule description.
	Description pulumi.StringInput `pulumi:"description"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// OCID of iamGroup
	IamGroupId pulumi.StringInput `pulumi:"iamGroupId"`
	// Unique identifier that is immutable on creation
	Id pulumi.StringInput `pulumi:"id"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecyleDetails pulumi.StringInput `pulumi:"lifecyleDetails"`
	// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
	State pulumi.StringInput `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapInput `pulumi:"systemTags"`
	// Target Selection eg select ALL or select on basis of TargetResourceTypes or TargetIds.
	TargetSelected GetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedInput `pulumi:"targetSelected"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetDataMaskRulesDataMaskRuleCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataMaskRulesDataMaskRuleCollectionItem)(nil)).Elem()
}

func (i GetDataMaskRulesDataMaskRuleCollectionItemArgs) ToGetDataMaskRulesDataMaskRuleCollectionItemOutput() GetDataMaskRulesDataMaskRuleCollectionItemOutput {
	return i.ToGetDataMaskRulesDataMaskRuleCollectionItemOutputWithContext(context.Background())
}

func (i GetDataMaskRulesDataMaskRuleCollectionItemArgs) ToGetDataMaskRulesDataMaskRuleCollectionItemOutputWithContext(ctx context.Context) GetDataMaskRulesDataMaskRuleCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataMaskRulesDataMaskRuleCollectionItemOutput)
}

// GetDataMaskRulesDataMaskRuleCollectionItemArrayInput is an input type that accepts GetDataMaskRulesDataMaskRuleCollectionItemArray and GetDataMaskRulesDataMaskRuleCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetDataMaskRulesDataMaskRuleCollectionItemArrayInput` via:
//
//          GetDataMaskRulesDataMaskRuleCollectionItemArray{ GetDataMaskRulesDataMaskRuleCollectionItemArgs{...} }
type GetDataMaskRulesDataMaskRuleCollectionItemArrayInput interface {
	pulumi.Input

	ToGetDataMaskRulesDataMaskRuleCollectionItemArrayOutput() GetDataMaskRulesDataMaskRuleCollectionItemArrayOutput
	ToGetDataMaskRulesDataMaskRuleCollectionItemArrayOutputWithContext(context.Context) GetDataMaskRulesDataMaskRuleCollectionItemArrayOutput
}

type GetDataMaskRulesDataMaskRuleCollectionItemArray []GetDataMaskRulesDataMaskRuleCollectionItemInput

func (GetDataMaskRulesDataMaskRuleCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataMaskRulesDataMaskRuleCollectionItem)(nil)).Elem()
}

func (i GetDataMaskRulesDataMaskRuleCollectionItemArray) ToGetDataMaskRulesDataMaskRuleCollectionItemArrayOutput() GetDataMaskRulesDataMaskRuleCollectionItemArrayOutput {
	return i.ToGetDataMaskRulesDataMaskRuleCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetDataMaskRulesDataMaskRuleCollectionItemArray) ToGetDataMaskRulesDataMaskRuleCollectionItemArrayOutputWithContext(ctx context.Context) GetDataMaskRulesDataMaskRuleCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataMaskRulesDataMaskRuleCollectionItemArrayOutput)
}

type GetDataMaskRulesDataMaskRuleCollectionItemOutput struct{ *pulumi.OutputState }

func (GetDataMaskRulesDataMaskRuleCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataMaskRulesDataMaskRuleCollectionItem)(nil)).Elem()
}

func (o GetDataMaskRulesDataMaskRuleCollectionItemOutput) ToGetDataMaskRulesDataMaskRuleCollectionItemOutput() GetDataMaskRulesDataMaskRuleCollectionItemOutput {
	return o
}

func (o GetDataMaskRulesDataMaskRuleCollectionItemOutput) ToGetDataMaskRulesDataMaskRuleCollectionItemOutputWithContext(ctx context.Context) GetDataMaskRulesDataMaskRuleCollectionItemOutput {
	return o
}

// The ID of the compartment in which to list resources.
func (o GetDataMaskRulesDataMaskRuleCollectionItemOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataMaskRulesDataMaskRuleCollectionItem) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Data Mask Categories
func (o GetDataMaskRulesDataMaskRuleCollectionItemOutput) DataMaskCategories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDataMaskRulesDataMaskRuleCollectionItem) []string { return v.DataMaskCategories }).(pulumi.StringArrayOutput)
}

// The status of the dataMaskRule.
func (o GetDataMaskRulesDataMaskRuleCollectionItemOutput) DataMaskRuleStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataMaskRulesDataMaskRuleCollectionItem) string { return v.DataMaskRuleStatus }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetDataMaskRulesDataMaskRuleCollectionItemOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetDataMaskRulesDataMaskRuleCollectionItem) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// The data mask rule description.
func (o GetDataMaskRulesDataMaskRuleCollectionItemOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataMaskRulesDataMaskRuleCollectionItem) string { return v.Description }).(pulumi.StringOutput)
}

// A filter to return only resources that match the entire display name given.
func (o GetDataMaskRulesDataMaskRuleCollectionItemOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataMaskRulesDataMaskRuleCollectionItem) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetDataMaskRulesDataMaskRuleCollectionItemOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetDataMaskRulesDataMaskRuleCollectionItem) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// OCID of iamGroup
func (o GetDataMaskRulesDataMaskRuleCollectionItemOutput) IamGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataMaskRulesDataMaskRuleCollectionItem) string { return v.IamGroupId }).(pulumi.StringOutput)
}

// Unique identifier that is immutable on creation
func (o GetDataMaskRulesDataMaskRuleCollectionItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataMaskRulesDataMaskRuleCollectionItem) string { return v.Id }).(pulumi.StringOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o GetDataMaskRulesDataMaskRuleCollectionItemOutput) LifecyleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataMaskRulesDataMaskRuleCollectionItem) string { return v.LifecyleDetails }).(pulumi.StringOutput)
}

// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
func (o GetDataMaskRulesDataMaskRuleCollectionItemOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataMaskRulesDataMaskRuleCollectionItem) string { return v.State }).(pulumi.StringOutput)
}

// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o GetDataMaskRulesDataMaskRuleCollectionItemOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetDataMaskRulesDataMaskRuleCollectionItem) map[string]interface{} { return v.SystemTags }).(pulumi.MapOutput)
}

// Target Selection eg select ALL or select on basis of TargetResourceTypes or TargetIds.
func (o GetDataMaskRulesDataMaskRuleCollectionItemOutput) TargetSelected() GetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedOutput {
	return o.ApplyT(func(v GetDataMaskRulesDataMaskRuleCollectionItem) GetDataMaskRulesDataMaskRuleCollectionItemTargetSelected {
		return v.TargetSelected
	}).(GetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedOutput)
}

// The date and time the target was created. Format defined by RFC3339.
func (o GetDataMaskRulesDataMaskRuleCollectionItemOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataMaskRulesDataMaskRuleCollectionItem) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the target was updated. Format defined by RFC3339.
func (o GetDataMaskRulesDataMaskRuleCollectionItemOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataMaskRulesDataMaskRuleCollectionItem) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetDataMaskRulesDataMaskRuleCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetDataMaskRulesDataMaskRuleCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataMaskRulesDataMaskRuleCollectionItem)(nil)).Elem()
}

func (o GetDataMaskRulesDataMaskRuleCollectionItemArrayOutput) ToGetDataMaskRulesDataMaskRuleCollectionItemArrayOutput() GetDataMaskRulesDataMaskRuleCollectionItemArrayOutput {
	return o
}

func (o GetDataMaskRulesDataMaskRuleCollectionItemArrayOutput) ToGetDataMaskRulesDataMaskRuleCollectionItemArrayOutputWithContext(ctx context.Context) GetDataMaskRulesDataMaskRuleCollectionItemArrayOutput {
	return o
}

func (o GetDataMaskRulesDataMaskRuleCollectionItemArrayOutput) Index(i pulumi.IntInput) GetDataMaskRulesDataMaskRuleCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataMaskRulesDataMaskRuleCollectionItem {
		return vs[0].([]GetDataMaskRulesDataMaskRuleCollectionItem)[vs[1].(int)]
	}).(GetDataMaskRulesDataMaskRuleCollectionItemOutput)
}

type GetDataMaskRulesDataMaskRuleCollectionItemTargetSelected struct {
	// Target selection.
	Kind string `pulumi:"kind"`
	// Types of Targets
	Values []string `pulumi:"values"`
}

// GetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedInput is an input type that accepts GetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedArgs and GetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedOutput values.
// You can construct a concrete instance of `GetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedInput` via:
//
//          GetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedArgs{...}
type GetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedInput interface {
	pulumi.Input

	ToGetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedOutput() GetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedOutput
	ToGetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedOutputWithContext(context.Context) GetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedOutput
}

type GetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedArgs struct {
	// Target selection.
	Kind pulumi.StringInput `pulumi:"kind"`
	// Types of Targets
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataMaskRulesDataMaskRuleCollectionItemTargetSelected)(nil)).Elem()
}

func (i GetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedArgs) ToGetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedOutput() GetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedOutput {
	return i.ToGetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedOutputWithContext(context.Background())
}

func (i GetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedArgs) ToGetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedOutputWithContext(ctx context.Context) GetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedOutput)
}

type GetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedOutput struct{ *pulumi.OutputState }

func (GetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataMaskRulesDataMaskRuleCollectionItemTargetSelected)(nil)).Elem()
}

func (o GetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedOutput) ToGetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedOutput() GetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedOutput {
	return o
}

func (o GetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedOutput) ToGetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedOutputWithContext(ctx context.Context) GetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedOutput {
	return o
}

// Target selection.
func (o GetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataMaskRulesDataMaskRuleCollectionItemTargetSelected) string { return v.Kind }).(pulumi.StringOutput)
}

// Types of Targets
func (o GetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDataMaskRulesDataMaskRuleCollectionItemTargetSelected) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetDataMaskRulesFilter struct {
	Name  string `pulumi:"name"`
	Regex *bool  `pulumi:"regex"`
	// Types of Targets
	Values []string `pulumi:"values"`
}

// GetDataMaskRulesFilterInput is an input type that accepts GetDataMaskRulesFilterArgs and GetDataMaskRulesFilterOutput values.
// You can construct a concrete instance of `GetDataMaskRulesFilterInput` via:
//
//          GetDataMaskRulesFilterArgs{...}
type GetDataMaskRulesFilterInput interface {
	pulumi.Input

	ToGetDataMaskRulesFilterOutput() GetDataMaskRulesFilterOutput
	ToGetDataMaskRulesFilterOutputWithContext(context.Context) GetDataMaskRulesFilterOutput
}

type GetDataMaskRulesFilterArgs struct {
	Name  pulumi.StringInput  `pulumi:"name"`
	Regex pulumi.BoolPtrInput `pulumi:"regex"`
	// Types of Targets
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetDataMaskRulesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataMaskRulesFilter)(nil)).Elem()
}

func (i GetDataMaskRulesFilterArgs) ToGetDataMaskRulesFilterOutput() GetDataMaskRulesFilterOutput {
	return i.ToGetDataMaskRulesFilterOutputWithContext(context.Background())
}

func (i GetDataMaskRulesFilterArgs) ToGetDataMaskRulesFilterOutputWithContext(ctx context.Context) GetDataMaskRulesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataMaskRulesFilterOutput)
}

// GetDataMaskRulesFilterArrayInput is an input type that accepts GetDataMaskRulesFilterArray and GetDataMaskRulesFilterArrayOutput values.
// You can construct a concrete instance of `GetDataMaskRulesFilterArrayInput` via:
//
//          GetDataMaskRulesFilterArray{ GetDataMaskRulesFilterArgs{...} }
type GetDataMaskRulesFilterArrayInput interface {
	pulumi.Input

	ToGetDataMaskRulesFilterArrayOutput() GetDataMaskRulesFilterArrayOutput
	ToGetDataMaskRulesFilterArrayOutputWithContext(context.Context) GetDataMaskRulesFilterArrayOutput
}

type GetDataMaskRulesFilterArray []GetDataMaskRulesFilterInput

func (GetDataMaskRulesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataMaskRulesFilter)(nil)).Elem()
}

func (i GetDataMaskRulesFilterArray) ToGetDataMaskRulesFilterArrayOutput() GetDataMaskRulesFilterArrayOutput {
	return i.ToGetDataMaskRulesFilterArrayOutputWithContext(context.Background())
}

func (i GetDataMaskRulesFilterArray) ToGetDataMaskRulesFilterArrayOutputWithContext(ctx context.Context) GetDataMaskRulesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataMaskRulesFilterArrayOutput)
}

type GetDataMaskRulesFilterOutput struct{ *pulumi.OutputState }

func (GetDataMaskRulesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataMaskRulesFilter)(nil)).Elem()
}

func (o GetDataMaskRulesFilterOutput) ToGetDataMaskRulesFilterOutput() GetDataMaskRulesFilterOutput {
	return o
}

func (o GetDataMaskRulesFilterOutput) ToGetDataMaskRulesFilterOutputWithContext(ctx context.Context) GetDataMaskRulesFilterOutput {
	return o
}

func (o GetDataMaskRulesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataMaskRulesFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetDataMaskRulesFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetDataMaskRulesFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

// Types of Targets
func (o GetDataMaskRulesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDataMaskRulesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetDataMaskRulesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetDataMaskRulesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataMaskRulesFilter)(nil)).Elem()
}

func (o GetDataMaskRulesFilterArrayOutput) ToGetDataMaskRulesFilterArrayOutput() GetDataMaskRulesFilterArrayOutput {
	return o
}

func (o GetDataMaskRulesFilterArrayOutput) ToGetDataMaskRulesFilterArrayOutputWithContext(ctx context.Context) GetDataMaskRulesFilterArrayOutput {
	return o
}

func (o GetDataMaskRulesFilterArrayOutput) Index(i pulumi.IntInput) GetDataMaskRulesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataMaskRulesFilter {
		return vs[0].([]GetDataMaskRulesFilter)[vs[1].(int)]
	}).(GetDataMaskRulesFilterOutput)
}

type GetDetectorRecipeDetectorRule struct {
	// List of CandidateResponderRule related to this rule
	CandidateResponderRules []GetDetectorRecipeDetectorRuleCandidateResponderRule `pulumi:"candidateResponderRules"`
	// Description for DetectorRecipeDetectorRule
	Description string `pulumi:"description"`
	// Details of a Detector Rule
	Details GetDetectorRecipeDetectorRuleDetails `pulumi:"details"`
	// detector for the rule
	Detector string `pulumi:"detector"`
	// The unique identifier of the detector rule
	DetectorRuleId string `pulumi:"detectorRuleId"`
	// displayName
	DisplayName string `pulumi:"displayName"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// List of cloudguard managed list types related to this rule
	ManagedListTypes []string `pulumi:"managedListTypes"`
	// Recommendation for DetectorRecipeDetectorRule
	Recommendation string `pulumi:"recommendation"`
	// resource type of the configuration to which the rule is applied
	ResourceType string `pulumi:"resourceType"`
	// service type of the configuration to which the rule is applied
	ServiceType string `pulumi:"serviceType"`
	// The current state of the resource.
	State string `pulumi:"state"`
	// The date and time the detector recipe was created. Format defined by RFC3339.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the detector recipe was updated. Format defined by RFC3339.
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetDetectorRecipeDetectorRuleInput is an input type that accepts GetDetectorRecipeDetectorRuleArgs and GetDetectorRecipeDetectorRuleOutput values.
// You can construct a concrete instance of `GetDetectorRecipeDetectorRuleInput` via:
//
//          GetDetectorRecipeDetectorRuleArgs{...}
type GetDetectorRecipeDetectorRuleInput interface {
	pulumi.Input

	ToGetDetectorRecipeDetectorRuleOutput() GetDetectorRecipeDetectorRuleOutput
	ToGetDetectorRecipeDetectorRuleOutputWithContext(context.Context) GetDetectorRecipeDetectorRuleOutput
}

type GetDetectorRecipeDetectorRuleArgs struct {
	// List of CandidateResponderRule related to this rule
	CandidateResponderRules GetDetectorRecipeDetectorRuleCandidateResponderRuleArrayInput `pulumi:"candidateResponderRules"`
	// Description for DetectorRecipeDetectorRule
	Description pulumi.StringInput `pulumi:"description"`
	// Details of a Detector Rule
	Details GetDetectorRecipeDetectorRuleDetailsInput `pulumi:"details"`
	// detector for the rule
	Detector pulumi.StringInput `pulumi:"detector"`
	// The unique identifier of the detector rule
	DetectorRuleId pulumi.StringInput `pulumi:"detectorRuleId"`
	// displayName
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// List of cloudguard managed list types related to this rule
	ManagedListTypes pulumi.StringArrayInput `pulumi:"managedListTypes"`
	// Recommendation for DetectorRecipeDetectorRule
	Recommendation pulumi.StringInput `pulumi:"recommendation"`
	// resource type of the configuration to which the rule is applied
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// service type of the configuration to which the rule is applied
	ServiceType pulumi.StringInput `pulumi:"serviceType"`
	// The current state of the resource.
	State pulumi.StringInput `pulumi:"state"`
	// The date and time the detector recipe was created. Format defined by RFC3339.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The date and time the detector recipe was updated. Format defined by RFC3339.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetDetectorRecipeDetectorRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipeDetectorRule)(nil)).Elem()
}

func (i GetDetectorRecipeDetectorRuleArgs) ToGetDetectorRecipeDetectorRuleOutput() GetDetectorRecipeDetectorRuleOutput {
	return i.ToGetDetectorRecipeDetectorRuleOutputWithContext(context.Background())
}

func (i GetDetectorRecipeDetectorRuleArgs) ToGetDetectorRecipeDetectorRuleOutputWithContext(ctx context.Context) GetDetectorRecipeDetectorRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipeDetectorRuleOutput)
}

// GetDetectorRecipeDetectorRuleArrayInput is an input type that accepts GetDetectorRecipeDetectorRuleArray and GetDetectorRecipeDetectorRuleArrayOutput values.
// You can construct a concrete instance of `GetDetectorRecipeDetectorRuleArrayInput` via:
//
//          GetDetectorRecipeDetectorRuleArray{ GetDetectorRecipeDetectorRuleArgs{...} }
type GetDetectorRecipeDetectorRuleArrayInput interface {
	pulumi.Input

	ToGetDetectorRecipeDetectorRuleArrayOutput() GetDetectorRecipeDetectorRuleArrayOutput
	ToGetDetectorRecipeDetectorRuleArrayOutputWithContext(context.Context) GetDetectorRecipeDetectorRuleArrayOutput
}

type GetDetectorRecipeDetectorRuleArray []GetDetectorRecipeDetectorRuleInput

func (GetDetectorRecipeDetectorRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipeDetectorRule)(nil)).Elem()
}

func (i GetDetectorRecipeDetectorRuleArray) ToGetDetectorRecipeDetectorRuleArrayOutput() GetDetectorRecipeDetectorRuleArrayOutput {
	return i.ToGetDetectorRecipeDetectorRuleArrayOutputWithContext(context.Background())
}

func (i GetDetectorRecipeDetectorRuleArray) ToGetDetectorRecipeDetectorRuleArrayOutputWithContext(ctx context.Context) GetDetectorRecipeDetectorRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipeDetectorRuleArrayOutput)
}

type GetDetectorRecipeDetectorRuleOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipeDetectorRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipeDetectorRule)(nil)).Elem()
}

func (o GetDetectorRecipeDetectorRuleOutput) ToGetDetectorRecipeDetectorRuleOutput() GetDetectorRecipeDetectorRuleOutput {
	return o
}

func (o GetDetectorRecipeDetectorRuleOutput) ToGetDetectorRecipeDetectorRuleOutputWithContext(ctx context.Context) GetDetectorRecipeDetectorRuleOutput {
	return o
}

// List of CandidateResponderRule related to this rule
func (o GetDetectorRecipeDetectorRuleOutput) CandidateResponderRules() GetDetectorRecipeDetectorRuleCandidateResponderRuleArrayOutput {
	return o.ApplyT(func(v GetDetectorRecipeDetectorRule) []GetDetectorRecipeDetectorRuleCandidateResponderRule {
		return v.CandidateResponderRules
	}).(GetDetectorRecipeDetectorRuleCandidateResponderRuleArrayOutput)
}

// Description for DetectorRecipeDetectorRule
func (o GetDetectorRecipeDetectorRuleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeDetectorRule) string { return v.Description }).(pulumi.StringOutput)
}

// Details of a Detector Rule
func (o GetDetectorRecipeDetectorRuleOutput) Details() GetDetectorRecipeDetectorRuleDetailsOutput {
	return o.ApplyT(func(v GetDetectorRecipeDetectorRule) GetDetectorRecipeDetectorRuleDetails { return v.Details }).(GetDetectorRecipeDetectorRuleDetailsOutput)
}

// detector for the rule
func (o GetDetectorRecipeDetectorRuleOutput) Detector() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeDetectorRule) string { return v.Detector }).(pulumi.StringOutput)
}

// The unique identifier of the detector rule
func (o GetDetectorRecipeDetectorRuleOutput) DetectorRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeDetectorRule) string { return v.DetectorRuleId }).(pulumi.StringOutput)
}

// displayName
func (o GetDetectorRecipeDetectorRuleOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeDetectorRule) string { return v.DisplayName }).(pulumi.StringOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o GetDetectorRecipeDetectorRuleOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeDetectorRule) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// List of cloudguard managed list types related to this rule
func (o GetDetectorRecipeDetectorRuleOutput) ManagedListTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDetectorRecipeDetectorRule) []string { return v.ManagedListTypes }).(pulumi.StringArrayOutput)
}

// Recommendation for DetectorRecipeDetectorRule
func (o GetDetectorRecipeDetectorRuleOutput) Recommendation() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeDetectorRule) string { return v.Recommendation }).(pulumi.StringOutput)
}

// resource type of the configuration to which the rule is applied
func (o GetDetectorRecipeDetectorRuleOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeDetectorRule) string { return v.ResourceType }).(pulumi.StringOutput)
}

// service type of the configuration to which the rule is applied
func (o GetDetectorRecipeDetectorRuleOutput) ServiceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeDetectorRule) string { return v.ServiceType }).(pulumi.StringOutput)
}

// The current state of the resource.
func (o GetDetectorRecipeDetectorRuleOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeDetectorRule) string { return v.State }).(pulumi.StringOutput)
}

// The date and time the detector recipe was created. Format defined by RFC3339.
func (o GetDetectorRecipeDetectorRuleOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeDetectorRule) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the detector recipe was updated. Format defined by RFC3339.
func (o GetDetectorRecipeDetectorRuleOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeDetectorRule) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetDetectorRecipeDetectorRuleArrayOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipeDetectorRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipeDetectorRule)(nil)).Elem()
}

func (o GetDetectorRecipeDetectorRuleArrayOutput) ToGetDetectorRecipeDetectorRuleArrayOutput() GetDetectorRecipeDetectorRuleArrayOutput {
	return o
}

func (o GetDetectorRecipeDetectorRuleArrayOutput) ToGetDetectorRecipeDetectorRuleArrayOutputWithContext(ctx context.Context) GetDetectorRecipeDetectorRuleArrayOutput {
	return o
}

func (o GetDetectorRecipeDetectorRuleArrayOutput) Index(i pulumi.IntInput) GetDetectorRecipeDetectorRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDetectorRecipeDetectorRule {
		return vs[0].([]GetDetectorRecipeDetectorRule)[vs[1].(int)]
	}).(GetDetectorRecipeDetectorRuleOutput)
}

type GetDetectorRecipeDetectorRuleCandidateResponderRule struct {
	// displayName
	DisplayName string `pulumi:"displayName"`
	// Ocid for detector recipe
	Id string `pulumi:"id"`
	// Preferred state
	IsPreferred bool `pulumi:"isPreferred"`
}

// GetDetectorRecipeDetectorRuleCandidateResponderRuleInput is an input type that accepts GetDetectorRecipeDetectorRuleCandidateResponderRuleArgs and GetDetectorRecipeDetectorRuleCandidateResponderRuleOutput values.
// You can construct a concrete instance of `GetDetectorRecipeDetectorRuleCandidateResponderRuleInput` via:
//
//          GetDetectorRecipeDetectorRuleCandidateResponderRuleArgs{...}
type GetDetectorRecipeDetectorRuleCandidateResponderRuleInput interface {
	pulumi.Input

	ToGetDetectorRecipeDetectorRuleCandidateResponderRuleOutput() GetDetectorRecipeDetectorRuleCandidateResponderRuleOutput
	ToGetDetectorRecipeDetectorRuleCandidateResponderRuleOutputWithContext(context.Context) GetDetectorRecipeDetectorRuleCandidateResponderRuleOutput
}

type GetDetectorRecipeDetectorRuleCandidateResponderRuleArgs struct {
	// displayName
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Ocid for detector recipe
	Id pulumi.StringInput `pulumi:"id"`
	// Preferred state
	IsPreferred pulumi.BoolInput `pulumi:"isPreferred"`
}

func (GetDetectorRecipeDetectorRuleCandidateResponderRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipeDetectorRuleCandidateResponderRule)(nil)).Elem()
}

func (i GetDetectorRecipeDetectorRuleCandidateResponderRuleArgs) ToGetDetectorRecipeDetectorRuleCandidateResponderRuleOutput() GetDetectorRecipeDetectorRuleCandidateResponderRuleOutput {
	return i.ToGetDetectorRecipeDetectorRuleCandidateResponderRuleOutputWithContext(context.Background())
}

func (i GetDetectorRecipeDetectorRuleCandidateResponderRuleArgs) ToGetDetectorRecipeDetectorRuleCandidateResponderRuleOutputWithContext(ctx context.Context) GetDetectorRecipeDetectorRuleCandidateResponderRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipeDetectorRuleCandidateResponderRuleOutput)
}

// GetDetectorRecipeDetectorRuleCandidateResponderRuleArrayInput is an input type that accepts GetDetectorRecipeDetectorRuleCandidateResponderRuleArray and GetDetectorRecipeDetectorRuleCandidateResponderRuleArrayOutput values.
// You can construct a concrete instance of `GetDetectorRecipeDetectorRuleCandidateResponderRuleArrayInput` via:
//
//          GetDetectorRecipeDetectorRuleCandidateResponderRuleArray{ GetDetectorRecipeDetectorRuleCandidateResponderRuleArgs{...} }
type GetDetectorRecipeDetectorRuleCandidateResponderRuleArrayInput interface {
	pulumi.Input

	ToGetDetectorRecipeDetectorRuleCandidateResponderRuleArrayOutput() GetDetectorRecipeDetectorRuleCandidateResponderRuleArrayOutput
	ToGetDetectorRecipeDetectorRuleCandidateResponderRuleArrayOutputWithContext(context.Context) GetDetectorRecipeDetectorRuleCandidateResponderRuleArrayOutput
}

type GetDetectorRecipeDetectorRuleCandidateResponderRuleArray []GetDetectorRecipeDetectorRuleCandidateResponderRuleInput

func (GetDetectorRecipeDetectorRuleCandidateResponderRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipeDetectorRuleCandidateResponderRule)(nil)).Elem()
}

func (i GetDetectorRecipeDetectorRuleCandidateResponderRuleArray) ToGetDetectorRecipeDetectorRuleCandidateResponderRuleArrayOutput() GetDetectorRecipeDetectorRuleCandidateResponderRuleArrayOutput {
	return i.ToGetDetectorRecipeDetectorRuleCandidateResponderRuleArrayOutputWithContext(context.Background())
}

func (i GetDetectorRecipeDetectorRuleCandidateResponderRuleArray) ToGetDetectorRecipeDetectorRuleCandidateResponderRuleArrayOutputWithContext(ctx context.Context) GetDetectorRecipeDetectorRuleCandidateResponderRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipeDetectorRuleCandidateResponderRuleArrayOutput)
}

type GetDetectorRecipeDetectorRuleCandidateResponderRuleOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipeDetectorRuleCandidateResponderRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipeDetectorRuleCandidateResponderRule)(nil)).Elem()
}

func (o GetDetectorRecipeDetectorRuleCandidateResponderRuleOutput) ToGetDetectorRecipeDetectorRuleCandidateResponderRuleOutput() GetDetectorRecipeDetectorRuleCandidateResponderRuleOutput {
	return o
}

func (o GetDetectorRecipeDetectorRuleCandidateResponderRuleOutput) ToGetDetectorRecipeDetectorRuleCandidateResponderRuleOutputWithContext(ctx context.Context) GetDetectorRecipeDetectorRuleCandidateResponderRuleOutput {
	return o
}

// displayName
func (o GetDetectorRecipeDetectorRuleCandidateResponderRuleOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeDetectorRuleCandidateResponderRule) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Ocid for detector recipe
func (o GetDetectorRecipeDetectorRuleCandidateResponderRuleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeDetectorRuleCandidateResponderRule) string { return v.Id }).(pulumi.StringOutput)
}

// Preferred state
func (o GetDetectorRecipeDetectorRuleCandidateResponderRuleOutput) IsPreferred() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDetectorRecipeDetectorRuleCandidateResponderRule) bool { return v.IsPreferred }).(pulumi.BoolOutput)
}

type GetDetectorRecipeDetectorRuleCandidateResponderRuleArrayOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipeDetectorRuleCandidateResponderRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipeDetectorRuleCandidateResponderRule)(nil)).Elem()
}

func (o GetDetectorRecipeDetectorRuleCandidateResponderRuleArrayOutput) ToGetDetectorRecipeDetectorRuleCandidateResponderRuleArrayOutput() GetDetectorRecipeDetectorRuleCandidateResponderRuleArrayOutput {
	return o
}

func (o GetDetectorRecipeDetectorRuleCandidateResponderRuleArrayOutput) ToGetDetectorRecipeDetectorRuleCandidateResponderRuleArrayOutputWithContext(ctx context.Context) GetDetectorRecipeDetectorRuleCandidateResponderRuleArrayOutput {
	return o
}

func (o GetDetectorRecipeDetectorRuleCandidateResponderRuleArrayOutput) Index(i pulumi.IntInput) GetDetectorRecipeDetectorRuleCandidateResponderRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDetectorRecipeDetectorRuleCandidateResponderRule {
		return vs[0].([]GetDetectorRecipeDetectorRuleCandidateResponderRule)[vs[1].(int)]
	}).(GetDetectorRecipeDetectorRuleCandidateResponderRuleOutput)
}

type GetDetectorRecipeDetectorRuleDetails struct {
	Condition string `pulumi:"condition"`
	// Configuration details
	Configurations []GetDetectorRecipeDetectorRuleDetailsConfiguration `pulumi:"configurations"`
	// configuration allowed or not
	IsConfigurationAllowed bool `pulumi:"isConfigurationAllowed"`
	// Enables the control
	IsEnabled bool `pulumi:"isEnabled"`
	// user defined labels for a detector rule
	Labels []string `pulumi:"labels"`
	// The Risk Level
	RiskLevel string `pulumi:"riskLevel"`
}

// GetDetectorRecipeDetectorRuleDetailsInput is an input type that accepts GetDetectorRecipeDetectorRuleDetailsArgs and GetDetectorRecipeDetectorRuleDetailsOutput values.
// You can construct a concrete instance of `GetDetectorRecipeDetectorRuleDetailsInput` via:
//
//          GetDetectorRecipeDetectorRuleDetailsArgs{...}
type GetDetectorRecipeDetectorRuleDetailsInput interface {
	pulumi.Input

	ToGetDetectorRecipeDetectorRuleDetailsOutput() GetDetectorRecipeDetectorRuleDetailsOutput
	ToGetDetectorRecipeDetectorRuleDetailsOutputWithContext(context.Context) GetDetectorRecipeDetectorRuleDetailsOutput
}

type GetDetectorRecipeDetectorRuleDetailsArgs struct {
	Condition pulumi.StringInput `pulumi:"condition"`
	// Configuration details
	Configurations GetDetectorRecipeDetectorRuleDetailsConfigurationArrayInput `pulumi:"configurations"`
	// configuration allowed or not
	IsConfigurationAllowed pulumi.BoolInput `pulumi:"isConfigurationAllowed"`
	// Enables the control
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// user defined labels for a detector rule
	Labels pulumi.StringArrayInput `pulumi:"labels"`
	// The Risk Level
	RiskLevel pulumi.StringInput `pulumi:"riskLevel"`
}

func (GetDetectorRecipeDetectorRuleDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipeDetectorRuleDetails)(nil)).Elem()
}

func (i GetDetectorRecipeDetectorRuleDetailsArgs) ToGetDetectorRecipeDetectorRuleDetailsOutput() GetDetectorRecipeDetectorRuleDetailsOutput {
	return i.ToGetDetectorRecipeDetectorRuleDetailsOutputWithContext(context.Background())
}

func (i GetDetectorRecipeDetectorRuleDetailsArgs) ToGetDetectorRecipeDetectorRuleDetailsOutputWithContext(ctx context.Context) GetDetectorRecipeDetectorRuleDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipeDetectorRuleDetailsOutput)
}

type GetDetectorRecipeDetectorRuleDetailsOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipeDetectorRuleDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipeDetectorRuleDetails)(nil)).Elem()
}

func (o GetDetectorRecipeDetectorRuleDetailsOutput) ToGetDetectorRecipeDetectorRuleDetailsOutput() GetDetectorRecipeDetectorRuleDetailsOutput {
	return o
}

func (o GetDetectorRecipeDetectorRuleDetailsOutput) ToGetDetectorRecipeDetectorRuleDetailsOutputWithContext(ctx context.Context) GetDetectorRecipeDetectorRuleDetailsOutput {
	return o
}

func (o GetDetectorRecipeDetectorRuleDetailsOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeDetectorRuleDetails) string { return v.Condition }).(pulumi.StringOutput)
}

// Configuration details
func (o GetDetectorRecipeDetectorRuleDetailsOutput) Configurations() GetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput {
	return o.ApplyT(func(v GetDetectorRecipeDetectorRuleDetails) []GetDetectorRecipeDetectorRuleDetailsConfiguration {
		return v.Configurations
	}).(GetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput)
}

// configuration allowed or not
func (o GetDetectorRecipeDetectorRuleDetailsOutput) IsConfigurationAllowed() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDetectorRecipeDetectorRuleDetails) bool { return v.IsConfigurationAllowed }).(pulumi.BoolOutput)
}

// Enables the control
func (o GetDetectorRecipeDetectorRuleDetailsOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDetectorRecipeDetectorRuleDetails) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// user defined labels for a detector rule
func (o GetDetectorRecipeDetectorRuleDetailsOutput) Labels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDetectorRecipeDetectorRuleDetails) []string { return v.Labels }).(pulumi.StringArrayOutput)
}

// The Risk Level
func (o GetDetectorRecipeDetectorRuleDetailsOutput) RiskLevel() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeDetectorRuleDetails) string { return v.RiskLevel }).(pulumi.StringOutput)
}

type GetDetectorRecipeDetectorRuleDetailsConfiguration struct {
	// Unique name of the configuration
	ConfigKey string `pulumi:"configKey"`
	// configuration data type
	DataType string `pulumi:"dataType"`
	// configuration name
	Name string `pulumi:"name"`
	// configuration value
	Value string `pulumi:"value"`
	// List of configuration values
	Values []GetDetectorRecipeDetectorRuleDetailsConfigurationValue `pulumi:"values"`
}

// GetDetectorRecipeDetectorRuleDetailsConfigurationInput is an input type that accepts GetDetectorRecipeDetectorRuleDetailsConfigurationArgs and GetDetectorRecipeDetectorRuleDetailsConfigurationOutput values.
// You can construct a concrete instance of `GetDetectorRecipeDetectorRuleDetailsConfigurationInput` via:
//
//          GetDetectorRecipeDetectorRuleDetailsConfigurationArgs{...}
type GetDetectorRecipeDetectorRuleDetailsConfigurationInput interface {
	pulumi.Input

	ToGetDetectorRecipeDetectorRuleDetailsConfigurationOutput() GetDetectorRecipeDetectorRuleDetailsConfigurationOutput
	ToGetDetectorRecipeDetectorRuleDetailsConfigurationOutputWithContext(context.Context) GetDetectorRecipeDetectorRuleDetailsConfigurationOutput
}

type GetDetectorRecipeDetectorRuleDetailsConfigurationArgs struct {
	// Unique name of the configuration
	ConfigKey pulumi.StringInput `pulumi:"configKey"`
	// configuration data type
	DataType pulumi.StringInput `pulumi:"dataType"`
	// configuration name
	Name pulumi.StringInput `pulumi:"name"`
	// configuration value
	Value pulumi.StringInput `pulumi:"value"`
	// List of configuration values
	Values GetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayInput `pulumi:"values"`
}

func (GetDetectorRecipeDetectorRuleDetailsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipeDetectorRuleDetailsConfiguration)(nil)).Elem()
}

func (i GetDetectorRecipeDetectorRuleDetailsConfigurationArgs) ToGetDetectorRecipeDetectorRuleDetailsConfigurationOutput() GetDetectorRecipeDetectorRuleDetailsConfigurationOutput {
	return i.ToGetDetectorRecipeDetectorRuleDetailsConfigurationOutputWithContext(context.Background())
}

func (i GetDetectorRecipeDetectorRuleDetailsConfigurationArgs) ToGetDetectorRecipeDetectorRuleDetailsConfigurationOutputWithContext(ctx context.Context) GetDetectorRecipeDetectorRuleDetailsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipeDetectorRuleDetailsConfigurationOutput)
}

// GetDetectorRecipeDetectorRuleDetailsConfigurationArrayInput is an input type that accepts GetDetectorRecipeDetectorRuleDetailsConfigurationArray and GetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput values.
// You can construct a concrete instance of `GetDetectorRecipeDetectorRuleDetailsConfigurationArrayInput` via:
//
//          GetDetectorRecipeDetectorRuleDetailsConfigurationArray{ GetDetectorRecipeDetectorRuleDetailsConfigurationArgs{...} }
type GetDetectorRecipeDetectorRuleDetailsConfigurationArrayInput interface {
	pulumi.Input

	ToGetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput() GetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput
	ToGetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutputWithContext(context.Context) GetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput
}

type GetDetectorRecipeDetectorRuleDetailsConfigurationArray []GetDetectorRecipeDetectorRuleDetailsConfigurationInput

func (GetDetectorRecipeDetectorRuleDetailsConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipeDetectorRuleDetailsConfiguration)(nil)).Elem()
}

func (i GetDetectorRecipeDetectorRuleDetailsConfigurationArray) ToGetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput() GetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput {
	return i.ToGetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutputWithContext(context.Background())
}

func (i GetDetectorRecipeDetectorRuleDetailsConfigurationArray) ToGetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutputWithContext(ctx context.Context) GetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput)
}

type GetDetectorRecipeDetectorRuleDetailsConfigurationOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipeDetectorRuleDetailsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipeDetectorRuleDetailsConfiguration)(nil)).Elem()
}

func (o GetDetectorRecipeDetectorRuleDetailsConfigurationOutput) ToGetDetectorRecipeDetectorRuleDetailsConfigurationOutput() GetDetectorRecipeDetectorRuleDetailsConfigurationOutput {
	return o
}

func (o GetDetectorRecipeDetectorRuleDetailsConfigurationOutput) ToGetDetectorRecipeDetectorRuleDetailsConfigurationOutputWithContext(ctx context.Context) GetDetectorRecipeDetectorRuleDetailsConfigurationOutput {
	return o
}

// Unique name of the configuration
func (o GetDetectorRecipeDetectorRuleDetailsConfigurationOutput) ConfigKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeDetectorRuleDetailsConfiguration) string { return v.ConfigKey }).(pulumi.StringOutput)
}

// configuration data type
func (o GetDetectorRecipeDetectorRuleDetailsConfigurationOutput) DataType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeDetectorRuleDetailsConfiguration) string { return v.DataType }).(pulumi.StringOutput)
}

// configuration name
func (o GetDetectorRecipeDetectorRuleDetailsConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeDetectorRuleDetailsConfiguration) string { return v.Name }).(pulumi.StringOutput)
}

// configuration value
func (o GetDetectorRecipeDetectorRuleDetailsConfigurationOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeDetectorRuleDetailsConfiguration) string { return v.Value }).(pulumi.StringOutput)
}

// List of configuration values
func (o GetDetectorRecipeDetectorRuleDetailsConfigurationOutput) Values() GetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput {
	return o.ApplyT(func(v GetDetectorRecipeDetectorRuleDetailsConfiguration) []GetDetectorRecipeDetectorRuleDetailsConfigurationValue {
		return v.Values
	}).(GetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput)
}

type GetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipeDetectorRuleDetailsConfiguration)(nil)).Elem()
}

func (o GetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput) ToGetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput() GetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput {
	return o
}

func (o GetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput) ToGetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutputWithContext(ctx context.Context) GetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput {
	return o
}

func (o GetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput) Index(i pulumi.IntInput) GetDetectorRecipeDetectorRuleDetailsConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDetectorRecipeDetectorRuleDetailsConfiguration {
		return vs[0].([]GetDetectorRecipeDetectorRuleDetailsConfiguration)[vs[1].(int)]
	}).(GetDetectorRecipeDetectorRuleDetailsConfigurationOutput)
}

type GetDetectorRecipeDetectorRuleDetailsConfigurationValue struct {
	// configuration list item type, either CUSTOM or MANAGED
	ListType string `pulumi:"listType"`
	// type of the managed list
	ManagedListType string `pulumi:"managedListType"`
	// configuration value
	Value string `pulumi:"value"`
}

// GetDetectorRecipeDetectorRuleDetailsConfigurationValueInput is an input type that accepts GetDetectorRecipeDetectorRuleDetailsConfigurationValueArgs and GetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput values.
// You can construct a concrete instance of `GetDetectorRecipeDetectorRuleDetailsConfigurationValueInput` via:
//
//          GetDetectorRecipeDetectorRuleDetailsConfigurationValueArgs{...}
type GetDetectorRecipeDetectorRuleDetailsConfigurationValueInput interface {
	pulumi.Input

	ToGetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput() GetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput
	ToGetDetectorRecipeDetectorRuleDetailsConfigurationValueOutputWithContext(context.Context) GetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput
}

type GetDetectorRecipeDetectorRuleDetailsConfigurationValueArgs struct {
	// configuration list item type, either CUSTOM or MANAGED
	ListType pulumi.StringInput `pulumi:"listType"`
	// type of the managed list
	ManagedListType pulumi.StringInput `pulumi:"managedListType"`
	// configuration value
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetDetectorRecipeDetectorRuleDetailsConfigurationValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipeDetectorRuleDetailsConfigurationValue)(nil)).Elem()
}

func (i GetDetectorRecipeDetectorRuleDetailsConfigurationValueArgs) ToGetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput() GetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput {
	return i.ToGetDetectorRecipeDetectorRuleDetailsConfigurationValueOutputWithContext(context.Background())
}

func (i GetDetectorRecipeDetectorRuleDetailsConfigurationValueArgs) ToGetDetectorRecipeDetectorRuleDetailsConfigurationValueOutputWithContext(ctx context.Context) GetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput)
}

// GetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayInput is an input type that accepts GetDetectorRecipeDetectorRuleDetailsConfigurationValueArray and GetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput values.
// You can construct a concrete instance of `GetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayInput` via:
//
//          GetDetectorRecipeDetectorRuleDetailsConfigurationValueArray{ GetDetectorRecipeDetectorRuleDetailsConfigurationValueArgs{...} }
type GetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayInput interface {
	pulumi.Input

	ToGetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput() GetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput
	ToGetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutputWithContext(context.Context) GetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput
}

type GetDetectorRecipeDetectorRuleDetailsConfigurationValueArray []GetDetectorRecipeDetectorRuleDetailsConfigurationValueInput

func (GetDetectorRecipeDetectorRuleDetailsConfigurationValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipeDetectorRuleDetailsConfigurationValue)(nil)).Elem()
}

func (i GetDetectorRecipeDetectorRuleDetailsConfigurationValueArray) ToGetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput() GetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput {
	return i.ToGetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutputWithContext(context.Background())
}

func (i GetDetectorRecipeDetectorRuleDetailsConfigurationValueArray) ToGetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutputWithContext(ctx context.Context) GetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput)
}

type GetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipeDetectorRuleDetailsConfigurationValue)(nil)).Elem()
}

func (o GetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput) ToGetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput() GetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput {
	return o
}

func (o GetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput) ToGetDetectorRecipeDetectorRuleDetailsConfigurationValueOutputWithContext(ctx context.Context) GetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput {
	return o
}

// configuration list item type, either CUSTOM or MANAGED
func (o GetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput) ListType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeDetectorRuleDetailsConfigurationValue) string { return v.ListType }).(pulumi.StringOutput)
}

// type of the managed list
func (o GetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput) ManagedListType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeDetectorRuleDetailsConfigurationValue) string { return v.ManagedListType }).(pulumi.StringOutput)
}

// configuration value
func (o GetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeDetectorRuleDetailsConfigurationValue) string { return v.Value }).(pulumi.StringOutput)
}

type GetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipeDetectorRuleDetailsConfigurationValue)(nil)).Elem()
}

func (o GetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput) ToGetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput() GetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput {
	return o
}

func (o GetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput) ToGetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutputWithContext(ctx context.Context) GetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput {
	return o
}

func (o GetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput) Index(i pulumi.IntInput) GetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDetectorRecipeDetectorRuleDetailsConfigurationValue {
		return vs[0].([]GetDetectorRecipeDetectorRuleDetailsConfigurationValue)[vs[1].(int)]
	}).(GetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput)
}

type GetDetectorRecipeEffectiveDetectorRule struct {
	// List of CandidateResponderRule related to this rule
	CandidateResponderRules []GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRule `pulumi:"candidateResponderRules"`
	// Description for DetectorRecipeDetectorRule
	Description string `pulumi:"description"`
	// Details of a Detector Rule
	Details GetDetectorRecipeEffectiveDetectorRuleDetails `pulumi:"details"`
	// detector for the rule
	Detector string `pulumi:"detector"`
	// The unique identifier of the detector rule
	DetectorRuleId string `pulumi:"detectorRuleId"`
	// displayName
	DisplayName string `pulumi:"displayName"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// List of cloudguard managed list types related to this rule
	ManagedListTypes []string `pulumi:"managedListTypes"`
	// Recommendation for DetectorRecipeDetectorRule
	Recommendation string `pulumi:"recommendation"`
	// resource type of the configuration to which the rule is applied
	ResourceType string `pulumi:"resourceType"`
	// service type of the configuration to which the rule is applied
	ServiceType string `pulumi:"serviceType"`
	// The current state of the resource.
	State string `pulumi:"state"`
	// The date and time the detector recipe was created. Format defined by RFC3339.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the detector recipe was updated. Format defined by RFC3339.
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetDetectorRecipeEffectiveDetectorRuleInput is an input type that accepts GetDetectorRecipeEffectiveDetectorRuleArgs and GetDetectorRecipeEffectiveDetectorRuleOutput values.
// You can construct a concrete instance of `GetDetectorRecipeEffectiveDetectorRuleInput` via:
//
//          GetDetectorRecipeEffectiveDetectorRuleArgs{...}
type GetDetectorRecipeEffectiveDetectorRuleInput interface {
	pulumi.Input

	ToGetDetectorRecipeEffectiveDetectorRuleOutput() GetDetectorRecipeEffectiveDetectorRuleOutput
	ToGetDetectorRecipeEffectiveDetectorRuleOutputWithContext(context.Context) GetDetectorRecipeEffectiveDetectorRuleOutput
}

type GetDetectorRecipeEffectiveDetectorRuleArgs struct {
	// List of CandidateResponderRule related to this rule
	CandidateResponderRules GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayInput `pulumi:"candidateResponderRules"`
	// Description for DetectorRecipeDetectorRule
	Description pulumi.StringInput `pulumi:"description"`
	// Details of a Detector Rule
	Details GetDetectorRecipeEffectiveDetectorRuleDetailsInput `pulumi:"details"`
	// detector for the rule
	Detector pulumi.StringInput `pulumi:"detector"`
	// The unique identifier of the detector rule
	DetectorRuleId pulumi.StringInput `pulumi:"detectorRuleId"`
	// displayName
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// List of cloudguard managed list types related to this rule
	ManagedListTypes pulumi.StringArrayInput `pulumi:"managedListTypes"`
	// Recommendation for DetectorRecipeDetectorRule
	Recommendation pulumi.StringInput `pulumi:"recommendation"`
	// resource type of the configuration to which the rule is applied
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// service type of the configuration to which the rule is applied
	ServiceType pulumi.StringInput `pulumi:"serviceType"`
	// The current state of the resource.
	State pulumi.StringInput `pulumi:"state"`
	// The date and time the detector recipe was created. Format defined by RFC3339.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The date and time the detector recipe was updated. Format defined by RFC3339.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetDetectorRecipeEffectiveDetectorRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipeEffectiveDetectorRule)(nil)).Elem()
}

func (i GetDetectorRecipeEffectiveDetectorRuleArgs) ToGetDetectorRecipeEffectiveDetectorRuleOutput() GetDetectorRecipeEffectiveDetectorRuleOutput {
	return i.ToGetDetectorRecipeEffectiveDetectorRuleOutputWithContext(context.Background())
}

func (i GetDetectorRecipeEffectiveDetectorRuleArgs) ToGetDetectorRecipeEffectiveDetectorRuleOutputWithContext(ctx context.Context) GetDetectorRecipeEffectiveDetectorRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipeEffectiveDetectorRuleOutput)
}

// GetDetectorRecipeEffectiveDetectorRuleArrayInput is an input type that accepts GetDetectorRecipeEffectiveDetectorRuleArray and GetDetectorRecipeEffectiveDetectorRuleArrayOutput values.
// You can construct a concrete instance of `GetDetectorRecipeEffectiveDetectorRuleArrayInput` via:
//
//          GetDetectorRecipeEffectiveDetectorRuleArray{ GetDetectorRecipeEffectiveDetectorRuleArgs{...} }
type GetDetectorRecipeEffectiveDetectorRuleArrayInput interface {
	pulumi.Input

	ToGetDetectorRecipeEffectiveDetectorRuleArrayOutput() GetDetectorRecipeEffectiveDetectorRuleArrayOutput
	ToGetDetectorRecipeEffectiveDetectorRuleArrayOutputWithContext(context.Context) GetDetectorRecipeEffectiveDetectorRuleArrayOutput
}

type GetDetectorRecipeEffectiveDetectorRuleArray []GetDetectorRecipeEffectiveDetectorRuleInput

func (GetDetectorRecipeEffectiveDetectorRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipeEffectiveDetectorRule)(nil)).Elem()
}

func (i GetDetectorRecipeEffectiveDetectorRuleArray) ToGetDetectorRecipeEffectiveDetectorRuleArrayOutput() GetDetectorRecipeEffectiveDetectorRuleArrayOutput {
	return i.ToGetDetectorRecipeEffectiveDetectorRuleArrayOutputWithContext(context.Background())
}

func (i GetDetectorRecipeEffectiveDetectorRuleArray) ToGetDetectorRecipeEffectiveDetectorRuleArrayOutputWithContext(ctx context.Context) GetDetectorRecipeEffectiveDetectorRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipeEffectiveDetectorRuleArrayOutput)
}

type GetDetectorRecipeEffectiveDetectorRuleOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipeEffectiveDetectorRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipeEffectiveDetectorRule)(nil)).Elem()
}

func (o GetDetectorRecipeEffectiveDetectorRuleOutput) ToGetDetectorRecipeEffectiveDetectorRuleOutput() GetDetectorRecipeEffectiveDetectorRuleOutput {
	return o
}

func (o GetDetectorRecipeEffectiveDetectorRuleOutput) ToGetDetectorRecipeEffectiveDetectorRuleOutputWithContext(ctx context.Context) GetDetectorRecipeEffectiveDetectorRuleOutput {
	return o
}

// List of CandidateResponderRule related to this rule
func (o GetDetectorRecipeEffectiveDetectorRuleOutput) CandidateResponderRules() GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutput {
	return o.ApplyT(func(v GetDetectorRecipeEffectiveDetectorRule) []GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRule {
		return v.CandidateResponderRules
	}).(GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutput)
}

// Description for DetectorRecipeDetectorRule
func (o GetDetectorRecipeEffectiveDetectorRuleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeEffectiveDetectorRule) string { return v.Description }).(pulumi.StringOutput)
}

// Details of a Detector Rule
func (o GetDetectorRecipeEffectiveDetectorRuleOutput) Details() GetDetectorRecipeEffectiveDetectorRuleDetailsOutput {
	return o.ApplyT(func(v GetDetectorRecipeEffectiveDetectorRule) GetDetectorRecipeEffectiveDetectorRuleDetails {
		return v.Details
	}).(GetDetectorRecipeEffectiveDetectorRuleDetailsOutput)
}

// detector for the rule
func (o GetDetectorRecipeEffectiveDetectorRuleOutput) Detector() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeEffectiveDetectorRule) string { return v.Detector }).(pulumi.StringOutput)
}

// The unique identifier of the detector rule
func (o GetDetectorRecipeEffectiveDetectorRuleOutput) DetectorRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeEffectiveDetectorRule) string { return v.DetectorRuleId }).(pulumi.StringOutput)
}

// displayName
func (o GetDetectorRecipeEffectiveDetectorRuleOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeEffectiveDetectorRule) string { return v.DisplayName }).(pulumi.StringOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o GetDetectorRecipeEffectiveDetectorRuleOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeEffectiveDetectorRule) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// List of cloudguard managed list types related to this rule
func (o GetDetectorRecipeEffectiveDetectorRuleOutput) ManagedListTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDetectorRecipeEffectiveDetectorRule) []string { return v.ManagedListTypes }).(pulumi.StringArrayOutput)
}

// Recommendation for DetectorRecipeDetectorRule
func (o GetDetectorRecipeEffectiveDetectorRuleOutput) Recommendation() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeEffectiveDetectorRule) string { return v.Recommendation }).(pulumi.StringOutput)
}

// resource type of the configuration to which the rule is applied
func (o GetDetectorRecipeEffectiveDetectorRuleOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeEffectiveDetectorRule) string { return v.ResourceType }).(pulumi.StringOutput)
}

// service type of the configuration to which the rule is applied
func (o GetDetectorRecipeEffectiveDetectorRuleOutput) ServiceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeEffectiveDetectorRule) string { return v.ServiceType }).(pulumi.StringOutput)
}

// The current state of the resource.
func (o GetDetectorRecipeEffectiveDetectorRuleOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeEffectiveDetectorRule) string { return v.State }).(pulumi.StringOutput)
}

// The date and time the detector recipe was created. Format defined by RFC3339.
func (o GetDetectorRecipeEffectiveDetectorRuleOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeEffectiveDetectorRule) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the detector recipe was updated. Format defined by RFC3339.
func (o GetDetectorRecipeEffectiveDetectorRuleOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeEffectiveDetectorRule) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetDetectorRecipeEffectiveDetectorRuleArrayOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipeEffectiveDetectorRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipeEffectiveDetectorRule)(nil)).Elem()
}

func (o GetDetectorRecipeEffectiveDetectorRuleArrayOutput) ToGetDetectorRecipeEffectiveDetectorRuleArrayOutput() GetDetectorRecipeEffectiveDetectorRuleArrayOutput {
	return o
}

func (o GetDetectorRecipeEffectiveDetectorRuleArrayOutput) ToGetDetectorRecipeEffectiveDetectorRuleArrayOutputWithContext(ctx context.Context) GetDetectorRecipeEffectiveDetectorRuleArrayOutput {
	return o
}

func (o GetDetectorRecipeEffectiveDetectorRuleArrayOutput) Index(i pulumi.IntInput) GetDetectorRecipeEffectiveDetectorRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDetectorRecipeEffectiveDetectorRule {
		return vs[0].([]GetDetectorRecipeEffectiveDetectorRule)[vs[1].(int)]
	}).(GetDetectorRecipeEffectiveDetectorRuleOutput)
}

type GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRule struct {
	// displayName
	DisplayName string `pulumi:"displayName"`
	// Ocid for detector recipe
	Id string `pulumi:"id"`
	// Preferred state
	IsPreferred bool `pulumi:"isPreferred"`
}

// GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleInput is an input type that accepts GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArgs and GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutput values.
// You can construct a concrete instance of `GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleInput` via:
//
//          GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArgs{...}
type GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleInput interface {
	pulumi.Input

	ToGetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutput() GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutput
	ToGetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutputWithContext(context.Context) GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutput
}

type GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArgs struct {
	// displayName
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Ocid for detector recipe
	Id pulumi.StringInput `pulumi:"id"`
	// Preferred state
	IsPreferred pulumi.BoolInput `pulumi:"isPreferred"`
}

func (GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRule)(nil)).Elem()
}

func (i GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArgs) ToGetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutput() GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutput {
	return i.ToGetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutputWithContext(context.Background())
}

func (i GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArgs) ToGetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutputWithContext(ctx context.Context) GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutput)
}

// GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayInput is an input type that accepts GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArray and GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutput values.
// You can construct a concrete instance of `GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayInput` via:
//
//          GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArray{ GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArgs{...} }
type GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayInput interface {
	pulumi.Input

	ToGetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutput() GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutput
	ToGetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutputWithContext(context.Context) GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutput
}

type GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArray []GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleInput

func (GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRule)(nil)).Elem()
}

func (i GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArray) ToGetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutput() GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutput {
	return i.ToGetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutputWithContext(context.Background())
}

func (i GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArray) ToGetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutputWithContext(ctx context.Context) GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutput)
}

type GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRule)(nil)).Elem()
}

func (o GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutput) ToGetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutput() GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutput {
	return o
}

func (o GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutput) ToGetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutputWithContext(ctx context.Context) GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutput {
	return o
}

// displayName
func (o GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRule) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Ocid for detector recipe
func (o GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRule) string { return v.Id }).(pulumi.StringOutput)
}

// Preferred state
func (o GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutput) IsPreferred() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRule) bool { return v.IsPreferred }).(pulumi.BoolOutput)
}

type GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRule)(nil)).Elem()
}

func (o GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutput) ToGetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutput() GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutput {
	return o
}

func (o GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutput) ToGetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutputWithContext(ctx context.Context) GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutput {
	return o
}

func (o GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutput) Index(i pulumi.IntInput) GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRule {
		return vs[0].([]GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRule)[vs[1].(int)]
	}).(GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutput)
}

type GetDetectorRecipeEffectiveDetectorRuleDetails struct {
	Condition string `pulumi:"condition"`
	// Configuration details
	Configurations []GetDetectorRecipeEffectiveDetectorRuleDetailsConfiguration `pulumi:"configurations"`
	// configuration allowed or not
	IsConfigurationAllowed bool `pulumi:"isConfigurationAllowed"`
	// Enables the control
	IsEnabled bool `pulumi:"isEnabled"`
	// user defined labels for a detector rule
	Labels []string `pulumi:"labels"`
	// The Risk Level
	RiskLevel string `pulumi:"riskLevel"`
}

// GetDetectorRecipeEffectiveDetectorRuleDetailsInput is an input type that accepts GetDetectorRecipeEffectiveDetectorRuleDetailsArgs and GetDetectorRecipeEffectiveDetectorRuleDetailsOutput values.
// You can construct a concrete instance of `GetDetectorRecipeEffectiveDetectorRuleDetailsInput` via:
//
//          GetDetectorRecipeEffectiveDetectorRuleDetailsArgs{...}
type GetDetectorRecipeEffectiveDetectorRuleDetailsInput interface {
	pulumi.Input

	ToGetDetectorRecipeEffectiveDetectorRuleDetailsOutput() GetDetectorRecipeEffectiveDetectorRuleDetailsOutput
	ToGetDetectorRecipeEffectiveDetectorRuleDetailsOutputWithContext(context.Context) GetDetectorRecipeEffectiveDetectorRuleDetailsOutput
}

type GetDetectorRecipeEffectiveDetectorRuleDetailsArgs struct {
	Condition pulumi.StringInput `pulumi:"condition"`
	// Configuration details
	Configurations GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayInput `pulumi:"configurations"`
	// configuration allowed or not
	IsConfigurationAllowed pulumi.BoolInput `pulumi:"isConfigurationAllowed"`
	// Enables the control
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// user defined labels for a detector rule
	Labels pulumi.StringArrayInput `pulumi:"labels"`
	// The Risk Level
	RiskLevel pulumi.StringInput `pulumi:"riskLevel"`
}

func (GetDetectorRecipeEffectiveDetectorRuleDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipeEffectiveDetectorRuleDetails)(nil)).Elem()
}

func (i GetDetectorRecipeEffectiveDetectorRuleDetailsArgs) ToGetDetectorRecipeEffectiveDetectorRuleDetailsOutput() GetDetectorRecipeEffectiveDetectorRuleDetailsOutput {
	return i.ToGetDetectorRecipeEffectiveDetectorRuleDetailsOutputWithContext(context.Background())
}

func (i GetDetectorRecipeEffectiveDetectorRuleDetailsArgs) ToGetDetectorRecipeEffectiveDetectorRuleDetailsOutputWithContext(ctx context.Context) GetDetectorRecipeEffectiveDetectorRuleDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipeEffectiveDetectorRuleDetailsOutput)
}

type GetDetectorRecipeEffectiveDetectorRuleDetailsOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipeEffectiveDetectorRuleDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipeEffectiveDetectorRuleDetails)(nil)).Elem()
}

func (o GetDetectorRecipeEffectiveDetectorRuleDetailsOutput) ToGetDetectorRecipeEffectiveDetectorRuleDetailsOutput() GetDetectorRecipeEffectiveDetectorRuleDetailsOutput {
	return o
}

func (o GetDetectorRecipeEffectiveDetectorRuleDetailsOutput) ToGetDetectorRecipeEffectiveDetectorRuleDetailsOutputWithContext(ctx context.Context) GetDetectorRecipeEffectiveDetectorRuleDetailsOutput {
	return o
}

func (o GetDetectorRecipeEffectiveDetectorRuleDetailsOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeEffectiveDetectorRuleDetails) string { return v.Condition }).(pulumi.StringOutput)
}

// Configuration details
func (o GetDetectorRecipeEffectiveDetectorRuleDetailsOutput) Configurations() GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput {
	return o.ApplyT(func(v GetDetectorRecipeEffectiveDetectorRuleDetails) []GetDetectorRecipeEffectiveDetectorRuleDetailsConfiguration {
		return v.Configurations
	}).(GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput)
}

// configuration allowed or not
func (o GetDetectorRecipeEffectiveDetectorRuleDetailsOutput) IsConfigurationAllowed() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDetectorRecipeEffectiveDetectorRuleDetails) bool { return v.IsConfigurationAllowed }).(pulumi.BoolOutput)
}

// Enables the control
func (o GetDetectorRecipeEffectiveDetectorRuleDetailsOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDetectorRecipeEffectiveDetectorRuleDetails) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// user defined labels for a detector rule
func (o GetDetectorRecipeEffectiveDetectorRuleDetailsOutput) Labels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDetectorRecipeEffectiveDetectorRuleDetails) []string { return v.Labels }).(pulumi.StringArrayOutput)
}

// The Risk Level
func (o GetDetectorRecipeEffectiveDetectorRuleDetailsOutput) RiskLevel() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeEffectiveDetectorRuleDetails) string { return v.RiskLevel }).(pulumi.StringOutput)
}

type GetDetectorRecipeEffectiveDetectorRuleDetailsConfiguration struct {
	// Unique name of the configuration
	ConfigKey string `pulumi:"configKey"`
	// configuration data type
	DataType string `pulumi:"dataType"`
	// configuration name
	Name string `pulumi:"name"`
	// configuration value
	Value string `pulumi:"value"`
	// List of configuration values
	Values []GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValue `pulumi:"values"`
}

// GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationInput is an input type that accepts GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArgs and GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput values.
// You can construct a concrete instance of `GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationInput` via:
//
//          GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArgs{...}
type GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationInput interface {
	pulumi.Input

	ToGetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput() GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput
	ToGetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutputWithContext(context.Context) GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput
}

type GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArgs struct {
	// Unique name of the configuration
	ConfigKey pulumi.StringInput `pulumi:"configKey"`
	// configuration data type
	DataType pulumi.StringInput `pulumi:"dataType"`
	// configuration name
	Name pulumi.StringInput `pulumi:"name"`
	// configuration value
	Value pulumi.StringInput `pulumi:"value"`
	// List of configuration values
	Values GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayInput `pulumi:"values"`
}

func (GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipeEffectiveDetectorRuleDetailsConfiguration)(nil)).Elem()
}

func (i GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArgs) ToGetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput() GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput {
	return i.ToGetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutputWithContext(context.Background())
}

func (i GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArgs) ToGetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutputWithContext(ctx context.Context) GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput)
}

// GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayInput is an input type that accepts GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArray and GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput values.
// You can construct a concrete instance of `GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayInput` via:
//
//          GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArray{ GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArgs{...} }
type GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayInput interface {
	pulumi.Input

	ToGetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput() GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput
	ToGetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutputWithContext(context.Context) GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput
}

type GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArray []GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationInput

func (GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipeEffectiveDetectorRuleDetailsConfiguration)(nil)).Elem()
}

func (i GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArray) ToGetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput() GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput {
	return i.ToGetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutputWithContext(context.Background())
}

func (i GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArray) ToGetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutputWithContext(ctx context.Context) GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput)
}

type GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipeEffectiveDetectorRuleDetailsConfiguration)(nil)).Elem()
}

func (o GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput) ToGetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput() GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput {
	return o
}

func (o GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput) ToGetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutputWithContext(ctx context.Context) GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput {
	return o
}

// Unique name of the configuration
func (o GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput) ConfigKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeEffectiveDetectorRuleDetailsConfiguration) string { return v.ConfigKey }).(pulumi.StringOutput)
}

// configuration data type
func (o GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput) DataType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeEffectiveDetectorRuleDetailsConfiguration) string { return v.DataType }).(pulumi.StringOutput)
}

// configuration name
func (o GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeEffectiveDetectorRuleDetailsConfiguration) string { return v.Name }).(pulumi.StringOutput)
}

// configuration value
func (o GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeEffectiveDetectorRuleDetailsConfiguration) string { return v.Value }).(pulumi.StringOutput)
}

// List of configuration values
func (o GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput) Values() GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput {
	return o.ApplyT(func(v GetDetectorRecipeEffectiveDetectorRuleDetailsConfiguration) []GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValue {
		return v.Values
	}).(GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput)
}

type GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipeEffectiveDetectorRuleDetailsConfiguration)(nil)).Elem()
}

func (o GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput) ToGetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput() GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput {
	return o
}

func (o GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput) ToGetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutputWithContext(ctx context.Context) GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput {
	return o
}

func (o GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput) Index(i pulumi.IntInput) GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDetectorRecipeEffectiveDetectorRuleDetailsConfiguration {
		return vs[0].([]GetDetectorRecipeEffectiveDetectorRuleDetailsConfiguration)[vs[1].(int)]
	}).(GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput)
}

type GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValue struct {
	// configuration list item type, either CUSTOM or MANAGED
	ListType string `pulumi:"listType"`
	// type of the managed list
	ManagedListType string `pulumi:"managedListType"`
	// configuration value
	Value string `pulumi:"value"`
}

// GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueInput is an input type that accepts GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArgs and GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput values.
// You can construct a concrete instance of `GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueInput` via:
//
//          GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArgs{...}
type GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueInput interface {
	pulumi.Input

	ToGetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput() GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput
	ToGetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutputWithContext(context.Context) GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput
}

type GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArgs struct {
	// configuration list item type, either CUSTOM or MANAGED
	ListType pulumi.StringInput `pulumi:"listType"`
	// type of the managed list
	ManagedListType pulumi.StringInput `pulumi:"managedListType"`
	// configuration value
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValue)(nil)).Elem()
}

func (i GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArgs) ToGetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput() GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput {
	return i.ToGetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutputWithContext(context.Background())
}

func (i GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArgs) ToGetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutputWithContext(ctx context.Context) GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput)
}

// GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayInput is an input type that accepts GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArray and GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput values.
// You can construct a concrete instance of `GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayInput` via:
//
//          GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArray{ GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArgs{...} }
type GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayInput interface {
	pulumi.Input

	ToGetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput() GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput
	ToGetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutputWithContext(context.Context) GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput
}

type GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArray []GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueInput

func (GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValue)(nil)).Elem()
}

func (i GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArray) ToGetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput() GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput {
	return i.ToGetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutputWithContext(context.Background())
}

func (i GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArray) ToGetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutputWithContext(ctx context.Context) GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput)
}

type GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValue)(nil)).Elem()
}

func (o GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput) ToGetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput() GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput {
	return o
}

func (o GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput) ToGetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutputWithContext(ctx context.Context) GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput {
	return o
}

// configuration list item type, either CUSTOM or MANAGED
func (o GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput) ListType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValue) string { return v.ListType }).(pulumi.StringOutput)
}

// type of the managed list
func (o GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput) ManagedListType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValue) string {
		return v.ManagedListType
	}).(pulumi.StringOutput)
}

// configuration value
func (o GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValue) string { return v.Value }).(pulumi.StringOutput)
}

type GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValue)(nil)).Elem()
}

func (o GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput) ToGetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput() GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput {
	return o
}

func (o GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput) ToGetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutputWithContext(ctx context.Context) GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput {
	return o
}

func (o GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput) Index(i pulumi.IntInput) GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValue {
		return vs[0].([]GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValue)[vs[1].(int)]
	}).(GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput)
}

type GetDetectorRecipesDetectorRecipeCollection struct {
	Items []GetDetectorRecipesDetectorRecipeCollectionItem `pulumi:"items"`
}

// GetDetectorRecipesDetectorRecipeCollectionInput is an input type that accepts GetDetectorRecipesDetectorRecipeCollectionArgs and GetDetectorRecipesDetectorRecipeCollectionOutput values.
// You can construct a concrete instance of `GetDetectorRecipesDetectorRecipeCollectionInput` via:
//
//          GetDetectorRecipesDetectorRecipeCollectionArgs{...}
type GetDetectorRecipesDetectorRecipeCollectionInput interface {
	pulumi.Input

	ToGetDetectorRecipesDetectorRecipeCollectionOutput() GetDetectorRecipesDetectorRecipeCollectionOutput
	ToGetDetectorRecipesDetectorRecipeCollectionOutputWithContext(context.Context) GetDetectorRecipesDetectorRecipeCollectionOutput
}

type GetDetectorRecipesDetectorRecipeCollectionArgs struct {
	Items GetDetectorRecipesDetectorRecipeCollectionItemArrayInput `pulumi:"items"`
}

func (GetDetectorRecipesDetectorRecipeCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipesDetectorRecipeCollection)(nil)).Elem()
}

func (i GetDetectorRecipesDetectorRecipeCollectionArgs) ToGetDetectorRecipesDetectorRecipeCollectionOutput() GetDetectorRecipesDetectorRecipeCollectionOutput {
	return i.ToGetDetectorRecipesDetectorRecipeCollectionOutputWithContext(context.Background())
}

func (i GetDetectorRecipesDetectorRecipeCollectionArgs) ToGetDetectorRecipesDetectorRecipeCollectionOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipesDetectorRecipeCollectionOutput)
}

// GetDetectorRecipesDetectorRecipeCollectionArrayInput is an input type that accepts GetDetectorRecipesDetectorRecipeCollectionArray and GetDetectorRecipesDetectorRecipeCollectionArrayOutput values.
// You can construct a concrete instance of `GetDetectorRecipesDetectorRecipeCollectionArrayInput` via:
//
//          GetDetectorRecipesDetectorRecipeCollectionArray{ GetDetectorRecipesDetectorRecipeCollectionArgs{...} }
type GetDetectorRecipesDetectorRecipeCollectionArrayInput interface {
	pulumi.Input

	ToGetDetectorRecipesDetectorRecipeCollectionArrayOutput() GetDetectorRecipesDetectorRecipeCollectionArrayOutput
	ToGetDetectorRecipesDetectorRecipeCollectionArrayOutputWithContext(context.Context) GetDetectorRecipesDetectorRecipeCollectionArrayOutput
}

type GetDetectorRecipesDetectorRecipeCollectionArray []GetDetectorRecipesDetectorRecipeCollectionInput

func (GetDetectorRecipesDetectorRecipeCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipesDetectorRecipeCollection)(nil)).Elem()
}

func (i GetDetectorRecipesDetectorRecipeCollectionArray) ToGetDetectorRecipesDetectorRecipeCollectionArrayOutput() GetDetectorRecipesDetectorRecipeCollectionArrayOutput {
	return i.ToGetDetectorRecipesDetectorRecipeCollectionArrayOutputWithContext(context.Background())
}

func (i GetDetectorRecipesDetectorRecipeCollectionArray) ToGetDetectorRecipesDetectorRecipeCollectionArrayOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipesDetectorRecipeCollectionArrayOutput)
}

type GetDetectorRecipesDetectorRecipeCollectionOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipesDetectorRecipeCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipesDetectorRecipeCollection)(nil)).Elem()
}

func (o GetDetectorRecipesDetectorRecipeCollectionOutput) ToGetDetectorRecipesDetectorRecipeCollectionOutput() GetDetectorRecipesDetectorRecipeCollectionOutput {
	return o
}

func (o GetDetectorRecipesDetectorRecipeCollectionOutput) ToGetDetectorRecipesDetectorRecipeCollectionOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionOutput {
	return o
}

func (o GetDetectorRecipesDetectorRecipeCollectionOutput) Items() GetDetectorRecipesDetectorRecipeCollectionItemArrayOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollection) []GetDetectorRecipesDetectorRecipeCollectionItem {
		return v.Items
	}).(GetDetectorRecipesDetectorRecipeCollectionItemArrayOutput)
}

type GetDetectorRecipesDetectorRecipeCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipesDetectorRecipeCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipesDetectorRecipeCollection)(nil)).Elem()
}

func (o GetDetectorRecipesDetectorRecipeCollectionArrayOutput) ToGetDetectorRecipesDetectorRecipeCollectionArrayOutput() GetDetectorRecipesDetectorRecipeCollectionArrayOutput {
	return o
}

func (o GetDetectorRecipesDetectorRecipeCollectionArrayOutput) ToGetDetectorRecipesDetectorRecipeCollectionArrayOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionArrayOutput {
	return o
}

func (o GetDetectorRecipesDetectorRecipeCollectionArrayOutput) Index(i pulumi.IntInput) GetDetectorRecipesDetectorRecipeCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDetectorRecipesDetectorRecipeCollection {
		return vs[0].([]GetDetectorRecipesDetectorRecipeCollection)[vs[1].(int)]
	}).(GetDetectorRecipesDetectorRecipeCollectionOutput)
}

type GetDetectorRecipesDetectorRecipeCollectionItem struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// Description for DetectorRecipeDetectorRule
	Description string `pulumi:"description"`
	// detector for the rule
	Detector string `pulumi:"detector"`
	// List of detector rules for the detector type for recipe - user input
	DetectorRules []GetDetectorRecipesDetectorRecipeCollectionItemDetectorRule `pulumi:"detectorRules"`
	// A filter to return only resources that match the entire display name given.
	DisplayName string `pulumi:"displayName"`
	// List of effective detector rules for the detector type for recipe after applying defaults
	EffectiveDetectorRules []GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRule `pulumi:"effectiveDetectorRules"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// Ocid for detector recipe
	Id string `pulumi:"id"`
	// Owner of detector recipe
	Owner string `pulumi:"owner"`
	// Recipe Ocid of the Source Recipe to be cloned
	SourceDetectorRecipeId string `pulumi:"sourceDetectorRecipeId"`
	// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
	State string `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// The date and time the detector recipe was created. Format defined by RFC3339.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the detector recipe was updated. Format defined by RFC3339.
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetDetectorRecipesDetectorRecipeCollectionItemInput is an input type that accepts GetDetectorRecipesDetectorRecipeCollectionItemArgs and GetDetectorRecipesDetectorRecipeCollectionItemOutput values.
// You can construct a concrete instance of `GetDetectorRecipesDetectorRecipeCollectionItemInput` via:
//
//          GetDetectorRecipesDetectorRecipeCollectionItemArgs{...}
type GetDetectorRecipesDetectorRecipeCollectionItemInput interface {
	pulumi.Input

	ToGetDetectorRecipesDetectorRecipeCollectionItemOutput() GetDetectorRecipesDetectorRecipeCollectionItemOutput
	ToGetDetectorRecipesDetectorRecipeCollectionItemOutputWithContext(context.Context) GetDetectorRecipesDetectorRecipeCollectionItemOutput
}

type GetDetectorRecipesDetectorRecipeCollectionItemArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// Description for DetectorRecipeDetectorRule
	Description pulumi.StringInput `pulumi:"description"`
	// detector for the rule
	Detector pulumi.StringInput `pulumi:"detector"`
	// List of detector rules for the detector type for recipe - user input
	DetectorRules GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleArrayInput `pulumi:"detectorRules"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// List of effective detector rules for the detector type for recipe after applying defaults
	EffectiveDetectorRules GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleArrayInput `pulumi:"effectiveDetectorRules"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// Ocid for detector recipe
	Id pulumi.StringInput `pulumi:"id"`
	// Owner of detector recipe
	Owner pulumi.StringInput `pulumi:"owner"`
	// Recipe Ocid of the Source Recipe to be cloned
	SourceDetectorRecipeId pulumi.StringInput `pulumi:"sourceDetectorRecipeId"`
	// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
	State pulumi.StringInput `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapInput `pulumi:"systemTags"`
	// The date and time the detector recipe was created. Format defined by RFC3339.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The date and time the detector recipe was updated. Format defined by RFC3339.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetDetectorRecipesDetectorRecipeCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipesDetectorRecipeCollectionItem)(nil)).Elem()
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemArgs) ToGetDetectorRecipesDetectorRecipeCollectionItemOutput() GetDetectorRecipesDetectorRecipeCollectionItemOutput {
	return i.ToGetDetectorRecipesDetectorRecipeCollectionItemOutputWithContext(context.Background())
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemArgs) ToGetDetectorRecipesDetectorRecipeCollectionItemOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipesDetectorRecipeCollectionItemOutput)
}

// GetDetectorRecipesDetectorRecipeCollectionItemArrayInput is an input type that accepts GetDetectorRecipesDetectorRecipeCollectionItemArray and GetDetectorRecipesDetectorRecipeCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetDetectorRecipesDetectorRecipeCollectionItemArrayInput` via:
//
//          GetDetectorRecipesDetectorRecipeCollectionItemArray{ GetDetectorRecipesDetectorRecipeCollectionItemArgs{...} }
type GetDetectorRecipesDetectorRecipeCollectionItemArrayInput interface {
	pulumi.Input

	ToGetDetectorRecipesDetectorRecipeCollectionItemArrayOutput() GetDetectorRecipesDetectorRecipeCollectionItemArrayOutput
	ToGetDetectorRecipesDetectorRecipeCollectionItemArrayOutputWithContext(context.Context) GetDetectorRecipesDetectorRecipeCollectionItemArrayOutput
}

type GetDetectorRecipesDetectorRecipeCollectionItemArray []GetDetectorRecipesDetectorRecipeCollectionItemInput

func (GetDetectorRecipesDetectorRecipeCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipesDetectorRecipeCollectionItem)(nil)).Elem()
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemArray) ToGetDetectorRecipesDetectorRecipeCollectionItemArrayOutput() GetDetectorRecipesDetectorRecipeCollectionItemArrayOutput {
	return i.ToGetDetectorRecipesDetectorRecipeCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemArray) ToGetDetectorRecipesDetectorRecipeCollectionItemArrayOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipesDetectorRecipeCollectionItemArrayOutput)
}

type GetDetectorRecipesDetectorRecipeCollectionItemOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipesDetectorRecipeCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipesDetectorRecipeCollectionItem)(nil)).Elem()
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemOutput() GetDetectorRecipesDetectorRecipeCollectionItemOutput {
	return o
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemOutput {
	return o
}

// The ID of the compartment in which to list resources.
func (o GetDetectorRecipesDetectorRecipeCollectionItemOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItem) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetDetectorRecipesDetectorRecipeCollectionItemOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItem) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// Description for DetectorRecipeDetectorRule
func (o GetDetectorRecipesDetectorRecipeCollectionItemOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItem) string { return v.Description }).(pulumi.StringOutput)
}

// detector for the rule
func (o GetDetectorRecipesDetectorRecipeCollectionItemOutput) Detector() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItem) string { return v.Detector }).(pulumi.StringOutput)
}

// List of detector rules for the detector type for recipe - user input
func (o GetDetectorRecipesDetectorRecipeCollectionItemOutput) DetectorRules() GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleArrayOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItem) []GetDetectorRecipesDetectorRecipeCollectionItemDetectorRule {
		return v.DetectorRules
	}).(GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleArrayOutput)
}

// A filter to return only resources that match the entire display name given.
func (o GetDetectorRecipesDetectorRecipeCollectionItemOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItem) string { return v.DisplayName }).(pulumi.StringOutput)
}

// List of effective detector rules for the detector type for recipe after applying defaults
func (o GetDetectorRecipesDetectorRecipeCollectionItemOutput) EffectiveDetectorRules() GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleArrayOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItem) []GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRule {
		return v.EffectiveDetectorRules
	}).(GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleArrayOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetDetectorRecipesDetectorRecipeCollectionItemOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItem) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// Ocid for detector recipe
func (o GetDetectorRecipesDetectorRecipeCollectionItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItem) string { return v.Id }).(pulumi.StringOutput)
}

// Owner of detector recipe
func (o GetDetectorRecipesDetectorRecipeCollectionItemOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItem) string { return v.Owner }).(pulumi.StringOutput)
}

// Recipe Ocid of the Source Recipe to be cloned
func (o GetDetectorRecipesDetectorRecipeCollectionItemOutput) SourceDetectorRecipeId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItem) string { return v.SourceDetectorRecipeId }).(pulumi.StringOutput)
}

// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
func (o GetDetectorRecipesDetectorRecipeCollectionItemOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItem) string { return v.State }).(pulumi.StringOutput)
}

// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o GetDetectorRecipesDetectorRecipeCollectionItemOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItem) map[string]interface{} { return v.SystemTags }).(pulumi.MapOutput)
}

// The date and time the detector recipe was created. Format defined by RFC3339.
func (o GetDetectorRecipesDetectorRecipeCollectionItemOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItem) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the detector recipe was updated. Format defined by RFC3339.
func (o GetDetectorRecipesDetectorRecipeCollectionItemOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItem) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetDetectorRecipesDetectorRecipeCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipesDetectorRecipeCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipesDetectorRecipeCollectionItem)(nil)).Elem()
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemArrayOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemArrayOutput() GetDetectorRecipesDetectorRecipeCollectionItemArrayOutput {
	return o
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemArrayOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemArrayOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemArrayOutput {
	return o
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemArrayOutput) Index(i pulumi.IntInput) GetDetectorRecipesDetectorRecipeCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDetectorRecipesDetectorRecipeCollectionItem {
		return vs[0].([]GetDetectorRecipesDetectorRecipeCollectionItem)[vs[1].(int)]
	}).(GetDetectorRecipesDetectorRecipeCollectionItemOutput)
}

type GetDetectorRecipesDetectorRecipeCollectionItemDetectorRule struct {
	// List of CandidateResponderRule related to this rule
	CandidateResponderRules []GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRule `pulumi:"candidateResponderRules"`
	// Description for DetectorRecipeDetectorRule
	Description string `pulumi:"description"`
	// Details of a Detector Rule
	Details GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetails `pulumi:"details"`
	// detector for the rule
	Detector string `pulumi:"detector"`
	// The unique identifier of the detector rule
	DetectorRuleId string `pulumi:"detectorRuleId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName string `pulumi:"displayName"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// List of cloudguard managed list types related to this rule
	ManagedListTypes []string `pulumi:"managedListTypes"`
	// Recommendation for DetectorRecipeDetectorRule
	Recommendation string `pulumi:"recommendation"`
	// resource type of the configuration to which the rule is applied
	ResourceType string `pulumi:"resourceType"`
	// service type of the configuration to which the rule is applied
	ServiceType string `pulumi:"serviceType"`
	// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
	State string `pulumi:"state"`
	// The date and time the detector recipe was created. Format defined by RFC3339.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the detector recipe was updated. Format defined by RFC3339.
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleInput is an input type that accepts GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleArgs and GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleOutput values.
// You can construct a concrete instance of `GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleInput` via:
//
//          GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleArgs{...}
type GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleInput interface {
	pulumi.Input

	ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleOutput() GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleOutput
	ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleOutputWithContext(context.Context) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleOutput
}

type GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleArgs struct {
	// List of CandidateResponderRule related to this rule
	CandidateResponderRules GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleArrayInput `pulumi:"candidateResponderRules"`
	// Description for DetectorRecipeDetectorRule
	Description pulumi.StringInput `pulumi:"description"`
	// Details of a Detector Rule
	Details GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsInput `pulumi:"details"`
	// detector for the rule
	Detector pulumi.StringInput `pulumi:"detector"`
	// The unique identifier of the detector rule
	DetectorRuleId pulumi.StringInput `pulumi:"detectorRuleId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// List of cloudguard managed list types related to this rule
	ManagedListTypes pulumi.StringArrayInput `pulumi:"managedListTypes"`
	// Recommendation for DetectorRecipeDetectorRule
	Recommendation pulumi.StringInput `pulumi:"recommendation"`
	// resource type of the configuration to which the rule is applied
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// service type of the configuration to which the rule is applied
	ServiceType pulumi.StringInput `pulumi:"serviceType"`
	// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
	State pulumi.StringInput `pulumi:"state"`
	// The date and time the detector recipe was created. Format defined by RFC3339.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The date and time the detector recipe was updated. Format defined by RFC3339.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipesDetectorRecipeCollectionItemDetectorRule)(nil)).Elem()
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleArgs) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleOutput() GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleOutput {
	return i.ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleOutputWithContext(context.Background())
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleArgs) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleOutput)
}

// GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleArrayInput is an input type that accepts GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleArray and GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleArrayOutput values.
// You can construct a concrete instance of `GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleArrayInput` via:
//
//          GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleArray{ GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleArgs{...} }
type GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleArrayInput interface {
	pulumi.Input

	ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleArrayOutput() GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleArrayOutput
	ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleArrayOutputWithContext(context.Context) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleArrayOutput
}

type GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleArray []GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleInput

func (GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipesDetectorRecipeCollectionItemDetectorRule)(nil)).Elem()
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleArray) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleArrayOutput() GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleArrayOutput {
	return i.ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleArrayOutputWithContext(context.Background())
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleArray) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleArrayOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleArrayOutput)
}

type GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipesDetectorRecipeCollectionItemDetectorRule)(nil)).Elem()
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleOutput() GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleOutput {
	return o
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleOutput {
	return o
}

// List of CandidateResponderRule related to this rule
func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleOutput) CandidateResponderRules() GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleArrayOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemDetectorRule) []GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRule {
		return v.CandidateResponderRules
	}).(GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleArrayOutput)
}

// Description for DetectorRecipeDetectorRule
func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemDetectorRule) string { return v.Description }).(pulumi.StringOutput)
}

// Details of a Detector Rule
func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleOutput) Details() GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemDetectorRule) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetails {
		return v.Details
	}).(GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsOutput)
}

// detector for the rule
func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleOutput) Detector() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemDetectorRule) string { return v.Detector }).(pulumi.StringOutput)
}

// The unique identifier of the detector rule
func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleOutput) DetectorRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemDetectorRule) string { return v.DetectorRuleId }).(pulumi.StringOutput)
}

// A filter to return only resources that match the entire display name given.
func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemDetectorRule) string { return v.DisplayName }).(pulumi.StringOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemDetectorRule) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// List of cloudguard managed list types related to this rule
func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleOutput) ManagedListTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemDetectorRule) []string { return v.ManagedListTypes }).(pulumi.StringArrayOutput)
}

// Recommendation for DetectorRecipeDetectorRule
func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleOutput) Recommendation() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemDetectorRule) string { return v.Recommendation }).(pulumi.StringOutput)
}

// resource type of the configuration to which the rule is applied
func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemDetectorRule) string { return v.ResourceType }).(pulumi.StringOutput)
}

// service type of the configuration to which the rule is applied
func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleOutput) ServiceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemDetectorRule) string { return v.ServiceType }).(pulumi.StringOutput)
}

// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemDetectorRule) string { return v.State }).(pulumi.StringOutput)
}

// The date and time the detector recipe was created. Format defined by RFC3339.
func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemDetectorRule) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the detector recipe was updated. Format defined by RFC3339.
func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemDetectorRule) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleArrayOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipesDetectorRecipeCollectionItemDetectorRule)(nil)).Elem()
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleArrayOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleArrayOutput() GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleArrayOutput {
	return o
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleArrayOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleArrayOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleArrayOutput {
	return o
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleArrayOutput) Index(i pulumi.IntInput) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRule {
		return vs[0].([]GetDetectorRecipesDetectorRecipeCollectionItemDetectorRule)[vs[1].(int)]
	}).(GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleOutput)
}

type GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRule struct {
	// A filter to return only resources that match the entire display name given.
	DisplayName string `pulumi:"displayName"`
	// Ocid for detector recipe
	Id string `pulumi:"id"`
	// Preferred state
	IsPreferred bool `pulumi:"isPreferred"`
}

// GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleInput is an input type that accepts GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleArgs and GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleOutput values.
// You can construct a concrete instance of `GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleInput` via:
//
//          GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleArgs{...}
type GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleInput interface {
	pulumi.Input

	ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleOutput() GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleOutput
	ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleOutputWithContext(context.Context) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleOutput
}

type GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleArgs struct {
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Ocid for detector recipe
	Id pulumi.StringInput `pulumi:"id"`
	// Preferred state
	IsPreferred pulumi.BoolInput `pulumi:"isPreferred"`
}

func (GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRule)(nil)).Elem()
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleArgs) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleOutput() GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleOutput {
	return i.ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleOutputWithContext(context.Background())
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleArgs) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleOutput)
}

// GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleArrayInput is an input type that accepts GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleArray and GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleArrayOutput values.
// You can construct a concrete instance of `GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleArrayInput` via:
//
//          GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleArray{ GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleArgs{...} }
type GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleArrayInput interface {
	pulumi.Input

	ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleArrayOutput() GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleArrayOutput
	ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleArrayOutputWithContext(context.Context) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleArrayOutput
}

type GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleArray []GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleInput

func (GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRule)(nil)).Elem()
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleArray) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleArrayOutput() GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleArrayOutput {
	return i.ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleArrayOutputWithContext(context.Background())
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleArray) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleArrayOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleArrayOutput)
}

type GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRule)(nil)).Elem()
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleOutput() GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleOutput {
	return o
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleOutput {
	return o
}

// A filter to return only resources that match the entire display name given.
func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRule) string {
		return v.DisplayName
	}).(pulumi.StringOutput)
}

// Ocid for detector recipe
func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRule) string {
		return v.Id
	}).(pulumi.StringOutput)
}

// Preferred state
func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleOutput) IsPreferred() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRule) bool {
		return v.IsPreferred
	}).(pulumi.BoolOutput)
}

type GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleArrayOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRule)(nil)).Elem()
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleArrayOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleArrayOutput() GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleArrayOutput {
	return o
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleArrayOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleArrayOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleArrayOutput {
	return o
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleArrayOutput) Index(i pulumi.IntInput) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRule {
		return vs[0].([]GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRule)[vs[1].(int)]
	}).(GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleOutput)
}

type GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetails struct {
	Condition string `pulumi:"condition"`
	// Configuration details
	Configurations []GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfiguration `pulumi:"configurations"`
	// configuration allowed or not
	IsConfigurationAllowed bool `pulumi:"isConfigurationAllowed"`
	// Enables the control
	IsEnabled bool `pulumi:"isEnabled"`
	// user defined labels for a detector rule
	Labels []string `pulumi:"labels"`
	// The Risk Level
	RiskLevel string `pulumi:"riskLevel"`
}

// GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsInput is an input type that accepts GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsArgs and GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsOutput values.
// You can construct a concrete instance of `GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsInput` via:
//
//          GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsArgs{...}
type GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsInput interface {
	pulumi.Input

	ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsOutput() GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsOutput
	ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsOutputWithContext(context.Context) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsOutput
}

type GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsArgs struct {
	Condition pulumi.StringInput `pulumi:"condition"`
	// Configuration details
	Configurations GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationArrayInput `pulumi:"configurations"`
	// configuration allowed or not
	IsConfigurationAllowed pulumi.BoolInput `pulumi:"isConfigurationAllowed"`
	// Enables the control
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// user defined labels for a detector rule
	Labels pulumi.StringArrayInput `pulumi:"labels"`
	// The Risk Level
	RiskLevel pulumi.StringInput `pulumi:"riskLevel"`
}

func (GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetails)(nil)).Elem()
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsArgs) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsOutput() GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsOutput {
	return i.ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsOutputWithContext(context.Background())
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsArgs) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsOutput)
}

type GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetails)(nil)).Elem()
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsOutput() GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsOutput {
	return o
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsOutput {
	return o
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetails) string { return v.Condition }).(pulumi.StringOutput)
}

// Configuration details
func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsOutput) Configurations() GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationArrayOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetails) []GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfiguration {
		return v.Configurations
	}).(GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationArrayOutput)
}

// configuration allowed or not
func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsOutput) IsConfigurationAllowed() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetails) bool {
		return v.IsConfigurationAllowed
	}).(pulumi.BoolOutput)
}

// Enables the control
func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetails) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// user defined labels for a detector rule
func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsOutput) Labels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetails) []string { return v.Labels }).(pulumi.StringArrayOutput)
}

// The Risk Level
func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsOutput) RiskLevel() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetails) string { return v.RiskLevel }).(pulumi.StringOutput)
}

type GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfiguration struct {
	// Unique name of the configuration
	ConfigKey string `pulumi:"configKey"`
	// configuration data type
	DataType string `pulumi:"dataType"`
	// configuration name
	Name string `pulumi:"name"`
	// configuration value
	Value string `pulumi:"value"`
	// List of configuration values
	Values []GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationValue `pulumi:"values"`
}

// GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationInput is an input type that accepts GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationArgs and GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationOutput values.
// You can construct a concrete instance of `GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationInput` via:
//
//          GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationArgs{...}
type GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationInput interface {
	pulumi.Input

	ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationOutput() GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationOutput
	ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationOutputWithContext(context.Context) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationOutput
}

type GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationArgs struct {
	// Unique name of the configuration
	ConfigKey pulumi.StringInput `pulumi:"configKey"`
	// configuration data type
	DataType pulumi.StringInput `pulumi:"dataType"`
	// configuration name
	Name pulumi.StringInput `pulumi:"name"`
	// configuration value
	Value pulumi.StringInput `pulumi:"value"`
	// List of configuration values
	Values GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationValueArrayInput `pulumi:"values"`
}

func (GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfiguration)(nil)).Elem()
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationArgs) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationOutput() GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationOutput {
	return i.ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationOutputWithContext(context.Background())
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationArgs) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationOutput)
}

// GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationArrayInput is an input type that accepts GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationArray and GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationArrayOutput values.
// You can construct a concrete instance of `GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationArrayInput` via:
//
//          GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationArray{ GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationArgs{...} }
type GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationArrayInput interface {
	pulumi.Input

	ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationArrayOutput() GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationArrayOutput
	ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationArrayOutputWithContext(context.Context) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationArrayOutput
}

type GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationArray []GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationInput

func (GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfiguration)(nil)).Elem()
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationArray) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationArrayOutput() GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationArrayOutput {
	return i.ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationArrayOutputWithContext(context.Background())
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationArray) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationArrayOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationArrayOutput)
}

type GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfiguration)(nil)).Elem()
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationOutput() GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationOutput {
	return o
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationOutput {
	return o
}

// Unique name of the configuration
func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationOutput) ConfigKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfiguration) string {
		return v.ConfigKey
	}).(pulumi.StringOutput)
}

// configuration data type
func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationOutput) DataType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfiguration) string {
		return v.DataType
	}).(pulumi.StringOutput)
}

// configuration name
func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfiguration) string {
		return v.Name
	}).(pulumi.StringOutput)
}

// configuration value
func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfiguration) string {
		return v.Value
	}).(pulumi.StringOutput)
}

// List of configuration values
func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationOutput) Values() GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationValueArrayOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfiguration) []GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationValue {
		return v.Values
	}).(GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationValueArrayOutput)
}

type GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfiguration)(nil)).Elem()
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationArrayOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationArrayOutput() GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationArrayOutput {
	return o
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationArrayOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationArrayOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationArrayOutput {
	return o
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationArrayOutput) Index(i pulumi.IntInput) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfiguration {
		return vs[0].([]GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfiguration)[vs[1].(int)]
	}).(GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationOutput)
}

type GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationValue struct {
	// configuration list item type, either CUSTOM or MANAGED
	ListType string `pulumi:"listType"`
	// type of the managed list
	ManagedListType string `pulumi:"managedListType"`
	// configuration value
	Value string `pulumi:"value"`
}

// GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationValueInput is an input type that accepts GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationValueArgs and GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationValueOutput values.
// You can construct a concrete instance of `GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationValueInput` via:
//
//          GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationValueArgs{...}
type GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationValueInput interface {
	pulumi.Input

	ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationValueOutput() GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationValueOutput
	ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationValueOutputWithContext(context.Context) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationValueOutput
}

type GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationValueArgs struct {
	// configuration list item type, either CUSTOM or MANAGED
	ListType pulumi.StringInput `pulumi:"listType"`
	// type of the managed list
	ManagedListType pulumi.StringInput `pulumi:"managedListType"`
	// configuration value
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationValue)(nil)).Elem()
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationValueArgs) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationValueOutput() GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationValueOutput {
	return i.ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationValueOutputWithContext(context.Background())
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationValueArgs) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationValueOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationValueOutput)
}

// GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationValueArrayInput is an input type that accepts GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationValueArray and GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationValueArrayOutput values.
// You can construct a concrete instance of `GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationValueArrayInput` via:
//
//          GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationValueArray{ GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationValueArgs{...} }
type GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationValueArrayInput interface {
	pulumi.Input

	ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationValueArrayOutput() GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationValueArrayOutput
	ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationValueArrayOutputWithContext(context.Context) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationValueArrayOutput
}

type GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationValueArray []GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationValueInput

func (GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationValue)(nil)).Elem()
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationValueArray) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationValueArrayOutput() GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationValueArrayOutput {
	return i.ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationValueArrayOutputWithContext(context.Background())
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationValueArray) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationValueArrayOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationValueArrayOutput)
}

type GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationValueOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationValue)(nil)).Elem()
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationValueOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationValueOutput() GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationValueOutput {
	return o
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationValueOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationValueOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationValueOutput {
	return o
}

// configuration list item type, either CUSTOM or MANAGED
func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationValueOutput) ListType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationValue) string {
		return v.ListType
	}).(pulumi.StringOutput)
}

// type of the managed list
func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationValueOutput) ManagedListType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationValue) string {
		return v.ManagedListType
	}).(pulumi.StringOutput)
}

// configuration value
func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationValueOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationValue) string {
		return v.Value
	}).(pulumi.StringOutput)
}

type GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationValueArrayOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationValue)(nil)).Elem()
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationValueArrayOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationValueArrayOutput() GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationValueArrayOutput {
	return o
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationValueArrayOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationValueArrayOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationValueArrayOutput {
	return o
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationValueArrayOutput) Index(i pulumi.IntInput) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationValue {
		return vs[0].([]GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationValue)[vs[1].(int)]
	}).(GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationValueOutput)
}

type GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRule struct {
	// List of CandidateResponderRule related to this rule
	CandidateResponderRules []GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRule `pulumi:"candidateResponderRules"`
	// Description for DetectorRecipeDetectorRule
	Description string `pulumi:"description"`
	// Details of a Detector Rule
	Details GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetails `pulumi:"details"`
	// detector for the rule
	Detector string `pulumi:"detector"`
	// The unique identifier of the detector rule
	DetectorRuleId string `pulumi:"detectorRuleId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName string `pulumi:"displayName"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// List of cloudguard managed list types related to this rule
	ManagedListTypes []string `pulumi:"managedListTypes"`
	// Recommendation for DetectorRecipeDetectorRule
	Recommendation string `pulumi:"recommendation"`
	// resource type of the configuration to which the rule is applied
	ResourceType string `pulumi:"resourceType"`
	// service type of the configuration to which the rule is applied
	ServiceType string `pulumi:"serviceType"`
	// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
	State string `pulumi:"state"`
	// The date and time the detector recipe was created. Format defined by RFC3339.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the detector recipe was updated. Format defined by RFC3339.
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleInput is an input type that accepts GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleArgs and GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleOutput values.
// You can construct a concrete instance of `GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleInput` via:
//
//          GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleArgs{...}
type GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleInput interface {
	pulumi.Input

	ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleOutput() GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleOutput
	ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleOutputWithContext(context.Context) GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleOutput
}

type GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleArgs struct {
	// List of CandidateResponderRule related to this rule
	CandidateResponderRules GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleArrayInput `pulumi:"candidateResponderRules"`
	// Description for DetectorRecipeDetectorRule
	Description pulumi.StringInput `pulumi:"description"`
	// Details of a Detector Rule
	Details GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsInput `pulumi:"details"`
	// detector for the rule
	Detector pulumi.StringInput `pulumi:"detector"`
	// The unique identifier of the detector rule
	DetectorRuleId pulumi.StringInput `pulumi:"detectorRuleId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// List of cloudguard managed list types related to this rule
	ManagedListTypes pulumi.StringArrayInput `pulumi:"managedListTypes"`
	// Recommendation for DetectorRecipeDetectorRule
	Recommendation pulumi.StringInput `pulumi:"recommendation"`
	// resource type of the configuration to which the rule is applied
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// service type of the configuration to which the rule is applied
	ServiceType pulumi.StringInput `pulumi:"serviceType"`
	// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
	State pulumi.StringInput `pulumi:"state"`
	// The date and time the detector recipe was created. Format defined by RFC3339.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The date and time the detector recipe was updated. Format defined by RFC3339.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRule)(nil)).Elem()
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleArgs) ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleOutput() GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleOutput {
	return i.ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleOutputWithContext(context.Background())
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleArgs) ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleOutput)
}

// GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleArrayInput is an input type that accepts GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleArray and GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleArrayOutput values.
// You can construct a concrete instance of `GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleArrayInput` via:
//
//          GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleArray{ GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleArgs{...} }
type GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleArrayInput interface {
	pulumi.Input

	ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleArrayOutput() GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleArrayOutput
	ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleArrayOutputWithContext(context.Context) GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleArrayOutput
}

type GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleArray []GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleInput

func (GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRule)(nil)).Elem()
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleArray) ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleArrayOutput() GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleArrayOutput {
	return i.ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleArrayOutputWithContext(context.Background())
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleArray) ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleArrayOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleArrayOutput)
}

type GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRule)(nil)).Elem()
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleOutput() GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleOutput {
	return o
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleOutput {
	return o
}

// List of CandidateResponderRule related to this rule
func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleOutput) CandidateResponderRules() GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleArrayOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRule) []GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRule {
		return v.CandidateResponderRules
	}).(GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleArrayOutput)
}

// Description for DetectorRecipeDetectorRule
func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRule) string {
		return v.Description
	}).(pulumi.StringOutput)
}

// Details of a Detector Rule
func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleOutput) Details() GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRule) GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetails {
		return v.Details
	}).(GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsOutput)
}

// detector for the rule
func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleOutput) Detector() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRule) string { return v.Detector }).(pulumi.StringOutput)
}

// The unique identifier of the detector rule
func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleOutput) DetectorRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRule) string {
		return v.DetectorRuleId
	}).(pulumi.StringOutput)
}

// A filter to return only resources that match the entire display name given.
func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRule) string {
		return v.DisplayName
	}).(pulumi.StringOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRule) string {
		return v.LifecycleDetails
	}).(pulumi.StringOutput)
}

// List of cloudguard managed list types related to this rule
func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleOutput) ManagedListTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRule) []string {
		return v.ManagedListTypes
	}).(pulumi.StringArrayOutput)
}

// Recommendation for DetectorRecipeDetectorRule
func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleOutput) Recommendation() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRule) string {
		return v.Recommendation
	}).(pulumi.StringOutput)
}

// resource type of the configuration to which the rule is applied
func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRule) string {
		return v.ResourceType
	}).(pulumi.StringOutput)
}

// service type of the configuration to which the rule is applied
func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleOutput) ServiceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRule) string {
		return v.ServiceType
	}).(pulumi.StringOutput)
}

// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRule) string { return v.State }).(pulumi.StringOutput)
}

// The date and time the detector recipe was created. Format defined by RFC3339.
func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRule) string {
		return v.TimeCreated
	}).(pulumi.StringOutput)
}

// The date and time the detector recipe was updated. Format defined by RFC3339.
func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRule) string {
		return v.TimeUpdated
	}).(pulumi.StringOutput)
}

type GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleArrayOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRule)(nil)).Elem()
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleArrayOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleArrayOutput() GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleArrayOutput {
	return o
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleArrayOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleArrayOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleArrayOutput {
	return o
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleArrayOutput) Index(i pulumi.IntInput) GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRule {
		return vs[0].([]GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRule)[vs[1].(int)]
	}).(GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleOutput)
}

type GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRule struct {
	// A filter to return only resources that match the entire display name given.
	DisplayName string `pulumi:"displayName"`
	// Ocid for detector recipe
	Id string `pulumi:"id"`
	// Preferred state
	IsPreferred bool `pulumi:"isPreferred"`
}

// GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleInput is an input type that accepts GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleArgs and GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleOutput values.
// You can construct a concrete instance of `GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleInput` via:
//
//          GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleArgs{...}
type GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleInput interface {
	pulumi.Input

	ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleOutput() GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleOutput
	ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleOutputWithContext(context.Context) GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleOutput
}

type GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleArgs struct {
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Ocid for detector recipe
	Id pulumi.StringInput `pulumi:"id"`
	// Preferred state
	IsPreferred pulumi.BoolInput `pulumi:"isPreferred"`
}

func (GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRule)(nil)).Elem()
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleArgs) ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleOutput() GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleOutput {
	return i.ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleOutputWithContext(context.Background())
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleArgs) ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleOutput)
}

// GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleArrayInput is an input type that accepts GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleArray and GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleArrayOutput values.
// You can construct a concrete instance of `GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleArrayInput` via:
//
//          GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleArray{ GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleArgs{...} }
type GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleArrayInput interface {
	pulumi.Input

	ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleArrayOutput() GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleArrayOutput
	ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleArrayOutputWithContext(context.Context) GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleArrayOutput
}

type GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleArray []GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleInput

func (GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRule)(nil)).Elem()
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleArray) ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleArrayOutput() GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleArrayOutput {
	return i.ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleArrayOutputWithContext(context.Background())
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleArray) ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleArrayOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleArrayOutput)
}

type GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRule)(nil)).Elem()
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleOutput() GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleOutput {
	return o
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleOutput {
	return o
}

// A filter to return only resources that match the entire display name given.
func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRule) string {
		return v.DisplayName
	}).(pulumi.StringOutput)
}

// Ocid for detector recipe
func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRule) string {
		return v.Id
	}).(pulumi.StringOutput)
}

// Preferred state
func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleOutput) IsPreferred() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRule) bool {
		return v.IsPreferred
	}).(pulumi.BoolOutput)
}

type GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleArrayOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRule)(nil)).Elem()
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleArrayOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleArrayOutput() GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleArrayOutput {
	return o
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleArrayOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleArrayOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleArrayOutput {
	return o
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleArrayOutput) Index(i pulumi.IntInput) GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRule {
		return vs[0].([]GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRule)[vs[1].(int)]
	}).(GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleOutput)
}

type GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetails struct {
	Condition string `pulumi:"condition"`
	// Configuration details
	Configurations []GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfiguration `pulumi:"configurations"`
	// configuration allowed or not
	IsConfigurationAllowed bool `pulumi:"isConfigurationAllowed"`
	// Enables the control
	IsEnabled bool `pulumi:"isEnabled"`
	// user defined labels for a detector rule
	Labels []string `pulumi:"labels"`
	// The Risk Level
	RiskLevel string `pulumi:"riskLevel"`
}

// GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsInput is an input type that accepts GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsArgs and GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsOutput values.
// You can construct a concrete instance of `GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsInput` via:
//
//          GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsArgs{...}
type GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsInput interface {
	pulumi.Input

	ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsOutput() GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsOutput
	ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsOutputWithContext(context.Context) GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsOutput
}

type GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsArgs struct {
	Condition pulumi.StringInput `pulumi:"condition"`
	// Configuration details
	Configurations GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationArrayInput `pulumi:"configurations"`
	// configuration allowed or not
	IsConfigurationAllowed pulumi.BoolInput `pulumi:"isConfigurationAllowed"`
	// Enables the control
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// user defined labels for a detector rule
	Labels pulumi.StringArrayInput `pulumi:"labels"`
	// The Risk Level
	RiskLevel pulumi.StringInput `pulumi:"riskLevel"`
}

func (GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetails)(nil)).Elem()
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsArgs) ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsOutput() GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsOutput {
	return i.ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsOutputWithContext(context.Background())
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsArgs) ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsOutput)
}

type GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetails)(nil)).Elem()
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsOutput() GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsOutput {
	return o
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsOutput {
	return o
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetails) string {
		return v.Condition
	}).(pulumi.StringOutput)
}

// Configuration details
func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsOutput) Configurations() GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationArrayOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetails) []GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfiguration {
		return v.Configurations
	}).(GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationArrayOutput)
}

// configuration allowed or not
func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsOutput) IsConfigurationAllowed() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetails) bool {
		return v.IsConfigurationAllowed
	}).(pulumi.BoolOutput)
}

// Enables the control
func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetails) bool {
		return v.IsEnabled
	}).(pulumi.BoolOutput)
}

// user defined labels for a detector rule
func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsOutput) Labels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetails) []string {
		return v.Labels
	}).(pulumi.StringArrayOutput)
}

// The Risk Level
func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsOutput) RiskLevel() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetails) string {
		return v.RiskLevel
	}).(pulumi.StringOutput)
}

type GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfiguration struct {
	// Unique name of the configuration
	ConfigKey string `pulumi:"configKey"`
	// configuration data type
	DataType string `pulumi:"dataType"`
	// configuration name
	Name string `pulumi:"name"`
	// configuration value
	Value string `pulumi:"value"`
	// List of configuration values
	Values []GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationValue `pulumi:"values"`
}

// GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationInput is an input type that accepts GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationArgs and GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationOutput values.
// You can construct a concrete instance of `GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationInput` via:
//
//          GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationArgs{...}
type GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationInput interface {
	pulumi.Input

	ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationOutput() GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationOutput
	ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationOutputWithContext(context.Context) GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationOutput
}

type GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationArgs struct {
	// Unique name of the configuration
	ConfigKey pulumi.StringInput `pulumi:"configKey"`
	// configuration data type
	DataType pulumi.StringInput `pulumi:"dataType"`
	// configuration name
	Name pulumi.StringInput `pulumi:"name"`
	// configuration value
	Value pulumi.StringInput `pulumi:"value"`
	// List of configuration values
	Values GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationValueArrayInput `pulumi:"values"`
}

func (GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfiguration)(nil)).Elem()
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationArgs) ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationOutput() GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationOutput {
	return i.ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationOutputWithContext(context.Background())
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationArgs) ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationOutput)
}

// GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationArrayInput is an input type that accepts GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationArray and GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationArrayOutput values.
// You can construct a concrete instance of `GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationArrayInput` via:
//
//          GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationArray{ GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationArgs{...} }
type GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationArrayInput interface {
	pulumi.Input

	ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationArrayOutput() GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationArrayOutput
	ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationArrayOutputWithContext(context.Context) GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationArrayOutput
}

type GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationArray []GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationInput

func (GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfiguration)(nil)).Elem()
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationArray) ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationArrayOutput() GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationArrayOutput {
	return i.ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationArrayOutputWithContext(context.Background())
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationArray) ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationArrayOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationArrayOutput)
}

type GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfiguration)(nil)).Elem()
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationOutput() GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationOutput {
	return o
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationOutput {
	return o
}

// Unique name of the configuration
func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationOutput) ConfigKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfiguration) string {
		return v.ConfigKey
	}).(pulumi.StringOutput)
}

// configuration data type
func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationOutput) DataType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfiguration) string {
		return v.DataType
	}).(pulumi.StringOutput)
}

// configuration name
func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfiguration) string {
		return v.Name
	}).(pulumi.StringOutput)
}

// configuration value
func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfiguration) string {
		return v.Value
	}).(pulumi.StringOutput)
}

// List of configuration values
func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationOutput) Values() GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationValueArrayOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfiguration) []GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationValue {
		return v.Values
	}).(GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationValueArrayOutput)
}

type GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfiguration)(nil)).Elem()
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationArrayOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationArrayOutput() GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationArrayOutput {
	return o
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationArrayOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationArrayOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationArrayOutput {
	return o
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationArrayOutput) Index(i pulumi.IntInput) GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfiguration {
		return vs[0].([]GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfiguration)[vs[1].(int)]
	}).(GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationOutput)
}

type GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationValue struct {
	// configuration list item type, either CUSTOM or MANAGED
	ListType string `pulumi:"listType"`
	// type of the managed list
	ManagedListType string `pulumi:"managedListType"`
	// configuration value
	Value string `pulumi:"value"`
}

// GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationValueInput is an input type that accepts GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationValueArgs and GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationValueOutput values.
// You can construct a concrete instance of `GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationValueInput` via:
//
//          GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationValueArgs{...}
type GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationValueInput interface {
	pulumi.Input

	ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationValueOutput() GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationValueOutput
	ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationValueOutputWithContext(context.Context) GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationValueOutput
}

type GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationValueArgs struct {
	// configuration list item type, either CUSTOM or MANAGED
	ListType pulumi.StringInput `pulumi:"listType"`
	// type of the managed list
	ManagedListType pulumi.StringInput `pulumi:"managedListType"`
	// configuration value
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationValue)(nil)).Elem()
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationValueArgs) ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationValueOutput() GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationValueOutput {
	return i.ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationValueOutputWithContext(context.Background())
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationValueArgs) ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationValueOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationValueOutput)
}

// GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationValueArrayInput is an input type that accepts GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationValueArray and GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationValueArrayOutput values.
// You can construct a concrete instance of `GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationValueArrayInput` via:
//
//          GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationValueArray{ GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationValueArgs{...} }
type GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationValueArrayInput interface {
	pulumi.Input

	ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationValueArrayOutput() GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationValueArrayOutput
	ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationValueArrayOutputWithContext(context.Context) GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationValueArrayOutput
}

type GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationValueArray []GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationValueInput

func (GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationValue)(nil)).Elem()
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationValueArray) ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationValueArrayOutput() GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationValueArrayOutput {
	return i.ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationValueArrayOutputWithContext(context.Background())
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationValueArray) ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationValueArrayOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationValueArrayOutput)
}

type GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationValueOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationValue)(nil)).Elem()
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationValueOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationValueOutput() GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationValueOutput {
	return o
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationValueOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationValueOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationValueOutput {
	return o
}

// configuration list item type, either CUSTOM or MANAGED
func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationValueOutput) ListType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationValue) string {
		return v.ListType
	}).(pulumi.StringOutput)
}

// type of the managed list
func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationValueOutput) ManagedListType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationValue) string {
		return v.ManagedListType
	}).(pulumi.StringOutput)
}

// configuration value
func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationValueOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationValue) string {
		return v.Value
	}).(pulumi.StringOutput)
}

type GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationValueArrayOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationValue)(nil)).Elem()
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationValueArrayOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationValueArrayOutput() GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationValueArrayOutput {
	return o
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationValueArrayOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationValueArrayOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationValueArrayOutput {
	return o
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationValueArrayOutput) Index(i pulumi.IntInput) GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationValue {
		return vs[0].([]GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationValue)[vs[1].(int)]
	}).(GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationValueOutput)
}

type GetDetectorRecipesFilter struct {
	// configuration name
	Name  string `pulumi:"name"`
	Regex *bool  `pulumi:"regex"`
	// List of configuration values
	Values []string `pulumi:"values"`
}

// GetDetectorRecipesFilterInput is an input type that accepts GetDetectorRecipesFilterArgs and GetDetectorRecipesFilterOutput values.
// You can construct a concrete instance of `GetDetectorRecipesFilterInput` via:
//
//          GetDetectorRecipesFilterArgs{...}
type GetDetectorRecipesFilterInput interface {
	pulumi.Input

	ToGetDetectorRecipesFilterOutput() GetDetectorRecipesFilterOutput
	ToGetDetectorRecipesFilterOutputWithContext(context.Context) GetDetectorRecipesFilterOutput
}

type GetDetectorRecipesFilterArgs struct {
	// configuration name
	Name  pulumi.StringInput  `pulumi:"name"`
	Regex pulumi.BoolPtrInput `pulumi:"regex"`
	// List of configuration values
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetDetectorRecipesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipesFilter)(nil)).Elem()
}

func (i GetDetectorRecipesFilterArgs) ToGetDetectorRecipesFilterOutput() GetDetectorRecipesFilterOutput {
	return i.ToGetDetectorRecipesFilterOutputWithContext(context.Background())
}

func (i GetDetectorRecipesFilterArgs) ToGetDetectorRecipesFilterOutputWithContext(ctx context.Context) GetDetectorRecipesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipesFilterOutput)
}

// GetDetectorRecipesFilterArrayInput is an input type that accepts GetDetectorRecipesFilterArray and GetDetectorRecipesFilterArrayOutput values.
// You can construct a concrete instance of `GetDetectorRecipesFilterArrayInput` via:
//
//          GetDetectorRecipesFilterArray{ GetDetectorRecipesFilterArgs{...} }
type GetDetectorRecipesFilterArrayInput interface {
	pulumi.Input

	ToGetDetectorRecipesFilterArrayOutput() GetDetectorRecipesFilterArrayOutput
	ToGetDetectorRecipesFilterArrayOutputWithContext(context.Context) GetDetectorRecipesFilterArrayOutput
}

type GetDetectorRecipesFilterArray []GetDetectorRecipesFilterInput

func (GetDetectorRecipesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipesFilter)(nil)).Elem()
}

func (i GetDetectorRecipesFilterArray) ToGetDetectorRecipesFilterArrayOutput() GetDetectorRecipesFilterArrayOutput {
	return i.ToGetDetectorRecipesFilterArrayOutputWithContext(context.Background())
}

func (i GetDetectorRecipesFilterArray) ToGetDetectorRecipesFilterArrayOutputWithContext(ctx context.Context) GetDetectorRecipesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipesFilterArrayOutput)
}

type GetDetectorRecipesFilterOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipesFilter)(nil)).Elem()
}

func (o GetDetectorRecipesFilterOutput) ToGetDetectorRecipesFilterOutput() GetDetectorRecipesFilterOutput {
	return o
}

func (o GetDetectorRecipesFilterOutput) ToGetDetectorRecipesFilterOutputWithContext(ctx context.Context) GetDetectorRecipesFilterOutput {
	return o
}

// configuration name
func (o GetDetectorRecipesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetDetectorRecipesFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetDetectorRecipesFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

// List of configuration values
func (o GetDetectorRecipesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDetectorRecipesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetDetectorRecipesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipesFilter)(nil)).Elem()
}

func (o GetDetectorRecipesFilterArrayOutput) ToGetDetectorRecipesFilterArrayOutput() GetDetectorRecipesFilterArrayOutput {
	return o
}

func (o GetDetectorRecipesFilterArrayOutput) ToGetDetectorRecipesFilterArrayOutputWithContext(ctx context.Context) GetDetectorRecipesFilterArrayOutput {
	return o
}

func (o GetDetectorRecipesFilterArrayOutput) Index(i pulumi.IntInput) GetDetectorRecipesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDetectorRecipesFilter {
		return vs[0].([]GetDetectorRecipesFilter)[vs[1].(int)]
	}).(GetDetectorRecipesFilterOutput)
}

type GetManagedListsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetManagedListsFilterInput is an input type that accepts GetManagedListsFilterArgs and GetManagedListsFilterOutput values.
// You can construct a concrete instance of `GetManagedListsFilterInput` via:
//
//          GetManagedListsFilterArgs{...}
type GetManagedListsFilterInput interface {
	pulumi.Input

	ToGetManagedListsFilterOutput() GetManagedListsFilterOutput
	ToGetManagedListsFilterOutputWithContext(context.Context) GetManagedListsFilterOutput
}

type GetManagedListsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetManagedListsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedListsFilter)(nil)).Elem()
}

func (i GetManagedListsFilterArgs) ToGetManagedListsFilterOutput() GetManagedListsFilterOutput {
	return i.ToGetManagedListsFilterOutputWithContext(context.Background())
}

func (i GetManagedListsFilterArgs) ToGetManagedListsFilterOutputWithContext(ctx context.Context) GetManagedListsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedListsFilterOutput)
}

// GetManagedListsFilterArrayInput is an input type that accepts GetManagedListsFilterArray and GetManagedListsFilterArrayOutput values.
// You can construct a concrete instance of `GetManagedListsFilterArrayInput` via:
//
//          GetManagedListsFilterArray{ GetManagedListsFilterArgs{...} }
type GetManagedListsFilterArrayInput interface {
	pulumi.Input

	ToGetManagedListsFilterArrayOutput() GetManagedListsFilterArrayOutput
	ToGetManagedListsFilterArrayOutputWithContext(context.Context) GetManagedListsFilterArrayOutput
}

type GetManagedListsFilterArray []GetManagedListsFilterInput

func (GetManagedListsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedListsFilter)(nil)).Elem()
}

func (i GetManagedListsFilterArray) ToGetManagedListsFilterArrayOutput() GetManagedListsFilterArrayOutput {
	return i.ToGetManagedListsFilterArrayOutputWithContext(context.Background())
}

func (i GetManagedListsFilterArray) ToGetManagedListsFilterArrayOutputWithContext(ctx context.Context) GetManagedListsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedListsFilterArrayOutput)
}

type GetManagedListsFilterOutput struct{ *pulumi.OutputState }

func (GetManagedListsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedListsFilter)(nil)).Elem()
}

func (o GetManagedListsFilterOutput) ToGetManagedListsFilterOutput() GetManagedListsFilterOutput {
	return o
}

func (o GetManagedListsFilterOutput) ToGetManagedListsFilterOutputWithContext(ctx context.Context) GetManagedListsFilterOutput {
	return o
}

func (o GetManagedListsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedListsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetManagedListsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetManagedListsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetManagedListsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetManagedListsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetManagedListsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetManagedListsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedListsFilter)(nil)).Elem()
}

func (o GetManagedListsFilterArrayOutput) ToGetManagedListsFilterArrayOutput() GetManagedListsFilterArrayOutput {
	return o
}

func (o GetManagedListsFilterArrayOutput) ToGetManagedListsFilterArrayOutputWithContext(ctx context.Context) GetManagedListsFilterArrayOutput {
	return o
}

func (o GetManagedListsFilterArrayOutput) Index(i pulumi.IntInput) GetManagedListsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetManagedListsFilter {
		return vs[0].([]GetManagedListsFilter)[vs[1].(int)]
	}).(GetManagedListsFilterOutput)
}

type GetManagedListsManagedListCollection struct {
	Items []GetManagedListsManagedListCollectionItem `pulumi:"items"`
}

// GetManagedListsManagedListCollectionInput is an input type that accepts GetManagedListsManagedListCollectionArgs and GetManagedListsManagedListCollectionOutput values.
// You can construct a concrete instance of `GetManagedListsManagedListCollectionInput` via:
//
//          GetManagedListsManagedListCollectionArgs{...}
type GetManagedListsManagedListCollectionInput interface {
	pulumi.Input

	ToGetManagedListsManagedListCollectionOutput() GetManagedListsManagedListCollectionOutput
	ToGetManagedListsManagedListCollectionOutputWithContext(context.Context) GetManagedListsManagedListCollectionOutput
}

type GetManagedListsManagedListCollectionArgs struct {
	Items GetManagedListsManagedListCollectionItemArrayInput `pulumi:"items"`
}

func (GetManagedListsManagedListCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedListsManagedListCollection)(nil)).Elem()
}

func (i GetManagedListsManagedListCollectionArgs) ToGetManagedListsManagedListCollectionOutput() GetManagedListsManagedListCollectionOutput {
	return i.ToGetManagedListsManagedListCollectionOutputWithContext(context.Background())
}

func (i GetManagedListsManagedListCollectionArgs) ToGetManagedListsManagedListCollectionOutputWithContext(ctx context.Context) GetManagedListsManagedListCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedListsManagedListCollectionOutput)
}

// GetManagedListsManagedListCollectionArrayInput is an input type that accepts GetManagedListsManagedListCollectionArray and GetManagedListsManagedListCollectionArrayOutput values.
// You can construct a concrete instance of `GetManagedListsManagedListCollectionArrayInput` via:
//
//          GetManagedListsManagedListCollectionArray{ GetManagedListsManagedListCollectionArgs{...} }
type GetManagedListsManagedListCollectionArrayInput interface {
	pulumi.Input

	ToGetManagedListsManagedListCollectionArrayOutput() GetManagedListsManagedListCollectionArrayOutput
	ToGetManagedListsManagedListCollectionArrayOutputWithContext(context.Context) GetManagedListsManagedListCollectionArrayOutput
}

type GetManagedListsManagedListCollectionArray []GetManagedListsManagedListCollectionInput

func (GetManagedListsManagedListCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedListsManagedListCollection)(nil)).Elem()
}

func (i GetManagedListsManagedListCollectionArray) ToGetManagedListsManagedListCollectionArrayOutput() GetManagedListsManagedListCollectionArrayOutput {
	return i.ToGetManagedListsManagedListCollectionArrayOutputWithContext(context.Background())
}

func (i GetManagedListsManagedListCollectionArray) ToGetManagedListsManagedListCollectionArrayOutputWithContext(ctx context.Context) GetManagedListsManagedListCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedListsManagedListCollectionArrayOutput)
}

type GetManagedListsManagedListCollectionOutput struct{ *pulumi.OutputState }

func (GetManagedListsManagedListCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedListsManagedListCollection)(nil)).Elem()
}

func (o GetManagedListsManagedListCollectionOutput) ToGetManagedListsManagedListCollectionOutput() GetManagedListsManagedListCollectionOutput {
	return o
}

func (o GetManagedListsManagedListCollectionOutput) ToGetManagedListsManagedListCollectionOutputWithContext(ctx context.Context) GetManagedListsManagedListCollectionOutput {
	return o
}

func (o GetManagedListsManagedListCollectionOutput) Items() GetManagedListsManagedListCollectionItemArrayOutput {
	return o.ApplyT(func(v GetManagedListsManagedListCollection) []GetManagedListsManagedListCollectionItem {
		return v.Items
	}).(GetManagedListsManagedListCollectionItemArrayOutput)
}

type GetManagedListsManagedListCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetManagedListsManagedListCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedListsManagedListCollection)(nil)).Elem()
}

func (o GetManagedListsManagedListCollectionArrayOutput) ToGetManagedListsManagedListCollectionArrayOutput() GetManagedListsManagedListCollectionArrayOutput {
	return o
}

func (o GetManagedListsManagedListCollectionArrayOutput) ToGetManagedListsManagedListCollectionArrayOutputWithContext(ctx context.Context) GetManagedListsManagedListCollectionArrayOutput {
	return o
}

func (o GetManagedListsManagedListCollectionArrayOutput) Index(i pulumi.IntInput) GetManagedListsManagedListCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetManagedListsManagedListCollection {
		return vs[0].([]GetManagedListsManagedListCollection)[vs[1].(int)]
	}).(GetManagedListsManagedListCollectionOutput)
}

type GetManagedListsManagedListCollectionItem struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// ManagedList description
	Description string `pulumi:"description"`
	// A filter to return only resources that match the entire display name given.
	DisplayName string `pulumi:"displayName"`
	// provider of the feed
	FeedProvider string `pulumi:"feedProvider"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// Unique identifier that is immutable on creation
	Id string `pulumi:"id"`
	// If this list is editable or not
	IsEditable bool `pulumi:"isEditable"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecyleDetails string `pulumi:"lifecyleDetails"`
	// List of ManagedListItem
	ListItems []string `pulumi:"listItems"`
	// The type of the ManagedList.
	ListType string `pulumi:"listType"`
	// OCID of the Source ManagedList
	SourceManagedListId string `pulumi:"sourceManagedListId"`
	// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
	State string `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// The date and time the managed list was created. Format defined by RFC3339.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the managed list was updated. Format defined by RFC3339.
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetManagedListsManagedListCollectionItemInput is an input type that accepts GetManagedListsManagedListCollectionItemArgs and GetManagedListsManagedListCollectionItemOutput values.
// You can construct a concrete instance of `GetManagedListsManagedListCollectionItemInput` via:
//
//          GetManagedListsManagedListCollectionItemArgs{...}
type GetManagedListsManagedListCollectionItemInput interface {
	pulumi.Input

	ToGetManagedListsManagedListCollectionItemOutput() GetManagedListsManagedListCollectionItemOutput
	ToGetManagedListsManagedListCollectionItemOutputWithContext(context.Context) GetManagedListsManagedListCollectionItemOutput
}

type GetManagedListsManagedListCollectionItemArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// ManagedList description
	Description pulumi.StringInput `pulumi:"description"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// provider of the feed
	FeedProvider pulumi.StringInput `pulumi:"feedProvider"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// Unique identifier that is immutable on creation
	Id pulumi.StringInput `pulumi:"id"`
	// If this list is editable or not
	IsEditable pulumi.BoolInput `pulumi:"isEditable"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecyleDetails pulumi.StringInput `pulumi:"lifecyleDetails"`
	// List of ManagedListItem
	ListItems pulumi.StringArrayInput `pulumi:"listItems"`
	// The type of the ManagedList.
	ListType pulumi.StringInput `pulumi:"listType"`
	// OCID of the Source ManagedList
	SourceManagedListId pulumi.StringInput `pulumi:"sourceManagedListId"`
	// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
	State pulumi.StringInput `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapInput `pulumi:"systemTags"`
	// The date and time the managed list was created. Format defined by RFC3339.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The date and time the managed list was updated. Format defined by RFC3339.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetManagedListsManagedListCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedListsManagedListCollectionItem)(nil)).Elem()
}

func (i GetManagedListsManagedListCollectionItemArgs) ToGetManagedListsManagedListCollectionItemOutput() GetManagedListsManagedListCollectionItemOutput {
	return i.ToGetManagedListsManagedListCollectionItemOutputWithContext(context.Background())
}

func (i GetManagedListsManagedListCollectionItemArgs) ToGetManagedListsManagedListCollectionItemOutputWithContext(ctx context.Context) GetManagedListsManagedListCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedListsManagedListCollectionItemOutput)
}

// GetManagedListsManagedListCollectionItemArrayInput is an input type that accepts GetManagedListsManagedListCollectionItemArray and GetManagedListsManagedListCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetManagedListsManagedListCollectionItemArrayInput` via:
//
//          GetManagedListsManagedListCollectionItemArray{ GetManagedListsManagedListCollectionItemArgs{...} }
type GetManagedListsManagedListCollectionItemArrayInput interface {
	pulumi.Input

	ToGetManagedListsManagedListCollectionItemArrayOutput() GetManagedListsManagedListCollectionItemArrayOutput
	ToGetManagedListsManagedListCollectionItemArrayOutputWithContext(context.Context) GetManagedListsManagedListCollectionItemArrayOutput
}

type GetManagedListsManagedListCollectionItemArray []GetManagedListsManagedListCollectionItemInput

func (GetManagedListsManagedListCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedListsManagedListCollectionItem)(nil)).Elem()
}

func (i GetManagedListsManagedListCollectionItemArray) ToGetManagedListsManagedListCollectionItemArrayOutput() GetManagedListsManagedListCollectionItemArrayOutput {
	return i.ToGetManagedListsManagedListCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetManagedListsManagedListCollectionItemArray) ToGetManagedListsManagedListCollectionItemArrayOutputWithContext(ctx context.Context) GetManagedListsManagedListCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedListsManagedListCollectionItemArrayOutput)
}

type GetManagedListsManagedListCollectionItemOutput struct{ *pulumi.OutputState }

func (GetManagedListsManagedListCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedListsManagedListCollectionItem)(nil)).Elem()
}

func (o GetManagedListsManagedListCollectionItemOutput) ToGetManagedListsManagedListCollectionItemOutput() GetManagedListsManagedListCollectionItemOutput {
	return o
}

func (o GetManagedListsManagedListCollectionItemOutput) ToGetManagedListsManagedListCollectionItemOutputWithContext(ctx context.Context) GetManagedListsManagedListCollectionItemOutput {
	return o
}

// The ID of the compartment in which to list resources.
func (o GetManagedListsManagedListCollectionItemOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedListsManagedListCollectionItem) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetManagedListsManagedListCollectionItemOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetManagedListsManagedListCollectionItem) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// ManagedList description
func (o GetManagedListsManagedListCollectionItemOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedListsManagedListCollectionItem) string { return v.Description }).(pulumi.StringOutput)
}

// A filter to return only resources that match the entire display name given.
func (o GetManagedListsManagedListCollectionItemOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedListsManagedListCollectionItem) string { return v.DisplayName }).(pulumi.StringOutput)
}

// provider of the feed
func (o GetManagedListsManagedListCollectionItemOutput) FeedProvider() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedListsManagedListCollectionItem) string { return v.FeedProvider }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetManagedListsManagedListCollectionItemOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetManagedListsManagedListCollectionItem) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// Unique identifier that is immutable on creation
func (o GetManagedListsManagedListCollectionItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedListsManagedListCollectionItem) string { return v.Id }).(pulumi.StringOutput)
}

// If this list is editable or not
func (o GetManagedListsManagedListCollectionItemOutput) IsEditable() pulumi.BoolOutput {
	return o.ApplyT(func(v GetManagedListsManagedListCollectionItem) bool { return v.IsEditable }).(pulumi.BoolOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o GetManagedListsManagedListCollectionItemOutput) LifecyleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedListsManagedListCollectionItem) string { return v.LifecyleDetails }).(pulumi.StringOutput)
}

// List of ManagedListItem
func (o GetManagedListsManagedListCollectionItemOutput) ListItems() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetManagedListsManagedListCollectionItem) []string { return v.ListItems }).(pulumi.StringArrayOutput)
}

// The type of the ManagedList.
func (o GetManagedListsManagedListCollectionItemOutput) ListType() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedListsManagedListCollectionItem) string { return v.ListType }).(pulumi.StringOutput)
}

// OCID of the Source ManagedList
func (o GetManagedListsManagedListCollectionItemOutput) SourceManagedListId() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedListsManagedListCollectionItem) string { return v.SourceManagedListId }).(pulumi.StringOutput)
}

// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
func (o GetManagedListsManagedListCollectionItemOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedListsManagedListCollectionItem) string { return v.State }).(pulumi.StringOutput)
}

// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o GetManagedListsManagedListCollectionItemOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetManagedListsManagedListCollectionItem) map[string]interface{} { return v.SystemTags }).(pulumi.MapOutput)
}

// The date and time the managed list was created. Format defined by RFC3339.
func (o GetManagedListsManagedListCollectionItemOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedListsManagedListCollectionItem) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the managed list was updated. Format defined by RFC3339.
func (o GetManagedListsManagedListCollectionItemOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedListsManagedListCollectionItem) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetManagedListsManagedListCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetManagedListsManagedListCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedListsManagedListCollectionItem)(nil)).Elem()
}

func (o GetManagedListsManagedListCollectionItemArrayOutput) ToGetManagedListsManagedListCollectionItemArrayOutput() GetManagedListsManagedListCollectionItemArrayOutput {
	return o
}

func (o GetManagedListsManagedListCollectionItemArrayOutput) ToGetManagedListsManagedListCollectionItemArrayOutputWithContext(ctx context.Context) GetManagedListsManagedListCollectionItemArrayOutput {
	return o
}

func (o GetManagedListsManagedListCollectionItemArrayOutput) Index(i pulumi.IntInput) GetManagedListsManagedListCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetManagedListsManagedListCollectionItem {
		return vs[0].([]GetManagedListsManagedListCollectionItem)[vs[1].(int)]
	}).(GetManagedListsManagedListCollectionItemOutput)
}

type GetResponderRecipeEffectiveResponderRule struct {
	// Compartment Identifier
	CompartmentId string `pulumi:"compartmentId"`
	// ResponderRule Description
	Description string `pulumi:"description"`
	// Details of ResponderRule.
	Details GetResponderRecipeEffectiveResponderRuleDetails `pulumi:"details"`
	// ResponderRule Display Name
	DisplayName string `pulumi:"displayName"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// List of Policy
	Policies []string `pulumi:"policies"`
	// Identifier for ResponderRule.
	ResponderRuleId string `pulumi:"responderRuleId"`
	// The current state of the Example.
	State string `pulumi:"state"`
	// Supported Execution Modes
	SupportedModes []string `pulumi:"supportedModes"`
	// The date and time the responder recipe was created. Format defined by RFC3339.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the responder recipe was updated. Format defined by RFC3339.
	TimeUpdated string `pulumi:"timeUpdated"`
	// Type of Responder
	Type string `pulumi:"type"`
}

// GetResponderRecipeEffectiveResponderRuleInput is an input type that accepts GetResponderRecipeEffectiveResponderRuleArgs and GetResponderRecipeEffectiveResponderRuleOutput values.
// You can construct a concrete instance of `GetResponderRecipeEffectiveResponderRuleInput` via:
//
//          GetResponderRecipeEffectiveResponderRuleArgs{...}
type GetResponderRecipeEffectiveResponderRuleInput interface {
	pulumi.Input

	ToGetResponderRecipeEffectiveResponderRuleOutput() GetResponderRecipeEffectiveResponderRuleOutput
	ToGetResponderRecipeEffectiveResponderRuleOutputWithContext(context.Context) GetResponderRecipeEffectiveResponderRuleOutput
}

type GetResponderRecipeEffectiveResponderRuleArgs struct {
	// Compartment Identifier
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// ResponderRule Description
	Description pulumi.StringInput `pulumi:"description"`
	// Details of ResponderRule.
	Details GetResponderRecipeEffectiveResponderRuleDetailsInput `pulumi:"details"`
	// ResponderRule Display Name
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// List of Policy
	Policies pulumi.StringArrayInput `pulumi:"policies"`
	// Identifier for ResponderRule.
	ResponderRuleId pulumi.StringInput `pulumi:"responderRuleId"`
	// The current state of the Example.
	State pulumi.StringInput `pulumi:"state"`
	// Supported Execution Modes
	SupportedModes pulumi.StringArrayInput `pulumi:"supportedModes"`
	// The date and time the responder recipe was created. Format defined by RFC3339.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The date and time the responder recipe was updated. Format defined by RFC3339.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
	// Type of Responder
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetResponderRecipeEffectiveResponderRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponderRecipeEffectiveResponderRule)(nil)).Elem()
}

func (i GetResponderRecipeEffectiveResponderRuleArgs) ToGetResponderRecipeEffectiveResponderRuleOutput() GetResponderRecipeEffectiveResponderRuleOutput {
	return i.ToGetResponderRecipeEffectiveResponderRuleOutputWithContext(context.Background())
}

func (i GetResponderRecipeEffectiveResponderRuleArgs) ToGetResponderRecipeEffectiveResponderRuleOutputWithContext(ctx context.Context) GetResponderRecipeEffectiveResponderRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResponderRecipeEffectiveResponderRuleOutput)
}

// GetResponderRecipeEffectiveResponderRuleArrayInput is an input type that accepts GetResponderRecipeEffectiveResponderRuleArray and GetResponderRecipeEffectiveResponderRuleArrayOutput values.
// You can construct a concrete instance of `GetResponderRecipeEffectiveResponderRuleArrayInput` via:
//
//          GetResponderRecipeEffectiveResponderRuleArray{ GetResponderRecipeEffectiveResponderRuleArgs{...} }
type GetResponderRecipeEffectiveResponderRuleArrayInput interface {
	pulumi.Input

	ToGetResponderRecipeEffectiveResponderRuleArrayOutput() GetResponderRecipeEffectiveResponderRuleArrayOutput
	ToGetResponderRecipeEffectiveResponderRuleArrayOutputWithContext(context.Context) GetResponderRecipeEffectiveResponderRuleArrayOutput
}

type GetResponderRecipeEffectiveResponderRuleArray []GetResponderRecipeEffectiveResponderRuleInput

func (GetResponderRecipeEffectiveResponderRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResponderRecipeEffectiveResponderRule)(nil)).Elem()
}

func (i GetResponderRecipeEffectiveResponderRuleArray) ToGetResponderRecipeEffectiveResponderRuleArrayOutput() GetResponderRecipeEffectiveResponderRuleArrayOutput {
	return i.ToGetResponderRecipeEffectiveResponderRuleArrayOutputWithContext(context.Background())
}

func (i GetResponderRecipeEffectiveResponderRuleArray) ToGetResponderRecipeEffectiveResponderRuleArrayOutputWithContext(ctx context.Context) GetResponderRecipeEffectiveResponderRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResponderRecipeEffectiveResponderRuleArrayOutput)
}

type GetResponderRecipeEffectiveResponderRuleOutput struct{ *pulumi.OutputState }

func (GetResponderRecipeEffectiveResponderRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponderRecipeEffectiveResponderRule)(nil)).Elem()
}

func (o GetResponderRecipeEffectiveResponderRuleOutput) ToGetResponderRecipeEffectiveResponderRuleOutput() GetResponderRecipeEffectiveResponderRuleOutput {
	return o
}

func (o GetResponderRecipeEffectiveResponderRuleOutput) ToGetResponderRecipeEffectiveResponderRuleOutputWithContext(ctx context.Context) GetResponderRecipeEffectiveResponderRuleOutput {
	return o
}

// Compartment Identifier
func (o GetResponderRecipeEffectiveResponderRuleOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipeEffectiveResponderRule) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// ResponderRule Description
func (o GetResponderRecipeEffectiveResponderRuleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipeEffectiveResponderRule) string { return v.Description }).(pulumi.StringOutput)
}

// Details of ResponderRule.
func (o GetResponderRecipeEffectiveResponderRuleOutput) Details() GetResponderRecipeEffectiveResponderRuleDetailsOutput {
	return o.ApplyT(func(v GetResponderRecipeEffectiveResponderRule) GetResponderRecipeEffectiveResponderRuleDetails {
		return v.Details
	}).(GetResponderRecipeEffectiveResponderRuleDetailsOutput)
}

// ResponderRule Display Name
func (o GetResponderRecipeEffectiveResponderRuleOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipeEffectiveResponderRule) string { return v.DisplayName }).(pulumi.StringOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o GetResponderRecipeEffectiveResponderRuleOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipeEffectiveResponderRule) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// List of Policy
func (o GetResponderRecipeEffectiveResponderRuleOutput) Policies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetResponderRecipeEffectiveResponderRule) []string { return v.Policies }).(pulumi.StringArrayOutput)
}

// Identifier for ResponderRule.
func (o GetResponderRecipeEffectiveResponderRuleOutput) ResponderRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipeEffectiveResponderRule) string { return v.ResponderRuleId }).(pulumi.StringOutput)
}

// The current state of the Example.
func (o GetResponderRecipeEffectiveResponderRuleOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipeEffectiveResponderRule) string { return v.State }).(pulumi.StringOutput)
}

// Supported Execution Modes
func (o GetResponderRecipeEffectiveResponderRuleOutput) SupportedModes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetResponderRecipeEffectiveResponderRule) []string { return v.SupportedModes }).(pulumi.StringArrayOutput)
}

// The date and time the responder recipe was created. Format defined by RFC3339.
func (o GetResponderRecipeEffectiveResponderRuleOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipeEffectiveResponderRule) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the responder recipe was updated. Format defined by RFC3339.
func (o GetResponderRecipeEffectiveResponderRuleOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipeEffectiveResponderRule) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

// Type of Responder
func (o GetResponderRecipeEffectiveResponderRuleOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipeEffectiveResponderRule) string { return v.Type }).(pulumi.StringOutput)
}

type GetResponderRecipeEffectiveResponderRuleArrayOutput struct{ *pulumi.OutputState }

func (GetResponderRecipeEffectiveResponderRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResponderRecipeEffectiveResponderRule)(nil)).Elem()
}

func (o GetResponderRecipeEffectiveResponderRuleArrayOutput) ToGetResponderRecipeEffectiveResponderRuleArrayOutput() GetResponderRecipeEffectiveResponderRuleArrayOutput {
	return o
}

func (o GetResponderRecipeEffectiveResponderRuleArrayOutput) ToGetResponderRecipeEffectiveResponderRuleArrayOutputWithContext(ctx context.Context) GetResponderRecipeEffectiveResponderRuleArrayOutput {
	return o
}

func (o GetResponderRecipeEffectiveResponderRuleArrayOutput) Index(i pulumi.IntInput) GetResponderRecipeEffectiveResponderRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetResponderRecipeEffectiveResponderRule {
		return vs[0].([]GetResponderRecipeEffectiveResponderRule)[vs[1].(int)]
	}).(GetResponderRecipeEffectiveResponderRuleOutput)
}

type GetResponderRecipeEffectiveResponderRuleDetails struct {
	Condition string `pulumi:"condition"`
	// ResponderRule configurations
	Configurations []GetResponderRecipeEffectiveResponderRuleDetailsConfiguration `pulumi:"configurations"`
	// Identifies state for ResponderRule
	IsEnabled bool `pulumi:"isEnabled"`
	// Execution Mode for ResponderRule
	Mode string `pulumi:"mode"`
}

// GetResponderRecipeEffectiveResponderRuleDetailsInput is an input type that accepts GetResponderRecipeEffectiveResponderRuleDetailsArgs and GetResponderRecipeEffectiveResponderRuleDetailsOutput values.
// You can construct a concrete instance of `GetResponderRecipeEffectiveResponderRuleDetailsInput` via:
//
//          GetResponderRecipeEffectiveResponderRuleDetailsArgs{...}
type GetResponderRecipeEffectiveResponderRuleDetailsInput interface {
	pulumi.Input

	ToGetResponderRecipeEffectiveResponderRuleDetailsOutput() GetResponderRecipeEffectiveResponderRuleDetailsOutput
	ToGetResponderRecipeEffectiveResponderRuleDetailsOutputWithContext(context.Context) GetResponderRecipeEffectiveResponderRuleDetailsOutput
}

type GetResponderRecipeEffectiveResponderRuleDetailsArgs struct {
	Condition pulumi.StringInput `pulumi:"condition"`
	// ResponderRule configurations
	Configurations GetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayInput `pulumi:"configurations"`
	// Identifies state for ResponderRule
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// Execution Mode for ResponderRule
	Mode pulumi.StringInput `pulumi:"mode"`
}

func (GetResponderRecipeEffectiveResponderRuleDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponderRecipeEffectiveResponderRuleDetails)(nil)).Elem()
}

func (i GetResponderRecipeEffectiveResponderRuleDetailsArgs) ToGetResponderRecipeEffectiveResponderRuleDetailsOutput() GetResponderRecipeEffectiveResponderRuleDetailsOutput {
	return i.ToGetResponderRecipeEffectiveResponderRuleDetailsOutputWithContext(context.Background())
}

func (i GetResponderRecipeEffectiveResponderRuleDetailsArgs) ToGetResponderRecipeEffectiveResponderRuleDetailsOutputWithContext(ctx context.Context) GetResponderRecipeEffectiveResponderRuleDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResponderRecipeEffectiveResponderRuleDetailsOutput)
}

type GetResponderRecipeEffectiveResponderRuleDetailsOutput struct{ *pulumi.OutputState }

func (GetResponderRecipeEffectiveResponderRuleDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponderRecipeEffectiveResponderRuleDetails)(nil)).Elem()
}

func (o GetResponderRecipeEffectiveResponderRuleDetailsOutput) ToGetResponderRecipeEffectiveResponderRuleDetailsOutput() GetResponderRecipeEffectiveResponderRuleDetailsOutput {
	return o
}

func (o GetResponderRecipeEffectiveResponderRuleDetailsOutput) ToGetResponderRecipeEffectiveResponderRuleDetailsOutputWithContext(ctx context.Context) GetResponderRecipeEffectiveResponderRuleDetailsOutput {
	return o
}

func (o GetResponderRecipeEffectiveResponderRuleDetailsOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipeEffectiveResponderRuleDetails) string { return v.Condition }).(pulumi.StringOutput)
}

// ResponderRule configurations
func (o GetResponderRecipeEffectiveResponderRuleDetailsOutput) Configurations() GetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput {
	return o.ApplyT(func(v GetResponderRecipeEffectiveResponderRuleDetails) []GetResponderRecipeEffectiveResponderRuleDetailsConfiguration {
		return v.Configurations
	}).(GetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput)
}

// Identifies state for ResponderRule
func (o GetResponderRecipeEffectiveResponderRuleDetailsOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetResponderRecipeEffectiveResponderRuleDetails) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// Execution Mode for ResponderRule
func (o GetResponderRecipeEffectiveResponderRuleDetailsOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipeEffectiveResponderRuleDetails) string { return v.Mode }).(pulumi.StringOutput)
}

type GetResponderRecipeEffectiveResponderRuleDetailsConfiguration struct {
	// Unique name of the configuration
	ConfigKey string `pulumi:"configKey"`
	// configuration name
	Name string `pulumi:"name"`
	// configuration value
	Value string `pulumi:"value"`
}

// GetResponderRecipeEffectiveResponderRuleDetailsConfigurationInput is an input type that accepts GetResponderRecipeEffectiveResponderRuleDetailsConfigurationArgs and GetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput values.
// You can construct a concrete instance of `GetResponderRecipeEffectiveResponderRuleDetailsConfigurationInput` via:
//
//          GetResponderRecipeEffectiveResponderRuleDetailsConfigurationArgs{...}
type GetResponderRecipeEffectiveResponderRuleDetailsConfigurationInput interface {
	pulumi.Input

	ToGetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput() GetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput
	ToGetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutputWithContext(context.Context) GetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput
}

type GetResponderRecipeEffectiveResponderRuleDetailsConfigurationArgs struct {
	// Unique name of the configuration
	ConfigKey pulumi.StringInput `pulumi:"configKey"`
	// configuration name
	Name pulumi.StringInput `pulumi:"name"`
	// configuration value
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetResponderRecipeEffectiveResponderRuleDetailsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponderRecipeEffectiveResponderRuleDetailsConfiguration)(nil)).Elem()
}

func (i GetResponderRecipeEffectiveResponderRuleDetailsConfigurationArgs) ToGetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput() GetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput {
	return i.ToGetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutputWithContext(context.Background())
}

func (i GetResponderRecipeEffectiveResponderRuleDetailsConfigurationArgs) ToGetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutputWithContext(ctx context.Context) GetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput)
}

// GetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayInput is an input type that accepts GetResponderRecipeEffectiveResponderRuleDetailsConfigurationArray and GetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput values.
// You can construct a concrete instance of `GetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayInput` via:
//
//          GetResponderRecipeEffectiveResponderRuleDetailsConfigurationArray{ GetResponderRecipeEffectiveResponderRuleDetailsConfigurationArgs{...} }
type GetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayInput interface {
	pulumi.Input

	ToGetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput() GetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput
	ToGetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutputWithContext(context.Context) GetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput
}

type GetResponderRecipeEffectiveResponderRuleDetailsConfigurationArray []GetResponderRecipeEffectiveResponderRuleDetailsConfigurationInput

func (GetResponderRecipeEffectiveResponderRuleDetailsConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResponderRecipeEffectiveResponderRuleDetailsConfiguration)(nil)).Elem()
}

func (i GetResponderRecipeEffectiveResponderRuleDetailsConfigurationArray) ToGetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput() GetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput {
	return i.ToGetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutputWithContext(context.Background())
}

func (i GetResponderRecipeEffectiveResponderRuleDetailsConfigurationArray) ToGetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutputWithContext(ctx context.Context) GetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput)
}

type GetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput struct{ *pulumi.OutputState }

func (GetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponderRecipeEffectiveResponderRuleDetailsConfiguration)(nil)).Elem()
}

func (o GetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput) ToGetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput() GetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput {
	return o
}

func (o GetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput) ToGetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutputWithContext(ctx context.Context) GetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput {
	return o
}

// Unique name of the configuration
func (o GetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput) ConfigKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipeEffectiveResponderRuleDetailsConfiguration) string { return v.ConfigKey }).(pulumi.StringOutput)
}

// configuration name
func (o GetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipeEffectiveResponderRuleDetailsConfiguration) string { return v.Name }).(pulumi.StringOutput)
}

// configuration value
func (o GetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipeEffectiveResponderRuleDetailsConfiguration) string { return v.Value }).(pulumi.StringOutput)
}

type GetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResponderRecipeEffectiveResponderRuleDetailsConfiguration)(nil)).Elem()
}

func (o GetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput) ToGetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput() GetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput {
	return o
}

func (o GetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput) ToGetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutputWithContext(ctx context.Context) GetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput {
	return o
}

func (o GetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput) Index(i pulumi.IntInput) GetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetResponderRecipeEffectiveResponderRuleDetailsConfiguration {
		return vs[0].([]GetResponderRecipeEffectiveResponderRuleDetailsConfiguration)[vs[1].(int)]
	}).(GetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput)
}

type GetResponderRecipeResponderRule struct {
	// Compartment Identifier
	CompartmentId string `pulumi:"compartmentId"`
	// ResponderRule Description
	Description string `pulumi:"description"`
	// Details of ResponderRule.
	Details GetResponderRecipeResponderRuleDetails `pulumi:"details"`
	// ResponderRule Display Name
	DisplayName string `pulumi:"displayName"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// List of Policy
	Policies []string `pulumi:"policies"`
	// Identifier for ResponderRule.
	ResponderRuleId string `pulumi:"responderRuleId"`
	// The current state of the Example.
	State string `pulumi:"state"`
	// Supported Execution Modes
	SupportedModes []string `pulumi:"supportedModes"`
	// The date and time the responder recipe was created. Format defined by RFC3339.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the responder recipe was updated. Format defined by RFC3339.
	TimeUpdated string `pulumi:"timeUpdated"`
	// Type of Responder
	Type string `pulumi:"type"`
}

// GetResponderRecipeResponderRuleInput is an input type that accepts GetResponderRecipeResponderRuleArgs and GetResponderRecipeResponderRuleOutput values.
// You can construct a concrete instance of `GetResponderRecipeResponderRuleInput` via:
//
//          GetResponderRecipeResponderRuleArgs{...}
type GetResponderRecipeResponderRuleInput interface {
	pulumi.Input

	ToGetResponderRecipeResponderRuleOutput() GetResponderRecipeResponderRuleOutput
	ToGetResponderRecipeResponderRuleOutputWithContext(context.Context) GetResponderRecipeResponderRuleOutput
}

type GetResponderRecipeResponderRuleArgs struct {
	// Compartment Identifier
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// ResponderRule Description
	Description pulumi.StringInput `pulumi:"description"`
	// Details of ResponderRule.
	Details GetResponderRecipeResponderRuleDetailsInput `pulumi:"details"`
	// ResponderRule Display Name
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// List of Policy
	Policies pulumi.StringArrayInput `pulumi:"policies"`
	// Identifier for ResponderRule.
	ResponderRuleId pulumi.StringInput `pulumi:"responderRuleId"`
	// The current state of the Example.
	State pulumi.StringInput `pulumi:"state"`
	// Supported Execution Modes
	SupportedModes pulumi.StringArrayInput `pulumi:"supportedModes"`
	// The date and time the responder recipe was created. Format defined by RFC3339.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The date and time the responder recipe was updated. Format defined by RFC3339.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
	// Type of Responder
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetResponderRecipeResponderRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponderRecipeResponderRule)(nil)).Elem()
}

func (i GetResponderRecipeResponderRuleArgs) ToGetResponderRecipeResponderRuleOutput() GetResponderRecipeResponderRuleOutput {
	return i.ToGetResponderRecipeResponderRuleOutputWithContext(context.Background())
}

func (i GetResponderRecipeResponderRuleArgs) ToGetResponderRecipeResponderRuleOutputWithContext(ctx context.Context) GetResponderRecipeResponderRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResponderRecipeResponderRuleOutput)
}

// GetResponderRecipeResponderRuleArrayInput is an input type that accepts GetResponderRecipeResponderRuleArray and GetResponderRecipeResponderRuleArrayOutput values.
// You can construct a concrete instance of `GetResponderRecipeResponderRuleArrayInput` via:
//
//          GetResponderRecipeResponderRuleArray{ GetResponderRecipeResponderRuleArgs{...} }
type GetResponderRecipeResponderRuleArrayInput interface {
	pulumi.Input

	ToGetResponderRecipeResponderRuleArrayOutput() GetResponderRecipeResponderRuleArrayOutput
	ToGetResponderRecipeResponderRuleArrayOutputWithContext(context.Context) GetResponderRecipeResponderRuleArrayOutput
}

type GetResponderRecipeResponderRuleArray []GetResponderRecipeResponderRuleInput

func (GetResponderRecipeResponderRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResponderRecipeResponderRule)(nil)).Elem()
}

func (i GetResponderRecipeResponderRuleArray) ToGetResponderRecipeResponderRuleArrayOutput() GetResponderRecipeResponderRuleArrayOutput {
	return i.ToGetResponderRecipeResponderRuleArrayOutputWithContext(context.Background())
}

func (i GetResponderRecipeResponderRuleArray) ToGetResponderRecipeResponderRuleArrayOutputWithContext(ctx context.Context) GetResponderRecipeResponderRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResponderRecipeResponderRuleArrayOutput)
}

type GetResponderRecipeResponderRuleOutput struct{ *pulumi.OutputState }

func (GetResponderRecipeResponderRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponderRecipeResponderRule)(nil)).Elem()
}

func (o GetResponderRecipeResponderRuleOutput) ToGetResponderRecipeResponderRuleOutput() GetResponderRecipeResponderRuleOutput {
	return o
}

func (o GetResponderRecipeResponderRuleOutput) ToGetResponderRecipeResponderRuleOutputWithContext(ctx context.Context) GetResponderRecipeResponderRuleOutput {
	return o
}

// Compartment Identifier
func (o GetResponderRecipeResponderRuleOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipeResponderRule) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// ResponderRule Description
func (o GetResponderRecipeResponderRuleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipeResponderRule) string { return v.Description }).(pulumi.StringOutput)
}

// Details of ResponderRule.
func (o GetResponderRecipeResponderRuleOutput) Details() GetResponderRecipeResponderRuleDetailsOutput {
	return o.ApplyT(func(v GetResponderRecipeResponderRule) GetResponderRecipeResponderRuleDetails { return v.Details }).(GetResponderRecipeResponderRuleDetailsOutput)
}

// ResponderRule Display Name
func (o GetResponderRecipeResponderRuleOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipeResponderRule) string { return v.DisplayName }).(pulumi.StringOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o GetResponderRecipeResponderRuleOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipeResponderRule) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// List of Policy
func (o GetResponderRecipeResponderRuleOutput) Policies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetResponderRecipeResponderRule) []string { return v.Policies }).(pulumi.StringArrayOutput)
}

// Identifier for ResponderRule.
func (o GetResponderRecipeResponderRuleOutput) ResponderRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipeResponderRule) string { return v.ResponderRuleId }).(pulumi.StringOutput)
}

// The current state of the Example.
func (o GetResponderRecipeResponderRuleOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipeResponderRule) string { return v.State }).(pulumi.StringOutput)
}

// Supported Execution Modes
func (o GetResponderRecipeResponderRuleOutput) SupportedModes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetResponderRecipeResponderRule) []string { return v.SupportedModes }).(pulumi.StringArrayOutput)
}

// The date and time the responder recipe was created. Format defined by RFC3339.
func (o GetResponderRecipeResponderRuleOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipeResponderRule) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the responder recipe was updated. Format defined by RFC3339.
func (o GetResponderRecipeResponderRuleOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipeResponderRule) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

// Type of Responder
func (o GetResponderRecipeResponderRuleOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipeResponderRule) string { return v.Type }).(pulumi.StringOutput)
}

type GetResponderRecipeResponderRuleArrayOutput struct{ *pulumi.OutputState }

func (GetResponderRecipeResponderRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResponderRecipeResponderRule)(nil)).Elem()
}

func (o GetResponderRecipeResponderRuleArrayOutput) ToGetResponderRecipeResponderRuleArrayOutput() GetResponderRecipeResponderRuleArrayOutput {
	return o
}

func (o GetResponderRecipeResponderRuleArrayOutput) ToGetResponderRecipeResponderRuleArrayOutputWithContext(ctx context.Context) GetResponderRecipeResponderRuleArrayOutput {
	return o
}

func (o GetResponderRecipeResponderRuleArrayOutput) Index(i pulumi.IntInput) GetResponderRecipeResponderRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetResponderRecipeResponderRule {
		return vs[0].([]GetResponderRecipeResponderRule)[vs[1].(int)]
	}).(GetResponderRecipeResponderRuleOutput)
}

type GetResponderRecipeResponderRuleDetails struct {
	Condition string `pulumi:"condition"`
	// ResponderRule configurations
	Configurations []GetResponderRecipeResponderRuleDetailsConfiguration `pulumi:"configurations"`
	// Identifies state for ResponderRule
	IsEnabled bool `pulumi:"isEnabled"`
	// Execution Mode for ResponderRule
	Mode string `pulumi:"mode"`
}

// GetResponderRecipeResponderRuleDetailsInput is an input type that accepts GetResponderRecipeResponderRuleDetailsArgs and GetResponderRecipeResponderRuleDetailsOutput values.
// You can construct a concrete instance of `GetResponderRecipeResponderRuleDetailsInput` via:
//
//          GetResponderRecipeResponderRuleDetailsArgs{...}
type GetResponderRecipeResponderRuleDetailsInput interface {
	pulumi.Input

	ToGetResponderRecipeResponderRuleDetailsOutput() GetResponderRecipeResponderRuleDetailsOutput
	ToGetResponderRecipeResponderRuleDetailsOutputWithContext(context.Context) GetResponderRecipeResponderRuleDetailsOutput
}

type GetResponderRecipeResponderRuleDetailsArgs struct {
	Condition pulumi.StringInput `pulumi:"condition"`
	// ResponderRule configurations
	Configurations GetResponderRecipeResponderRuleDetailsConfigurationArrayInput `pulumi:"configurations"`
	// Identifies state for ResponderRule
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// Execution Mode for ResponderRule
	Mode pulumi.StringInput `pulumi:"mode"`
}

func (GetResponderRecipeResponderRuleDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponderRecipeResponderRuleDetails)(nil)).Elem()
}

func (i GetResponderRecipeResponderRuleDetailsArgs) ToGetResponderRecipeResponderRuleDetailsOutput() GetResponderRecipeResponderRuleDetailsOutput {
	return i.ToGetResponderRecipeResponderRuleDetailsOutputWithContext(context.Background())
}

func (i GetResponderRecipeResponderRuleDetailsArgs) ToGetResponderRecipeResponderRuleDetailsOutputWithContext(ctx context.Context) GetResponderRecipeResponderRuleDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResponderRecipeResponderRuleDetailsOutput)
}

type GetResponderRecipeResponderRuleDetailsOutput struct{ *pulumi.OutputState }

func (GetResponderRecipeResponderRuleDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponderRecipeResponderRuleDetails)(nil)).Elem()
}

func (o GetResponderRecipeResponderRuleDetailsOutput) ToGetResponderRecipeResponderRuleDetailsOutput() GetResponderRecipeResponderRuleDetailsOutput {
	return o
}

func (o GetResponderRecipeResponderRuleDetailsOutput) ToGetResponderRecipeResponderRuleDetailsOutputWithContext(ctx context.Context) GetResponderRecipeResponderRuleDetailsOutput {
	return o
}

func (o GetResponderRecipeResponderRuleDetailsOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipeResponderRuleDetails) string { return v.Condition }).(pulumi.StringOutput)
}

// ResponderRule configurations
func (o GetResponderRecipeResponderRuleDetailsOutput) Configurations() GetResponderRecipeResponderRuleDetailsConfigurationArrayOutput {
	return o.ApplyT(func(v GetResponderRecipeResponderRuleDetails) []GetResponderRecipeResponderRuleDetailsConfiguration {
		return v.Configurations
	}).(GetResponderRecipeResponderRuleDetailsConfigurationArrayOutput)
}

// Identifies state for ResponderRule
func (o GetResponderRecipeResponderRuleDetailsOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetResponderRecipeResponderRuleDetails) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// Execution Mode for ResponderRule
func (o GetResponderRecipeResponderRuleDetailsOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipeResponderRuleDetails) string { return v.Mode }).(pulumi.StringOutput)
}

type GetResponderRecipeResponderRuleDetailsConfiguration struct {
	// Unique name of the configuration
	ConfigKey string `pulumi:"configKey"`
	// configuration name
	Name string `pulumi:"name"`
	// configuration value
	Value string `pulumi:"value"`
}

// GetResponderRecipeResponderRuleDetailsConfigurationInput is an input type that accepts GetResponderRecipeResponderRuleDetailsConfigurationArgs and GetResponderRecipeResponderRuleDetailsConfigurationOutput values.
// You can construct a concrete instance of `GetResponderRecipeResponderRuleDetailsConfigurationInput` via:
//
//          GetResponderRecipeResponderRuleDetailsConfigurationArgs{...}
type GetResponderRecipeResponderRuleDetailsConfigurationInput interface {
	pulumi.Input

	ToGetResponderRecipeResponderRuleDetailsConfigurationOutput() GetResponderRecipeResponderRuleDetailsConfigurationOutput
	ToGetResponderRecipeResponderRuleDetailsConfigurationOutputWithContext(context.Context) GetResponderRecipeResponderRuleDetailsConfigurationOutput
}

type GetResponderRecipeResponderRuleDetailsConfigurationArgs struct {
	// Unique name of the configuration
	ConfigKey pulumi.StringInput `pulumi:"configKey"`
	// configuration name
	Name pulumi.StringInput `pulumi:"name"`
	// configuration value
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetResponderRecipeResponderRuleDetailsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponderRecipeResponderRuleDetailsConfiguration)(nil)).Elem()
}

func (i GetResponderRecipeResponderRuleDetailsConfigurationArgs) ToGetResponderRecipeResponderRuleDetailsConfigurationOutput() GetResponderRecipeResponderRuleDetailsConfigurationOutput {
	return i.ToGetResponderRecipeResponderRuleDetailsConfigurationOutputWithContext(context.Background())
}

func (i GetResponderRecipeResponderRuleDetailsConfigurationArgs) ToGetResponderRecipeResponderRuleDetailsConfigurationOutputWithContext(ctx context.Context) GetResponderRecipeResponderRuleDetailsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResponderRecipeResponderRuleDetailsConfigurationOutput)
}

// GetResponderRecipeResponderRuleDetailsConfigurationArrayInput is an input type that accepts GetResponderRecipeResponderRuleDetailsConfigurationArray and GetResponderRecipeResponderRuleDetailsConfigurationArrayOutput values.
// You can construct a concrete instance of `GetResponderRecipeResponderRuleDetailsConfigurationArrayInput` via:
//
//          GetResponderRecipeResponderRuleDetailsConfigurationArray{ GetResponderRecipeResponderRuleDetailsConfigurationArgs{...} }
type GetResponderRecipeResponderRuleDetailsConfigurationArrayInput interface {
	pulumi.Input

	ToGetResponderRecipeResponderRuleDetailsConfigurationArrayOutput() GetResponderRecipeResponderRuleDetailsConfigurationArrayOutput
	ToGetResponderRecipeResponderRuleDetailsConfigurationArrayOutputWithContext(context.Context) GetResponderRecipeResponderRuleDetailsConfigurationArrayOutput
}

type GetResponderRecipeResponderRuleDetailsConfigurationArray []GetResponderRecipeResponderRuleDetailsConfigurationInput

func (GetResponderRecipeResponderRuleDetailsConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResponderRecipeResponderRuleDetailsConfiguration)(nil)).Elem()
}

func (i GetResponderRecipeResponderRuleDetailsConfigurationArray) ToGetResponderRecipeResponderRuleDetailsConfigurationArrayOutput() GetResponderRecipeResponderRuleDetailsConfigurationArrayOutput {
	return i.ToGetResponderRecipeResponderRuleDetailsConfigurationArrayOutputWithContext(context.Background())
}

func (i GetResponderRecipeResponderRuleDetailsConfigurationArray) ToGetResponderRecipeResponderRuleDetailsConfigurationArrayOutputWithContext(ctx context.Context) GetResponderRecipeResponderRuleDetailsConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResponderRecipeResponderRuleDetailsConfigurationArrayOutput)
}

type GetResponderRecipeResponderRuleDetailsConfigurationOutput struct{ *pulumi.OutputState }

func (GetResponderRecipeResponderRuleDetailsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponderRecipeResponderRuleDetailsConfiguration)(nil)).Elem()
}

func (o GetResponderRecipeResponderRuleDetailsConfigurationOutput) ToGetResponderRecipeResponderRuleDetailsConfigurationOutput() GetResponderRecipeResponderRuleDetailsConfigurationOutput {
	return o
}

func (o GetResponderRecipeResponderRuleDetailsConfigurationOutput) ToGetResponderRecipeResponderRuleDetailsConfigurationOutputWithContext(ctx context.Context) GetResponderRecipeResponderRuleDetailsConfigurationOutput {
	return o
}

// Unique name of the configuration
func (o GetResponderRecipeResponderRuleDetailsConfigurationOutput) ConfigKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipeResponderRuleDetailsConfiguration) string { return v.ConfigKey }).(pulumi.StringOutput)
}

// configuration name
func (o GetResponderRecipeResponderRuleDetailsConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipeResponderRuleDetailsConfiguration) string { return v.Name }).(pulumi.StringOutput)
}

// configuration value
func (o GetResponderRecipeResponderRuleDetailsConfigurationOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipeResponderRuleDetailsConfiguration) string { return v.Value }).(pulumi.StringOutput)
}

type GetResponderRecipeResponderRuleDetailsConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetResponderRecipeResponderRuleDetailsConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResponderRecipeResponderRuleDetailsConfiguration)(nil)).Elem()
}

func (o GetResponderRecipeResponderRuleDetailsConfigurationArrayOutput) ToGetResponderRecipeResponderRuleDetailsConfigurationArrayOutput() GetResponderRecipeResponderRuleDetailsConfigurationArrayOutput {
	return o
}

func (o GetResponderRecipeResponderRuleDetailsConfigurationArrayOutput) ToGetResponderRecipeResponderRuleDetailsConfigurationArrayOutputWithContext(ctx context.Context) GetResponderRecipeResponderRuleDetailsConfigurationArrayOutput {
	return o
}

func (o GetResponderRecipeResponderRuleDetailsConfigurationArrayOutput) Index(i pulumi.IntInput) GetResponderRecipeResponderRuleDetailsConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetResponderRecipeResponderRuleDetailsConfiguration {
		return vs[0].([]GetResponderRecipeResponderRuleDetailsConfiguration)[vs[1].(int)]
	}).(GetResponderRecipeResponderRuleDetailsConfigurationOutput)
}

type GetResponderRecipesFilter struct {
	// configuration name
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetResponderRecipesFilterInput is an input type that accepts GetResponderRecipesFilterArgs and GetResponderRecipesFilterOutput values.
// You can construct a concrete instance of `GetResponderRecipesFilterInput` via:
//
//          GetResponderRecipesFilterArgs{...}
type GetResponderRecipesFilterInput interface {
	pulumi.Input

	ToGetResponderRecipesFilterOutput() GetResponderRecipesFilterOutput
	ToGetResponderRecipesFilterOutputWithContext(context.Context) GetResponderRecipesFilterOutput
}

type GetResponderRecipesFilterArgs struct {
	// configuration name
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetResponderRecipesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponderRecipesFilter)(nil)).Elem()
}

func (i GetResponderRecipesFilterArgs) ToGetResponderRecipesFilterOutput() GetResponderRecipesFilterOutput {
	return i.ToGetResponderRecipesFilterOutputWithContext(context.Background())
}

func (i GetResponderRecipesFilterArgs) ToGetResponderRecipesFilterOutputWithContext(ctx context.Context) GetResponderRecipesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResponderRecipesFilterOutput)
}

// GetResponderRecipesFilterArrayInput is an input type that accepts GetResponderRecipesFilterArray and GetResponderRecipesFilterArrayOutput values.
// You can construct a concrete instance of `GetResponderRecipesFilterArrayInput` via:
//
//          GetResponderRecipesFilterArray{ GetResponderRecipesFilterArgs{...} }
type GetResponderRecipesFilterArrayInput interface {
	pulumi.Input

	ToGetResponderRecipesFilterArrayOutput() GetResponderRecipesFilterArrayOutput
	ToGetResponderRecipesFilterArrayOutputWithContext(context.Context) GetResponderRecipesFilterArrayOutput
}

type GetResponderRecipesFilterArray []GetResponderRecipesFilterInput

func (GetResponderRecipesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResponderRecipesFilter)(nil)).Elem()
}

func (i GetResponderRecipesFilterArray) ToGetResponderRecipesFilterArrayOutput() GetResponderRecipesFilterArrayOutput {
	return i.ToGetResponderRecipesFilterArrayOutputWithContext(context.Background())
}

func (i GetResponderRecipesFilterArray) ToGetResponderRecipesFilterArrayOutputWithContext(ctx context.Context) GetResponderRecipesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResponderRecipesFilterArrayOutput)
}

type GetResponderRecipesFilterOutput struct{ *pulumi.OutputState }

func (GetResponderRecipesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponderRecipesFilter)(nil)).Elem()
}

func (o GetResponderRecipesFilterOutput) ToGetResponderRecipesFilterOutput() GetResponderRecipesFilterOutput {
	return o
}

func (o GetResponderRecipesFilterOutput) ToGetResponderRecipesFilterOutputWithContext(ctx context.Context) GetResponderRecipesFilterOutput {
	return o
}

// configuration name
func (o GetResponderRecipesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipesFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetResponderRecipesFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetResponderRecipesFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetResponderRecipesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetResponderRecipesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetResponderRecipesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetResponderRecipesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResponderRecipesFilter)(nil)).Elem()
}

func (o GetResponderRecipesFilterArrayOutput) ToGetResponderRecipesFilterArrayOutput() GetResponderRecipesFilterArrayOutput {
	return o
}

func (o GetResponderRecipesFilterArrayOutput) ToGetResponderRecipesFilterArrayOutputWithContext(ctx context.Context) GetResponderRecipesFilterArrayOutput {
	return o
}

func (o GetResponderRecipesFilterArrayOutput) Index(i pulumi.IntInput) GetResponderRecipesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetResponderRecipesFilter {
		return vs[0].([]GetResponderRecipesFilter)[vs[1].(int)]
	}).(GetResponderRecipesFilterOutput)
}

type GetResponderRecipesResponderRecipeCollection struct {
	Items []GetResponderRecipesResponderRecipeCollectionItem `pulumi:"items"`
}

// GetResponderRecipesResponderRecipeCollectionInput is an input type that accepts GetResponderRecipesResponderRecipeCollectionArgs and GetResponderRecipesResponderRecipeCollectionOutput values.
// You can construct a concrete instance of `GetResponderRecipesResponderRecipeCollectionInput` via:
//
//          GetResponderRecipesResponderRecipeCollectionArgs{...}
type GetResponderRecipesResponderRecipeCollectionInput interface {
	pulumi.Input

	ToGetResponderRecipesResponderRecipeCollectionOutput() GetResponderRecipesResponderRecipeCollectionOutput
	ToGetResponderRecipesResponderRecipeCollectionOutputWithContext(context.Context) GetResponderRecipesResponderRecipeCollectionOutput
}

type GetResponderRecipesResponderRecipeCollectionArgs struct {
	Items GetResponderRecipesResponderRecipeCollectionItemArrayInput `pulumi:"items"`
}

func (GetResponderRecipesResponderRecipeCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponderRecipesResponderRecipeCollection)(nil)).Elem()
}

func (i GetResponderRecipesResponderRecipeCollectionArgs) ToGetResponderRecipesResponderRecipeCollectionOutput() GetResponderRecipesResponderRecipeCollectionOutput {
	return i.ToGetResponderRecipesResponderRecipeCollectionOutputWithContext(context.Background())
}

func (i GetResponderRecipesResponderRecipeCollectionArgs) ToGetResponderRecipesResponderRecipeCollectionOutputWithContext(ctx context.Context) GetResponderRecipesResponderRecipeCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResponderRecipesResponderRecipeCollectionOutput)
}

// GetResponderRecipesResponderRecipeCollectionArrayInput is an input type that accepts GetResponderRecipesResponderRecipeCollectionArray and GetResponderRecipesResponderRecipeCollectionArrayOutput values.
// You can construct a concrete instance of `GetResponderRecipesResponderRecipeCollectionArrayInput` via:
//
//          GetResponderRecipesResponderRecipeCollectionArray{ GetResponderRecipesResponderRecipeCollectionArgs{...} }
type GetResponderRecipesResponderRecipeCollectionArrayInput interface {
	pulumi.Input

	ToGetResponderRecipesResponderRecipeCollectionArrayOutput() GetResponderRecipesResponderRecipeCollectionArrayOutput
	ToGetResponderRecipesResponderRecipeCollectionArrayOutputWithContext(context.Context) GetResponderRecipesResponderRecipeCollectionArrayOutput
}

type GetResponderRecipesResponderRecipeCollectionArray []GetResponderRecipesResponderRecipeCollectionInput

func (GetResponderRecipesResponderRecipeCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResponderRecipesResponderRecipeCollection)(nil)).Elem()
}

func (i GetResponderRecipesResponderRecipeCollectionArray) ToGetResponderRecipesResponderRecipeCollectionArrayOutput() GetResponderRecipesResponderRecipeCollectionArrayOutput {
	return i.ToGetResponderRecipesResponderRecipeCollectionArrayOutputWithContext(context.Background())
}

func (i GetResponderRecipesResponderRecipeCollectionArray) ToGetResponderRecipesResponderRecipeCollectionArrayOutputWithContext(ctx context.Context) GetResponderRecipesResponderRecipeCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResponderRecipesResponderRecipeCollectionArrayOutput)
}

type GetResponderRecipesResponderRecipeCollectionOutput struct{ *pulumi.OutputState }

func (GetResponderRecipesResponderRecipeCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponderRecipesResponderRecipeCollection)(nil)).Elem()
}

func (o GetResponderRecipesResponderRecipeCollectionOutput) ToGetResponderRecipesResponderRecipeCollectionOutput() GetResponderRecipesResponderRecipeCollectionOutput {
	return o
}

func (o GetResponderRecipesResponderRecipeCollectionOutput) ToGetResponderRecipesResponderRecipeCollectionOutputWithContext(ctx context.Context) GetResponderRecipesResponderRecipeCollectionOutput {
	return o
}

func (o GetResponderRecipesResponderRecipeCollectionOutput) Items() GetResponderRecipesResponderRecipeCollectionItemArrayOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollection) []GetResponderRecipesResponderRecipeCollectionItem {
		return v.Items
	}).(GetResponderRecipesResponderRecipeCollectionItemArrayOutput)
}

type GetResponderRecipesResponderRecipeCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetResponderRecipesResponderRecipeCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResponderRecipesResponderRecipeCollection)(nil)).Elem()
}

func (o GetResponderRecipesResponderRecipeCollectionArrayOutput) ToGetResponderRecipesResponderRecipeCollectionArrayOutput() GetResponderRecipesResponderRecipeCollectionArrayOutput {
	return o
}

func (o GetResponderRecipesResponderRecipeCollectionArrayOutput) ToGetResponderRecipesResponderRecipeCollectionArrayOutputWithContext(ctx context.Context) GetResponderRecipesResponderRecipeCollectionArrayOutput {
	return o
}

func (o GetResponderRecipesResponderRecipeCollectionArrayOutput) Index(i pulumi.IntInput) GetResponderRecipesResponderRecipeCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetResponderRecipesResponderRecipeCollection {
		return vs[0].([]GetResponderRecipesResponderRecipeCollection)[vs[1].(int)]
	}).(GetResponderRecipesResponderRecipeCollectionOutput)
}

type GetResponderRecipesResponderRecipeCollectionItem struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// ResponderRule Description
	Description string `pulumi:"description"`
	// A filter to return only resources that match the entire display name given.
	DisplayName string `pulumi:"displayName"`
	// List of responder rules associated with the recipe
	EffectiveResponderRules []GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRule `pulumi:"effectiveResponderRules"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// Identifier for ResponderRecipe.
	Id string `pulumi:"id"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// Owner of ResponderRecipe
	Owner string `pulumi:"owner"`
	// List of responder rules associated with the recipe
	ResponderRules []GetResponderRecipesResponderRecipeCollectionItemResponderRule `pulumi:"responderRules"`
	// The id of the source responder recipe.
	SourceResponderRecipeId string `pulumi:"sourceResponderRecipeId"`
	// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
	State string `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// The date and time the responder recipe was created. Format defined by RFC3339.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the responder recipe was updated. Format defined by RFC3339.
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetResponderRecipesResponderRecipeCollectionItemInput is an input type that accepts GetResponderRecipesResponderRecipeCollectionItemArgs and GetResponderRecipesResponderRecipeCollectionItemOutput values.
// You can construct a concrete instance of `GetResponderRecipesResponderRecipeCollectionItemInput` via:
//
//          GetResponderRecipesResponderRecipeCollectionItemArgs{...}
type GetResponderRecipesResponderRecipeCollectionItemInput interface {
	pulumi.Input

	ToGetResponderRecipesResponderRecipeCollectionItemOutput() GetResponderRecipesResponderRecipeCollectionItemOutput
	ToGetResponderRecipesResponderRecipeCollectionItemOutputWithContext(context.Context) GetResponderRecipesResponderRecipeCollectionItemOutput
}

type GetResponderRecipesResponderRecipeCollectionItemArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// ResponderRule Description
	Description pulumi.StringInput `pulumi:"description"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// List of responder rules associated with the recipe
	EffectiveResponderRules GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleArrayInput `pulumi:"effectiveResponderRules"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// Identifier for ResponderRecipe.
	Id pulumi.StringInput `pulumi:"id"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// Owner of ResponderRecipe
	Owner pulumi.StringInput `pulumi:"owner"`
	// List of responder rules associated with the recipe
	ResponderRules GetResponderRecipesResponderRecipeCollectionItemResponderRuleArrayInput `pulumi:"responderRules"`
	// The id of the source responder recipe.
	SourceResponderRecipeId pulumi.StringInput `pulumi:"sourceResponderRecipeId"`
	// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
	State pulumi.StringInput `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapInput `pulumi:"systemTags"`
	// The date and time the responder recipe was created. Format defined by RFC3339.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The date and time the responder recipe was updated. Format defined by RFC3339.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetResponderRecipesResponderRecipeCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponderRecipesResponderRecipeCollectionItem)(nil)).Elem()
}

func (i GetResponderRecipesResponderRecipeCollectionItemArgs) ToGetResponderRecipesResponderRecipeCollectionItemOutput() GetResponderRecipesResponderRecipeCollectionItemOutput {
	return i.ToGetResponderRecipesResponderRecipeCollectionItemOutputWithContext(context.Background())
}

func (i GetResponderRecipesResponderRecipeCollectionItemArgs) ToGetResponderRecipesResponderRecipeCollectionItemOutputWithContext(ctx context.Context) GetResponderRecipesResponderRecipeCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResponderRecipesResponderRecipeCollectionItemOutput)
}

// GetResponderRecipesResponderRecipeCollectionItemArrayInput is an input type that accepts GetResponderRecipesResponderRecipeCollectionItemArray and GetResponderRecipesResponderRecipeCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetResponderRecipesResponderRecipeCollectionItemArrayInput` via:
//
//          GetResponderRecipesResponderRecipeCollectionItemArray{ GetResponderRecipesResponderRecipeCollectionItemArgs{...} }
type GetResponderRecipesResponderRecipeCollectionItemArrayInput interface {
	pulumi.Input

	ToGetResponderRecipesResponderRecipeCollectionItemArrayOutput() GetResponderRecipesResponderRecipeCollectionItemArrayOutput
	ToGetResponderRecipesResponderRecipeCollectionItemArrayOutputWithContext(context.Context) GetResponderRecipesResponderRecipeCollectionItemArrayOutput
}

type GetResponderRecipesResponderRecipeCollectionItemArray []GetResponderRecipesResponderRecipeCollectionItemInput

func (GetResponderRecipesResponderRecipeCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResponderRecipesResponderRecipeCollectionItem)(nil)).Elem()
}

func (i GetResponderRecipesResponderRecipeCollectionItemArray) ToGetResponderRecipesResponderRecipeCollectionItemArrayOutput() GetResponderRecipesResponderRecipeCollectionItemArrayOutput {
	return i.ToGetResponderRecipesResponderRecipeCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetResponderRecipesResponderRecipeCollectionItemArray) ToGetResponderRecipesResponderRecipeCollectionItemArrayOutputWithContext(ctx context.Context) GetResponderRecipesResponderRecipeCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResponderRecipesResponderRecipeCollectionItemArrayOutput)
}

type GetResponderRecipesResponderRecipeCollectionItemOutput struct{ *pulumi.OutputState }

func (GetResponderRecipesResponderRecipeCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponderRecipesResponderRecipeCollectionItem)(nil)).Elem()
}

func (o GetResponderRecipesResponderRecipeCollectionItemOutput) ToGetResponderRecipesResponderRecipeCollectionItemOutput() GetResponderRecipesResponderRecipeCollectionItemOutput {
	return o
}

func (o GetResponderRecipesResponderRecipeCollectionItemOutput) ToGetResponderRecipesResponderRecipeCollectionItemOutputWithContext(ctx context.Context) GetResponderRecipesResponderRecipeCollectionItemOutput {
	return o
}

// The ID of the compartment in which to list resources.
func (o GetResponderRecipesResponderRecipeCollectionItemOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItem) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetResponderRecipesResponderRecipeCollectionItemOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItem) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// ResponderRule Description
func (o GetResponderRecipesResponderRecipeCollectionItemOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItem) string { return v.Description }).(pulumi.StringOutput)
}

// A filter to return only resources that match the entire display name given.
func (o GetResponderRecipesResponderRecipeCollectionItemOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItem) string { return v.DisplayName }).(pulumi.StringOutput)
}

// List of responder rules associated with the recipe
func (o GetResponderRecipesResponderRecipeCollectionItemOutput) EffectiveResponderRules() GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleArrayOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItem) []GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRule {
		return v.EffectiveResponderRules
	}).(GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleArrayOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetResponderRecipesResponderRecipeCollectionItemOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItem) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// Identifier for ResponderRecipe.
func (o GetResponderRecipesResponderRecipeCollectionItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItem) string { return v.Id }).(pulumi.StringOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o GetResponderRecipesResponderRecipeCollectionItemOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItem) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// Owner of ResponderRecipe
func (o GetResponderRecipesResponderRecipeCollectionItemOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItem) string { return v.Owner }).(pulumi.StringOutput)
}

// List of responder rules associated with the recipe
func (o GetResponderRecipesResponderRecipeCollectionItemOutput) ResponderRules() GetResponderRecipesResponderRecipeCollectionItemResponderRuleArrayOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItem) []GetResponderRecipesResponderRecipeCollectionItemResponderRule {
		return v.ResponderRules
	}).(GetResponderRecipesResponderRecipeCollectionItemResponderRuleArrayOutput)
}

// The id of the source responder recipe.
func (o GetResponderRecipesResponderRecipeCollectionItemOutput) SourceResponderRecipeId() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItem) string { return v.SourceResponderRecipeId }).(pulumi.StringOutput)
}

// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
func (o GetResponderRecipesResponderRecipeCollectionItemOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItem) string { return v.State }).(pulumi.StringOutput)
}

// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o GetResponderRecipesResponderRecipeCollectionItemOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItem) map[string]interface{} { return v.SystemTags }).(pulumi.MapOutput)
}

// The date and time the responder recipe was created. Format defined by RFC3339.
func (o GetResponderRecipesResponderRecipeCollectionItemOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItem) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the responder recipe was updated. Format defined by RFC3339.
func (o GetResponderRecipesResponderRecipeCollectionItemOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItem) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetResponderRecipesResponderRecipeCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetResponderRecipesResponderRecipeCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResponderRecipesResponderRecipeCollectionItem)(nil)).Elem()
}

func (o GetResponderRecipesResponderRecipeCollectionItemArrayOutput) ToGetResponderRecipesResponderRecipeCollectionItemArrayOutput() GetResponderRecipesResponderRecipeCollectionItemArrayOutput {
	return o
}

func (o GetResponderRecipesResponderRecipeCollectionItemArrayOutput) ToGetResponderRecipesResponderRecipeCollectionItemArrayOutputWithContext(ctx context.Context) GetResponderRecipesResponderRecipeCollectionItemArrayOutput {
	return o
}

func (o GetResponderRecipesResponderRecipeCollectionItemArrayOutput) Index(i pulumi.IntInput) GetResponderRecipesResponderRecipeCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetResponderRecipesResponderRecipeCollectionItem {
		return vs[0].([]GetResponderRecipesResponderRecipeCollectionItem)[vs[1].(int)]
	}).(GetResponderRecipesResponderRecipeCollectionItemOutput)
}

type GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRule struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// ResponderRule Description
	Description string `pulumi:"description"`
	// Details of ResponderRule.
	Details GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetails `pulumi:"details"`
	// A filter to return only resources that match the entire display name given.
	DisplayName string `pulumi:"displayName"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// List of Policy
	Policies []string `pulumi:"policies"`
	// Identifier for ResponderRule.
	ResponderRuleId string `pulumi:"responderRuleId"`
	// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
	State string `pulumi:"state"`
	// Supported Execution Modes
	SupportedModes []string `pulumi:"supportedModes"`
	// The date and time the responder recipe was created. Format defined by RFC3339.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the responder recipe was updated. Format defined by RFC3339.
	TimeUpdated string `pulumi:"timeUpdated"`
	// Type of Responder
	Type string `pulumi:"type"`
}

// GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleInput is an input type that accepts GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleArgs and GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleOutput values.
// You can construct a concrete instance of `GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleInput` via:
//
//          GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleArgs{...}
type GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleInput interface {
	pulumi.Input

	ToGetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleOutput() GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleOutput
	ToGetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleOutputWithContext(context.Context) GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleOutput
}

type GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// ResponderRule Description
	Description pulumi.StringInput `pulumi:"description"`
	// Details of ResponderRule.
	Details GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsInput `pulumi:"details"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// List of Policy
	Policies pulumi.StringArrayInput `pulumi:"policies"`
	// Identifier for ResponderRule.
	ResponderRuleId pulumi.StringInput `pulumi:"responderRuleId"`
	// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
	State pulumi.StringInput `pulumi:"state"`
	// Supported Execution Modes
	SupportedModes pulumi.StringArrayInput `pulumi:"supportedModes"`
	// The date and time the responder recipe was created. Format defined by RFC3339.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The date and time the responder recipe was updated. Format defined by RFC3339.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
	// Type of Responder
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRule)(nil)).Elem()
}

func (i GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleArgs) ToGetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleOutput() GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleOutput {
	return i.ToGetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleOutputWithContext(context.Background())
}

func (i GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleArgs) ToGetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleOutputWithContext(ctx context.Context) GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleOutput)
}

// GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleArrayInput is an input type that accepts GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleArray and GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleArrayOutput values.
// You can construct a concrete instance of `GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleArrayInput` via:
//
//          GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleArray{ GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleArgs{...} }
type GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleArrayInput interface {
	pulumi.Input

	ToGetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleArrayOutput() GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleArrayOutput
	ToGetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleArrayOutputWithContext(context.Context) GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleArrayOutput
}

type GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleArray []GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleInput

func (GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRule)(nil)).Elem()
}

func (i GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleArray) ToGetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleArrayOutput() GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleArrayOutput {
	return i.ToGetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleArrayOutputWithContext(context.Background())
}

func (i GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleArray) ToGetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleArrayOutputWithContext(ctx context.Context) GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleArrayOutput)
}

type GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleOutput struct{ *pulumi.OutputState }

func (GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRule)(nil)).Elem()
}

func (o GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleOutput) ToGetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleOutput() GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleOutput {
	return o
}

func (o GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleOutput) ToGetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleOutputWithContext(ctx context.Context) GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleOutput {
	return o
}

// The ID of the compartment in which to list resources.
func (o GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRule) string {
		return v.CompartmentId
	}).(pulumi.StringOutput)
}

// ResponderRule Description
func (o GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRule) string {
		return v.Description
	}).(pulumi.StringOutput)
}

// Details of ResponderRule.
func (o GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleOutput) Details() GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRule) GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetails {
		return v.Details
	}).(GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsOutput)
}

// A filter to return only resources that match the entire display name given.
func (o GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRule) string {
		return v.DisplayName
	}).(pulumi.StringOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRule) string {
		return v.LifecycleDetails
	}).(pulumi.StringOutput)
}

// List of Policy
func (o GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleOutput) Policies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRule) []string {
		return v.Policies
	}).(pulumi.StringArrayOutput)
}

// Identifier for ResponderRule.
func (o GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleOutput) ResponderRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRule) string {
		return v.ResponderRuleId
	}).(pulumi.StringOutput)
}

// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
func (o GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRule) string { return v.State }).(pulumi.StringOutput)
}

// Supported Execution Modes
func (o GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleOutput) SupportedModes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRule) []string {
		return v.SupportedModes
	}).(pulumi.StringArrayOutput)
}

// The date and time the responder recipe was created. Format defined by RFC3339.
func (o GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRule) string {
		return v.TimeCreated
	}).(pulumi.StringOutput)
}

// The date and time the responder recipe was updated. Format defined by RFC3339.
func (o GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRule) string {
		return v.TimeUpdated
	}).(pulumi.StringOutput)
}

// Type of Responder
func (o GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRule) string { return v.Type }).(pulumi.StringOutput)
}

type GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleArrayOutput struct{ *pulumi.OutputState }

func (GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRule)(nil)).Elem()
}

func (o GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleArrayOutput) ToGetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleArrayOutput() GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleArrayOutput {
	return o
}

func (o GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleArrayOutput) ToGetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleArrayOutputWithContext(ctx context.Context) GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleArrayOutput {
	return o
}

func (o GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleArrayOutput) Index(i pulumi.IntInput) GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRule {
		return vs[0].([]GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRule)[vs[1].(int)]
	}).(GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleOutput)
}

type GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetails struct {
	Condition string `pulumi:"condition"`
	// ResponderRule configurations
	Configurations []GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsConfiguration `pulumi:"configurations"`
	// Identifies state for ResponderRule
	IsEnabled bool `pulumi:"isEnabled"`
	// Execution Mode for ResponderRule
	Mode string `pulumi:"mode"`
}

// GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsInput is an input type that accepts GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsArgs and GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsOutput values.
// You can construct a concrete instance of `GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsInput` via:
//
//          GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsArgs{...}
type GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsInput interface {
	pulumi.Input

	ToGetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsOutput() GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsOutput
	ToGetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsOutputWithContext(context.Context) GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsOutput
}

type GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsArgs struct {
	Condition pulumi.StringInput `pulumi:"condition"`
	// ResponderRule configurations
	Configurations GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsConfigurationArrayInput `pulumi:"configurations"`
	// Identifies state for ResponderRule
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// Execution Mode for ResponderRule
	Mode pulumi.StringInput `pulumi:"mode"`
}

func (GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetails)(nil)).Elem()
}

func (i GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsArgs) ToGetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsOutput() GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsOutput {
	return i.ToGetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsOutputWithContext(context.Background())
}

func (i GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsArgs) ToGetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsOutputWithContext(ctx context.Context) GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsOutput)
}

type GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsOutput struct{ *pulumi.OutputState }

func (GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetails)(nil)).Elem()
}

func (o GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsOutput) ToGetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsOutput() GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsOutput {
	return o
}

func (o GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsOutput) ToGetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsOutputWithContext(ctx context.Context) GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsOutput {
	return o
}

func (o GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetails) string {
		return v.Condition
	}).(pulumi.StringOutput)
}

// ResponderRule configurations
func (o GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsOutput) Configurations() GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsConfigurationArrayOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetails) []GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsConfiguration {
		return v.Configurations
	}).(GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsConfigurationArrayOutput)
}

// Identifies state for ResponderRule
func (o GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetails) bool {
		return v.IsEnabled
	}).(pulumi.BoolOutput)
}

// Execution Mode for ResponderRule
func (o GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetails) string {
		return v.Mode
	}).(pulumi.StringOutput)
}

type GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsConfiguration struct {
	// Unique name of the configuration
	ConfigKey string `pulumi:"configKey"`
	// configuration name
	Name string `pulumi:"name"`
	// configuration value
	Value string `pulumi:"value"`
}

// GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsConfigurationInput is an input type that accepts GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsConfigurationArgs and GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsConfigurationOutput values.
// You can construct a concrete instance of `GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsConfigurationInput` via:
//
//          GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsConfigurationArgs{...}
type GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsConfigurationInput interface {
	pulumi.Input

	ToGetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsConfigurationOutput() GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsConfigurationOutput
	ToGetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsConfigurationOutputWithContext(context.Context) GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsConfigurationOutput
}

type GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsConfigurationArgs struct {
	// Unique name of the configuration
	ConfigKey pulumi.StringInput `pulumi:"configKey"`
	// configuration name
	Name pulumi.StringInput `pulumi:"name"`
	// configuration value
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsConfiguration)(nil)).Elem()
}

func (i GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsConfigurationArgs) ToGetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsConfigurationOutput() GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsConfigurationOutput {
	return i.ToGetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsConfigurationOutputWithContext(context.Background())
}

func (i GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsConfigurationArgs) ToGetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsConfigurationOutputWithContext(ctx context.Context) GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsConfigurationOutput)
}

// GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsConfigurationArrayInput is an input type that accepts GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsConfigurationArray and GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsConfigurationArrayOutput values.
// You can construct a concrete instance of `GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsConfigurationArrayInput` via:
//
//          GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsConfigurationArray{ GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsConfigurationArgs{...} }
type GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsConfigurationArrayInput interface {
	pulumi.Input

	ToGetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsConfigurationArrayOutput() GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsConfigurationArrayOutput
	ToGetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsConfigurationArrayOutputWithContext(context.Context) GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsConfigurationArrayOutput
}

type GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsConfigurationArray []GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsConfigurationInput

func (GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsConfiguration)(nil)).Elem()
}

func (i GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsConfigurationArray) ToGetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsConfigurationArrayOutput() GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsConfigurationArrayOutput {
	return i.ToGetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsConfigurationArrayOutputWithContext(context.Background())
}

func (i GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsConfigurationArray) ToGetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsConfigurationArrayOutputWithContext(ctx context.Context) GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsConfigurationArrayOutput)
}

type GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsConfigurationOutput struct{ *pulumi.OutputState }

func (GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsConfiguration)(nil)).Elem()
}

func (o GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsConfigurationOutput) ToGetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsConfigurationOutput() GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsConfigurationOutput {
	return o
}

func (o GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsConfigurationOutput) ToGetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsConfigurationOutputWithContext(ctx context.Context) GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsConfigurationOutput {
	return o
}

// Unique name of the configuration
func (o GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsConfigurationOutput) ConfigKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsConfiguration) string {
		return v.ConfigKey
	}).(pulumi.StringOutput)
}

// configuration name
func (o GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsConfiguration) string {
		return v.Name
	}).(pulumi.StringOutput)
}

// configuration value
func (o GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsConfigurationOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsConfiguration) string {
		return v.Value
	}).(pulumi.StringOutput)
}

type GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsConfiguration)(nil)).Elem()
}

func (o GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsConfigurationArrayOutput) ToGetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsConfigurationArrayOutput() GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsConfigurationArrayOutput {
	return o
}

func (o GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsConfigurationArrayOutput) ToGetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsConfigurationArrayOutputWithContext(ctx context.Context) GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsConfigurationArrayOutput {
	return o
}

func (o GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsConfigurationArrayOutput) Index(i pulumi.IntInput) GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsConfiguration {
		return vs[0].([]GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsConfiguration)[vs[1].(int)]
	}).(GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsConfigurationOutput)
}

type GetResponderRecipesResponderRecipeCollectionItemResponderRule struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// ResponderRule Description
	Description string `pulumi:"description"`
	// Details of ResponderRule.
	Details GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetails `pulumi:"details"`
	// A filter to return only resources that match the entire display name given.
	DisplayName string `pulumi:"displayName"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// List of Policy
	Policies []string `pulumi:"policies"`
	// Identifier for ResponderRule.
	ResponderRuleId string `pulumi:"responderRuleId"`
	// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
	State string `pulumi:"state"`
	// Supported Execution Modes
	SupportedModes []string `pulumi:"supportedModes"`
	// The date and time the responder recipe was created. Format defined by RFC3339.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the responder recipe was updated. Format defined by RFC3339.
	TimeUpdated string `pulumi:"timeUpdated"`
	// Type of Responder
	Type string `pulumi:"type"`
}

// GetResponderRecipesResponderRecipeCollectionItemResponderRuleInput is an input type that accepts GetResponderRecipesResponderRecipeCollectionItemResponderRuleArgs and GetResponderRecipesResponderRecipeCollectionItemResponderRuleOutput values.
// You can construct a concrete instance of `GetResponderRecipesResponderRecipeCollectionItemResponderRuleInput` via:
//
//          GetResponderRecipesResponderRecipeCollectionItemResponderRuleArgs{...}
type GetResponderRecipesResponderRecipeCollectionItemResponderRuleInput interface {
	pulumi.Input

	ToGetResponderRecipesResponderRecipeCollectionItemResponderRuleOutput() GetResponderRecipesResponderRecipeCollectionItemResponderRuleOutput
	ToGetResponderRecipesResponderRecipeCollectionItemResponderRuleOutputWithContext(context.Context) GetResponderRecipesResponderRecipeCollectionItemResponderRuleOutput
}

type GetResponderRecipesResponderRecipeCollectionItemResponderRuleArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// ResponderRule Description
	Description pulumi.StringInput `pulumi:"description"`
	// Details of ResponderRule.
	Details GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsInput `pulumi:"details"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// List of Policy
	Policies pulumi.StringArrayInput `pulumi:"policies"`
	// Identifier for ResponderRule.
	ResponderRuleId pulumi.StringInput `pulumi:"responderRuleId"`
	// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
	State pulumi.StringInput `pulumi:"state"`
	// Supported Execution Modes
	SupportedModes pulumi.StringArrayInput `pulumi:"supportedModes"`
	// The date and time the responder recipe was created. Format defined by RFC3339.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The date and time the responder recipe was updated. Format defined by RFC3339.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
	// Type of Responder
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetResponderRecipesResponderRecipeCollectionItemResponderRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponderRecipesResponderRecipeCollectionItemResponderRule)(nil)).Elem()
}

func (i GetResponderRecipesResponderRecipeCollectionItemResponderRuleArgs) ToGetResponderRecipesResponderRecipeCollectionItemResponderRuleOutput() GetResponderRecipesResponderRecipeCollectionItemResponderRuleOutput {
	return i.ToGetResponderRecipesResponderRecipeCollectionItemResponderRuleOutputWithContext(context.Background())
}

func (i GetResponderRecipesResponderRecipeCollectionItemResponderRuleArgs) ToGetResponderRecipesResponderRecipeCollectionItemResponderRuleOutputWithContext(ctx context.Context) GetResponderRecipesResponderRecipeCollectionItemResponderRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResponderRecipesResponderRecipeCollectionItemResponderRuleOutput)
}

// GetResponderRecipesResponderRecipeCollectionItemResponderRuleArrayInput is an input type that accepts GetResponderRecipesResponderRecipeCollectionItemResponderRuleArray and GetResponderRecipesResponderRecipeCollectionItemResponderRuleArrayOutput values.
// You can construct a concrete instance of `GetResponderRecipesResponderRecipeCollectionItemResponderRuleArrayInput` via:
//
//          GetResponderRecipesResponderRecipeCollectionItemResponderRuleArray{ GetResponderRecipesResponderRecipeCollectionItemResponderRuleArgs{...} }
type GetResponderRecipesResponderRecipeCollectionItemResponderRuleArrayInput interface {
	pulumi.Input

	ToGetResponderRecipesResponderRecipeCollectionItemResponderRuleArrayOutput() GetResponderRecipesResponderRecipeCollectionItemResponderRuleArrayOutput
	ToGetResponderRecipesResponderRecipeCollectionItemResponderRuleArrayOutputWithContext(context.Context) GetResponderRecipesResponderRecipeCollectionItemResponderRuleArrayOutput
}

type GetResponderRecipesResponderRecipeCollectionItemResponderRuleArray []GetResponderRecipesResponderRecipeCollectionItemResponderRuleInput

func (GetResponderRecipesResponderRecipeCollectionItemResponderRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResponderRecipesResponderRecipeCollectionItemResponderRule)(nil)).Elem()
}

func (i GetResponderRecipesResponderRecipeCollectionItemResponderRuleArray) ToGetResponderRecipesResponderRecipeCollectionItemResponderRuleArrayOutput() GetResponderRecipesResponderRecipeCollectionItemResponderRuleArrayOutput {
	return i.ToGetResponderRecipesResponderRecipeCollectionItemResponderRuleArrayOutputWithContext(context.Background())
}

func (i GetResponderRecipesResponderRecipeCollectionItemResponderRuleArray) ToGetResponderRecipesResponderRecipeCollectionItemResponderRuleArrayOutputWithContext(ctx context.Context) GetResponderRecipesResponderRecipeCollectionItemResponderRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResponderRecipesResponderRecipeCollectionItemResponderRuleArrayOutput)
}

type GetResponderRecipesResponderRecipeCollectionItemResponderRuleOutput struct{ *pulumi.OutputState }

func (GetResponderRecipesResponderRecipeCollectionItemResponderRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponderRecipesResponderRecipeCollectionItemResponderRule)(nil)).Elem()
}

func (o GetResponderRecipesResponderRecipeCollectionItemResponderRuleOutput) ToGetResponderRecipesResponderRecipeCollectionItemResponderRuleOutput() GetResponderRecipesResponderRecipeCollectionItemResponderRuleOutput {
	return o
}

func (o GetResponderRecipesResponderRecipeCollectionItemResponderRuleOutput) ToGetResponderRecipesResponderRecipeCollectionItemResponderRuleOutputWithContext(ctx context.Context) GetResponderRecipesResponderRecipeCollectionItemResponderRuleOutput {
	return o
}

// The ID of the compartment in which to list resources.
func (o GetResponderRecipesResponderRecipeCollectionItemResponderRuleOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItemResponderRule) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// ResponderRule Description
func (o GetResponderRecipesResponderRecipeCollectionItemResponderRuleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItemResponderRule) string { return v.Description }).(pulumi.StringOutput)
}

// Details of ResponderRule.
func (o GetResponderRecipesResponderRecipeCollectionItemResponderRuleOutput) Details() GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItemResponderRule) GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetails {
		return v.Details
	}).(GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsOutput)
}

// A filter to return only resources that match the entire display name given.
func (o GetResponderRecipesResponderRecipeCollectionItemResponderRuleOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItemResponderRule) string { return v.DisplayName }).(pulumi.StringOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o GetResponderRecipesResponderRecipeCollectionItemResponderRuleOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItemResponderRule) string {
		return v.LifecycleDetails
	}).(pulumi.StringOutput)
}

// List of Policy
func (o GetResponderRecipesResponderRecipeCollectionItemResponderRuleOutput) Policies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItemResponderRule) []string { return v.Policies }).(pulumi.StringArrayOutput)
}

// Identifier for ResponderRule.
func (o GetResponderRecipesResponderRecipeCollectionItemResponderRuleOutput) ResponderRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItemResponderRule) string { return v.ResponderRuleId }).(pulumi.StringOutput)
}

// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
func (o GetResponderRecipesResponderRecipeCollectionItemResponderRuleOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItemResponderRule) string { return v.State }).(pulumi.StringOutput)
}

// Supported Execution Modes
func (o GetResponderRecipesResponderRecipeCollectionItemResponderRuleOutput) SupportedModes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItemResponderRule) []string {
		return v.SupportedModes
	}).(pulumi.StringArrayOutput)
}

// The date and time the responder recipe was created. Format defined by RFC3339.
func (o GetResponderRecipesResponderRecipeCollectionItemResponderRuleOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItemResponderRule) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the responder recipe was updated. Format defined by RFC3339.
func (o GetResponderRecipesResponderRecipeCollectionItemResponderRuleOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItemResponderRule) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

// Type of Responder
func (o GetResponderRecipesResponderRecipeCollectionItemResponderRuleOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItemResponderRule) string { return v.Type }).(pulumi.StringOutput)
}

type GetResponderRecipesResponderRecipeCollectionItemResponderRuleArrayOutput struct{ *pulumi.OutputState }

func (GetResponderRecipesResponderRecipeCollectionItemResponderRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResponderRecipesResponderRecipeCollectionItemResponderRule)(nil)).Elem()
}

func (o GetResponderRecipesResponderRecipeCollectionItemResponderRuleArrayOutput) ToGetResponderRecipesResponderRecipeCollectionItemResponderRuleArrayOutput() GetResponderRecipesResponderRecipeCollectionItemResponderRuleArrayOutput {
	return o
}

func (o GetResponderRecipesResponderRecipeCollectionItemResponderRuleArrayOutput) ToGetResponderRecipesResponderRecipeCollectionItemResponderRuleArrayOutputWithContext(ctx context.Context) GetResponderRecipesResponderRecipeCollectionItemResponderRuleArrayOutput {
	return o
}

func (o GetResponderRecipesResponderRecipeCollectionItemResponderRuleArrayOutput) Index(i pulumi.IntInput) GetResponderRecipesResponderRecipeCollectionItemResponderRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetResponderRecipesResponderRecipeCollectionItemResponderRule {
		return vs[0].([]GetResponderRecipesResponderRecipeCollectionItemResponderRule)[vs[1].(int)]
	}).(GetResponderRecipesResponderRecipeCollectionItemResponderRuleOutput)
}

type GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetails struct {
	Condition string `pulumi:"condition"`
	// ResponderRule configurations
	Configurations []GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsConfiguration `pulumi:"configurations"`
	// Identifies state for ResponderRule
	IsEnabled bool `pulumi:"isEnabled"`
	// Execution Mode for ResponderRule
	Mode string `pulumi:"mode"`
}

// GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsInput is an input type that accepts GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsArgs and GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsOutput values.
// You can construct a concrete instance of `GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsInput` via:
//
//          GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsArgs{...}
type GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsInput interface {
	pulumi.Input

	ToGetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsOutput() GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsOutput
	ToGetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsOutputWithContext(context.Context) GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsOutput
}

type GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsArgs struct {
	Condition pulumi.StringInput `pulumi:"condition"`
	// ResponderRule configurations
	Configurations GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsConfigurationArrayInput `pulumi:"configurations"`
	// Identifies state for ResponderRule
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// Execution Mode for ResponderRule
	Mode pulumi.StringInput `pulumi:"mode"`
}

func (GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetails)(nil)).Elem()
}

func (i GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsArgs) ToGetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsOutput() GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsOutput {
	return i.ToGetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsOutputWithContext(context.Background())
}

func (i GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsArgs) ToGetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsOutputWithContext(ctx context.Context) GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsOutput)
}

type GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsOutput struct{ *pulumi.OutputState }

func (GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetails)(nil)).Elem()
}

func (o GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsOutput) ToGetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsOutput() GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsOutput {
	return o
}

func (o GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsOutput) ToGetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsOutputWithContext(ctx context.Context) GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsOutput {
	return o
}

func (o GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetails) string {
		return v.Condition
	}).(pulumi.StringOutput)
}

// ResponderRule configurations
func (o GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsOutput) Configurations() GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsConfigurationArrayOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetails) []GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsConfiguration {
		return v.Configurations
	}).(GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsConfigurationArrayOutput)
}

// Identifies state for ResponderRule
func (o GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetails) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// Execution Mode for ResponderRule
func (o GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetails) string { return v.Mode }).(pulumi.StringOutput)
}

type GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsConfiguration struct {
	// Unique name of the configuration
	ConfigKey string `pulumi:"configKey"`
	// configuration name
	Name string `pulumi:"name"`
	// configuration value
	Value string `pulumi:"value"`
}

// GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsConfigurationInput is an input type that accepts GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsConfigurationArgs and GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsConfigurationOutput values.
// You can construct a concrete instance of `GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsConfigurationInput` via:
//
//          GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsConfigurationArgs{...}
type GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsConfigurationInput interface {
	pulumi.Input

	ToGetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsConfigurationOutput() GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsConfigurationOutput
	ToGetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsConfigurationOutputWithContext(context.Context) GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsConfigurationOutput
}

type GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsConfigurationArgs struct {
	// Unique name of the configuration
	ConfigKey pulumi.StringInput `pulumi:"configKey"`
	// configuration name
	Name pulumi.StringInput `pulumi:"name"`
	// configuration value
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsConfiguration)(nil)).Elem()
}

func (i GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsConfigurationArgs) ToGetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsConfigurationOutput() GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsConfigurationOutput {
	return i.ToGetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsConfigurationOutputWithContext(context.Background())
}

func (i GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsConfigurationArgs) ToGetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsConfigurationOutputWithContext(ctx context.Context) GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsConfigurationOutput)
}

// GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsConfigurationArrayInput is an input type that accepts GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsConfigurationArray and GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsConfigurationArrayOutput values.
// You can construct a concrete instance of `GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsConfigurationArrayInput` via:
//
//          GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsConfigurationArray{ GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsConfigurationArgs{...} }
type GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsConfigurationArrayInput interface {
	pulumi.Input

	ToGetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsConfigurationArrayOutput() GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsConfigurationArrayOutput
	ToGetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsConfigurationArrayOutputWithContext(context.Context) GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsConfigurationArrayOutput
}

type GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsConfigurationArray []GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsConfigurationInput

func (GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsConfiguration)(nil)).Elem()
}

func (i GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsConfigurationArray) ToGetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsConfigurationArrayOutput() GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsConfigurationArrayOutput {
	return i.ToGetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsConfigurationArrayOutputWithContext(context.Background())
}

func (i GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsConfigurationArray) ToGetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsConfigurationArrayOutputWithContext(ctx context.Context) GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsConfigurationArrayOutput)
}

type GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsConfigurationOutput struct{ *pulumi.OutputState }

func (GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsConfiguration)(nil)).Elem()
}

func (o GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsConfigurationOutput) ToGetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsConfigurationOutput() GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsConfigurationOutput {
	return o
}

func (o GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsConfigurationOutput) ToGetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsConfigurationOutputWithContext(ctx context.Context) GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsConfigurationOutput {
	return o
}

// Unique name of the configuration
func (o GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsConfigurationOutput) ConfigKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsConfiguration) string {
		return v.ConfigKey
	}).(pulumi.StringOutput)
}

// configuration name
func (o GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsConfiguration) string {
		return v.Name
	}).(pulumi.StringOutput)
}

// configuration value
func (o GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsConfigurationOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsConfiguration) string {
		return v.Value
	}).(pulumi.StringOutput)
}

type GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsConfiguration)(nil)).Elem()
}

func (o GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsConfigurationArrayOutput) ToGetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsConfigurationArrayOutput() GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsConfigurationArrayOutput {
	return o
}

func (o GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsConfigurationArrayOutput) ToGetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsConfigurationArrayOutputWithContext(ctx context.Context) GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsConfigurationArrayOutput {
	return o
}

func (o GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsConfigurationArrayOutput) Index(i pulumi.IntInput) GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsConfiguration {
		return vs[0].([]GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsConfiguration)[vs[1].(int)]
	}).(GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsConfigurationOutput)
}

type GetTargetTargetDetectorRecipe struct {
	// Compartment Identifier
	CompartmentId string `pulumi:"compartmentId"`
	// ResponderRule Description
	Description string `pulumi:"description"`
	// detector for the rule
	Detector string `pulumi:"detector"`
	// Unique identifier for Detector Recipe of which this is an extension
	DetectorRecipeId string `pulumi:"detectorRecipeId"`
	// List of detector rules for the detector type for recipe - user input
	DetectorRules []GetTargetTargetDetectorRecipeDetectorRule `pulumi:"detectorRules"`
	// ResponderRule Display Name
	DisplayName string `pulumi:"displayName"`
	// List of effective detector rules for the detector type for recipe after applying defaults
	EffectiveDetectorRules []GetTargetTargetDetectorRecipeEffectiveDetectorRule `pulumi:"effectiveDetectorRules"`
	// Unique identifier of TargetResponderRecipe that is immutable on creation
	Id string `pulumi:"id"`
	// Owner of ResponderRecipe
	Owner string `pulumi:"owner"`
	// The current state of the ResponderRule.
	State string `pulumi:"state"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetTargetTargetDetectorRecipeInput is an input type that accepts GetTargetTargetDetectorRecipeArgs and GetTargetTargetDetectorRecipeOutput values.
// You can construct a concrete instance of `GetTargetTargetDetectorRecipeInput` via:
//
//          GetTargetTargetDetectorRecipeArgs{...}
type GetTargetTargetDetectorRecipeInput interface {
	pulumi.Input

	ToGetTargetTargetDetectorRecipeOutput() GetTargetTargetDetectorRecipeOutput
	ToGetTargetTargetDetectorRecipeOutputWithContext(context.Context) GetTargetTargetDetectorRecipeOutput
}

type GetTargetTargetDetectorRecipeArgs struct {
	// Compartment Identifier
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// ResponderRule Description
	Description pulumi.StringInput `pulumi:"description"`
	// detector for the rule
	Detector pulumi.StringInput `pulumi:"detector"`
	// Unique identifier for Detector Recipe of which this is an extension
	DetectorRecipeId pulumi.StringInput `pulumi:"detectorRecipeId"`
	// List of detector rules for the detector type for recipe - user input
	DetectorRules GetTargetTargetDetectorRecipeDetectorRuleArrayInput `pulumi:"detectorRules"`
	// ResponderRule Display Name
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// List of effective detector rules for the detector type for recipe after applying defaults
	EffectiveDetectorRules GetTargetTargetDetectorRecipeEffectiveDetectorRuleArrayInput `pulumi:"effectiveDetectorRules"`
	// Unique identifier of TargetResponderRecipe that is immutable on creation
	Id pulumi.StringInput `pulumi:"id"`
	// Owner of ResponderRecipe
	Owner pulumi.StringInput `pulumi:"owner"`
	// The current state of the ResponderRule.
	State pulumi.StringInput `pulumi:"state"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetTargetTargetDetectorRecipeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetTargetDetectorRecipe)(nil)).Elem()
}

func (i GetTargetTargetDetectorRecipeArgs) ToGetTargetTargetDetectorRecipeOutput() GetTargetTargetDetectorRecipeOutput {
	return i.ToGetTargetTargetDetectorRecipeOutputWithContext(context.Background())
}

func (i GetTargetTargetDetectorRecipeArgs) ToGetTargetTargetDetectorRecipeOutputWithContext(ctx context.Context) GetTargetTargetDetectorRecipeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTargetTargetDetectorRecipeOutput)
}

// GetTargetTargetDetectorRecipeArrayInput is an input type that accepts GetTargetTargetDetectorRecipeArray and GetTargetTargetDetectorRecipeArrayOutput values.
// You can construct a concrete instance of `GetTargetTargetDetectorRecipeArrayInput` via:
//
//          GetTargetTargetDetectorRecipeArray{ GetTargetTargetDetectorRecipeArgs{...} }
type GetTargetTargetDetectorRecipeArrayInput interface {
	pulumi.Input

	ToGetTargetTargetDetectorRecipeArrayOutput() GetTargetTargetDetectorRecipeArrayOutput
	ToGetTargetTargetDetectorRecipeArrayOutputWithContext(context.Context) GetTargetTargetDetectorRecipeArrayOutput
}

type GetTargetTargetDetectorRecipeArray []GetTargetTargetDetectorRecipeInput

func (GetTargetTargetDetectorRecipeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTargetTargetDetectorRecipe)(nil)).Elem()
}

func (i GetTargetTargetDetectorRecipeArray) ToGetTargetTargetDetectorRecipeArrayOutput() GetTargetTargetDetectorRecipeArrayOutput {
	return i.ToGetTargetTargetDetectorRecipeArrayOutputWithContext(context.Background())
}

func (i GetTargetTargetDetectorRecipeArray) ToGetTargetTargetDetectorRecipeArrayOutputWithContext(ctx context.Context) GetTargetTargetDetectorRecipeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTargetTargetDetectorRecipeArrayOutput)
}

type GetTargetTargetDetectorRecipeOutput struct{ *pulumi.OutputState }

func (GetTargetTargetDetectorRecipeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetTargetDetectorRecipe)(nil)).Elem()
}

func (o GetTargetTargetDetectorRecipeOutput) ToGetTargetTargetDetectorRecipeOutput() GetTargetTargetDetectorRecipeOutput {
	return o
}

func (o GetTargetTargetDetectorRecipeOutput) ToGetTargetTargetDetectorRecipeOutputWithContext(ctx context.Context) GetTargetTargetDetectorRecipeOutput {
	return o
}

// Compartment Identifier
func (o GetTargetTargetDetectorRecipeOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetTargetDetectorRecipe) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// ResponderRule Description
func (o GetTargetTargetDetectorRecipeOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetTargetDetectorRecipe) string { return v.Description }).(pulumi.StringOutput)
}

// detector for the rule
func (o GetTargetTargetDetectorRecipeOutput) Detector() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetTargetDetectorRecipe) string { return v.Detector }).(pulumi.StringOutput)
}

// Unique identifier for Detector Recipe of which this is an extension
func (o GetTargetTargetDetectorRecipeOutput) DetectorRecipeId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetTargetDetectorRecipe) string { return v.DetectorRecipeId }).(pulumi.StringOutput)
}

// List of detector rules for the detector type for recipe - user input
func (o GetTargetTargetDetectorRecipeOutput) DetectorRules() GetTargetTargetDetectorRecipeDetectorRuleArrayOutput {
	return o.ApplyT(func(v GetTargetTargetDetectorRecipe) []GetTargetTargetDetectorRecipeDetectorRule {
		return v.DetectorRules
	}).(GetTargetTargetDetectorRecipeDetectorRuleArrayOutput)
}

// ResponderRule Display Name
func (o GetTargetTargetDetectorRecipeOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetTargetDetectorRecipe) string { return v.DisplayName }).(pulumi.StringOutput)
}

// List of effective detector rules for the detector type for recipe after applying defaults
func (o GetTargetTargetDetectorRecipeOutput) EffectiveDetectorRules() GetTargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutput {
	return o.ApplyT(func(v GetTargetTargetDetectorRecipe) []GetTargetTargetDetectorRecipeEffectiveDetectorRule {
		return v.EffectiveDetectorRules
	}).(GetTargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutput)
}

// Unique identifier of TargetResponderRecipe that is immutable on creation
func (o GetTargetTargetDetectorRecipeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetTargetDetectorRecipe) string { return v.Id }).(pulumi.StringOutput)
}

// Owner of ResponderRecipe
func (o GetTargetTargetDetectorRecipeOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetTargetDetectorRecipe) string { return v.Owner }).(pulumi.StringOutput)
}

// The current state of the ResponderRule.
func (o GetTargetTargetDetectorRecipeOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetTargetDetectorRecipe) string { return v.State }).(pulumi.StringOutput)
}

// The date and time the target was created. Format defined by RFC3339.
func (o GetTargetTargetDetectorRecipeOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetTargetDetectorRecipe) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the target was updated. Format defined by RFC3339.
func (o GetTargetTargetDetectorRecipeOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetTargetDetectorRecipe) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetTargetTargetDetectorRecipeArrayOutput struct{ *pulumi.OutputState }

func (GetTargetTargetDetectorRecipeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTargetTargetDetectorRecipe)(nil)).Elem()
}

func (o GetTargetTargetDetectorRecipeArrayOutput) ToGetTargetTargetDetectorRecipeArrayOutput() GetTargetTargetDetectorRecipeArrayOutput {
	return o
}

func (o GetTargetTargetDetectorRecipeArrayOutput) ToGetTargetTargetDetectorRecipeArrayOutputWithContext(ctx context.Context) GetTargetTargetDetectorRecipeArrayOutput {
	return o
}

func (o GetTargetTargetDetectorRecipeArrayOutput) Index(i pulumi.IntInput) GetTargetTargetDetectorRecipeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTargetTargetDetectorRecipe {
		return vs[0].([]GetTargetTargetDetectorRecipe)[vs[1].(int)]
	}).(GetTargetTargetDetectorRecipeOutput)
}

type GetTargetTargetDetectorRecipeDetectorRule struct {
	// ResponderRule Description
	Description string `pulumi:"description"`
	// Details of ResponderRule.
	Details GetTargetTargetDetectorRecipeDetectorRuleDetails `pulumi:"details"`
	// detector for the rule
	Detector string `pulumi:"detector"`
	// The unique identifier of the detector rule
	DetectorRuleId string `pulumi:"detectorRuleId"`
	// ResponderRule Display Name
	DisplayName string `pulumi:"displayName"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// List of cloudguard managed list types related to this rule
	ManagedListTypes []string `pulumi:"managedListTypes"`
	// Recommendation for TargetDetectorRecipeDetectorRule
	Recommendation string `pulumi:"recommendation"`
	// resource type of the configuration to which the rule is applied
	ResourceType string `pulumi:"resourceType"`
	// service type of the configuration to which the rule is applied
	ServiceType string `pulumi:"serviceType"`
	// The current state of the ResponderRule.
	State string `pulumi:"state"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetTargetTargetDetectorRecipeDetectorRuleInput is an input type that accepts GetTargetTargetDetectorRecipeDetectorRuleArgs and GetTargetTargetDetectorRecipeDetectorRuleOutput values.
// You can construct a concrete instance of `GetTargetTargetDetectorRecipeDetectorRuleInput` via:
//
//          GetTargetTargetDetectorRecipeDetectorRuleArgs{...}
type GetTargetTargetDetectorRecipeDetectorRuleInput interface {
	pulumi.Input

	ToGetTargetTargetDetectorRecipeDetectorRuleOutput() GetTargetTargetDetectorRecipeDetectorRuleOutput
	ToGetTargetTargetDetectorRecipeDetectorRuleOutputWithContext(context.Context) GetTargetTargetDetectorRecipeDetectorRuleOutput
}

type GetTargetTargetDetectorRecipeDetectorRuleArgs struct {
	// ResponderRule Description
	Description pulumi.StringInput `pulumi:"description"`
	// Details of ResponderRule.
	Details GetTargetTargetDetectorRecipeDetectorRuleDetailsInput `pulumi:"details"`
	// detector for the rule
	Detector pulumi.StringInput `pulumi:"detector"`
	// The unique identifier of the detector rule
	DetectorRuleId pulumi.StringInput `pulumi:"detectorRuleId"`
	// ResponderRule Display Name
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// List of cloudguard managed list types related to this rule
	ManagedListTypes pulumi.StringArrayInput `pulumi:"managedListTypes"`
	// Recommendation for TargetDetectorRecipeDetectorRule
	Recommendation pulumi.StringInput `pulumi:"recommendation"`
	// resource type of the configuration to which the rule is applied
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// service type of the configuration to which the rule is applied
	ServiceType pulumi.StringInput `pulumi:"serviceType"`
	// The current state of the ResponderRule.
	State pulumi.StringInput `pulumi:"state"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetTargetTargetDetectorRecipeDetectorRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetTargetDetectorRecipeDetectorRule)(nil)).Elem()
}

func (i GetTargetTargetDetectorRecipeDetectorRuleArgs) ToGetTargetTargetDetectorRecipeDetectorRuleOutput() GetTargetTargetDetectorRecipeDetectorRuleOutput {
	return i.ToGetTargetTargetDetectorRecipeDetectorRuleOutputWithContext(context.Background())
}

func (i GetTargetTargetDetectorRecipeDetectorRuleArgs) ToGetTargetTargetDetectorRecipeDetectorRuleOutputWithContext(ctx context.Context) GetTargetTargetDetectorRecipeDetectorRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTargetTargetDetectorRecipeDetectorRuleOutput)
}

// GetTargetTargetDetectorRecipeDetectorRuleArrayInput is an input type that accepts GetTargetTargetDetectorRecipeDetectorRuleArray and GetTargetTargetDetectorRecipeDetectorRuleArrayOutput values.
// You can construct a concrete instance of `GetTargetTargetDetectorRecipeDetectorRuleArrayInput` via:
//
//          GetTargetTargetDetectorRecipeDetectorRuleArray{ GetTargetTargetDetectorRecipeDetectorRuleArgs{...} }
type GetTargetTargetDetectorRecipeDetectorRuleArrayInput interface {
	pulumi.Input

	ToGetTargetTargetDetectorRecipeDetectorRuleArrayOutput() GetTargetTargetDetectorRecipeDetectorRuleArrayOutput
	ToGetTargetTargetDetectorRecipeDetectorRuleArrayOutputWithContext(context.Context) GetTargetTargetDetectorRecipeDetectorRuleArrayOutput
}

type GetTargetTargetDetectorRecipeDetectorRuleArray []GetTargetTargetDetectorRecipeDetectorRuleInput

func (GetTargetTargetDetectorRecipeDetectorRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTargetTargetDetectorRecipeDetectorRule)(nil)).Elem()
}

func (i GetTargetTargetDetectorRecipeDetectorRuleArray) ToGetTargetTargetDetectorRecipeDetectorRuleArrayOutput() GetTargetTargetDetectorRecipeDetectorRuleArrayOutput {
	return i.ToGetTargetTargetDetectorRecipeDetectorRuleArrayOutputWithContext(context.Background())
}

func (i GetTargetTargetDetectorRecipeDetectorRuleArray) ToGetTargetTargetDetectorRecipeDetectorRuleArrayOutputWithContext(ctx context.Context) GetTargetTargetDetectorRecipeDetectorRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTargetTargetDetectorRecipeDetectorRuleArrayOutput)
}

type GetTargetTargetDetectorRecipeDetectorRuleOutput struct{ *pulumi.OutputState }

func (GetTargetTargetDetectorRecipeDetectorRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetTargetDetectorRecipeDetectorRule)(nil)).Elem()
}

func (o GetTargetTargetDetectorRecipeDetectorRuleOutput) ToGetTargetTargetDetectorRecipeDetectorRuleOutput() GetTargetTargetDetectorRecipeDetectorRuleOutput {
	return o
}

func (o GetTargetTargetDetectorRecipeDetectorRuleOutput) ToGetTargetTargetDetectorRecipeDetectorRuleOutputWithContext(ctx context.Context) GetTargetTargetDetectorRecipeDetectorRuleOutput {
	return o
}

// ResponderRule Description
func (o GetTargetTargetDetectorRecipeDetectorRuleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetTargetDetectorRecipeDetectorRule) string { return v.Description }).(pulumi.StringOutput)
}

// Details of ResponderRule.
func (o GetTargetTargetDetectorRecipeDetectorRuleOutput) Details() GetTargetTargetDetectorRecipeDetectorRuleDetailsOutput {
	return o.ApplyT(func(v GetTargetTargetDetectorRecipeDetectorRule) GetTargetTargetDetectorRecipeDetectorRuleDetails {
		return v.Details
	}).(GetTargetTargetDetectorRecipeDetectorRuleDetailsOutput)
}

// detector for the rule
func (o GetTargetTargetDetectorRecipeDetectorRuleOutput) Detector() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetTargetDetectorRecipeDetectorRule) string { return v.Detector }).(pulumi.StringOutput)
}

// The unique identifier of the detector rule
func (o GetTargetTargetDetectorRecipeDetectorRuleOutput) DetectorRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetTargetDetectorRecipeDetectorRule) string { return v.DetectorRuleId }).(pulumi.StringOutput)
}

// ResponderRule Display Name
func (o GetTargetTargetDetectorRecipeDetectorRuleOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetTargetDetectorRecipeDetectorRule) string { return v.DisplayName }).(pulumi.StringOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o GetTargetTargetDetectorRecipeDetectorRuleOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetTargetDetectorRecipeDetectorRule) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// List of cloudguard managed list types related to this rule
func (o GetTargetTargetDetectorRecipeDetectorRuleOutput) ManagedListTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTargetTargetDetectorRecipeDetectorRule) []string { return v.ManagedListTypes }).(pulumi.StringArrayOutput)
}

// Recommendation for TargetDetectorRecipeDetectorRule
func (o GetTargetTargetDetectorRecipeDetectorRuleOutput) Recommendation() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetTargetDetectorRecipeDetectorRule) string { return v.Recommendation }).(pulumi.StringOutput)
}

// resource type of the configuration to which the rule is applied
func (o GetTargetTargetDetectorRecipeDetectorRuleOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetTargetDetectorRecipeDetectorRule) string { return v.ResourceType }).(pulumi.StringOutput)
}

// service type of the configuration to which the rule is applied
func (o GetTargetTargetDetectorRecipeDetectorRuleOutput) ServiceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetTargetDetectorRecipeDetectorRule) string { return v.ServiceType }).(pulumi.StringOutput)
}

// The current state of the ResponderRule.
func (o GetTargetTargetDetectorRecipeDetectorRuleOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetTargetDetectorRecipeDetectorRule) string { return v.State }).(pulumi.StringOutput)
}

// The date and time the target was created. Format defined by RFC3339.
func (o GetTargetTargetDetectorRecipeDetectorRuleOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetTargetDetectorRecipeDetectorRule) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the target was updated. Format defined by RFC3339.
func (o GetTargetTargetDetectorRecipeDetectorRuleOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetTargetDetectorRecipeDetectorRule) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetTargetTargetDetectorRecipeDetectorRuleArrayOutput struct{ *pulumi.OutputState }

func (GetTargetTargetDetectorRecipeDetectorRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTargetTargetDetectorRecipeDetectorRule)(nil)).Elem()
}

func (o GetTargetTargetDetectorRecipeDetectorRuleArrayOutput) ToGetTargetTargetDetectorRecipeDetectorRuleArrayOutput() GetTargetTargetDetectorRecipeDetectorRuleArrayOutput {
	return o
}

func (o GetTargetTargetDetectorRecipeDetectorRuleArrayOutput) ToGetTargetTargetDetectorRecipeDetectorRuleArrayOutputWithContext(ctx context.Context) GetTargetTargetDetectorRecipeDetectorRuleArrayOutput {
	return o
}

func (o GetTargetTargetDetectorRecipeDetectorRuleArrayOutput) Index(i pulumi.IntInput) GetTargetTargetDetectorRecipeDetectorRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTargetTargetDetectorRecipeDetectorRule {
		return vs[0].([]GetTargetTargetDetectorRecipeDetectorRule)[vs[1].(int)]
	}).(GetTargetTargetDetectorRecipeDetectorRuleOutput)
}

type GetTargetTargetDetectorRecipeDetectorRuleDetails struct {
	// Condition group corresponding to each compartment
	ConditionGroups []GetTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroup `pulumi:"conditionGroups"`
	// ResponderRule configurations
	Configurations []GetTargetTargetDetectorRecipeDetectorRuleDetailsConfiguration `pulumi:"configurations"`
	// configuration allowed or not
	IsConfigurationAllowed bool `pulumi:"isConfigurationAllowed"`
	// Identifies state for ResponderRule
	IsEnabled bool `pulumi:"isEnabled"`
	// user defined labels for a detector rule
	Labels []string `pulumi:"labels"`
	// The Risk Level
	RiskLevel string `pulumi:"riskLevel"`
}

// GetTargetTargetDetectorRecipeDetectorRuleDetailsInput is an input type that accepts GetTargetTargetDetectorRecipeDetectorRuleDetailsArgs and GetTargetTargetDetectorRecipeDetectorRuleDetailsOutput values.
// You can construct a concrete instance of `GetTargetTargetDetectorRecipeDetectorRuleDetailsInput` via:
//
//          GetTargetTargetDetectorRecipeDetectorRuleDetailsArgs{...}
type GetTargetTargetDetectorRecipeDetectorRuleDetailsInput interface {
	pulumi.Input

	ToGetTargetTargetDetectorRecipeDetectorRuleDetailsOutput() GetTargetTargetDetectorRecipeDetectorRuleDetailsOutput
	ToGetTargetTargetDetectorRecipeDetectorRuleDetailsOutputWithContext(context.Context) GetTargetTargetDetectorRecipeDetectorRuleDetailsOutput
}

type GetTargetTargetDetectorRecipeDetectorRuleDetailsArgs struct {
	// Condition group corresponding to each compartment
	ConditionGroups GetTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayInput `pulumi:"conditionGroups"`
	// ResponderRule configurations
	Configurations GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayInput `pulumi:"configurations"`
	// configuration allowed or not
	IsConfigurationAllowed pulumi.BoolInput `pulumi:"isConfigurationAllowed"`
	// Identifies state for ResponderRule
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// user defined labels for a detector rule
	Labels pulumi.StringArrayInput `pulumi:"labels"`
	// The Risk Level
	RiskLevel pulumi.StringInput `pulumi:"riskLevel"`
}

func (GetTargetTargetDetectorRecipeDetectorRuleDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetTargetDetectorRecipeDetectorRuleDetails)(nil)).Elem()
}

func (i GetTargetTargetDetectorRecipeDetectorRuleDetailsArgs) ToGetTargetTargetDetectorRecipeDetectorRuleDetailsOutput() GetTargetTargetDetectorRecipeDetectorRuleDetailsOutput {
	return i.ToGetTargetTargetDetectorRecipeDetectorRuleDetailsOutputWithContext(context.Background())
}

func (i GetTargetTargetDetectorRecipeDetectorRuleDetailsArgs) ToGetTargetTargetDetectorRecipeDetectorRuleDetailsOutputWithContext(ctx context.Context) GetTargetTargetDetectorRecipeDetectorRuleDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTargetTargetDetectorRecipeDetectorRuleDetailsOutput)
}

type GetTargetTargetDetectorRecipeDetectorRuleDetailsOutput struct{ *pulumi.OutputState }

func (GetTargetTargetDetectorRecipeDetectorRuleDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetTargetDetectorRecipeDetectorRuleDetails)(nil)).Elem()
}

func (o GetTargetTargetDetectorRecipeDetectorRuleDetailsOutput) ToGetTargetTargetDetectorRecipeDetectorRuleDetailsOutput() GetTargetTargetDetectorRecipeDetectorRuleDetailsOutput {
	return o
}

func (o GetTargetTargetDetectorRecipeDetectorRuleDetailsOutput) ToGetTargetTargetDetectorRecipeDetectorRuleDetailsOutputWithContext(ctx context.Context) GetTargetTargetDetectorRecipeDetectorRuleDetailsOutput {
	return o
}

// Condition group corresponding to each compartment
func (o GetTargetTargetDetectorRecipeDetectorRuleDetailsOutput) ConditionGroups() GetTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutput {
	return o.ApplyT(func(v GetTargetTargetDetectorRecipeDetectorRuleDetails) []GetTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroup {
		return v.ConditionGroups
	}).(GetTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutput)
}

// ResponderRule configurations
func (o GetTargetTargetDetectorRecipeDetectorRuleDetailsOutput) Configurations() GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput {
	return o.ApplyT(func(v GetTargetTargetDetectorRecipeDetectorRuleDetails) []GetTargetTargetDetectorRecipeDetectorRuleDetailsConfiguration {
		return v.Configurations
	}).(GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput)
}

// configuration allowed or not
func (o GetTargetTargetDetectorRecipeDetectorRuleDetailsOutput) IsConfigurationAllowed() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTargetTargetDetectorRecipeDetectorRuleDetails) bool { return v.IsConfigurationAllowed }).(pulumi.BoolOutput)
}

// Identifies state for ResponderRule
func (o GetTargetTargetDetectorRecipeDetectorRuleDetailsOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTargetTargetDetectorRecipeDetectorRuleDetails) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// user defined labels for a detector rule
func (o GetTargetTargetDetectorRecipeDetectorRuleDetailsOutput) Labels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTargetTargetDetectorRecipeDetectorRuleDetails) []string { return v.Labels }).(pulumi.StringArrayOutput)
}

// The Risk Level
func (o GetTargetTargetDetectorRecipeDetectorRuleDetailsOutput) RiskLevel() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetTargetDetectorRecipeDetectorRuleDetails) string { return v.RiskLevel }).(pulumi.StringOutput)
}

type GetTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroup struct {
	// Compartment Identifier
	CompartmentId string `pulumi:"compartmentId"`
	Condition     string `pulumi:"condition"`
}

// GetTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupInput is an input type that accepts GetTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArgs and GetTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutput values.
// You can construct a concrete instance of `GetTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupInput` via:
//
//          GetTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArgs{...}
type GetTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupInput interface {
	pulumi.Input

	ToGetTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutput() GetTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutput
	ToGetTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutputWithContext(context.Context) GetTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutput
}

type GetTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArgs struct {
	// Compartment Identifier
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	Condition     pulumi.StringInput `pulumi:"condition"`
}

func (GetTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroup)(nil)).Elem()
}

func (i GetTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArgs) ToGetTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutput() GetTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutput {
	return i.ToGetTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutputWithContext(context.Background())
}

func (i GetTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArgs) ToGetTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutputWithContext(ctx context.Context) GetTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutput)
}

// GetTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayInput is an input type that accepts GetTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArray and GetTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutput values.
// You can construct a concrete instance of `GetTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayInput` via:
//
//          GetTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArray{ GetTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArgs{...} }
type GetTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayInput interface {
	pulumi.Input

	ToGetTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutput() GetTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutput
	ToGetTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutputWithContext(context.Context) GetTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutput
}

type GetTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArray []GetTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupInput

func (GetTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroup)(nil)).Elem()
}

func (i GetTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArray) ToGetTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutput() GetTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutput {
	return i.ToGetTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutputWithContext(context.Background())
}

func (i GetTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArray) ToGetTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutputWithContext(ctx context.Context) GetTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutput)
}

type GetTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutput struct{ *pulumi.OutputState }

func (GetTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroup)(nil)).Elem()
}

func (o GetTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutput) ToGetTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutput() GetTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutput {
	return o
}

func (o GetTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutput) ToGetTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutputWithContext(ctx context.Context) GetTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutput {
	return o
}

// Compartment Identifier
func (o GetTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroup) string { return v.CompartmentId }).(pulumi.StringOutput)
}

func (o GetTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroup) string { return v.Condition }).(pulumi.StringOutput)
}

type GetTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutput struct{ *pulumi.OutputState }

func (GetTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroup)(nil)).Elem()
}

func (o GetTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutput) ToGetTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutput() GetTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutput {
	return o
}

func (o GetTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutput) ToGetTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutputWithContext(ctx context.Context) GetTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutput {
	return o
}

func (o GetTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutput) Index(i pulumi.IntInput) GetTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroup {
		return vs[0].([]GetTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroup)[vs[1].(int)]
	}).(GetTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutput)
}

type GetTargetTargetDetectorRecipeDetectorRuleDetailsConfiguration struct {
	// Unique name of the configuration
	ConfigKey string `pulumi:"configKey"`
	// configuration data type
	DataType string `pulumi:"dataType"`
	// configuration name
	Name string `pulumi:"name"`
	// configuration value
	Value string `pulumi:"value"`
	// List of configuration values
	Values []GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValue `pulumi:"values"`
}

// GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationInput is an input type that accepts GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArgs and GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput values.
// You can construct a concrete instance of `GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationInput` via:
//
//          GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArgs{...}
type GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationInput interface {
	pulumi.Input

	ToGetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput() GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput
	ToGetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationOutputWithContext(context.Context) GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput
}

type GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArgs struct {
	// Unique name of the configuration
	ConfigKey pulumi.StringInput `pulumi:"configKey"`
	// configuration data type
	DataType pulumi.StringInput `pulumi:"dataType"`
	// configuration name
	Name pulumi.StringInput `pulumi:"name"`
	// configuration value
	Value pulumi.StringInput `pulumi:"value"`
	// List of configuration values
	Values GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayInput `pulumi:"values"`
}

func (GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetTargetDetectorRecipeDetectorRuleDetailsConfiguration)(nil)).Elem()
}

func (i GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArgs) ToGetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput() GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput {
	return i.ToGetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationOutputWithContext(context.Background())
}

func (i GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArgs) ToGetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationOutputWithContext(ctx context.Context) GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput)
}

// GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayInput is an input type that accepts GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArray and GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput values.
// You can construct a concrete instance of `GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayInput` via:
//
//          GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArray{ GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArgs{...} }
type GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayInput interface {
	pulumi.Input

	ToGetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput() GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput
	ToGetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutputWithContext(context.Context) GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput
}

type GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArray []GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationInput

func (GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTargetTargetDetectorRecipeDetectorRuleDetailsConfiguration)(nil)).Elem()
}

func (i GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArray) ToGetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput() GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput {
	return i.ToGetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutputWithContext(context.Background())
}

func (i GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArray) ToGetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutputWithContext(ctx context.Context) GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput)
}

type GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput struct{ *pulumi.OutputState }

func (GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetTargetDetectorRecipeDetectorRuleDetailsConfiguration)(nil)).Elem()
}

func (o GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput) ToGetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput() GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput {
	return o
}

func (o GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput) ToGetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationOutputWithContext(ctx context.Context) GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput {
	return o
}

// Unique name of the configuration
func (o GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput) ConfigKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetTargetDetectorRecipeDetectorRuleDetailsConfiguration) string { return v.ConfigKey }).(pulumi.StringOutput)
}

// configuration data type
func (o GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput) DataType() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetTargetDetectorRecipeDetectorRuleDetailsConfiguration) string { return v.DataType }).(pulumi.StringOutput)
}

// configuration name
func (o GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetTargetDetectorRecipeDetectorRuleDetailsConfiguration) string { return v.Name }).(pulumi.StringOutput)
}

// configuration value
func (o GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetTargetDetectorRecipeDetectorRuleDetailsConfiguration) string { return v.Value }).(pulumi.StringOutput)
}

// List of configuration values
func (o GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput) Values() GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput {
	return o.ApplyT(func(v GetTargetTargetDetectorRecipeDetectorRuleDetailsConfiguration) []GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValue {
		return v.Values
	}).(GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput)
}

type GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTargetTargetDetectorRecipeDetectorRuleDetailsConfiguration)(nil)).Elem()
}

func (o GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput) ToGetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput() GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput {
	return o
}

func (o GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput) ToGetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutputWithContext(ctx context.Context) GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput {
	return o
}

func (o GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput) Index(i pulumi.IntInput) GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTargetTargetDetectorRecipeDetectorRuleDetailsConfiguration {
		return vs[0].([]GetTargetTargetDetectorRecipeDetectorRuleDetailsConfiguration)[vs[1].(int)]
	}).(GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput)
}

type GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValue struct {
	// configuration list item type, either CUSTOM or MANAGED
	ListType string `pulumi:"listType"`
	// type of the managed list
	ManagedListType string `pulumi:"managedListType"`
	// configuration value
	Value string `pulumi:"value"`
}

// GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueInput is an input type that accepts GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArgs and GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput values.
// You can construct a concrete instance of `GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueInput` via:
//
//          GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArgs{...}
type GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueInput interface {
	pulumi.Input

	ToGetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput() GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput
	ToGetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutputWithContext(context.Context) GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput
}

type GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArgs struct {
	// configuration list item type, either CUSTOM or MANAGED
	ListType pulumi.StringInput `pulumi:"listType"`
	// type of the managed list
	ManagedListType pulumi.StringInput `pulumi:"managedListType"`
	// configuration value
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValue)(nil)).Elem()
}

func (i GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArgs) ToGetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput() GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput {
	return i.ToGetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutputWithContext(context.Background())
}

func (i GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArgs) ToGetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutputWithContext(ctx context.Context) GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput)
}

// GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayInput is an input type that accepts GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArray and GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput values.
// You can construct a concrete instance of `GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayInput` via:
//
//          GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArray{ GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArgs{...} }
type GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayInput interface {
	pulumi.Input

	ToGetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput() GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput
	ToGetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutputWithContext(context.Context) GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput
}

type GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArray []GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueInput

func (GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValue)(nil)).Elem()
}

func (i GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArray) ToGetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput() GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput {
	return i.ToGetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutputWithContext(context.Background())
}

func (i GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArray) ToGetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutputWithContext(ctx context.Context) GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput)
}

type GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput struct{ *pulumi.OutputState }

func (GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValue)(nil)).Elem()
}

func (o GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput) ToGetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput() GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput {
	return o
}

func (o GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput) ToGetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutputWithContext(ctx context.Context) GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput {
	return o
}

// configuration list item type, either CUSTOM or MANAGED
func (o GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput) ListType() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValue) string { return v.ListType }).(pulumi.StringOutput)
}

// type of the managed list
func (o GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput) ManagedListType() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValue) string {
		return v.ManagedListType
	}).(pulumi.StringOutput)
}

// configuration value
func (o GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValue) string { return v.Value }).(pulumi.StringOutput)
}

type GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput struct{ *pulumi.OutputState }

func (GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValue)(nil)).Elem()
}

func (o GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput) ToGetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput() GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput {
	return o
}

func (o GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput) ToGetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutputWithContext(ctx context.Context) GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput {
	return o
}

func (o GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput) Index(i pulumi.IntInput) GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValue {
		return vs[0].([]GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValue)[vs[1].(int)]
	}).(GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput)
}

type GetTargetTargetDetectorRecipeEffectiveDetectorRule struct {
	// ResponderRule Description
	Description string `pulumi:"description"`
	// Details of ResponderRule.
	Details GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetails `pulumi:"details"`
	// detector for the rule
	Detector string `pulumi:"detector"`
	// The unique identifier of the detector rule
	DetectorRuleId string `pulumi:"detectorRuleId"`
	// ResponderRule Display Name
	DisplayName string `pulumi:"displayName"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// List of cloudguard managed list types related to this rule
	ManagedListTypes []string `pulumi:"managedListTypes"`
	// Recommendation for TargetDetectorRecipeDetectorRule
	Recommendation string `pulumi:"recommendation"`
	// resource type of the configuration to which the rule is applied
	ResourceType string `pulumi:"resourceType"`
	// service type of the configuration to which the rule is applied
	ServiceType string `pulumi:"serviceType"`
	// The current state of the ResponderRule.
	State string `pulumi:"state"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetTargetTargetDetectorRecipeEffectiveDetectorRuleInput is an input type that accepts GetTargetTargetDetectorRecipeEffectiveDetectorRuleArgs and GetTargetTargetDetectorRecipeEffectiveDetectorRuleOutput values.
// You can construct a concrete instance of `GetTargetTargetDetectorRecipeEffectiveDetectorRuleInput` via:
//
//          GetTargetTargetDetectorRecipeEffectiveDetectorRuleArgs{...}
type GetTargetTargetDetectorRecipeEffectiveDetectorRuleInput interface {
	pulumi.Input

	ToGetTargetTargetDetectorRecipeEffectiveDetectorRuleOutput() GetTargetTargetDetectorRecipeEffectiveDetectorRuleOutput
	ToGetTargetTargetDetectorRecipeEffectiveDetectorRuleOutputWithContext(context.Context) GetTargetTargetDetectorRecipeEffectiveDetectorRuleOutput
}

type GetTargetTargetDetectorRecipeEffectiveDetectorRuleArgs struct {
	// ResponderRule Description
	Description pulumi.StringInput `pulumi:"description"`
	// Details of ResponderRule.
	Details GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsInput `pulumi:"details"`
	// detector for the rule
	Detector pulumi.StringInput `pulumi:"detector"`
	// The unique identifier of the detector rule
	DetectorRuleId pulumi.StringInput `pulumi:"detectorRuleId"`
	// ResponderRule Display Name
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// List of cloudguard managed list types related to this rule
	ManagedListTypes pulumi.StringArrayInput `pulumi:"managedListTypes"`
	// Recommendation for TargetDetectorRecipeDetectorRule
	Recommendation pulumi.StringInput `pulumi:"recommendation"`
	// resource type of the configuration to which the rule is applied
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// service type of the configuration to which the rule is applied
	ServiceType pulumi.StringInput `pulumi:"serviceType"`
	// The current state of the ResponderRule.
	State pulumi.StringInput `pulumi:"state"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetTargetTargetDetectorRecipeEffectiveDetectorRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetTargetDetectorRecipeEffectiveDetectorRule)(nil)).Elem()
}

func (i GetTargetTargetDetectorRecipeEffectiveDetectorRuleArgs) ToGetTargetTargetDetectorRecipeEffectiveDetectorRuleOutput() GetTargetTargetDetectorRecipeEffectiveDetectorRuleOutput {
	return i.ToGetTargetTargetDetectorRecipeEffectiveDetectorRuleOutputWithContext(context.Background())
}

func (i GetTargetTargetDetectorRecipeEffectiveDetectorRuleArgs) ToGetTargetTargetDetectorRecipeEffectiveDetectorRuleOutputWithContext(ctx context.Context) GetTargetTargetDetectorRecipeEffectiveDetectorRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTargetTargetDetectorRecipeEffectiveDetectorRuleOutput)
}

// GetTargetTargetDetectorRecipeEffectiveDetectorRuleArrayInput is an input type that accepts GetTargetTargetDetectorRecipeEffectiveDetectorRuleArray and GetTargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutput values.
// You can construct a concrete instance of `GetTargetTargetDetectorRecipeEffectiveDetectorRuleArrayInput` via:
//
//          GetTargetTargetDetectorRecipeEffectiveDetectorRuleArray{ GetTargetTargetDetectorRecipeEffectiveDetectorRuleArgs{...} }
type GetTargetTargetDetectorRecipeEffectiveDetectorRuleArrayInput interface {
	pulumi.Input

	ToGetTargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutput() GetTargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutput
	ToGetTargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutputWithContext(context.Context) GetTargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutput
}

type GetTargetTargetDetectorRecipeEffectiveDetectorRuleArray []GetTargetTargetDetectorRecipeEffectiveDetectorRuleInput

func (GetTargetTargetDetectorRecipeEffectiveDetectorRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTargetTargetDetectorRecipeEffectiveDetectorRule)(nil)).Elem()
}

func (i GetTargetTargetDetectorRecipeEffectiveDetectorRuleArray) ToGetTargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutput() GetTargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutput {
	return i.ToGetTargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutputWithContext(context.Background())
}

func (i GetTargetTargetDetectorRecipeEffectiveDetectorRuleArray) ToGetTargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutputWithContext(ctx context.Context) GetTargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutput)
}

type GetTargetTargetDetectorRecipeEffectiveDetectorRuleOutput struct{ *pulumi.OutputState }

func (GetTargetTargetDetectorRecipeEffectiveDetectorRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetTargetDetectorRecipeEffectiveDetectorRule)(nil)).Elem()
}

func (o GetTargetTargetDetectorRecipeEffectiveDetectorRuleOutput) ToGetTargetTargetDetectorRecipeEffectiveDetectorRuleOutput() GetTargetTargetDetectorRecipeEffectiveDetectorRuleOutput {
	return o
}

func (o GetTargetTargetDetectorRecipeEffectiveDetectorRuleOutput) ToGetTargetTargetDetectorRecipeEffectiveDetectorRuleOutputWithContext(ctx context.Context) GetTargetTargetDetectorRecipeEffectiveDetectorRuleOutput {
	return o
}

// ResponderRule Description
func (o GetTargetTargetDetectorRecipeEffectiveDetectorRuleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetTargetDetectorRecipeEffectiveDetectorRule) string { return v.Description }).(pulumi.StringOutput)
}

// Details of ResponderRule.
func (o GetTargetTargetDetectorRecipeEffectiveDetectorRuleOutput) Details() GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsOutput {
	return o.ApplyT(func(v GetTargetTargetDetectorRecipeEffectiveDetectorRule) GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetails {
		return v.Details
	}).(GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsOutput)
}

// detector for the rule
func (o GetTargetTargetDetectorRecipeEffectiveDetectorRuleOutput) Detector() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetTargetDetectorRecipeEffectiveDetectorRule) string { return v.Detector }).(pulumi.StringOutput)
}

// The unique identifier of the detector rule
func (o GetTargetTargetDetectorRecipeEffectiveDetectorRuleOutput) DetectorRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetTargetDetectorRecipeEffectiveDetectorRule) string { return v.DetectorRuleId }).(pulumi.StringOutput)
}

// ResponderRule Display Name
func (o GetTargetTargetDetectorRecipeEffectiveDetectorRuleOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetTargetDetectorRecipeEffectiveDetectorRule) string { return v.DisplayName }).(pulumi.StringOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o GetTargetTargetDetectorRecipeEffectiveDetectorRuleOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetTargetDetectorRecipeEffectiveDetectorRule) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// List of cloudguard managed list types related to this rule
func (o GetTargetTargetDetectorRecipeEffectiveDetectorRuleOutput) ManagedListTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTargetTargetDetectorRecipeEffectiveDetectorRule) []string { return v.ManagedListTypes }).(pulumi.StringArrayOutput)
}

// Recommendation for TargetDetectorRecipeDetectorRule
func (o GetTargetTargetDetectorRecipeEffectiveDetectorRuleOutput) Recommendation() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetTargetDetectorRecipeEffectiveDetectorRule) string { return v.Recommendation }).(pulumi.StringOutput)
}

// resource type of the configuration to which the rule is applied
func (o GetTargetTargetDetectorRecipeEffectiveDetectorRuleOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetTargetDetectorRecipeEffectiveDetectorRule) string { return v.ResourceType }).(pulumi.StringOutput)
}

// service type of the configuration to which the rule is applied
func (o GetTargetTargetDetectorRecipeEffectiveDetectorRuleOutput) ServiceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetTargetDetectorRecipeEffectiveDetectorRule) string { return v.ServiceType }).(pulumi.StringOutput)
}

// The current state of the ResponderRule.
func (o GetTargetTargetDetectorRecipeEffectiveDetectorRuleOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetTargetDetectorRecipeEffectiveDetectorRule) string { return v.State }).(pulumi.StringOutput)
}

// The date and time the target was created. Format defined by RFC3339.
func (o GetTargetTargetDetectorRecipeEffectiveDetectorRuleOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetTargetDetectorRecipeEffectiveDetectorRule) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the target was updated. Format defined by RFC3339.
func (o GetTargetTargetDetectorRecipeEffectiveDetectorRuleOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetTargetDetectorRecipeEffectiveDetectorRule) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetTargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutput struct{ *pulumi.OutputState }

func (GetTargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTargetTargetDetectorRecipeEffectiveDetectorRule)(nil)).Elem()
}

func (o GetTargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutput) ToGetTargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutput() GetTargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutput {
	return o
}

func (o GetTargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutput) ToGetTargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutputWithContext(ctx context.Context) GetTargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutput {
	return o
}

func (o GetTargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutput) Index(i pulumi.IntInput) GetTargetTargetDetectorRecipeEffectiveDetectorRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTargetTargetDetectorRecipeEffectiveDetectorRule {
		return vs[0].([]GetTargetTargetDetectorRecipeEffectiveDetectorRule)[vs[1].(int)]
	}).(GetTargetTargetDetectorRecipeEffectiveDetectorRuleOutput)
}

type GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetails struct {
	// Condition group corresponding to each compartment
	ConditionGroups []GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroup `pulumi:"conditionGroups"`
	// ResponderRule configurations
	Configurations []GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfiguration `pulumi:"configurations"`
	// configuration allowed or not
	IsConfigurationAllowed bool `pulumi:"isConfigurationAllowed"`
	// Identifies state for ResponderRule
	IsEnabled bool `pulumi:"isEnabled"`
	// user defined labels for a detector rule
	Labels []string `pulumi:"labels"`
	// The Risk Level
	RiskLevel string `pulumi:"riskLevel"`
}

// GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsInput is an input type that accepts GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsArgs and GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsOutput values.
// You can construct a concrete instance of `GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsInput` via:
//
//          GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsArgs{...}
type GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsInput interface {
	pulumi.Input

	ToGetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsOutput() GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsOutput
	ToGetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsOutputWithContext(context.Context) GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsOutput
}

type GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsArgs struct {
	// Condition group corresponding to each compartment
	ConditionGroups GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArrayInput `pulumi:"conditionGroups"`
	// ResponderRule configurations
	Configurations GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayInput `pulumi:"configurations"`
	// configuration allowed or not
	IsConfigurationAllowed pulumi.BoolInput `pulumi:"isConfigurationAllowed"`
	// Identifies state for ResponderRule
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// user defined labels for a detector rule
	Labels pulumi.StringArrayInput `pulumi:"labels"`
	// The Risk Level
	RiskLevel pulumi.StringInput `pulumi:"riskLevel"`
}

func (GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetails)(nil)).Elem()
}

func (i GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsArgs) ToGetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsOutput() GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsOutput {
	return i.ToGetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsOutputWithContext(context.Background())
}

func (i GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsArgs) ToGetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsOutputWithContext(ctx context.Context) GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsOutput)
}

type GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsOutput struct{ *pulumi.OutputState }

func (GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetails)(nil)).Elem()
}

func (o GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsOutput) ToGetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsOutput() GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsOutput {
	return o
}

func (o GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsOutput) ToGetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsOutputWithContext(ctx context.Context) GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsOutput {
	return o
}

// Condition group corresponding to each compartment
func (o GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsOutput) ConditionGroups() GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArrayOutput {
	return o.ApplyT(func(v GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetails) []GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroup {
		return v.ConditionGroups
	}).(GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArrayOutput)
}

// ResponderRule configurations
func (o GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsOutput) Configurations() GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput {
	return o.ApplyT(func(v GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetails) []GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfiguration {
		return v.Configurations
	}).(GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput)
}

// configuration allowed or not
func (o GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsOutput) IsConfigurationAllowed() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetails) bool {
		return v.IsConfigurationAllowed
	}).(pulumi.BoolOutput)
}

// Identifies state for ResponderRule
func (o GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetails) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// user defined labels for a detector rule
func (o GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsOutput) Labels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetails) []string { return v.Labels }).(pulumi.StringArrayOutput)
}

// The Risk Level
func (o GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsOutput) RiskLevel() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetails) string { return v.RiskLevel }).(pulumi.StringOutput)
}

type GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroup struct {
	// Compartment Identifier
	CompartmentId string `pulumi:"compartmentId"`
	Condition     string `pulumi:"condition"`
}

// GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupInput is an input type that accepts GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArgs and GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupOutput values.
// You can construct a concrete instance of `GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupInput` via:
//
//          GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArgs{...}
type GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupInput interface {
	pulumi.Input

	ToGetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupOutput() GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupOutput
	ToGetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupOutputWithContext(context.Context) GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupOutput
}

type GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArgs struct {
	// Compartment Identifier
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	Condition     pulumi.StringInput `pulumi:"condition"`
}

func (GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroup)(nil)).Elem()
}

func (i GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArgs) ToGetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupOutput() GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupOutput {
	return i.ToGetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupOutputWithContext(context.Background())
}

func (i GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArgs) ToGetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupOutputWithContext(ctx context.Context) GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupOutput)
}

// GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArrayInput is an input type that accepts GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArray and GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArrayOutput values.
// You can construct a concrete instance of `GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArrayInput` via:
//
//          GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArray{ GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArgs{...} }
type GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArrayInput interface {
	pulumi.Input

	ToGetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArrayOutput() GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArrayOutput
	ToGetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArrayOutputWithContext(context.Context) GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArrayOutput
}

type GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArray []GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupInput

func (GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroup)(nil)).Elem()
}

func (i GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArray) ToGetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArrayOutput() GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArrayOutput {
	return i.ToGetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArrayOutputWithContext(context.Background())
}

func (i GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArray) ToGetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArrayOutputWithContext(ctx context.Context) GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArrayOutput)
}

type GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupOutput struct{ *pulumi.OutputState }

func (GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroup)(nil)).Elem()
}

func (o GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupOutput) ToGetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupOutput() GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupOutput {
	return o
}

func (o GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupOutput) ToGetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupOutputWithContext(ctx context.Context) GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupOutput {
	return o
}

// Compartment Identifier
func (o GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroup) string {
		return v.CompartmentId
	}).(pulumi.StringOutput)
}

func (o GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroup) string {
		return v.Condition
	}).(pulumi.StringOutput)
}

type GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArrayOutput struct{ *pulumi.OutputState }

func (GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroup)(nil)).Elem()
}

func (o GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArrayOutput) ToGetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArrayOutput() GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArrayOutput {
	return o
}

func (o GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArrayOutput) ToGetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArrayOutputWithContext(ctx context.Context) GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArrayOutput {
	return o
}

func (o GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArrayOutput) Index(i pulumi.IntInput) GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroup {
		return vs[0].([]GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroup)[vs[1].(int)]
	}).(GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupOutput)
}

type GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfiguration struct {
	// Unique name of the configuration
	ConfigKey string `pulumi:"configKey"`
	// configuration data type
	DataType string `pulumi:"dataType"`
	// configuration name
	Name string `pulumi:"name"`
	// configuration value
	Value string `pulumi:"value"`
	// List of configuration values
	Values []GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValue `pulumi:"values"`
}

// GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationInput is an input type that accepts GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArgs and GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput values.
// You can construct a concrete instance of `GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationInput` via:
//
//          GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArgs{...}
type GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationInput interface {
	pulumi.Input

	ToGetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput() GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput
	ToGetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutputWithContext(context.Context) GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput
}

type GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArgs struct {
	// Unique name of the configuration
	ConfigKey pulumi.StringInput `pulumi:"configKey"`
	// configuration data type
	DataType pulumi.StringInput `pulumi:"dataType"`
	// configuration name
	Name pulumi.StringInput `pulumi:"name"`
	// configuration value
	Value pulumi.StringInput `pulumi:"value"`
	// List of configuration values
	Values GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayInput `pulumi:"values"`
}

func (GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfiguration)(nil)).Elem()
}

func (i GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArgs) ToGetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput() GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput {
	return i.ToGetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutputWithContext(context.Background())
}

func (i GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArgs) ToGetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutputWithContext(ctx context.Context) GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput)
}

// GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayInput is an input type that accepts GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArray and GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput values.
// You can construct a concrete instance of `GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayInput` via:
//
//          GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArray{ GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArgs{...} }
type GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayInput interface {
	pulumi.Input

	ToGetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput() GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput
	ToGetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutputWithContext(context.Context) GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput
}

type GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArray []GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationInput

func (GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfiguration)(nil)).Elem()
}

func (i GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArray) ToGetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput() GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput {
	return i.ToGetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutputWithContext(context.Background())
}

func (i GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArray) ToGetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutputWithContext(ctx context.Context) GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput)
}

type GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput struct{ *pulumi.OutputState }

func (GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfiguration)(nil)).Elem()
}

func (o GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput) ToGetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput() GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput {
	return o
}

func (o GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput) ToGetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutputWithContext(ctx context.Context) GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput {
	return o
}

// Unique name of the configuration
func (o GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput) ConfigKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfiguration) string {
		return v.ConfigKey
	}).(pulumi.StringOutput)
}

// configuration data type
func (o GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput) DataType() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfiguration) string {
		return v.DataType
	}).(pulumi.StringOutput)
}

// configuration name
func (o GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfiguration) string { return v.Name }).(pulumi.StringOutput)
}

// configuration value
func (o GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfiguration) string { return v.Value }).(pulumi.StringOutput)
}

// List of configuration values
func (o GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput) Values() GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput {
	return o.ApplyT(func(v GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfiguration) []GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValue {
		return v.Values
	}).(GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput)
}

type GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfiguration)(nil)).Elem()
}

func (o GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput) ToGetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput() GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput {
	return o
}

func (o GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput) ToGetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutputWithContext(ctx context.Context) GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput {
	return o
}

func (o GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput) Index(i pulumi.IntInput) GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfiguration {
		return vs[0].([]GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfiguration)[vs[1].(int)]
	}).(GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput)
}

type GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValue struct {
	// configuration list item type, either CUSTOM or MANAGED
	ListType string `pulumi:"listType"`
	// type of the managed list
	ManagedListType string `pulumi:"managedListType"`
	// configuration value
	Value string `pulumi:"value"`
}

// GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueInput is an input type that accepts GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArgs and GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput values.
// You can construct a concrete instance of `GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueInput` via:
//
//          GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArgs{...}
type GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueInput interface {
	pulumi.Input

	ToGetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput() GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput
	ToGetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutputWithContext(context.Context) GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput
}

type GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArgs struct {
	// configuration list item type, either CUSTOM or MANAGED
	ListType pulumi.StringInput `pulumi:"listType"`
	// type of the managed list
	ManagedListType pulumi.StringInput `pulumi:"managedListType"`
	// configuration value
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValue)(nil)).Elem()
}

func (i GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArgs) ToGetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput() GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput {
	return i.ToGetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutputWithContext(context.Background())
}

func (i GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArgs) ToGetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutputWithContext(ctx context.Context) GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput)
}

// GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayInput is an input type that accepts GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArray and GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput values.
// You can construct a concrete instance of `GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayInput` via:
//
//          GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArray{ GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArgs{...} }
type GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayInput interface {
	pulumi.Input

	ToGetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput() GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput
	ToGetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutputWithContext(context.Context) GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput
}

type GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArray []GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueInput

func (GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValue)(nil)).Elem()
}

func (i GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArray) ToGetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput() GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput {
	return i.ToGetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutputWithContext(context.Background())
}

func (i GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArray) ToGetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutputWithContext(ctx context.Context) GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput)
}

type GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput struct{ *pulumi.OutputState }

func (GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValue)(nil)).Elem()
}

func (o GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput) ToGetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput() GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput {
	return o
}

func (o GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput) ToGetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutputWithContext(ctx context.Context) GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput {
	return o
}

// configuration list item type, either CUSTOM or MANAGED
func (o GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput) ListType() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValue) string {
		return v.ListType
	}).(pulumi.StringOutput)
}

// type of the managed list
func (o GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput) ManagedListType() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValue) string {
		return v.ManagedListType
	}).(pulumi.StringOutput)
}

// configuration value
func (o GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValue) string {
		return v.Value
	}).(pulumi.StringOutput)
}

type GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput struct{ *pulumi.OutputState }

func (GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValue)(nil)).Elem()
}

func (o GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput) ToGetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput() GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput {
	return o
}

func (o GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput) ToGetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutputWithContext(ctx context.Context) GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput {
	return o
}

func (o GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput) Index(i pulumi.IntInput) GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValue {
		return vs[0].([]GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValue)[vs[1].(int)]
	}).(GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput)
}

type GetTargetTargetResponderRecipe struct {
	// Compartment Identifier
	CompartmentId string `pulumi:"compartmentId"`
	// ResponderRule Description
	Description string `pulumi:"description"`
	// ResponderRule Display Name
	DisplayName string `pulumi:"displayName"`
	// List of responder rules associated with the recipe after applying all defaults
	EffectiveResponderRules []GetTargetTargetResponderRecipeEffectiveResponderRule `pulumi:"effectiveResponderRules"`
	// Unique identifier of TargetResponderRecipe that is immutable on creation
	Id string `pulumi:"id"`
	// Owner of ResponderRecipe
	Owner string `pulumi:"owner"`
	// Unique identifier for Responder Recipe of which this is an extension
	ResponderRecipeId string `pulumi:"responderRecipeId"`
	// List of responder rules associated with the recipe - user input
	ResponderRules []GetTargetTargetResponderRecipeResponderRule `pulumi:"responderRules"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetTargetTargetResponderRecipeInput is an input type that accepts GetTargetTargetResponderRecipeArgs and GetTargetTargetResponderRecipeOutput values.
// You can construct a concrete instance of `GetTargetTargetResponderRecipeInput` via:
//
//          GetTargetTargetResponderRecipeArgs{...}
type GetTargetTargetResponderRecipeInput interface {
	pulumi.Input

	ToGetTargetTargetResponderRecipeOutput() GetTargetTargetResponderRecipeOutput
	ToGetTargetTargetResponderRecipeOutputWithContext(context.Context) GetTargetTargetResponderRecipeOutput
}

type GetTargetTargetResponderRecipeArgs struct {
	// Compartment Identifier
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// ResponderRule Description
	Description pulumi.StringInput `pulumi:"description"`
	// ResponderRule Display Name
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// List of responder rules associated with the recipe after applying all defaults
	EffectiveResponderRules GetTargetTargetResponderRecipeEffectiveResponderRuleArrayInput `pulumi:"effectiveResponderRules"`
	// Unique identifier of TargetResponderRecipe that is immutable on creation
	Id pulumi.StringInput `pulumi:"id"`
	// Owner of ResponderRecipe
	Owner pulumi.StringInput `pulumi:"owner"`
	// Unique identifier for Responder Recipe of which this is an extension
	ResponderRecipeId pulumi.StringInput `pulumi:"responderRecipeId"`
	// List of responder rules associated with the recipe - user input
	ResponderRules GetTargetTargetResponderRecipeResponderRuleArrayInput `pulumi:"responderRules"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetTargetTargetResponderRecipeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetTargetResponderRecipe)(nil)).Elem()
}

func (i GetTargetTargetResponderRecipeArgs) ToGetTargetTargetResponderRecipeOutput() GetTargetTargetResponderRecipeOutput {
	return i.ToGetTargetTargetResponderRecipeOutputWithContext(context.Background())
}

func (i GetTargetTargetResponderRecipeArgs) ToGetTargetTargetResponderRecipeOutputWithContext(ctx context.Context) GetTargetTargetResponderRecipeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTargetTargetResponderRecipeOutput)
}

// GetTargetTargetResponderRecipeArrayInput is an input type that accepts GetTargetTargetResponderRecipeArray and GetTargetTargetResponderRecipeArrayOutput values.
// You can construct a concrete instance of `GetTargetTargetResponderRecipeArrayInput` via:
//
//          GetTargetTargetResponderRecipeArray{ GetTargetTargetResponderRecipeArgs{...} }
type GetTargetTargetResponderRecipeArrayInput interface {
	pulumi.Input

	ToGetTargetTargetResponderRecipeArrayOutput() GetTargetTargetResponderRecipeArrayOutput
	ToGetTargetTargetResponderRecipeArrayOutputWithContext(context.Context) GetTargetTargetResponderRecipeArrayOutput
}

type GetTargetTargetResponderRecipeArray []GetTargetTargetResponderRecipeInput

func (GetTargetTargetResponderRecipeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTargetTargetResponderRecipe)(nil)).Elem()
}

func (i GetTargetTargetResponderRecipeArray) ToGetTargetTargetResponderRecipeArrayOutput() GetTargetTargetResponderRecipeArrayOutput {
	return i.ToGetTargetTargetResponderRecipeArrayOutputWithContext(context.Background())
}

func (i GetTargetTargetResponderRecipeArray) ToGetTargetTargetResponderRecipeArrayOutputWithContext(ctx context.Context) GetTargetTargetResponderRecipeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTargetTargetResponderRecipeArrayOutput)
}

type GetTargetTargetResponderRecipeOutput struct{ *pulumi.OutputState }

func (GetTargetTargetResponderRecipeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetTargetResponderRecipe)(nil)).Elem()
}

func (o GetTargetTargetResponderRecipeOutput) ToGetTargetTargetResponderRecipeOutput() GetTargetTargetResponderRecipeOutput {
	return o
}

func (o GetTargetTargetResponderRecipeOutput) ToGetTargetTargetResponderRecipeOutputWithContext(ctx context.Context) GetTargetTargetResponderRecipeOutput {
	return o
}

// Compartment Identifier
func (o GetTargetTargetResponderRecipeOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetTargetResponderRecipe) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// ResponderRule Description
func (o GetTargetTargetResponderRecipeOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetTargetResponderRecipe) string { return v.Description }).(pulumi.StringOutput)
}

// ResponderRule Display Name
func (o GetTargetTargetResponderRecipeOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetTargetResponderRecipe) string { return v.DisplayName }).(pulumi.StringOutput)
}

// List of responder rules associated with the recipe after applying all defaults
func (o GetTargetTargetResponderRecipeOutput) EffectiveResponderRules() GetTargetTargetResponderRecipeEffectiveResponderRuleArrayOutput {
	return o.ApplyT(func(v GetTargetTargetResponderRecipe) []GetTargetTargetResponderRecipeEffectiveResponderRule {
		return v.EffectiveResponderRules
	}).(GetTargetTargetResponderRecipeEffectiveResponderRuleArrayOutput)
}

// Unique identifier of TargetResponderRecipe that is immutable on creation
func (o GetTargetTargetResponderRecipeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetTargetResponderRecipe) string { return v.Id }).(pulumi.StringOutput)
}

// Owner of ResponderRecipe
func (o GetTargetTargetResponderRecipeOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetTargetResponderRecipe) string { return v.Owner }).(pulumi.StringOutput)
}

// Unique identifier for Responder Recipe of which this is an extension
func (o GetTargetTargetResponderRecipeOutput) ResponderRecipeId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetTargetResponderRecipe) string { return v.ResponderRecipeId }).(pulumi.StringOutput)
}

// List of responder rules associated with the recipe - user input
func (o GetTargetTargetResponderRecipeOutput) ResponderRules() GetTargetTargetResponderRecipeResponderRuleArrayOutput {
	return o.ApplyT(func(v GetTargetTargetResponderRecipe) []GetTargetTargetResponderRecipeResponderRule {
		return v.ResponderRules
	}).(GetTargetTargetResponderRecipeResponderRuleArrayOutput)
}

// The date and time the target was created. Format defined by RFC3339.
func (o GetTargetTargetResponderRecipeOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetTargetResponderRecipe) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the target was updated. Format defined by RFC3339.
func (o GetTargetTargetResponderRecipeOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetTargetResponderRecipe) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetTargetTargetResponderRecipeArrayOutput struct{ *pulumi.OutputState }

func (GetTargetTargetResponderRecipeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTargetTargetResponderRecipe)(nil)).Elem()
}

func (o GetTargetTargetResponderRecipeArrayOutput) ToGetTargetTargetResponderRecipeArrayOutput() GetTargetTargetResponderRecipeArrayOutput {
	return o
}

func (o GetTargetTargetResponderRecipeArrayOutput) ToGetTargetTargetResponderRecipeArrayOutputWithContext(ctx context.Context) GetTargetTargetResponderRecipeArrayOutput {
	return o
}

func (o GetTargetTargetResponderRecipeArrayOutput) Index(i pulumi.IntInput) GetTargetTargetResponderRecipeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTargetTargetResponderRecipe {
		return vs[0].([]GetTargetTargetResponderRecipe)[vs[1].(int)]
	}).(GetTargetTargetResponderRecipeOutput)
}

type GetTargetTargetResponderRecipeEffectiveResponderRule struct {
	// Compartment Identifier
	CompartmentId string `pulumi:"compartmentId"`
	// ResponderRule Description
	Description string `pulumi:"description"`
	// Details of ResponderRule.
	Details GetTargetTargetResponderRecipeEffectiveResponderRuleDetails `pulumi:"details"`
	// ResponderRule Display Name
	DisplayName string `pulumi:"displayName"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// List of Policy
	Policies []string `pulumi:"policies"`
	// Identifier for ResponderRule.
	ResponderRuleId string `pulumi:"responderRuleId"`
	// The current state of the ResponderRule.
	State string `pulumi:"state"`
	// Supported Execution Modes
	SupportedModes []string `pulumi:"supportedModes"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated string `pulumi:"timeUpdated"`
	// Type of Responder
	Type string `pulumi:"type"`
}

// GetTargetTargetResponderRecipeEffectiveResponderRuleInput is an input type that accepts GetTargetTargetResponderRecipeEffectiveResponderRuleArgs and GetTargetTargetResponderRecipeEffectiveResponderRuleOutput values.
// You can construct a concrete instance of `GetTargetTargetResponderRecipeEffectiveResponderRuleInput` via:
//
//          GetTargetTargetResponderRecipeEffectiveResponderRuleArgs{...}
type GetTargetTargetResponderRecipeEffectiveResponderRuleInput interface {
	pulumi.Input

	ToGetTargetTargetResponderRecipeEffectiveResponderRuleOutput() GetTargetTargetResponderRecipeEffectiveResponderRuleOutput
	ToGetTargetTargetResponderRecipeEffectiveResponderRuleOutputWithContext(context.Context) GetTargetTargetResponderRecipeEffectiveResponderRuleOutput
}

type GetTargetTargetResponderRecipeEffectiveResponderRuleArgs struct {
	// Compartment Identifier
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// ResponderRule Description
	Description pulumi.StringInput `pulumi:"description"`
	// Details of ResponderRule.
	Details GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsInput `pulumi:"details"`
	// ResponderRule Display Name
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// List of Policy
	Policies pulumi.StringArrayInput `pulumi:"policies"`
	// Identifier for ResponderRule.
	ResponderRuleId pulumi.StringInput `pulumi:"responderRuleId"`
	// The current state of the ResponderRule.
	State pulumi.StringInput `pulumi:"state"`
	// Supported Execution Modes
	SupportedModes pulumi.StringArrayInput `pulumi:"supportedModes"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
	// Type of Responder
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetTargetTargetResponderRecipeEffectiveResponderRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetTargetResponderRecipeEffectiveResponderRule)(nil)).Elem()
}

func (i GetTargetTargetResponderRecipeEffectiveResponderRuleArgs) ToGetTargetTargetResponderRecipeEffectiveResponderRuleOutput() GetTargetTargetResponderRecipeEffectiveResponderRuleOutput {
	return i.ToGetTargetTargetResponderRecipeEffectiveResponderRuleOutputWithContext(context.Background())
}

func (i GetTargetTargetResponderRecipeEffectiveResponderRuleArgs) ToGetTargetTargetResponderRecipeEffectiveResponderRuleOutputWithContext(ctx context.Context) GetTargetTargetResponderRecipeEffectiveResponderRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTargetTargetResponderRecipeEffectiveResponderRuleOutput)
}

// GetTargetTargetResponderRecipeEffectiveResponderRuleArrayInput is an input type that accepts GetTargetTargetResponderRecipeEffectiveResponderRuleArray and GetTargetTargetResponderRecipeEffectiveResponderRuleArrayOutput values.
// You can construct a concrete instance of `GetTargetTargetResponderRecipeEffectiveResponderRuleArrayInput` via:
//
//          GetTargetTargetResponderRecipeEffectiveResponderRuleArray{ GetTargetTargetResponderRecipeEffectiveResponderRuleArgs{...} }
type GetTargetTargetResponderRecipeEffectiveResponderRuleArrayInput interface {
	pulumi.Input

	ToGetTargetTargetResponderRecipeEffectiveResponderRuleArrayOutput() GetTargetTargetResponderRecipeEffectiveResponderRuleArrayOutput
	ToGetTargetTargetResponderRecipeEffectiveResponderRuleArrayOutputWithContext(context.Context) GetTargetTargetResponderRecipeEffectiveResponderRuleArrayOutput
}

type GetTargetTargetResponderRecipeEffectiveResponderRuleArray []GetTargetTargetResponderRecipeEffectiveResponderRuleInput

func (GetTargetTargetResponderRecipeEffectiveResponderRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTargetTargetResponderRecipeEffectiveResponderRule)(nil)).Elem()
}

func (i GetTargetTargetResponderRecipeEffectiveResponderRuleArray) ToGetTargetTargetResponderRecipeEffectiveResponderRuleArrayOutput() GetTargetTargetResponderRecipeEffectiveResponderRuleArrayOutput {
	return i.ToGetTargetTargetResponderRecipeEffectiveResponderRuleArrayOutputWithContext(context.Background())
}

func (i GetTargetTargetResponderRecipeEffectiveResponderRuleArray) ToGetTargetTargetResponderRecipeEffectiveResponderRuleArrayOutputWithContext(ctx context.Context) GetTargetTargetResponderRecipeEffectiveResponderRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTargetTargetResponderRecipeEffectiveResponderRuleArrayOutput)
}

type GetTargetTargetResponderRecipeEffectiveResponderRuleOutput struct{ *pulumi.OutputState }

func (GetTargetTargetResponderRecipeEffectiveResponderRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetTargetResponderRecipeEffectiveResponderRule)(nil)).Elem()
}

func (o GetTargetTargetResponderRecipeEffectiveResponderRuleOutput) ToGetTargetTargetResponderRecipeEffectiveResponderRuleOutput() GetTargetTargetResponderRecipeEffectiveResponderRuleOutput {
	return o
}

func (o GetTargetTargetResponderRecipeEffectiveResponderRuleOutput) ToGetTargetTargetResponderRecipeEffectiveResponderRuleOutputWithContext(ctx context.Context) GetTargetTargetResponderRecipeEffectiveResponderRuleOutput {
	return o
}

// Compartment Identifier
func (o GetTargetTargetResponderRecipeEffectiveResponderRuleOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetTargetResponderRecipeEffectiveResponderRule) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// ResponderRule Description
func (o GetTargetTargetResponderRecipeEffectiveResponderRuleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetTargetResponderRecipeEffectiveResponderRule) string { return v.Description }).(pulumi.StringOutput)
}

// Details of ResponderRule.
func (o GetTargetTargetResponderRecipeEffectiveResponderRuleOutput) Details() GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsOutput {
	return o.ApplyT(func(v GetTargetTargetResponderRecipeEffectiveResponderRule) GetTargetTargetResponderRecipeEffectiveResponderRuleDetails {
		return v.Details
	}).(GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsOutput)
}

// ResponderRule Display Name
func (o GetTargetTargetResponderRecipeEffectiveResponderRuleOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetTargetResponderRecipeEffectiveResponderRule) string { return v.DisplayName }).(pulumi.StringOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o GetTargetTargetResponderRecipeEffectiveResponderRuleOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetTargetResponderRecipeEffectiveResponderRule) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// List of Policy
func (o GetTargetTargetResponderRecipeEffectiveResponderRuleOutput) Policies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTargetTargetResponderRecipeEffectiveResponderRule) []string { return v.Policies }).(pulumi.StringArrayOutput)
}

// Identifier for ResponderRule.
func (o GetTargetTargetResponderRecipeEffectiveResponderRuleOutput) ResponderRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetTargetResponderRecipeEffectiveResponderRule) string { return v.ResponderRuleId }).(pulumi.StringOutput)
}

// The current state of the ResponderRule.
func (o GetTargetTargetResponderRecipeEffectiveResponderRuleOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetTargetResponderRecipeEffectiveResponderRule) string { return v.State }).(pulumi.StringOutput)
}

// Supported Execution Modes
func (o GetTargetTargetResponderRecipeEffectiveResponderRuleOutput) SupportedModes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTargetTargetResponderRecipeEffectiveResponderRule) []string { return v.SupportedModes }).(pulumi.StringArrayOutput)
}

// The date and time the target was created. Format defined by RFC3339.
func (o GetTargetTargetResponderRecipeEffectiveResponderRuleOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetTargetResponderRecipeEffectiveResponderRule) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the target was updated. Format defined by RFC3339.
func (o GetTargetTargetResponderRecipeEffectiveResponderRuleOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetTargetResponderRecipeEffectiveResponderRule) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

// Type of Responder
func (o GetTargetTargetResponderRecipeEffectiveResponderRuleOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetTargetResponderRecipeEffectiveResponderRule) string { return v.Type }).(pulumi.StringOutput)
}

type GetTargetTargetResponderRecipeEffectiveResponderRuleArrayOutput struct{ *pulumi.OutputState }

func (GetTargetTargetResponderRecipeEffectiveResponderRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTargetTargetResponderRecipeEffectiveResponderRule)(nil)).Elem()
}

func (o GetTargetTargetResponderRecipeEffectiveResponderRuleArrayOutput) ToGetTargetTargetResponderRecipeEffectiveResponderRuleArrayOutput() GetTargetTargetResponderRecipeEffectiveResponderRuleArrayOutput {
	return o
}

func (o GetTargetTargetResponderRecipeEffectiveResponderRuleArrayOutput) ToGetTargetTargetResponderRecipeEffectiveResponderRuleArrayOutputWithContext(ctx context.Context) GetTargetTargetResponderRecipeEffectiveResponderRuleArrayOutput {
	return o
}

func (o GetTargetTargetResponderRecipeEffectiveResponderRuleArrayOutput) Index(i pulumi.IntInput) GetTargetTargetResponderRecipeEffectiveResponderRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTargetTargetResponderRecipeEffectiveResponderRule {
		return vs[0].([]GetTargetTargetResponderRecipeEffectiveResponderRule)[vs[1].(int)]
	}).(GetTargetTargetResponderRecipeEffectiveResponderRuleOutput)
}

type GetTargetTargetResponderRecipeEffectiveResponderRuleDetails struct {
	Condition string `pulumi:"condition"`
	// ResponderRule configurations
	Configurations []GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfiguration `pulumi:"configurations"`
	// Identifies state for ResponderRule
	IsEnabled bool `pulumi:"isEnabled"`
	// Execution Mode for ResponderRule
	Mode string `pulumi:"mode"`
}

// GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsInput is an input type that accepts GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsArgs and GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsOutput values.
// You can construct a concrete instance of `GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsInput` via:
//
//          GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsArgs{...}
type GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsInput interface {
	pulumi.Input

	ToGetTargetTargetResponderRecipeEffectiveResponderRuleDetailsOutput() GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsOutput
	ToGetTargetTargetResponderRecipeEffectiveResponderRuleDetailsOutputWithContext(context.Context) GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsOutput
}

type GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsArgs struct {
	Condition pulumi.StringInput `pulumi:"condition"`
	// ResponderRule configurations
	Configurations GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayInput `pulumi:"configurations"`
	// Identifies state for ResponderRule
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// Execution Mode for ResponderRule
	Mode pulumi.StringInput `pulumi:"mode"`
}

func (GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetTargetResponderRecipeEffectiveResponderRuleDetails)(nil)).Elem()
}

func (i GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsArgs) ToGetTargetTargetResponderRecipeEffectiveResponderRuleDetailsOutput() GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsOutput {
	return i.ToGetTargetTargetResponderRecipeEffectiveResponderRuleDetailsOutputWithContext(context.Background())
}

func (i GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsArgs) ToGetTargetTargetResponderRecipeEffectiveResponderRuleDetailsOutputWithContext(ctx context.Context) GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsOutput)
}

type GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsOutput struct{ *pulumi.OutputState }

func (GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetTargetResponderRecipeEffectiveResponderRuleDetails)(nil)).Elem()
}

func (o GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsOutput) ToGetTargetTargetResponderRecipeEffectiveResponderRuleDetailsOutput() GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsOutput {
	return o
}

func (o GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsOutput) ToGetTargetTargetResponderRecipeEffectiveResponderRuleDetailsOutputWithContext(ctx context.Context) GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsOutput {
	return o
}

func (o GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetTargetResponderRecipeEffectiveResponderRuleDetails) string { return v.Condition }).(pulumi.StringOutput)
}

// ResponderRule configurations
func (o GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsOutput) Configurations() GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput {
	return o.ApplyT(func(v GetTargetTargetResponderRecipeEffectiveResponderRuleDetails) []GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfiguration {
		return v.Configurations
	}).(GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput)
}

// Identifies state for ResponderRule
func (o GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTargetTargetResponderRecipeEffectiveResponderRuleDetails) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// Execution Mode for ResponderRule
func (o GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetTargetResponderRecipeEffectiveResponderRuleDetails) string { return v.Mode }).(pulumi.StringOutput)
}

type GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfiguration struct {
	// Unique name of the configuration
	ConfigKey string `pulumi:"configKey"`
	// configuration name
	Name string `pulumi:"name"`
	// configuration value
	Value string `pulumi:"value"`
}

// GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationInput is an input type that accepts GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArgs and GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput values.
// You can construct a concrete instance of `GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationInput` via:
//
//          GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArgs{...}
type GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationInput interface {
	pulumi.Input

	ToGetTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput() GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput
	ToGetTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutputWithContext(context.Context) GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput
}

type GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArgs struct {
	// Unique name of the configuration
	ConfigKey pulumi.StringInput `pulumi:"configKey"`
	// configuration name
	Name pulumi.StringInput `pulumi:"name"`
	// configuration value
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfiguration)(nil)).Elem()
}

func (i GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArgs) ToGetTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput() GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput {
	return i.ToGetTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutputWithContext(context.Background())
}

func (i GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArgs) ToGetTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutputWithContext(ctx context.Context) GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput)
}

// GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayInput is an input type that accepts GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArray and GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput values.
// You can construct a concrete instance of `GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayInput` via:
//
//          GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArray{ GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArgs{...} }
type GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayInput interface {
	pulumi.Input

	ToGetTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput() GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput
	ToGetTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutputWithContext(context.Context) GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput
}

type GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArray []GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationInput

func (GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfiguration)(nil)).Elem()
}

func (i GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArray) ToGetTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput() GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput {
	return i.ToGetTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutputWithContext(context.Background())
}

func (i GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArray) ToGetTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutputWithContext(ctx context.Context) GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput)
}

type GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput struct{ *pulumi.OutputState }

func (GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfiguration)(nil)).Elem()
}

func (o GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput) ToGetTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput() GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput {
	return o
}

func (o GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput) ToGetTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutputWithContext(ctx context.Context) GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput {
	return o
}

// Unique name of the configuration
func (o GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput) ConfigKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfiguration) string {
		return v.ConfigKey
	}).(pulumi.StringOutput)
}

// configuration name
func (o GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfiguration) string { return v.Name }).(pulumi.StringOutput)
}

// configuration value
func (o GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfiguration) string {
		return v.Value
	}).(pulumi.StringOutput)
}

type GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfiguration)(nil)).Elem()
}

func (o GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput) ToGetTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput() GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput {
	return o
}

func (o GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput) ToGetTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutputWithContext(ctx context.Context) GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput {
	return o
}

func (o GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput) Index(i pulumi.IntInput) GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfiguration {
		return vs[0].([]GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfiguration)[vs[1].(int)]
	}).(GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput)
}

type GetTargetTargetResponderRecipeResponderRule struct {
	// Compartment Identifier
	CompartmentId string `pulumi:"compartmentId"`
	// ResponderRule Description
	Description string `pulumi:"description"`
	// Details of ResponderRule.
	Details GetTargetTargetResponderRecipeResponderRuleDetails `pulumi:"details"`
	// ResponderRule Display Name
	DisplayName string `pulumi:"displayName"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// List of Policy
	Policies []string `pulumi:"policies"`
	// Identifier for ResponderRule.
	ResponderRuleId string `pulumi:"responderRuleId"`
	// The current state of the ResponderRule.
	State string `pulumi:"state"`
	// Supported Execution Modes
	SupportedModes []string `pulumi:"supportedModes"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated string `pulumi:"timeUpdated"`
	// Type of Responder
	Type string `pulumi:"type"`
}

// GetTargetTargetResponderRecipeResponderRuleInput is an input type that accepts GetTargetTargetResponderRecipeResponderRuleArgs and GetTargetTargetResponderRecipeResponderRuleOutput values.
// You can construct a concrete instance of `GetTargetTargetResponderRecipeResponderRuleInput` via:
//
//          GetTargetTargetResponderRecipeResponderRuleArgs{...}
type GetTargetTargetResponderRecipeResponderRuleInput interface {
	pulumi.Input

	ToGetTargetTargetResponderRecipeResponderRuleOutput() GetTargetTargetResponderRecipeResponderRuleOutput
	ToGetTargetTargetResponderRecipeResponderRuleOutputWithContext(context.Context) GetTargetTargetResponderRecipeResponderRuleOutput
}

type GetTargetTargetResponderRecipeResponderRuleArgs struct {
	// Compartment Identifier
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// ResponderRule Description
	Description pulumi.StringInput `pulumi:"description"`
	// Details of ResponderRule.
	Details GetTargetTargetResponderRecipeResponderRuleDetailsInput `pulumi:"details"`
	// ResponderRule Display Name
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// List of Policy
	Policies pulumi.StringArrayInput `pulumi:"policies"`
	// Identifier for ResponderRule.
	ResponderRuleId pulumi.StringInput `pulumi:"responderRuleId"`
	// The current state of the ResponderRule.
	State pulumi.StringInput `pulumi:"state"`
	// Supported Execution Modes
	SupportedModes pulumi.StringArrayInput `pulumi:"supportedModes"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
	// Type of Responder
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetTargetTargetResponderRecipeResponderRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetTargetResponderRecipeResponderRule)(nil)).Elem()
}

func (i GetTargetTargetResponderRecipeResponderRuleArgs) ToGetTargetTargetResponderRecipeResponderRuleOutput() GetTargetTargetResponderRecipeResponderRuleOutput {
	return i.ToGetTargetTargetResponderRecipeResponderRuleOutputWithContext(context.Background())
}

func (i GetTargetTargetResponderRecipeResponderRuleArgs) ToGetTargetTargetResponderRecipeResponderRuleOutputWithContext(ctx context.Context) GetTargetTargetResponderRecipeResponderRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTargetTargetResponderRecipeResponderRuleOutput)
}

// GetTargetTargetResponderRecipeResponderRuleArrayInput is an input type that accepts GetTargetTargetResponderRecipeResponderRuleArray and GetTargetTargetResponderRecipeResponderRuleArrayOutput values.
// You can construct a concrete instance of `GetTargetTargetResponderRecipeResponderRuleArrayInput` via:
//
//          GetTargetTargetResponderRecipeResponderRuleArray{ GetTargetTargetResponderRecipeResponderRuleArgs{...} }
type GetTargetTargetResponderRecipeResponderRuleArrayInput interface {
	pulumi.Input

	ToGetTargetTargetResponderRecipeResponderRuleArrayOutput() GetTargetTargetResponderRecipeResponderRuleArrayOutput
	ToGetTargetTargetResponderRecipeResponderRuleArrayOutputWithContext(context.Context) GetTargetTargetResponderRecipeResponderRuleArrayOutput
}

type GetTargetTargetResponderRecipeResponderRuleArray []GetTargetTargetResponderRecipeResponderRuleInput

func (GetTargetTargetResponderRecipeResponderRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTargetTargetResponderRecipeResponderRule)(nil)).Elem()
}

func (i GetTargetTargetResponderRecipeResponderRuleArray) ToGetTargetTargetResponderRecipeResponderRuleArrayOutput() GetTargetTargetResponderRecipeResponderRuleArrayOutput {
	return i.ToGetTargetTargetResponderRecipeResponderRuleArrayOutputWithContext(context.Background())
}

func (i GetTargetTargetResponderRecipeResponderRuleArray) ToGetTargetTargetResponderRecipeResponderRuleArrayOutputWithContext(ctx context.Context) GetTargetTargetResponderRecipeResponderRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTargetTargetResponderRecipeResponderRuleArrayOutput)
}

type GetTargetTargetResponderRecipeResponderRuleOutput struct{ *pulumi.OutputState }

func (GetTargetTargetResponderRecipeResponderRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetTargetResponderRecipeResponderRule)(nil)).Elem()
}

func (o GetTargetTargetResponderRecipeResponderRuleOutput) ToGetTargetTargetResponderRecipeResponderRuleOutput() GetTargetTargetResponderRecipeResponderRuleOutput {
	return o
}

func (o GetTargetTargetResponderRecipeResponderRuleOutput) ToGetTargetTargetResponderRecipeResponderRuleOutputWithContext(ctx context.Context) GetTargetTargetResponderRecipeResponderRuleOutput {
	return o
}

// Compartment Identifier
func (o GetTargetTargetResponderRecipeResponderRuleOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetTargetResponderRecipeResponderRule) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// ResponderRule Description
func (o GetTargetTargetResponderRecipeResponderRuleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetTargetResponderRecipeResponderRule) string { return v.Description }).(pulumi.StringOutput)
}

// Details of ResponderRule.
func (o GetTargetTargetResponderRecipeResponderRuleOutput) Details() GetTargetTargetResponderRecipeResponderRuleDetailsOutput {
	return o.ApplyT(func(v GetTargetTargetResponderRecipeResponderRule) GetTargetTargetResponderRecipeResponderRuleDetails {
		return v.Details
	}).(GetTargetTargetResponderRecipeResponderRuleDetailsOutput)
}

// ResponderRule Display Name
func (o GetTargetTargetResponderRecipeResponderRuleOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetTargetResponderRecipeResponderRule) string { return v.DisplayName }).(pulumi.StringOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o GetTargetTargetResponderRecipeResponderRuleOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetTargetResponderRecipeResponderRule) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// List of Policy
func (o GetTargetTargetResponderRecipeResponderRuleOutput) Policies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTargetTargetResponderRecipeResponderRule) []string { return v.Policies }).(pulumi.StringArrayOutput)
}

// Identifier for ResponderRule.
func (o GetTargetTargetResponderRecipeResponderRuleOutput) ResponderRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetTargetResponderRecipeResponderRule) string { return v.ResponderRuleId }).(pulumi.StringOutput)
}

// The current state of the ResponderRule.
func (o GetTargetTargetResponderRecipeResponderRuleOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetTargetResponderRecipeResponderRule) string { return v.State }).(pulumi.StringOutput)
}

// Supported Execution Modes
func (o GetTargetTargetResponderRecipeResponderRuleOutput) SupportedModes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTargetTargetResponderRecipeResponderRule) []string { return v.SupportedModes }).(pulumi.StringArrayOutput)
}

// The date and time the target was created. Format defined by RFC3339.
func (o GetTargetTargetResponderRecipeResponderRuleOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetTargetResponderRecipeResponderRule) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the target was updated. Format defined by RFC3339.
func (o GetTargetTargetResponderRecipeResponderRuleOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetTargetResponderRecipeResponderRule) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

// Type of Responder
func (o GetTargetTargetResponderRecipeResponderRuleOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetTargetResponderRecipeResponderRule) string { return v.Type }).(pulumi.StringOutput)
}

type GetTargetTargetResponderRecipeResponderRuleArrayOutput struct{ *pulumi.OutputState }

func (GetTargetTargetResponderRecipeResponderRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTargetTargetResponderRecipeResponderRule)(nil)).Elem()
}

func (o GetTargetTargetResponderRecipeResponderRuleArrayOutput) ToGetTargetTargetResponderRecipeResponderRuleArrayOutput() GetTargetTargetResponderRecipeResponderRuleArrayOutput {
	return o
}

func (o GetTargetTargetResponderRecipeResponderRuleArrayOutput) ToGetTargetTargetResponderRecipeResponderRuleArrayOutputWithContext(ctx context.Context) GetTargetTargetResponderRecipeResponderRuleArrayOutput {
	return o
}

func (o GetTargetTargetResponderRecipeResponderRuleArrayOutput) Index(i pulumi.IntInput) GetTargetTargetResponderRecipeResponderRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTargetTargetResponderRecipeResponderRule {
		return vs[0].([]GetTargetTargetResponderRecipeResponderRule)[vs[1].(int)]
	}).(GetTargetTargetResponderRecipeResponderRuleOutput)
}

type GetTargetTargetResponderRecipeResponderRuleDetails struct {
	Condition string `pulumi:"condition"`
	// ResponderRule configurations
	Configurations []GetTargetTargetResponderRecipeResponderRuleDetailsConfiguration `pulumi:"configurations"`
	// Identifies state for ResponderRule
	IsEnabled bool `pulumi:"isEnabled"`
	// Execution Mode for ResponderRule
	Mode string `pulumi:"mode"`
}

// GetTargetTargetResponderRecipeResponderRuleDetailsInput is an input type that accepts GetTargetTargetResponderRecipeResponderRuleDetailsArgs and GetTargetTargetResponderRecipeResponderRuleDetailsOutput values.
// You can construct a concrete instance of `GetTargetTargetResponderRecipeResponderRuleDetailsInput` via:
//
//          GetTargetTargetResponderRecipeResponderRuleDetailsArgs{...}
type GetTargetTargetResponderRecipeResponderRuleDetailsInput interface {
	pulumi.Input

	ToGetTargetTargetResponderRecipeResponderRuleDetailsOutput() GetTargetTargetResponderRecipeResponderRuleDetailsOutput
	ToGetTargetTargetResponderRecipeResponderRuleDetailsOutputWithContext(context.Context) GetTargetTargetResponderRecipeResponderRuleDetailsOutput
}

type GetTargetTargetResponderRecipeResponderRuleDetailsArgs struct {
	Condition pulumi.StringInput `pulumi:"condition"`
	// ResponderRule configurations
	Configurations GetTargetTargetResponderRecipeResponderRuleDetailsConfigurationArrayInput `pulumi:"configurations"`
	// Identifies state for ResponderRule
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// Execution Mode for ResponderRule
	Mode pulumi.StringInput `pulumi:"mode"`
}

func (GetTargetTargetResponderRecipeResponderRuleDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetTargetResponderRecipeResponderRuleDetails)(nil)).Elem()
}

func (i GetTargetTargetResponderRecipeResponderRuleDetailsArgs) ToGetTargetTargetResponderRecipeResponderRuleDetailsOutput() GetTargetTargetResponderRecipeResponderRuleDetailsOutput {
	return i.ToGetTargetTargetResponderRecipeResponderRuleDetailsOutputWithContext(context.Background())
}

func (i GetTargetTargetResponderRecipeResponderRuleDetailsArgs) ToGetTargetTargetResponderRecipeResponderRuleDetailsOutputWithContext(ctx context.Context) GetTargetTargetResponderRecipeResponderRuleDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTargetTargetResponderRecipeResponderRuleDetailsOutput)
}

type GetTargetTargetResponderRecipeResponderRuleDetailsOutput struct{ *pulumi.OutputState }

func (GetTargetTargetResponderRecipeResponderRuleDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetTargetResponderRecipeResponderRuleDetails)(nil)).Elem()
}

func (o GetTargetTargetResponderRecipeResponderRuleDetailsOutput) ToGetTargetTargetResponderRecipeResponderRuleDetailsOutput() GetTargetTargetResponderRecipeResponderRuleDetailsOutput {
	return o
}

func (o GetTargetTargetResponderRecipeResponderRuleDetailsOutput) ToGetTargetTargetResponderRecipeResponderRuleDetailsOutputWithContext(ctx context.Context) GetTargetTargetResponderRecipeResponderRuleDetailsOutput {
	return o
}

func (o GetTargetTargetResponderRecipeResponderRuleDetailsOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetTargetResponderRecipeResponderRuleDetails) string { return v.Condition }).(pulumi.StringOutput)
}

// ResponderRule configurations
func (o GetTargetTargetResponderRecipeResponderRuleDetailsOutput) Configurations() GetTargetTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutput {
	return o.ApplyT(func(v GetTargetTargetResponderRecipeResponderRuleDetails) []GetTargetTargetResponderRecipeResponderRuleDetailsConfiguration {
		return v.Configurations
	}).(GetTargetTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutput)
}

// Identifies state for ResponderRule
func (o GetTargetTargetResponderRecipeResponderRuleDetailsOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTargetTargetResponderRecipeResponderRuleDetails) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// Execution Mode for ResponderRule
func (o GetTargetTargetResponderRecipeResponderRuleDetailsOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetTargetResponderRecipeResponderRuleDetails) string { return v.Mode }).(pulumi.StringOutput)
}

type GetTargetTargetResponderRecipeResponderRuleDetailsConfiguration struct {
	// Unique name of the configuration
	ConfigKey string `pulumi:"configKey"`
	// configuration name
	Name string `pulumi:"name"`
	// configuration value
	Value string `pulumi:"value"`
}

// GetTargetTargetResponderRecipeResponderRuleDetailsConfigurationInput is an input type that accepts GetTargetTargetResponderRecipeResponderRuleDetailsConfigurationArgs and GetTargetTargetResponderRecipeResponderRuleDetailsConfigurationOutput values.
// You can construct a concrete instance of `GetTargetTargetResponderRecipeResponderRuleDetailsConfigurationInput` via:
//
//          GetTargetTargetResponderRecipeResponderRuleDetailsConfigurationArgs{...}
type GetTargetTargetResponderRecipeResponderRuleDetailsConfigurationInput interface {
	pulumi.Input

	ToGetTargetTargetResponderRecipeResponderRuleDetailsConfigurationOutput() GetTargetTargetResponderRecipeResponderRuleDetailsConfigurationOutput
	ToGetTargetTargetResponderRecipeResponderRuleDetailsConfigurationOutputWithContext(context.Context) GetTargetTargetResponderRecipeResponderRuleDetailsConfigurationOutput
}

type GetTargetTargetResponderRecipeResponderRuleDetailsConfigurationArgs struct {
	// Unique name of the configuration
	ConfigKey pulumi.StringInput `pulumi:"configKey"`
	// configuration name
	Name pulumi.StringInput `pulumi:"name"`
	// configuration value
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetTargetTargetResponderRecipeResponderRuleDetailsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetTargetResponderRecipeResponderRuleDetailsConfiguration)(nil)).Elem()
}

func (i GetTargetTargetResponderRecipeResponderRuleDetailsConfigurationArgs) ToGetTargetTargetResponderRecipeResponderRuleDetailsConfigurationOutput() GetTargetTargetResponderRecipeResponderRuleDetailsConfigurationOutput {
	return i.ToGetTargetTargetResponderRecipeResponderRuleDetailsConfigurationOutputWithContext(context.Background())
}

func (i GetTargetTargetResponderRecipeResponderRuleDetailsConfigurationArgs) ToGetTargetTargetResponderRecipeResponderRuleDetailsConfigurationOutputWithContext(ctx context.Context) GetTargetTargetResponderRecipeResponderRuleDetailsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTargetTargetResponderRecipeResponderRuleDetailsConfigurationOutput)
}

// GetTargetTargetResponderRecipeResponderRuleDetailsConfigurationArrayInput is an input type that accepts GetTargetTargetResponderRecipeResponderRuleDetailsConfigurationArray and GetTargetTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutput values.
// You can construct a concrete instance of `GetTargetTargetResponderRecipeResponderRuleDetailsConfigurationArrayInput` via:
//
//          GetTargetTargetResponderRecipeResponderRuleDetailsConfigurationArray{ GetTargetTargetResponderRecipeResponderRuleDetailsConfigurationArgs{...} }
type GetTargetTargetResponderRecipeResponderRuleDetailsConfigurationArrayInput interface {
	pulumi.Input

	ToGetTargetTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutput() GetTargetTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutput
	ToGetTargetTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutputWithContext(context.Context) GetTargetTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutput
}

type GetTargetTargetResponderRecipeResponderRuleDetailsConfigurationArray []GetTargetTargetResponderRecipeResponderRuleDetailsConfigurationInput

func (GetTargetTargetResponderRecipeResponderRuleDetailsConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTargetTargetResponderRecipeResponderRuleDetailsConfiguration)(nil)).Elem()
}

func (i GetTargetTargetResponderRecipeResponderRuleDetailsConfigurationArray) ToGetTargetTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutput() GetTargetTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutput {
	return i.ToGetTargetTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutputWithContext(context.Background())
}

func (i GetTargetTargetResponderRecipeResponderRuleDetailsConfigurationArray) ToGetTargetTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutputWithContext(ctx context.Context) GetTargetTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTargetTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutput)
}

type GetTargetTargetResponderRecipeResponderRuleDetailsConfigurationOutput struct{ *pulumi.OutputState }

func (GetTargetTargetResponderRecipeResponderRuleDetailsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetTargetResponderRecipeResponderRuleDetailsConfiguration)(nil)).Elem()
}

func (o GetTargetTargetResponderRecipeResponderRuleDetailsConfigurationOutput) ToGetTargetTargetResponderRecipeResponderRuleDetailsConfigurationOutput() GetTargetTargetResponderRecipeResponderRuleDetailsConfigurationOutput {
	return o
}

func (o GetTargetTargetResponderRecipeResponderRuleDetailsConfigurationOutput) ToGetTargetTargetResponderRecipeResponderRuleDetailsConfigurationOutputWithContext(ctx context.Context) GetTargetTargetResponderRecipeResponderRuleDetailsConfigurationOutput {
	return o
}

// Unique name of the configuration
func (o GetTargetTargetResponderRecipeResponderRuleDetailsConfigurationOutput) ConfigKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetTargetResponderRecipeResponderRuleDetailsConfiguration) string { return v.ConfigKey }).(pulumi.StringOutput)
}

// configuration name
func (o GetTargetTargetResponderRecipeResponderRuleDetailsConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetTargetResponderRecipeResponderRuleDetailsConfiguration) string { return v.Name }).(pulumi.StringOutput)
}

// configuration value
func (o GetTargetTargetResponderRecipeResponderRuleDetailsConfigurationOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetTargetResponderRecipeResponderRuleDetailsConfiguration) string { return v.Value }).(pulumi.StringOutput)
}

type GetTargetTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetTargetTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTargetTargetResponderRecipeResponderRuleDetailsConfiguration)(nil)).Elem()
}

func (o GetTargetTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutput) ToGetTargetTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutput() GetTargetTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutput {
	return o
}

func (o GetTargetTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutput) ToGetTargetTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutputWithContext(ctx context.Context) GetTargetTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutput {
	return o
}

func (o GetTargetTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutput) Index(i pulumi.IntInput) GetTargetTargetResponderRecipeResponderRuleDetailsConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTargetTargetResponderRecipeResponderRuleDetailsConfiguration {
		return vs[0].([]GetTargetTargetResponderRecipeResponderRuleDetailsConfiguration)[vs[1].(int)]
	}).(GetTargetTargetResponderRecipeResponderRuleDetailsConfigurationOutput)
}

type GetTargetsFilter struct {
	// configuration name
	Name  string `pulumi:"name"`
	Regex *bool  `pulumi:"regex"`
	// List of configuration values
	Values []string `pulumi:"values"`
}

// GetTargetsFilterInput is an input type that accepts GetTargetsFilterArgs and GetTargetsFilterOutput values.
// You can construct a concrete instance of `GetTargetsFilterInput` via:
//
//          GetTargetsFilterArgs{...}
type GetTargetsFilterInput interface {
	pulumi.Input

	ToGetTargetsFilterOutput() GetTargetsFilterOutput
	ToGetTargetsFilterOutputWithContext(context.Context) GetTargetsFilterOutput
}

type GetTargetsFilterArgs struct {
	// configuration name
	Name  pulumi.StringInput  `pulumi:"name"`
	Regex pulumi.BoolPtrInput `pulumi:"regex"`
	// List of configuration values
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetTargetsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetsFilter)(nil)).Elem()
}

func (i GetTargetsFilterArgs) ToGetTargetsFilterOutput() GetTargetsFilterOutput {
	return i.ToGetTargetsFilterOutputWithContext(context.Background())
}

func (i GetTargetsFilterArgs) ToGetTargetsFilterOutputWithContext(ctx context.Context) GetTargetsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTargetsFilterOutput)
}

// GetTargetsFilterArrayInput is an input type that accepts GetTargetsFilterArray and GetTargetsFilterArrayOutput values.
// You can construct a concrete instance of `GetTargetsFilterArrayInput` via:
//
//          GetTargetsFilterArray{ GetTargetsFilterArgs{...} }
type GetTargetsFilterArrayInput interface {
	pulumi.Input

	ToGetTargetsFilterArrayOutput() GetTargetsFilterArrayOutput
	ToGetTargetsFilterArrayOutputWithContext(context.Context) GetTargetsFilterArrayOutput
}

type GetTargetsFilterArray []GetTargetsFilterInput

func (GetTargetsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTargetsFilter)(nil)).Elem()
}

func (i GetTargetsFilterArray) ToGetTargetsFilterArrayOutput() GetTargetsFilterArrayOutput {
	return i.ToGetTargetsFilterArrayOutputWithContext(context.Background())
}

func (i GetTargetsFilterArray) ToGetTargetsFilterArrayOutputWithContext(ctx context.Context) GetTargetsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTargetsFilterArrayOutput)
}

type GetTargetsFilterOutput struct{ *pulumi.OutputState }

func (GetTargetsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetsFilter)(nil)).Elem()
}

func (o GetTargetsFilterOutput) ToGetTargetsFilterOutput() GetTargetsFilterOutput {
	return o
}

func (o GetTargetsFilterOutput) ToGetTargetsFilterOutputWithContext(ctx context.Context) GetTargetsFilterOutput {
	return o
}

// configuration name
func (o GetTargetsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetTargetsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetTargetsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

// List of configuration values
func (o GetTargetsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTargetsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetTargetsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetTargetsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTargetsFilter)(nil)).Elem()
}

func (o GetTargetsFilterArrayOutput) ToGetTargetsFilterArrayOutput() GetTargetsFilterArrayOutput {
	return o
}

func (o GetTargetsFilterArrayOutput) ToGetTargetsFilterArrayOutputWithContext(ctx context.Context) GetTargetsFilterArrayOutput {
	return o
}

func (o GetTargetsFilterArrayOutput) Index(i pulumi.IntInput) GetTargetsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTargetsFilter {
		return vs[0].([]GetTargetsFilter)[vs[1].(int)]
	}).(GetTargetsFilterOutput)
}

type GetTargetsTargetCollection struct {
	Items []GetTargetsTargetCollectionItem `pulumi:"items"`
}

// GetTargetsTargetCollectionInput is an input type that accepts GetTargetsTargetCollectionArgs and GetTargetsTargetCollectionOutput values.
// You can construct a concrete instance of `GetTargetsTargetCollectionInput` via:
//
//          GetTargetsTargetCollectionArgs{...}
type GetTargetsTargetCollectionInput interface {
	pulumi.Input

	ToGetTargetsTargetCollectionOutput() GetTargetsTargetCollectionOutput
	ToGetTargetsTargetCollectionOutputWithContext(context.Context) GetTargetsTargetCollectionOutput
}

type GetTargetsTargetCollectionArgs struct {
	Items GetTargetsTargetCollectionItemArrayInput `pulumi:"items"`
}

func (GetTargetsTargetCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetsTargetCollection)(nil)).Elem()
}

func (i GetTargetsTargetCollectionArgs) ToGetTargetsTargetCollectionOutput() GetTargetsTargetCollectionOutput {
	return i.ToGetTargetsTargetCollectionOutputWithContext(context.Background())
}

func (i GetTargetsTargetCollectionArgs) ToGetTargetsTargetCollectionOutputWithContext(ctx context.Context) GetTargetsTargetCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTargetsTargetCollectionOutput)
}

// GetTargetsTargetCollectionArrayInput is an input type that accepts GetTargetsTargetCollectionArray and GetTargetsTargetCollectionArrayOutput values.
// You can construct a concrete instance of `GetTargetsTargetCollectionArrayInput` via:
//
//          GetTargetsTargetCollectionArray{ GetTargetsTargetCollectionArgs{...} }
type GetTargetsTargetCollectionArrayInput interface {
	pulumi.Input

	ToGetTargetsTargetCollectionArrayOutput() GetTargetsTargetCollectionArrayOutput
	ToGetTargetsTargetCollectionArrayOutputWithContext(context.Context) GetTargetsTargetCollectionArrayOutput
}

type GetTargetsTargetCollectionArray []GetTargetsTargetCollectionInput

func (GetTargetsTargetCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTargetsTargetCollection)(nil)).Elem()
}

func (i GetTargetsTargetCollectionArray) ToGetTargetsTargetCollectionArrayOutput() GetTargetsTargetCollectionArrayOutput {
	return i.ToGetTargetsTargetCollectionArrayOutputWithContext(context.Background())
}

func (i GetTargetsTargetCollectionArray) ToGetTargetsTargetCollectionArrayOutputWithContext(ctx context.Context) GetTargetsTargetCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTargetsTargetCollectionArrayOutput)
}

type GetTargetsTargetCollectionOutput struct{ *pulumi.OutputState }

func (GetTargetsTargetCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetsTargetCollection)(nil)).Elem()
}

func (o GetTargetsTargetCollectionOutput) ToGetTargetsTargetCollectionOutput() GetTargetsTargetCollectionOutput {
	return o
}

func (o GetTargetsTargetCollectionOutput) ToGetTargetsTargetCollectionOutputWithContext(ctx context.Context) GetTargetsTargetCollectionOutput {
	return o
}

func (o GetTargetsTargetCollectionOutput) Items() GetTargetsTargetCollectionItemArrayOutput {
	return o.ApplyT(func(v GetTargetsTargetCollection) []GetTargetsTargetCollectionItem { return v.Items }).(GetTargetsTargetCollectionItemArrayOutput)
}

type GetTargetsTargetCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetTargetsTargetCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTargetsTargetCollection)(nil)).Elem()
}

func (o GetTargetsTargetCollectionArrayOutput) ToGetTargetsTargetCollectionArrayOutput() GetTargetsTargetCollectionArrayOutput {
	return o
}

func (o GetTargetsTargetCollectionArrayOutput) ToGetTargetsTargetCollectionArrayOutputWithContext(ctx context.Context) GetTargetsTargetCollectionArrayOutput {
	return o
}

func (o GetTargetsTargetCollectionArrayOutput) Index(i pulumi.IntInput) GetTargetsTargetCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTargetsTargetCollection {
		return vs[0].([]GetTargetsTargetCollection)[vs[1].(int)]
	}).(GetTargetsTargetCollectionOutput)
}

type GetTargetsTargetCollectionItem struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// ResponderRule Description
	Description string `pulumi:"description"`
	// A filter to return only resources that match the entire display name given.
	DisplayName string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// Unique identifier of TargetResponderRecipe that is immutable on creation
	Id string `pulumi:"id"`
	// List of inherited compartments
	InheritedByCompartments []string `pulumi:"inheritedByCompartments"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecyleDetails string `pulumi:"lifecyleDetails"`
	// Total number of recipes attached to target
	RecipeCount int `pulumi:"recipeCount"`
	// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
	State string `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// List of detector recipes associated with target
	TargetDetectorRecipes []GetTargetsTargetCollectionItemTargetDetectorRecipe `pulumi:"targetDetectorRecipes"`
	// Resource ID which the target uses to monitor
	TargetResourceId string `pulumi:"targetResourceId"`
	// possible type of targets
	TargetResourceType string `pulumi:"targetResourceType"`
	// List of responder recipes associated with target
	TargetResponderRecipes []GetTargetsTargetCollectionItemTargetResponderRecipe `pulumi:"targetResponderRecipes"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetTargetsTargetCollectionItemInput is an input type that accepts GetTargetsTargetCollectionItemArgs and GetTargetsTargetCollectionItemOutput values.
// You can construct a concrete instance of `GetTargetsTargetCollectionItemInput` via:
//
//          GetTargetsTargetCollectionItemArgs{...}
type GetTargetsTargetCollectionItemInput interface {
	pulumi.Input

	ToGetTargetsTargetCollectionItemOutput() GetTargetsTargetCollectionItemOutput
	ToGetTargetsTargetCollectionItemOutputWithContext(context.Context) GetTargetsTargetCollectionItemOutput
}

type GetTargetsTargetCollectionItemArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// ResponderRule Description
	Description pulumi.StringInput `pulumi:"description"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// Unique identifier of TargetResponderRecipe that is immutable on creation
	Id pulumi.StringInput `pulumi:"id"`
	// List of inherited compartments
	InheritedByCompartments pulumi.StringArrayInput `pulumi:"inheritedByCompartments"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecyleDetails pulumi.StringInput `pulumi:"lifecyleDetails"`
	// Total number of recipes attached to target
	RecipeCount pulumi.IntInput `pulumi:"recipeCount"`
	// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
	State pulumi.StringInput `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapInput `pulumi:"systemTags"`
	// List of detector recipes associated with target
	TargetDetectorRecipes GetTargetsTargetCollectionItemTargetDetectorRecipeArrayInput `pulumi:"targetDetectorRecipes"`
	// Resource ID which the target uses to monitor
	TargetResourceId pulumi.StringInput `pulumi:"targetResourceId"`
	// possible type of targets
	TargetResourceType pulumi.StringInput `pulumi:"targetResourceType"`
	// List of responder recipes associated with target
	TargetResponderRecipes GetTargetsTargetCollectionItemTargetResponderRecipeArrayInput `pulumi:"targetResponderRecipes"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetTargetsTargetCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetsTargetCollectionItem)(nil)).Elem()
}

func (i GetTargetsTargetCollectionItemArgs) ToGetTargetsTargetCollectionItemOutput() GetTargetsTargetCollectionItemOutput {
	return i.ToGetTargetsTargetCollectionItemOutputWithContext(context.Background())
}

func (i GetTargetsTargetCollectionItemArgs) ToGetTargetsTargetCollectionItemOutputWithContext(ctx context.Context) GetTargetsTargetCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTargetsTargetCollectionItemOutput)
}

// GetTargetsTargetCollectionItemArrayInput is an input type that accepts GetTargetsTargetCollectionItemArray and GetTargetsTargetCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetTargetsTargetCollectionItemArrayInput` via:
//
//          GetTargetsTargetCollectionItemArray{ GetTargetsTargetCollectionItemArgs{...} }
type GetTargetsTargetCollectionItemArrayInput interface {
	pulumi.Input

	ToGetTargetsTargetCollectionItemArrayOutput() GetTargetsTargetCollectionItemArrayOutput
	ToGetTargetsTargetCollectionItemArrayOutputWithContext(context.Context) GetTargetsTargetCollectionItemArrayOutput
}

type GetTargetsTargetCollectionItemArray []GetTargetsTargetCollectionItemInput

func (GetTargetsTargetCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTargetsTargetCollectionItem)(nil)).Elem()
}

func (i GetTargetsTargetCollectionItemArray) ToGetTargetsTargetCollectionItemArrayOutput() GetTargetsTargetCollectionItemArrayOutput {
	return i.ToGetTargetsTargetCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetTargetsTargetCollectionItemArray) ToGetTargetsTargetCollectionItemArrayOutputWithContext(ctx context.Context) GetTargetsTargetCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTargetsTargetCollectionItemArrayOutput)
}

type GetTargetsTargetCollectionItemOutput struct{ *pulumi.OutputState }

func (GetTargetsTargetCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetsTargetCollectionItem)(nil)).Elem()
}

func (o GetTargetsTargetCollectionItemOutput) ToGetTargetsTargetCollectionItemOutput() GetTargetsTargetCollectionItemOutput {
	return o
}

func (o GetTargetsTargetCollectionItemOutput) ToGetTargetsTargetCollectionItemOutputWithContext(ctx context.Context) GetTargetsTargetCollectionItemOutput {
	return o
}

// The ID of the compartment in which to list resources.
func (o GetTargetsTargetCollectionItemOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItem) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetTargetsTargetCollectionItemOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItem) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// ResponderRule Description
func (o GetTargetsTargetCollectionItemOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItem) string { return v.Description }).(pulumi.StringOutput)
}

// A filter to return only resources that match the entire display name given.
func (o GetTargetsTargetCollectionItemOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItem) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetTargetsTargetCollectionItemOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItem) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// Unique identifier of TargetResponderRecipe that is immutable on creation
func (o GetTargetsTargetCollectionItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItem) string { return v.Id }).(pulumi.StringOutput)
}

// List of inherited compartments
func (o GetTargetsTargetCollectionItemOutput) InheritedByCompartments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItem) []string { return v.InheritedByCompartments }).(pulumi.StringArrayOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o GetTargetsTargetCollectionItemOutput) LifecyleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItem) string { return v.LifecyleDetails }).(pulumi.StringOutput)
}

// Total number of recipes attached to target
func (o GetTargetsTargetCollectionItemOutput) RecipeCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItem) int { return v.RecipeCount }).(pulumi.IntOutput)
}

// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
func (o GetTargetsTargetCollectionItemOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItem) string { return v.State }).(pulumi.StringOutput)
}

// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o GetTargetsTargetCollectionItemOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItem) map[string]interface{} { return v.SystemTags }).(pulumi.MapOutput)
}

// List of detector recipes associated with target
func (o GetTargetsTargetCollectionItemOutput) TargetDetectorRecipes() GetTargetsTargetCollectionItemTargetDetectorRecipeArrayOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItem) []GetTargetsTargetCollectionItemTargetDetectorRecipe {
		return v.TargetDetectorRecipes
	}).(GetTargetsTargetCollectionItemTargetDetectorRecipeArrayOutput)
}

// Resource ID which the target uses to monitor
func (o GetTargetsTargetCollectionItemOutput) TargetResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItem) string { return v.TargetResourceId }).(pulumi.StringOutput)
}

// possible type of targets
func (o GetTargetsTargetCollectionItemOutput) TargetResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItem) string { return v.TargetResourceType }).(pulumi.StringOutput)
}

// List of responder recipes associated with target
func (o GetTargetsTargetCollectionItemOutput) TargetResponderRecipes() GetTargetsTargetCollectionItemTargetResponderRecipeArrayOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItem) []GetTargetsTargetCollectionItemTargetResponderRecipe {
		return v.TargetResponderRecipes
	}).(GetTargetsTargetCollectionItemTargetResponderRecipeArrayOutput)
}

// The date and time the target was created. Format defined by RFC3339.
func (o GetTargetsTargetCollectionItemOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItem) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the target was updated. Format defined by RFC3339.
func (o GetTargetsTargetCollectionItemOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItem) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetTargetsTargetCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetTargetsTargetCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTargetsTargetCollectionItem)(nil)).Elem()
}

func (o GetTargetsTargetCollectionItemArrayOutput) ToGetTargetsTargetCollectionItemArrayOutput() GetTargetsTargetCollectionItemArrayOutput {
	return o
}

func (o GetTargetsTargetCollectionItemArrayOutput) ToGetTargetsTargetCollectionItemArrayOutputWithContext(ctx context.Context) GetTargetsTargetCollectionItemArrayOutput {
	return o
}

func (o GetTargetsTargetCollectionItemArrayOutput) Index(i pulumi.IntInput) GetTargetsTargetCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTargetsTargetCollectionItem {
		return vs[0].([]GetTargetsTargetCollectionItem)[vs[1].(int)]
	}).(GetTargetsTargetCollectionItemOutput)
}

type GetTargetsTargetCollectionItemTargetDetectorRecipe struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// ResponderRule Description
	Description string `pulumi:"description"`
	// detector for the rule
	Detector string `pulumi:"detector"`
	// Unique identifier for Detector Recipe of which this is an extension
	DetectorRecipeId string `pulumi:"detectorRecipeId"`
	// List of detector rules for the detector type for recipe - user input
	DetectorRules []GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRule `pulumi:"detectorRules"`
	// A filter to return only resources that match the entire display name given.
	DisplayName string `pulumi:"displayName"`
	// List of effective detector rules for the detector type for recipe after applying defaults
	EffectiveDetectorRules []GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRule `pulumi:"effectiveDetectorRules"`
	// Unique identifier of TargetResponderRecipe that is immutable on creation
	Id string `pulumi:"id"`
	// Owner of ResponderRecipe
	Owner string `pulumi:"owner"`
	// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
	State string `pulumi:"state"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetTargetsTargetCollectionItemTargetDetectorRecipeInput is an input type that accepts GetTargetsTargetCollectionItemTargetDetectorRecipeArgs and GetTargetsTargetCollectionItemTargetDetectorRecipeOutput values.
// You can construct a concrete instance of `GetTargetsTargetCollectionItemTargetDetectorRecipeInput` via:
//
//          GetTargetsTargetCollectionItemTargetDetectorRecipeArgs{...}
type GetTargetsTargetCollectionItemTargetDetectorRecipeInput interface {
	pulumi.Input

	ToGetTargetsTargetCollectionItemTargetDetectorRecipeOutput() GetTargetsTargetCollectionItemTargetDetectorRecipeOutput
	ToGetTargetsTargetCollectionItemTargetDetectorRecipeOutputWithContext(context.Context) GetTargetsTargetCollectionItemTargetDetectorRecipeOutput
}

type GetTargetsTargetCollectionItemTargetDetectorRecipeArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// ResponderRule Description
	Description pulumi.StringInput `pulumi:"description"`
	// detector for the rule
	Detector pulumi.StringInput `pulumi:"detector"`
	// Unique identifier for Detector Recipe of which this is an extension
	DetectorRecipeId pulumi.StringInput `pulumi:"detectorRecipeId"`
	// List of detector rules for the detector type for recipe - user input
	DetectorRules GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleArrayInput `pulumi:"detectorRules"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// List of effective detector rules for the detector type for recipe after applying defaults
	EffectiveDetectorRules GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleArrayInput `pulumi:"effectiveDetectorRules"`
	// Unique identifier of TargetResponderRecipe that is immutable on creation
	Id pulumi.StringInput `pulumi:"id"`
	// Owner of ResponderRecipe
	Owner pulumi.StringInput `pulumi:"owner"`
	// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
	State pulumi.StringInput `pulumi:"state"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetTargetsTargetCollectionItemTargetDetectorRecipeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetsTargetCollectionItemTargetDetectorRecipe)(nil)).Elem()
}

func (i GetTargetsTargetCollectionItemTargetDetectorRecipeArgs) ToGetTargetsTargetCollectionItemTargetDetectorRecipeOutput() GetTargetsTargetCollectionItemTargetDetectorRecipeOutput {
	return i.ToGetTargetsTargetCollectionItemTargetDetectorRecipeOutputWithContext(context.Background())
}

func (i GetTargetsTargetCollectionItemTargetDetectorRecipeArgs) ToGetTargetsTargetCollectionItemTargetDetectorRecipeOutputWithContext(ctx context.Context) GetTargetsTargetCollectionItemTargetDetectorRecipeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTargetsTargetCollectionItemTargetDetectorRecipeOutput)
}

// GetTargetsTargetCollectionItemTargetDetectorRecipeArrayInput is an input type that accepts GetTargetsTargetCollectionItemTargetDetectorRecipeArray and GetTargetsTargetCollectionItemTargetDetectorRecipeArrayOutput values.
// You can construct a concrete instance of `GetTargetsTargetCollectionItemTargetDetectorRecipeArrayInput` via:
//
//          GetTargetsTargetCollectionItemTargetDetectorRecipeArray{ GetTargetsTargetCollectionItemTargetDetectorRecipeArgs{...} }
type GetTargetsTargetCollectionItemTargetDetectorRecipeArrayInput interface {
	pulumi.Input

	ToGetTargetsTargetCollectionItemTargetDetectorRecipeArrayOutput() GetTargetsTargetCollectionItemTargetDetectorRecipeArrayOutput
	ToGetTargetsTargetCollectionItemTargetDetectorRecipeArrayOutputWithContext(context.Context) GetTargetsTargetCollectionItemTargetDetectorRecipeArrayOutput
}

type GetTargetsTargetCollectionItemTargetDetectorRecipeArray []GetTargetsTargetCollectionItemTargetDetectorRecipeInput

func (GetTargetsTargetCollectionItemTargetDetectorRecipeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTargetsTargetCollectionItemTargetDetectorRecipe)(nil)).Elem()
}

func (i GetTargetsTargetCollectionItemTargetDetectorRecipeArray) ToGetTargetsTargetCollectionItemTargetDetectorRecipeArrayOutput() GetTargetsTargetCollectionItemTargetDetectorRecipeArrayOutput {
	return i.ToGetTargetsTargetCollectionItemTargetDetectorRecipeArrayOutputWithContext(context.Background())
}

func (i GetTargetsTargetCollectionItemTargetDetectorRecipeArray) ToGetTargetsTargetCollectionItemTargetDetectorRecipeArrayOutputWithContext(ctx context.Context) GetTargetsTargetCollectionItemTargetDetectorRecipeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTargetsTargetCollectionItemTargetDetectorRecipeArrayOutput)
}

type GetTargetsTargetCollectionItemTargetDetectorRecipeOutput struct{ *pulumi.OutputState }

func (GetTargetsTargetCollectionItemTargetDetectorRecipeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetsTargetCollectionItemTargetDetectorRecipe)(nil)).Elem()
}

func (o GetTargetsTargetCollectionItemTargetDetectorRecipeOutput) ToGetTargetsTargetCollectionItemTargetDetectorRecipeOutput() GetTargetsTargetCollectionItemTargetDetectorRecipeOutput {
	return o
}

func (o GetTargetsTargetCollectionItemTargetDetectorRecipeOutput) ToGetTargetsTargetCollectionItemTargetDetectorRecipeOutputWithContext(ctx context.Context) GetTargetsTargetCollectionItemTargetDetectorRecipeOutput {
	return o
}

// The ID of the compartment in which to list resources.
func (o GetTargetsTargetCollectionItemTargetDetectorRecipeOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetDetectorRecipe) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// ResponderRule Description
func (o GetTargetsTargetCollectionItemTargetDetectorRecipeOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetDetectorRecipe) string { return v.Description }).(pulumi.StringOutput)
}

// detector for the rule
func (o GetTargetsTargetCollectionItemTargetDetectorRecipeOutput) Detector() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetDetectorRecipe) string { return v.Detector }).(pulumi.StringOutput)
}

// Unique identifier for Detector Recipe of which this is an extension
func (o GetTargetsTargetCollectionItemTargetDetectorRecipeOutput) DetectorRecipeId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetDetectorRecipe) string { return v.DetectorRecipeId }).(pulumi.StringOutput)
}

// List of detector rules for the detector type for recipe - user input
func (o GetTargetsTargetCollectionItemTargetDetectorRecipeOutput) DetectorRules() GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleArrayOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetDetectorRecipe) []GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRule {
		return v.DetectorRules
	}).(GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleArrayOutput)
}

// A filter to return only resources that match the entire display name given.
func (o GetTargetsTargetCollectionItemTargetDetectorRecipeOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetDetectorRecipe) string { return v.DisplayName }).(pulumi.StringOutput)
}

// List of effective detector rules for the detector type for recipe after applying defaults
func (o GetTargetsTargetCollectionItemTargetDetectorRecipeOutput) EffectiveDetectorRules() GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleArrayOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetDetectorRecipe) []GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRule {
		return v.EffectiveDetectorRules
	}).(GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleArrayOutput)
}

// Unique identifier of TargetResponderRecipe that is immutable on creation
func (o GetTargetsTargetCollectionItemTargetDetectorRecipeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetDetectorRecipe) string { return v.Id }).(pulumi.StringOutput)
}

// Owner of ResponderRecipe
func (o GetTargetsTargetCollectionItemTargetDetectorRecipeOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetDetectorRecipe) string { return v.Owner }).(pulumi.StringOutput)
}

// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
func (o GetTargetsTargetCollectionItemTargetDetectorRecipeOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetDetectorRecipe) string { return v.State }).(pulumi.StringOutput)
}

// The date and time the target was created. Format defined by RFC3339.
func (o GetTargetsTargetCollectionItemTargetDetectorRecipeOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetDetectorRecipe) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the target was updated. Format defined by RFC3339.
func (o GetTargetsTargetCollectionItemTargetDetectorRecipeOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetDetectorRecipe) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetTargetsTargetCollectionItemTargetDetectorRecipeArrayOutput struct{ *pulumi.OutputState }

func (GetTargetsTargetCollectionItemTargetDetectorRecipeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTargetsTargetCollectionItemTargetDetectorRecipe)(nil)).Elem()
}

func (o GetTargetsTargetCollectionItemTargetDetectorRecipeArrayOutput) ToGetTargetsTargetCollectionItemTargetDetectorRecipeArrayOutput() GetTargetsTargetCollectionItemTargetDetectorRecipeArrayOutput {
	return o
}

func (o GetTargetsTargetCollectionItemTargetDetectorRecipeArrayOutput) ToGetTargetsTargetCollectionItemTargetDetectorRecipeArrayOutputWithContext(ctx context.Context) GetTargetsTargetCollectionItemTargetDetectorRecipeArrayOutput {
	return o
}

func (o GetTargetsTargetCollectionItemTargetDetectorRecipeArrayOutput) Index(i pulumi.IntInput) GetTargetsTargetCollectionItemTargetDetectorRecipeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTargetsTargetCollectionItemTargetDetectorRecipe {
		return vs[0].([]GetTargetsTargetCollectionItemTargetDetectorRecipe)[vs[1].(int)]
	}).(GetTargetsTargetCollectionItemTargetDetectorRecipeOutput)
}

type GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRule struct {
	// ResponderRule Description
	Description string `pulumi:"description"`
	// Details of ResponderRule.
	Details GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetails `pulumi:"details"`
	// detector for the rule
	Detector string `pulumi:"detector"`
	// The unique identifier of the detector rule
	DetectorRuleId string `pulumi:"detectorRuleId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName string `pulumi:"displayName"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// List of cloudguard managed list types related to this rule
	ManagedListTypes []string `pulumi:"managedListTypes"`
	// Recommendation for TargetDetectorRecipeDetectorRule
	Recommendation string `pulumi:"recommendation"`
	// resource type of the configuration to which the rule is applied
	ResourceType string `pulumi:"resourceType"`
	// service type of the configuration to which the rule is applied
	ServiceType string `pulumi:"serviceType"`
	// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
	State string `pulumi:"state"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleInput is an input type that accepts GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleArgs and GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleOutput values.
// You can construct a concrete instance of `GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleInput` via:
//
//          GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleArgs{...}
type GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleInput interface {
	pulumi.Input

	ToGetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleOutput() GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleOutput
	ToGetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleOutputWithContext(context.Context) GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleOutput
}

type GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleArgs struct {
	// ResponderRule Description
	Description pulumi.StringInput `pulumi:"description"`
	// Details of ResponderRule.
	Details GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsInput `pulumi:"details"`
	// detector for the rule
	Detector pulumi.StringInput `pulumi:"detector"`
	// The unique identifier of the detector rule
	DetectorRuleId pulumi.StringInput `pulumi:"detectorRuleId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// List of cloudguard managed list types related to this rule
	ManagedListTypes pulumi.StringArrayInput `pulumi:"managedListTypes"`
	// Recommendation for TargetDetectorRecipeDetectorRule
	Recommendation pulumi.StringInput `pulumi:"recommendation"`
	// resource type of the configuration to which the rule is applied
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// service type of the configuration to which the rule is applied
	ServiceType pulumi.StringInput `pulumi:"serviceType"`
	// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
	State pulumi.StringInput `pulumi:"state"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRule)(nil)).Elem()
}

func (i GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleArgs) ToGetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleOutput() GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleOutput {
	return i.ToGetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleOutputWithContext(context.Background())
}

func (i GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleArgs) ToGetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleOutputWithContext(ctx context.Context) GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleOutput)
}

// GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleArrayInput is an input type that accepts GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleArray and GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleArrayOutput values.
// You can construct a concrete instance of `GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleArrayInput` via:
//
//          GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleArray{ GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleArgs{...} }
type GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleArrayInput interface {
	pulumi.Input

	ToGetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleArrayOutput() GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleArrayOutput
	ToGetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleArrayOutputWithContext(context.Context) GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleArrayOutput
}

type GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleArray []GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleInput

func (GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRule)(nil)).Elem()
}

func (i GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleArray) ToGetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleArrayOutput() GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleArrayOutput {
	return i.ToGetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleArrayOutputWithContext(context.Background())
}

func (i GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleArray) ToGetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleArrayOutputWithContext(ctx context.Context) GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleArrayOutput)
}

type GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleOutput struct{ *pulumi.OutputState }

func (GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRule)(nil)).Elem()
}

func (o GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleOutput) ToGetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleOutput() GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleOutput {
	return o
}

func (o GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleOutput) ToGetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleOutputWithContext(ctx context.Context) GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleOutput {
	return o
}

// ResponderRule Description
func (o GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRule) string { return v.Description }).(pulumi.StringOutput)
}

// Details of ResponderRule.
func (o GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleOutput) Details() GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRule) GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetails {
		return v.Details
	}).(GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsOutput)
}

// detector for the rule
func (o GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleOutput) Detector() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRule) string { return v.Detector }).(pulumi.StringOutput)
}

// The unique identifier of the detector rule
func (o GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleOutput) DetectorRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRule) string { return v.DetectorRuleId }).(pulumi.StringOutput)
}

// A filter to return only resources that match the entire display name given.
func (o GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRule) string { return v.DisplayName }).(pulumi.StringOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRule) string {
		return v.LifecycleDetails
	}).(pulumi.StringOutput)
}

// List of cloudguard managed list types related to this rule
func (o GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleOutput) ManagedListTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRule) []string {
		return v.ManagedListTypes
	}).(pulumi.StringArrayOutput)
}

// Recommendation for TargetDetectorRecipeDetectorRule
func (o GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleOutput) Recommendation() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRule) string { return v.Recommendation }).(pulumi.StringOutput)
}

// resource type of the configuration to which the rule is applied
func (o GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRule) string { return v.ResourceType }).(pulumi.StringOutput)
}

// service type of the configuration to which the rule is applied
func (o GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleOutput) ServiceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRule) string { return v.ServiceType }).(pulumi.StringOutput)
}

// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
func (o GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRule) string { return v.State }).(pulumi.StringOutput)
}

// The date and time the target was created. Format defined by RFC3339.
func (o GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRule) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the target was updated. Format defined by RFC3339.
func (o GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRule) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleArrayOutput struct{ *pulumi.OutputState }

func (GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRule)(nil)).Elem()
}

func (o GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleArrayOutput) ToGetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleArrayOutput() GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleArrayOutput {
	return o
}

func (o GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleArrayOutput) ToGetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleArrayOutputWithContext(ctx context.Context) GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleArrayOutput {
	return o
}

func (o GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleArrayOutput) Index(i pulumi.IntInput) GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRule {
		return vs[0].([]GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRule)[vs[1].(int)]
	}).(GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleOutput)
}

type GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetails struct {
	// Condition group corresponding to each compartment
	ConditionGroups []GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConditionGroup `pulumi:"conditionGroups"`
	// ResponderRule configurations
	Configurations []GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfiguration `pulumi:"configurations"`
	// configuration allowed or not
	IsConfigurationAllowed bool `pulumi:"isConfigurationAllowed"`
	// Identifies state for ResponderRule
	IsEnabled bool `pulumi:"isEnabled"`
	// user defined labels for a detector rule
	Labels []string `pulumi:"labels"`
	// The Risk Level
	RiskLevel string `pulumi:"riskLevel"`
}

// GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsInput is an input type that accepts GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsArgs and GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsOutput values.
// You can construct a concrete instance of `GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsInput` via:
//
//          GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsArgs{...}
type GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsInput interface {
	pulumi.Input

	ToGetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsOutput() GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsOutput
	ToGetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsOutputWithContext(context.Context) GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsOutput
}

type GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsArgs struct {
	// Condition group corresponding to each compartment
	ConditionGroups GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayInput `pulumi:"conditionGroups"`
	// ResponderRule configurations
	Configurations GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayInput `pulumi:"configurations"`
	// configuration allowed or not
	IsConfigurationAllowed pulumi.BoolInput `pulumi:"isConfigurationAllowed"`
	// Identifies state for ResponderRule
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// user defined labels for a detector rule
	Labels pulumi.StringArrayInput `pulumi:"labels"`
	// The Risk Level
	RiskLevel pulumi.StringInput `pulumi:"riskLevel"`
}

func (GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetails)(nil)).Elem()
}

func (i GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsArgs) ToGetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsOutput() GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsOutput {
	return i.ToGetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsOutputWithContext(context.Background())
}

func (i GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsArgs) ToGetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsOutputWithContext(ctx context.Context) GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsOutput)
}

type GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsOutput struct{ *pulumi.OutputState }

func (GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetails)(nil)).Elem()
}

func (o GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsOutput) ToGetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsOutput() GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsOutput {
	return o
}

func (o GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsOutput) ToGetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsOutputWithContext(ctx context.Context) GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsOutput {
	return o
}

// Condition group corresponding to each compartment
func (o GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsOutput) ConditionGroups() GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetails) []GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConditionGroup {
		return v.ConditionGroups
	}).(GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutput)
}

// ResponderRule configurations
func (o GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsOutput) Configurations() GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetails) []GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfiguration {
		return v.Configurations
	}).(GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput)
}

// configuration allowed or not
func (o GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsOutput) IsConfigurationAllowed() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetails) bool {
		return v.IsConfigurationAllowed
	}).(pulumi.BoolOutput)
}

// Identifies state for ResponderRule
func (o GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetails) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// user defined labels for a detector rule
func (o GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsOutput) Labels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetails) []string {
		return v.Labels
	}).(pulumi.StringArrayOutput)
}

// The Risk Level
func (o GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsOutput) RiskLevel() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetails) string {
		return v.RiskLevel
	}).(pulumi.StringOutput)
}

type GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConditionGroup struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	Condition     string `pulumi:"condition"`
}

// GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConditionGroupInput is an input type that accepts GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConditionGroupArgs and GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutput values.
// You can construct a concrete instance of `GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConditionGroupInput` via:
//
//          GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConditionGroupArgs{...}
type GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConditionGroupInput interface {
	pulumi.Input

	ToGetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutput() GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutput
	ToGetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutputWithContext(context.Context) GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutput
}

type GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConditionGroupArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	Condition     pulumi.StringInput `pulumi:"condition"`
}

func (GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConditionGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConditionGroup)(nil)).Elem()
}

func (i GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConditionGroupArgs) ToGetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutput() GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutput {
	return i.ToGetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutputWithContext(context.Background())
}

func (i GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConditionGroupArgs) ToGetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutputWithContext(ctx context.Context) GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutput)
}

// GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayInput is an input type that accepts GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConditionGroupArray and GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutput values.
// You can construct a concrete instance of `GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayInput` via:
//
//          GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConditionGroupArray{ GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConditionGroupArgs{...} }
type GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayInput interface {
	pulumi.Input

	ToGetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutput() GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutput
	ToGetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutputWithContext(context.Context) GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutput
}

type GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConditionGroupArray []GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConditionGroupInput

func (GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConditionGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConditionGroup)(nil)).Elem()
}

func (i GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConditionGroupArray) ToGetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutput() GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutput {
	return i.ToGetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutputWithContext(context.Background())
}

func (i GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConditionGroupArray) ToGetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutputWithContext(ctx context.Context) GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutput)
}

type GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutput struct{ *pulumi.OutputState }

func (GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConditionGroup)(nil)).Elem()
}

func (o GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutput) ToGetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutput() GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutput {
	return o
}

func (o GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutput) ToGetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutputWithContext(ctx context.Context) GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutput {
	return o
}

// The ID of the compartment in which to list resources.
func (o GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConditionGroup) string {
		return v.CompartmentId
	}).(pulumi.StringOutput)
}

func (o GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConditionGroup) string {
		return v.Condition
	}).(pulumi.StringOutput)
}

type GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutput struct{ *pulumi.OutputState }

func (GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConditionGroup)(nil)).Elem()
}

func (o GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutput) ToGetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutput() GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutput {
	return o
}

func (o GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutput) ToGetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutputWithContext(ctx context.Context) GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutput {
	return o
}

func (o GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutput) Index(i pulumi.IntInput) GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConditionGroup {
		return vs[0].([]GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConditionGroup)[vs[1].(int)]
	}).(GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutput)
}

type GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfiguration struct {
	// Unique name of the configuration
	ConfigKey string `pulumi:"configKey"`
	// configuration data type
	DataType string `pulumi:"dataType"`
	// configuration name
	Name string `pulumi:"name"`
	// configuration value
	Value string `pulumi:"value"`
	// List of configuration values
	Values []GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationValue `pulumi:"values"`
}

// GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationInput is an input type that accepts GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationArgs and GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput values.
// You can construct a concrete instance of `GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationInput` via:
//
//          GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationArgs{...}
type GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationInput interface {
	pulumi.Input

	ToGetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput() GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput
	ToGetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationOutputWithContext(context.Context) GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput
}

type GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationArgs struct {
	// Unique name of the configuration
	ConfigKey pulumi.StringInput `pulumi:"configKey"`
	// configuration data type
	DataType pulumi.StringInput `pulumi:"dataType"`
	// configuration name
	Name pulumi.StringInput `pulumi:"name"`
	// configuration value
	Value pulumi.StringInput `pulumi:"value"`
	// List of configuration values
	Values GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayInput `pulumi:"values"`
}

func (GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfiguration)(nil)).Elem()
}

func (i GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationArgs) ToGetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput() GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput {
	return i.ToGetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationOutputWithContext(context.Background())
}

func (i GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationArgs) ToGetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationOutputWithContext(ctx context.Context) GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput)
}

// GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayInput is an input type that accepts GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationArray and GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput values.
// You can construct a concrete instance of `GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayInput` via:
//
//          GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationArray{ GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationArgs{...} }
type GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayInput interface {
	pulumi.Input

	ToGetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput() GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput
	ToGetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutputWithContext(context.Context) GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput
}

type GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationArray []GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationInput

func (GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfiguration)(nil)).Elem()
}

func (i GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationArray) ToGetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput() GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput {
	return i.ToGetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutputWithContext(context.Background())
}

func (i GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationArray) ToGetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutputWithContext(ctx context.Context) GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput)
}

type GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput struct{ *pulumi.OutputState }

func (GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfiguration)(nil)).Elem()
}

func (o GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput) ToGetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput() GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput {
	return o
}

func (o GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput) ToGetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationOutputWithContext(ctx context.Context) GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput {
	return o
}

// Unique name of the configuration
func (o GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput) ConfigKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfiguration) string {
		return v.ConfigKey
	}).(pulumi.StringOutput)
}

// configuration data type
func (o GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput) DataType() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfiguration) string {
		return v.DataType
	}).(pulumi.StringOutput)
}

// configuration name
func (o GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfiguration) string {
		return v.Name
	}).(pulumi.StringOutput)
}

// configuration value
func (o GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfiguration) string {
		return v.Value
	}).(pulumi.StringOutput)
}

// List of configuration values
func (o GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput) Values() GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfiguration) []GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationValue {
		return v.Values
	}).(GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput)
}

type GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfiguration)(nil)).Elem()
}

func (o GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput) ToGetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput() GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput {
	return o
}

func (o GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput) ToGetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutputWithContext(ctx context.Context) GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput {
	return o
}

func (o GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput) Index(i pulumi.IntInput) GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfiguration {
		return vs[0].([]GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfiguration)[vs[1].(int)]
	}).(GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput)
}

type GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationValue struct {
	// configuration list item type, either CUSTOM or MANAGED
	ListType string `pulumi:"listType"`
	// type of the managed list
	ManagedListType string `pulumi:"managedListType"`
	// configuration value
	Value string `pulumi:"value"`
}

// GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationValueInput is an input type that accepts GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArgs and GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput values.
// You can construct a concrete instance of `GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationValueInput` via:
//
//          GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArgs{...}
type GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationValueInput interface {
	pulumi.Input

	ToGetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput() GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput
	ToGetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutputWithContext(context.Context) GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput
}

type GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArgs struct {
	// configuration list item type, either CUSTOM or MANAGED
	ListType pulumi.StringInput `pulumi:"listType"`
	// type of the managed list
	ManagedListType pulumi.StringInput `pulumi:"managedListType"`
	// configuration value
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationValue)(nil)).Elem()
}

func (i GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArgs) ToGetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput() GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput {
	return i.ToGetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutputWithContext(context.Background())
}

func (i GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArgs) ToGetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutputWithContext(ctx context.Context) GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput)
}

// GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayInput is an input type that accepts GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArray and GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput values.
// You can construct a concrete instance of `GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayInput` via:
//
//          GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArray{ GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArgs{...} }
type GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayInput interface {
	pulumi.Input

	ToGetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput() GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput
	ToGetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutputWithContext(context.Context) GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput
}

type GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArray []GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationValueInput

func (GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationValue)(nil)).Elem()
}

func (i GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArray) ToGetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput() GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput {
	return i.ToGetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutputWithContext(context.Background())
}

func (i GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArray) ToGetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutputWithContext(ctx context.Context) GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput)
}

type GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput struct{ *pulumi.OutputState }

func (GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationValue)(nil)).Elem()
}

func (o GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput) ToGetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput() GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput {
	return o
}

func (o GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput) ToGetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutputWithContext(ctx context.Context) GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput {
	return o
}

// configuration list item type, either CUSTOM or MANAGED
func (o GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput) ListType() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationValue) string {
		return v.ListType
	}).(pulumi.StringOutput)
}

// type of the managed list
func (o GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput) ManagedListType() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationValue) string {
		return v.ManagedListType
	}).(pulumi.StringOutput)
}

// configuration value
func (o GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationValue) string {
		return v.Value
	}).(pulumi.StringOutput)
}

type GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput struct{ *pulumi.OutputState }

func (GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationValue)(nil)).Elem()
}

func (o GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput) ToGetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput() GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput {
	return o
}

func (o GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput) ToGetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutputWithContext(ctx context.Context) GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput {
	return o
}

func (o GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput) Index(i pulumi.IntInput) GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationValue {
		return vs[0].([]GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationValue)[vs[1].(int)]
	}).(GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput)
}

type GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRule struct {
	// ResponderRule Description
	Description string `pulumi:"description"`
	// Details of ResponderRule.
	Details GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetails `pulumi:"details"`
	// detector for the rule
	Detector string `pulumi:"detector"`
	// The unique identifier of the detector rule
	DetectorRuleId string `pulumi:"detectorRuleId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName string `pulumi:"displayName"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// List of cloudguard managed list types related to this rule
	ManagedListTypes []string `pulumi:"managedListTypes"`
	// Recommendation for TargetDetectorRecipeDetectorRule
	Recommendation string `pulumi:"recommendation"`
	// resource type of the configuration to which the rule is applied
	ResourceType string `pulumi:"resourceType"`
	// service type of the configuration to which the rule is applied
	ServiceType string `pulumi:"serviceType"`
	// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
	State string `pulumi:"state"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleInput is an input type that accepts GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleArgs and GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleOutput values.
// You can construct a concrete instance of `GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleInput` via:
//
//          GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleArgs{...}
type GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleInput interface {
	pulumi.Input

	ToGetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleOutput() GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleOutput
	ToGetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleOutputWithContext(context.Context) GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleOutput
}

type GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleArgs struct {
	// ResponderRule Description
	Description pulumi.StringInput `pulumi:"description"`
	// Details of ResponderRule.
	Details GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsInput `pulumi:"details"`
	// detector for the rule
	Detector pulumi.StringInput `pulumi:"detector"`
	// The unique identifier of the detector rule
	DetectorRuleId pulumi.StringInput `pulumi:"detectorRuleId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// List of cloudguard managed list types related to this rule
	ManagedListTypes pulumi.StringArrayInput `pulumi:"managedListTypes"`
	// Recommendation for TargetDetectorRecipeDetectorRule
	Recommendation pulumi.StringInput `pulumi:"recommendation"`
	// resource type of the configuration to which the rule is applied
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// service type of the configuration to which the rule is applied
	ServiceType pulumi.StringInput `pulumi:"serviceType"`
	// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
	State pulumi.StringInput `pulumi:"state"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRule)(nil)).Elem()
}

func (i GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleArgs) ToGetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleOutput() GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleOutput {
	return i.ToGetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleOutputWithContext(context.Background())
}

func (i GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleArgs) ToGetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleOutputWithContext(ctx context.Context) GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleOutput)
}

// GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleArrayInput is an input type that accepts GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleArray and GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleArrayOutput values.
// You can construct a concrete instance of `GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleArrayInput` via:
//
//          GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleArray{ GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleArgs{...} }
type GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleArrayInput interface {
	pulumi.Input

	ToGetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleArrayOutput() GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleArrayOutput
	ToGetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleArrayOutputWithContext(context.Context) GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleArrayOutput
}

type GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleArray []GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleInput

func (GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRule)(nil)).Elem()
}

func (i GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleArray) ToGetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleArrayOutput() GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleArrayOutput {
	return i.ToGetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleArrayOutputWithContext(context.Background())
}

func (i GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleArray) ToGetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleArrayOutputWithContext(ctx context.Context) GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleArrayOutput)
}

type GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleOutput struct{ *pulumi.OutputState }

func (GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRule)(nil)).Elem()
}

func (o GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleOutput) ToGetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleOutput() GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleOutput {
	return o
}

func (o GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleOutput) ToGetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleOutputWithContext(ctx context.Context) GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleOutput {
	return o
}

// ResponderRule Description
func (o GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRule) string {
		return v.Description
	}).(pulumi.StringOutput)
}

// Details of ResponderRule.
func (o GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleOutput) Details() GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRule) GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetails {
		return v.Details
	}).(GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsOutput)
}

// detector for the rule
func (o GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleOutput) Detector() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRule) string {
		return v.Detector
	}).(pulumi.StringOutput)
}

// The unique identifier of the detector rule
func (o GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleOutput) DetectorRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRule) string {
		return v.DetectorRuleId
	}).(pulumi.StringOutput)
}

// A filter to return only resources that match the entire display name given.
func (o GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRule) string {
		return v.DisplayName
	}).(pulumi.StringOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRule) string {
		return v.LifecycleDetails
	}).(pulumi.StringOutput)
}

// List of cloudguard managed list types related to this rule
func (o GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleOutput) ManagedListTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRule) []string {
		return v.ManagedListTypes
	}).(pulumi.StringArrayOutput)
}

// Recommendation for TargetDetectorRecipeDetectorRule
func (o GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleOutput) Recommendation() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRule) string {
		return v.Recommendation
	}).(pulumi.StringOutput)
}

// resource type of the configuration to which the rule is applied
func (o GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRule) string {
		return v.ResourceType
	}).(pulumi.StringOutput)
}

// service type of the configuration to which the rule is applied
func (o GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleOutput) ServiceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRule) string {
		return v.ServiceType
	}).(pulumi.StringOutput)
}

// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
func (o GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRule) string { return v.State }).(pulumi.StringOutput)
}

// The date and time the target was created. Format defined by RFC3339.
func (o GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRule) string {
		return v.TimeCreated
	}).(pulumi.StringOutput)
}

// The date and time the target was updated. Format defined by RFC3339.
func (o GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRule) string {
		return v.TimeUpdated
	}).(pulumi.StringOutput)
}

type GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleArrayOutput struct{ *pulumi.OutputState }

func (GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRule)(nil)).Elem()
}

func (o GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleArrayOutput) ToGetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleArrayOutput() GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleArrayOutput {
	return o
}

func (o GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleArrayOutput) ToGetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleArrayOutputWithContext(ctx context.Context) GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleArrayOutput {
	return o
}

func (o GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleArrayOutput) Index(i pulumi.IntInput) GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRule {
		return vs[0].([]GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRule)[vs[1].(int)]
	}).(GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleOutput)
}

type GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetails struct {
	// Condition group corresponding to each compartment
	ConditionGroups []GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroup `pulumi:"conditionGroups"`
	// ResponderRule configurations
	Configurations []GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfiguration `pulumi:"configurations"`
	// configuration allowed or not
	IsConfigurationAllowed bool `pulumi:"isConfigurationAllowed"`
	// Identifies state for ResponderRule
	IsEnabled bool `pulumi:"isEnabled"`
	// user defined labels for a detector rule
	Labels []string `pulumi:"labels"`
	// The Risk Level
	RiskLevel string `pulumi:"riskLevel"`
}

// GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsInput is an input type that accepts GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsArgs and GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsOutput values.
// You can construct a concrete instance of `GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsInput` via:
//
//          GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsArgs{...}
type GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsInput interface {
	pulumi.Input

	ToGetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsOutput() GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsOutput
	ToGetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsOutputWithContext(context.Context) GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsOutput
}

type GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsArgs struct {
	// Condition group corresponding to each compartment
	ConditionGroups GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArrayInput `pulumi:"conditionGroups"`
	// ResponderRule configurations
	Configurations GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayInput `pulumi:"configurations"`
	// configuration allowed or not
	IsConfigurationAllowed pulumi.BoolInput `pulumi:"isConfigurationAllowed"`
	// Identifies state for ResponderRule
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// user defined labels for a detector rule
	Labels pulumi.StringArrayInput `pulumi:"labels"`
	// The Risk Level
	RiskLevel pulumi.StringInput `pulumi:"riskLevel"`
}

func (GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetails)(nil)).Elem()
}

func (i GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsArgs) ToGetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsOutput() GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsOutput {
	return i.ToGetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsOutputWithContext(context.Background())
}

func (i GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsArgs) ToGetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsOutputWithContext(ctx context.Context) GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsOutput)
}

type GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsOutput struct{ *pulumi.OutputState }

func (GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetails)(nil)).Elem()
}

func (o GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsOutput) ToGetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsOutput() GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsOutput {
	return o
}

func (o GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsOutput) ToGetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsOutputWithContext(ctx context.Context) GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsOutput {
	return o
}

// Condition group corresponding to each compartment
func (o GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsOutput) ConditionGroups() GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArrayOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetails) []GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroup {
		return v.ConditionGroups
	}).(GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArrayOutput)
}

// ResponderRule configurations
func (o GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsOutput) Configurations() GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetails) []GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfiguration {
		return v.Configurations
	}).(GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput)
}

// configuration allowed or not
func (o GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsOutput) IsConfigurationAllowed() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetails) bool {
		return v.IsConfigurationAllowed
	}).(pulumi.BoolOutput)
}

// Identifies state for ResponderRule
func (o GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetails) bool {
		return v.IsEnabled
	}).(pulumi.BoolOutput)
}

// user defined labels for a detector rule
func (o GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsOutput) Labels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetails) []string {
		return v.Labels
	}).(pulumi.StringArrayOutput)
}

// The Risk Level
func (o GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsOutput) RiskLevel() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetails) string {
		return v.RiskLevel
	}).(pulumi.StringOutput)
}

type GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroup struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	Condition     string `pulumi:"condition"`
}

// GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupInput is an input type that accepts GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArgs and GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupOutput values.
// You can construct a concrete instance of `GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupInput` via:
//
//          GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArgs{...}
type GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupInput interface {
	pulumi.Input

	ToGetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupOutput() GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupOutput
	ToGetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupOutputWithContext(context.Context) GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupOutput
}

type GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	Condition     pulumi.StringInput `pulumi:"condition"`
}

func (GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroup)(nil)).Elem()
}

func (i GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArgs) ToGetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupOutput() GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupOutput {
	return i.ToGetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupOutputWithContext(context.Background())
}

func (i GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArgs) ToGetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupOutputWithContext(ctx context.Context) GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupOutput)
}

// GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArrayInput is an input type that accepts GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArray and GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArrayOutput values.
// You can construct a concrete instance of `GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArrayInput` via:
//
//          GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArray{ GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArgs{...} }
type GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArrayInput interface {
	pulumi.Input

	ToGetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArrayOutput() GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArrayOutput
	ToGetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArrayOutputWithContext(context.Context) GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArrayOutput
}

type GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArray []GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupInput

func (GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroup)(nil)).Elem()
}

func (i GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArray) ToGetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArrayOutput() GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArrayOutput {
	return i.ToGetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArrayOutputWithContext(context.Background())
}

func (i GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArray) ToGetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArrayOutputWithContext(ctx context.Context) GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArrayOutput)
}

type GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupOutput struct{ *pulumi.OutputState }

func (GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroup)(nil)).Elem()
}

func (o GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupOutput) ToGetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupOutput() GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupOutput {
	return o
}

func (o GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupOutput) ToGetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupOutputWithContext(ctx context.Context) GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupOutput {
	return o
}

// The ID of the compartment in which to list resources.
func (o GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroup) string {
		return v.CompartmentId
	}).(pulumi.StringOutput)
}

func (o GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroup) string {
		return v.Condition
	}).(pulumi.StringOutput)
}

type GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArrayOutput struct{ *pulumi.OutputState }

func (GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroup)(nil)).Elem()
}

func (o GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArrayOutput) ToGetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArrayOutput() GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArrayOutput {
	return o
}

func (o GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArrayOutput) ToGetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArrayOutputWithContext(ctx context.Context) GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArrayOutput {
	return o
}

func (o GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArrayOutput) Index(i pulumi.IntInput) GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroup {
		return vs[0].([]GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroup)[vs[1].(int)]
	}).(GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupOutput)
}

type GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfiguration struct {
	// Unique name of the configuration
	ConfigKey string `pulumi:"configKey"`
	// configuration data type
	DataType string `pulumi:"dataType"`
	// configuration name
	Name string `pulumi:"name"`
	// configuration value
	Value string `pulumi:"value"`
	// List of configuration values
	Values []GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValue `pulumi:"values"`
}

// GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationInput is an input type that accepts GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArgs and GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput values.
// You can construct a concrete instance of `GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationInput` via:
//
//          GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArgs{...}
type GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationInput interface {
	pulumi.Input

	ToGetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput() GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput
	ToGetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutputWithContext(context.Context) GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput
}

type GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArgs struct {
	// Unique name of the configuration
	ConfigKey pulumi.StringInput `pulumi:"configKey"`
	// configuration data type
	DataType pulumi.StringInput `pulumi:"dataType"`
	// configuration name
	Name pulumi.StringInput `pulumi:"name"`
	// configuration value
	Value pulumi.StringInput `pulumi:"value"`
	// List of configuration values
	Values GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayInput `pulumi:"values"`
}

func (GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfiguration)(nil)).Elem()
}

func (i GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArgs) ToGetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput() GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput {
	return i.ToGetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutputWithContext(context.Background())
}

func (i GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArgs) ToGetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutputWithContext(ctx context.Context) GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput)
}

// GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayInput is an input type that accepts GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArray and GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput values.
// You can construct a concrete instance of `GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayInput` via:
//
//          GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArray{ GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArgs{...} }
type GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayInput interface {
	pulumi.Input

	ToGetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput() GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput
	ToGetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutputWithContext(context.Context) GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput
}

type GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArray []GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationInput

func (GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfiguration)(nil)).Elem()
}

func (i GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArray) ToGetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput() GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput {
	return i.ToGetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutputWithContext(context.Background())
}

func (i GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArray) ToGetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutputWithContext(ctx context.Context) GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput)
}

type GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput struct{ *pulumi.OutputState }

func (GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfiguration)(nil)).Elem()
}

func (o GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput) ToGetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput() GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput {
	return o
}

func (o GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput) ToGetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutputWithContext(ctx context.Context) GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput {
	return o
}

// Unique name of the configuration
func (o GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput) ConfigKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfiguration) string {
		return v.ConfigKey
	}).(pulumi.StringOutput)
}

// configuration data type
func (o GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput) DataType() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfiguration) string {
		return v.DataType
	}).(pulumi.StringOutput)
}

// configuration name
func (o GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfiguration) string {
		return v.Name
	}).(pulumi.StringOutput)
}

// configuration value
func (o GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfiguration) string {
		return v.Value
	}).(pulumi.StringOutput)
}

// List of configuration values
func (o GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput) Values() GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfiguration) []GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValue {
		return v.Values
	}).(GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput)
}

type GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfiguration)(nil)).Elem()
}

func (o GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput) ToGetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput() GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput {
	return o
}

func (o GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput) ToGetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutputWithContext(ctx context.Context) GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput {
	return o
}

func (o GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput) Index(i pulumi.IntInput) GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfiguration {
		return vs[0].([]GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfiguration)[vs[1].(int)]
	}).(GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput)
}

type GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValue struct {
	// configuration list item type, either CUSTOM or MANAGED
	ListType string `pulumi:"listType"`
	// type of the managed list
	ManagedListType string `pulumi:"managedListType"`
	// configuration value
	Value string `pulumi:"value"`
}

// GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueInput is an input type that accepts GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArgs and GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput values.
// You can construct a concrete instance of `GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueInput` via:
//
//          GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArgs{...}
type GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueInput interface {
	pulumi.Input

	ToGetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput() GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput
	ToGetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutputWithContext(context.Context) GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput
}

type GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArgs struct {
	// configuration list item type, either CUSTOM or MANAGED
	ListType pulumi.StringInput `pulumi:"listType"`
	// type of the managed list
	ManagedListType pulumi.StringInput `pulumi:"managedListType"`
	// configuration value
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValue)(nil)).Elem()
}

func (i GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArgs) ToGetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput() GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput {
	return i.ToGetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutputWithContext(context.Background())
}

func (i GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArgs) ToGetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutputWithContext(ctx context.Context) GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput)
}

// GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayInput is an input type that accepts GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArray and GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput values.
// You can construct a concrete instance of `GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayInput` via:
//
//          GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArray{ GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArgs{...} }
type GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayInput interface {
	pulumi.Input

	ToGetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput() GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput
	ToGetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutputWithContext(context.Context) GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput
}

type GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArray []GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueInput

func (GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValue)(nil)).Elem()
}

func (i GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArray) ToGetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput() GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput {
	return i.ToGetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutputWithContext(context.Background())
}

func (i GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArray) ToGetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutputWithContext(ctx context.Context) GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput)
}

type GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput struct{ *pulumi.OutputState }

func (GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValue)(nil)).Elem()
}

func (o GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput) ToGetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput() GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput {
	return o
}

func (o GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput) ToGetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutputWithContext(ctx context.Context) GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput {
	return o
}

// configuration list item type, either CUSTOM or MANAGED
func (o GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput) ListType() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValue) string {
		return v.ListType
	}).(pulumi.StringOutput)
}

// type of the managed list
func (o GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput) ManagedListType() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValue) string {
		return v.ManagedListType
	}).(pulumi.StringOutput)
}

// configuration value
func (o GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValue) string {
		return v.Value
	}).(pulumi.StringOutput)
}

type GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput struct{ *pulumi.OutputState }

func (GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValue)(nil)).Elem()
}

func (o GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput) ToGetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput() GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput {
	return o
}

func (o GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput) ToGetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutputWithContext(ctx context.Context) GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput {
	return o
}

func (o GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput) Index(i pulumi.IntInput) GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValue {
		return vs[0].([]GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValue)[vs[1].(int)]
	}).(GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput)
}

type GetTargetsTargetCollectionItemTargetResponderRecipe struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// ResponderRule Description
	Description string `pulumi:"description"`
	// A filter to return only resources that match the entire display name given.
	DisplayName string `pulumi:"displayName"`
	// List of responder rules associated with the recipe after applying all defaults
	EffectiveResponderRules []GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRule `pulumi:"effectiveResponderRules"`
	// Unique identifier of TargetResponderRecipe that is immutable on creation
	Id string `pulumi:"id"`
	// Owner of ResponderRecipe
	Owner string `pulumi:"owner"`
	// Unique identifier for Responder Recipe of which this is an extension
	ResponderRecipeId string `pulumi:"responderRecipeId"`
	// List of responder rules associated with the recipe - user input
	ResponderRules []GetTargetsTargetCollectionItemTargetResponderRecipeResponderRule `pulumi:"responderRules"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetTargetsTargetCollectionItemTargetResponderRecipeInput is an input type that accepts GetTargetsTargetCollectionItemTargetResponderRecipeArgs and GetTargetsTargetCollectionItemTargetResponderRecipeOutput values.
// You can construct a concrete instance of `GetTargetsTargetCollectionItemTargetResponderRecipeInput` via:
//
//          GetTargetsTargetCollectionItemTargetResponderRecipeArgs{...}
type GetTargetsTargetCollectionItemTargetResponderRecipeInput interface {
	pulumi.Input

	ToGetTargetsTargetCollectionItemTargetResponderRecipeOutput() GetTargetsTargetCollectionItemTargetResponderRecipeOutput
	ToGetTargetsTargetCollectionItemTargetResponderRecipeOutputWithContext(context.Context) GetTargetsTargetCollectionItemTargetResponderRecipeOutput
}

type GetTargetsTargetCollectionItemTargetResponderRecipeArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// ResponderRule Description
	Description pulumi.StringInput `pulumi:"description"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// List of responder rules associated with the recipe after applying all defaults
	EffectiveResponderRules GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleArrayInput `pulumi:"effectiveResponderRules"`
	// Unique identifier of TargetResponderRecipe that is immutable on creation
	Id pulumi.StringInput `pulumi:"id"`
	// Owner of ResponderRecipe
	Owner pulumi.StringInput `pulumi:"owner"`
	// Unique identifier for Responder Recipe of which this is an extension
	ResponderRecipeId pulumi.StringInput `pulumi:"responderRecipeId"`
	// List of responder rules associated with the recipe - user input
	ResponderRules GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleArrayInput `pulumi:"responderRules"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetTargetsTargetCollectionItemTargetResponderRecipeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetsTargetCollectionItemTargetResponderRecipe)(nil)).Elem()
}

func (i GetTargetsTargetCollectionItemTargetResponderRecipeArgs) ToGetTargetsTargetCollectionItemTargetResponderRecipeOutput() GetTargetsTargetCollectionItemTargetResponderRecipeOutput {
	return i.ToGetTargetsTargetCollectionItemTargetResponderRecipeOutputWithContext(context.Background())
}

func (i GetTargetsTargetCollectionItemTargetResponderRecipeArgs) ToGetTargetsTargetCollectionItemTargetResponderRecipeOutputWithContext(ctx context.Context) GetTargetsTargetCollectionItemTargetResponderRecipeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTargetsTargetCollectionItemTargetResponderRecipeOutput)
}

// GetTargetsTargetCollectionItemTargetResponderRecipeArrayInput is an input type that accepts GetTargetsTargetCollectionItemTargetResponderRecipeArray and GetTargetsTargetCollectionItemTargetResponderRecipeArrayOutput values.
// You can construct a concrete instance of `GetTargetsTargetCollectionItemTargetResponderRecipeArrayInput` via:
//
//          GetTargetsTargetCollectionItemTargetResponderRecipeArray{ GetTargetsTargetCollectionItemTargetResponderRecipeArgs{...} }
type GetTargetsTargetCollectionItemTargetResponderRecipeArrayInput interface {
	pulumi.Input

	ToGetTargetsTargetCollectionItemTargetResponderRecipeArrayOutput() GetTargetsTargetCollectionItemTargetResponderRecipeArrayOutput
	ToGetTargetsTargetCollectionItemTargetResponderRecipeArrayOutputWithContext(context.Context) GetTargetsTargetCollectionItemTargetResponderRecipeArrayOutput
}

type GetTargetsTargetCollectionItemTargetResponderRecipeArray []GetTargetsTargetCollectionItemTargetResponderRecipeInput

func (GetTargetsTargetCollectionItemTargetResponderRecipeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTargetsTargetCollectionItemTargetResponderRecipe)(nil)).Elem()
}

func (i GetTargetsTargetCollectionItemTargetResponderRecipeArray) ToGetTargetsTargetCollectionItemTargetResponderRecipeArrayOutput() GetTargetsTargetCollectionItemTargetResponderRecipeArrayOutput {
	return i.ToGetTargetsTargetCollectionItemTargetResponderRecipeArrayOutputWithContext(context.Background())
}

func (i GetTargetsTargetCollectionItemTargetResponderRecipeArray) ToGetTargetsTargetCollectionItemTargetResponderRecipeArrayOutputWithContext(ctx context.Context) GetTargetsTargetCollectionItemTargetResponderRecipeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTargetsTargetCollectionItemTargetResponderRecipeArrayOutput)
}

type GetTargetsTargetCollectionItemTargetResponderRecipeOutput struct{ *pulumi.OutputState }

func (GetTargetsTargetCollectionItemTargetResponderRecipeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetsTargetCollectionItemTargetResponderRecipe)(nil)).Elem()
}

func (o GetTargetsTargetCollectionItemTargetResponderRecipeOutput) ToGetTargetsTargetCollectionItemTargetResponderRecipeOutput() GetTargetsTargetCollectionItemTargetResponderRecipeOutput {
	return o
}

func (o GetTargetsTargetCollectionItemTargetResponderRecipeOutput) ToGetTargetsTargetCollectionItemTargetResponderRecipeOutputWithContext(ctx context.Context) GetTargetsTargetCollectionItemTargetResponderRecipeOutput {
	return o
}

// The ID of the compartment in which to list resources.
func (o GetTargetsTargetCollectionItemTargetResponderRecipeOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetResponderRecipe) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// ResponderRule Description
func (o GetTargetsTargetCollectionItemTargetResponderRecipeOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetResponderRecipe) string { return v.Description }).(pulumi.StringOutput)
}

// A filter to return only resources that match the entire display name given.
func (o GetTargetsTargetCollectionItemTargetResponderRecipeOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetResponderRecipe) string { return v.DisplayName }).(pulumi.StringOutput)
}

// List of responder rules associated with the recipe after applying all defaults
func (o GetTargetsTargetCollectionItemTargetResponderRecipeOutput) EffectiveResponderRules() GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleArrayOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetResponderRecipe) []GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRule {
		return v.EffectiveResponderRules
	}).(GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleArrayOutput)
}

// Unique identifier of TargetResponderRecipe that is immutable on creation
func (o GetTargetsTargetCollectionItemTargetResponderRecipeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetResponderRecipe) string { return v.Id }).(pulumi.StringOutput)
}

// Owner of ResponderRecipe
func (o GetTargetsTargetCollectionItemTargetResponderRecipeOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetResponderRecipe) string { return v.Owner }).(pulumi.StringOutput)
}

// Unique identifier for Responder Recipe of which this is an extension
func (o GetTargetsTargetCollectionItemTargetResponderRecipeOutput) ResponderRecipeId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetResponderRecipe) string { return v.ResponderRecipeId }).(pulumi.StringOutput)
}

// List of responder rules associated with the recipe - user input
func (o GetTargetsTargetCollectionItemTargetResponderRecipeOutput) ResponderRules() GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleArrayOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetResponderRecipe) []GetTargetsTargetCollectionItemTargetResponderRecipeResponderRule {
		return v.ResponderRules
	}).(GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleArrayOutput)
}

// The date and time the target was created. Format defined by RFC3339.
func (o GetTargetsTargetCollectionItemTargetResponderRecipeOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetResponderRecipe) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the target was updated. Format defined by RFC3339.
func (o GetTargetsTargetCollectionItemTargetResponderRecipeOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetResponderRecipe) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetTargetsTargetCollectionItemTargetResponderRecipeArrayOutput struct{ *pulumi.OutputState }

func (GetTargetsTargetCollectionItemTargetResponderRecipeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTargetsTargetCollectionItemTargetResponderRecipe)(nil)).Elem()
}

func (o GetTargetsTargetCollectionItemTargetResponderRecipeArrayOutput) ToGetTargetsTargetCollectionItemTargetResponderRecipeArrayOutput() GetTargetsTargetCollectionItemTargetResponderRecipeArrayOutput {
	return o
}

func (o GetTargetsTargetCollectionItemTargetResponderRecipeArrayOutput) ToGetTargetsTargetCollectionItemTargetResponderRecipeArrayOutputWithContext(ctx context.Context) GetTargetsTargetCollectionItemTargetResponderRecipeArrayOutput {
	return o
}

func (o GetTargetsTargetCollectionItemTargetResponderRecipeArrayOutput) Index(i pulumi.IntInput) GetTargetsTargetCollectionItemTargetResponderRecipeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTargetsTargetCollectionItemTargetResponderRecipe {
		return vs[0].([]GetTargetsTargetCollectionItemTargetResponderRecipe)[vs[1].(int)]
	}).(GetTargetsTargetCollectionItemTargetResponderRecipeOutput)
}

type GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRule struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// ResponderRule Description
	Description string `pulumi:"description"`
	// Details of ResponderRule.
	Details GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetails `pulumi:"details"`
	// A filter to return only resources that match the entire display name given.
	DisplayName string `pulumi:"displayName"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// List of Policy
	Policies []string `pulumi:"policies"`
	// Identifier for ResponderRule.
	ResponderRuleId string `pulumi:"responderRuleId"`
	// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
	State string `pulumi:"state"`
	// Supported Execution Modes
	SupportedModes []string `pulumi:"supportedModes"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated string `pulumi:"timeUpdated"`
	// Type of Responder
	Type string `pulumi:"type"`
}

// GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleInput is an input type that accepts GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleArgs and GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleOutput values.
// You can construct a concrete instance of `GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleInput` via:
//
//          GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleArgs{...}
type GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleInput interface {
	pulumi.Input

	ToGetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleOutput() GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleOutput
	ToGetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleOutputWithContext(context.Context) GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleOutput
}

type GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// ResponderRule Description
	Description pulumi.StringInput `pulumi:"description"`
	// Details of ResponderRule.
	Details GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsInput `pulumi:"details"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// List of Policy
	Policies pulumi.StringArrayInput `pulumi:"policies"`
	// Identifier for ResponderRule.
	ResponderRuleId pulumi.StringInput `pulumi:"responderRuleId"`
	// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
	State pulumi.StringInput `pulumi:"state"`
	// Supported Execution Modes
	SupportedModes pulumi.StringArrayInput `pulumi:"supportedModes"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
	// Type of Responder
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRule)(nil)).Elem()
}

func (i GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleArgs) ToGetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleOutput() GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleOutput {
	return i.ToGetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleOutputWithContext(context.Background())
}

func (i GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleArgs) ToGetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleOutputWithContext(ctx context.Context) GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleOutput)
}

// GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleArrayInput is an input type that accepts GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleArray and GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleArrayOutput values.
// You can construct a concrete instance of `GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleArrayInput` via:
//
//          GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleArray{ GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleArgs{...} }
type GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleArrayInput interface {
	pulumi.Input

	ToGetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleArrayOutput() GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleArrayOutput
	ToGetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleArrayOutputWithContext(context.Context) GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleArrayOutput
}

type GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleArray []GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleInput

func (GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRule)(nil)).Elem()
}

func (i GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleArray) ToGetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleArrayOutput() GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleArrayOutput {
	return i.ToGetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleArrayOutputWithContext(context.Background())
}

func (i GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleArray) ToGetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleArrayOutputWithContext(ctx context.Context) GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleArrayOutput)
}

type GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleOutput struct{ *pulumi.OutputState }

func (GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRule)(nil)).Elem()
}

func (o GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleOutput) ToGetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleOutput() GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleOutput {
	return o
}

func (o GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleOutput) ToGetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleOutputWithContext(ctx context.Context) GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleOutput {
	return o
}

// The ID of the compartment in which to list resources.
func (o GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRule) string {
		return v.CompartmentId
	}).(pulumi.StringOutput)
}

// ResponderRule Description
func (o GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRule) string {
		return v.Description
	}).(pulumi.StringOutput)
}

// Details of ResponderRule.
func (o GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleOutput) Details() GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRule) GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetails {
		return v.Details
	}).(GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsOutput)
}

// A filter to return only resources that match the entire display name given.
func (o GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRule) string {
		return v.DisplayName
	}).(pulumi.StringOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRule) string {
		return v.LifecycleDetails
	}).(pulumi.StringOutput)
}

// List of Policy
func (o GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleOutput) Policies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRule) []string {
		return v.Policies
	}).(pulumi.StringArrayOutput)
}

// Identifier for ResponderRule.
func (o GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleOutput) ResponderRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRule) string {
		return v.ResponderRuleId
	}).(pulumi.StringOutput)
}

// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
func (o GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRule) string {
		return v.State
	}).(pulumi.StringOutput)
}

// Supported Execution Modes
func (o GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleOutput) SupportedModes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRule) []string {
		return v.SupportedModes
	}).(pulumi.StringArrayOutput)
}

// The date and time the target was created. Format defined by RFC3339.
func (o GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRule) string {
		return v.TimeCreated
	}).(pulumi.StringOutput)
}

// The date and time the target was updated. Format defined by RFC3339.
func (o GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRule) string {
		return v.TimeUpdated
	}).(pulumi.StringOutput)
}

// Type of Responder
func (o GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRule) string {
		return v.Type
	}).(pulumi.StringOutput)
}

type GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleArrayOutput struct{ *pulumi.OutputState }

func (GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRule)(nil)).Elem()
}

func (o GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleArrayOutput) ToGetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleArrayOutput() GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleArrayOutput {
	return o
}

func (o GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleArrayOutput) ToGetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleArrayOutputWithContext(ctx context.Context) GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleArrayOutput {
	return o
}

func (o GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleArrayOutput) Index(i pulumi.IntInput) GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRule {
		return vs[0].([]GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRule)[vs[1].(int)]
	}).(GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleOutput)
}

type GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetails struct {
	Condition string `pulumi:"condition"`
	// ResponderRule configurations
	Configurations []GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsConfiguration `pulumi:"configurations"`
	// Identifies state for ResponderRule
	IsEnabled bool `pulumi:"isEnabled"`
	// Execution Mode for ResponderRule
	Mode string `pulumi:"mode"`
}

// GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsInput is an input type that accepts GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsArgs and GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsOutput values.
// You can construct a concrete instance of `GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsInput` via:
//
//          GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsArgs{...}
type GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsInput interface {
	pulumi.Input

	ToGetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsOutput() GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsOutput
	ToGetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsOutputWithContext(context.Context) GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsOutput
}

type GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsArgs struct {
	Condition pulumi.StringInput `pulumi:"condition"`
	// ResponderRule configurations
	Configurations GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayInput `pulumi:"configurations"`
	// Identifies state for ResponderRule
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// Execution Mode for ResponderRule
	Mode pulumi.StringInput `pulumi:"mode"`
}

func (GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetails)(nil)).Elem()
}

func (i GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsArgs) ToGetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsOutput() GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsOutput {
	return i.ToGetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsOutputWithContext(context.Background())
}

func (i GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsArgs) ToGetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsOutputWithContext(ctx context.Context) GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsOutput)
}

type GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsOutput struct{ *pulumi.OutputState }

func (GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetails)(nil)).Elem()
}

func (o GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsOutput) ToGetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsOutput() GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsOutput {
	return o
}

func (o GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsOutput) ToGetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsOutputWithContext(ctx context.Context) GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsOutput {
	return o
}

func (o GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetails) string {
		return v.Condition
	}).(pulumi.StringOutput)
}

// ResponderRule configurations
func (o GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsOutput) Configurations() GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetails) []GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsConfiguration {
		return v.Configurations
	}).(GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput)
}

// Identifies state for ResponderRule
func (o GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetails) bool {
		return v.IsEnabled
	}).(pulumi.BoolOutput)
}

// Execution Mode for ResponderRule
func (o GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetails) string {
		return v.Mode
	}).(pulumi.StringOutput)
}

type GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsConfiguration struct {
	// Unique name of the configuration
	ConfigKey string `pulumi:"configKey"`
	// configuration name
	Name string `pulumi:"name"`
	// configuration value
	Value string `pulumi:"value"`
}

// GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationInput is an input type that accepts GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArgs and GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput values.
// You can construct a concrete instance of `GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationInput` via:
//
//          GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArgs{...}
type GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationInput interface {
	pulumi.Input

	ToGetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput() GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput
	ToGetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutputWithContext(context.Context) GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput
}

type GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArgs struct {
	// Unique name of the configuration
	ConfigKey pulumi.StringInput `pulumi:"configKey"`
	// configuration name
	Name pulumi.StringInput `pulumi:"name"`
	// configuration value
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsConfiguration)(nil)).Elem()
}

func (i GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArgs) ToGetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput() GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput {
	return i.ToGetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutputWithContext(context.Background())
}

func (i GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArgs) ToGetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutputWithContext(ctx context.Context) GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput)
}

// GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayInput is an input type that accepts GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArray and GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput values.
// You can construct a concrete instance of `GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayInput` via:
//
//          GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArray{ GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArgs{...} }
type GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayInput interface {
	pulumi.Input

	ToGetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput() GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput
	ToGetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutputWithContext(context.Context) GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput
}

type GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArray []GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationInput

func (GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsConfiguration)(nil)).Elem()
}

func (i GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArray) ToGetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput() GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput {
	return i.ToGetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutputWithContext(context.Background())
}

func (i GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArray) ToGetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutputWithContext(ctx context.Context) GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput)
}

type GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput struct{ *pulumi.OutputState }

func (GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsConfiguration)(nil)).Elem()
}

func (o GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput) ToGetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput() GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput {
	return o
}

func (o GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput) ToGetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutputWithContext(ctx context.Context) GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput {
	return o
}

// Unique name of the configuration
func (o GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput) ConfigKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsConfiguration) string {
		return v.ConfigKey
	}).(pulumi.StringOutput)
}

// configuration name
func (o GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsConfiguration) string {
		return v.Name
	}).(pulumi.StringOutput)
}

// configuration value
func (o GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsConfiguration) string {
		return v.Value
	}).(pulumi.StringOutput)
}

type GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsConfiguration)(nil)).Elem()
}

func (o GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput) ToGetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput() GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput {
	return o
}

func (o GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput) ToGetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutputWithContext(ctx context.Context) GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput {
	return o
}

func (o GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput) Index(i pulumi.IntInput) GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsConfiguration {
		return vs[0].([]GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsConfiguration)[vs[1].(int)]
	}).(GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput)
}

type GetTargetsTargetCollectionItemTargetResponderRecipeResponderRule struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// ResponderRule Description
	Description string `pulumi:"description"`
	// Details of ResponderRule.
	Details GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetails `pulumi:"details"`
	// A filter to return only resources that match the entire display name given.
	DisplayName string `pulumi:"displayName"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// List of Policy
	Policies []string `pulumi:"policies"`
	// Identifier for ResponderRule.
	ResponderRuleId string `pulumi:"responderRuleId"`
	// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
	State string `pulumi:"state"`
	// Supported Execution Modes
	SupportedModes []string `pulumi:"supportedModes"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated string `pulumi:"timeUpdated"`
	// Type of Responder
	Type string `pulumi:"type"`
}

// GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleInput is an input type that accepts GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleArgs and GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleOutput values.
// You can construct a concrete instance of `GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleInput` via:
//
//          GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleArgs{...}
type GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleInput interface {
	pulumi.Input

	ToGetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleOutput() GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleOutput
	ToGetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleOutputWithContext(context.Context) GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleOutput
}

type GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// ResponderRule Description
	Description pulumi.StringInput `pulumi:"description"`
	// Details of ResponderRule.
	Details GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsInput `pulumi:"details"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// List of Policy
	Policies pulumi.StringArrayInput `pulumi:"policies"`
	// Identifier for ResponderRule.
	ResponderRuleId pulumi.StringInput `pulumi:"responderRuleId"`
	// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
	State pulumi.StringInput `pulumi:"state"`
	// Supported Execution Modes
	SupportedModes pulumi.StringArrayInput `pulumi:"supportedModes"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
	// Type of Responder
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetsTargetCollectionItemTargetResponderRecipeResponderRule)(nil)).Elem()
}

func (i GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleArgs) ToGetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleOutput() GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleOutput {
	return i.ToGetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleOutputWithContext(context.Background())
}

func (i GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleArgs) ToGetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleOutputWithContext(ctx context.Context) GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleOutput)
}

// GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleArrayInput is an input type that accepts GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleArray and GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleArrayOutput values.
// You can construct a concrete instance of `GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleArrayInput` via:
//
//          GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleArray{ GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleArgs{...} }
type GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleArrayInput interface {
	pulumi.Input

	ToGetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleArrayOutput() GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleArrayOutput
	ToGetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleArrayOutputWithContext(context.Context) GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleArrayOutput
}

type GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleArray []GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleInput

func (GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTargetsTargetCollectionItemTargetResponderRecipeResponderRule)(nil)).Elem()
}

func (i GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleArray) ToGetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleArrayOutput() GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleArrayOutput {
	return i.ToGetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleArrayOutputWithContext(context.Background())
}

func (i GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleArray) ToGetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleArrayOutputWithContext(ctx context.Context) GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleArrayOutput)
}

type GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleOutput struct{ *pulumi.OutputState }

func (GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetsTargetCollectionItemTargetResponderRecipeResponderRule)(nil)).Elem()
}

func (o GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleOutput) ToGetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleOutput() GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleOutput {
	return o
}

func (o GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleOutput) ToGetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleOutputWithContext(ctx context.Context) GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleOutput {
	return o
}

// The ID of the compartment in which to list resources.
func (o GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetResponderRecipeResponderRule) string {
		return v.CompartmentId
	}).(pulumi.StringOutput)
}

// ResponderRule Description
func (o GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetResponderRecipeResponderRule) string { return v.Description }).(pulumi.StringOutput)
}

// Details of ResponderRule.
func (o GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleOutput) Details() GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetResponderRecipeResponderRule) GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetails {
		return v.Details
	}).(GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsOutput)
}

// A filter to return only resources that match the entire display name given.
func (o GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetResponderRecipeResponderRule) string { return v.DisplayName }).(pulumi.StringOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetResponderRecipeResponderRule) string {
		return v.LifecycleDetails
	}).(pulumi.StringOutput)
}

// List of Policy
func (o GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleOutput) Policies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetResponderRecipeResponderRule) []string { return v.Policies }).(pulumi.StringArrayOutput)
}

// Identifier for ResponderRule.
func (o GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleOutput) ResponderRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetResponderRecipeResponderRule) string {
		return v.ResponderRuleId
	}).(pulumi.StringOutput)
}

// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
func (o GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetResponderRecipeResponderRule) string { return v.State }).(pulumi.StringOutput)
}

// Supported Execution Modes
func (o GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleOutput) SupportedModes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetResponderRecipeResponderRule) []string {
		return v.SupportedModes
	}).(pulumi.StringArrayOutput)
}

// The date and time the target was created. Format defined by RFC3339.
func (o GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetResponderRecipeResponderRule) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the target was updated. Format defined by RFC3339.
func (o GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetResponderRecipeResponderRule) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

// Type of Responder
func (o GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetResponderRecipeResponderRule) string { return v.Type }).(pulumi.StringOutput)
}

type GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleArrayOutput struct{ *pulumi.OutputState }

func (GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTargetsTargetCollectionItemTargetResponderRecipeResponderRule)(nil)).Elem()
}

func (o GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleArrayOutput) ToGetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleArrayOutput() GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleArrayOutput {
	return o
}

func (o GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleArrayOutput) ToGetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleArrayOutputWithContext(ctx context.Context) GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleArrayOutput {
	return o
}

func (o GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleArrayOutput) Index(i pulumi.IntInput) GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTargetsTargetCollectionItemTargetResponderRecipeResponderRule {
		return vs[0].([]GetTargetsTargetCollectionItemTargetResponderRecipeResponderRule)[vs[1].(int)]
	}).(GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleOutput)
}

type GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetails struct {
	Condition string `pulumi:"condition"`
	// ResponderRule configurations
	Configurations []GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsConfiguration `pulumi:"configurations"`
	// Identifies state for ResponderRule
	IsEnabled bool `pulumi:"isEnabled"`
	// Execution Mode for ResponderRule
	Mode string `pulumi:"mode"`
}

// GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsInput is an input type that accepts GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsArgs and GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsOutput values.
// You can construct a concrete instance of `GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsInput` via:
//
//          GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsArgs{...}
type GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsInput interface {
	pulumi.Input

	ToGetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsOutput() GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsOutput
	ToGetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsOutputWithContext(context.Context) GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsOutput
}

type GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsArgs struct {
	Condition pulumi.StringInput `pulumi:"condition"`
	// ResponderRule configurations
	Configurations GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsConfigurationArrayInput `pulumi:"configurations"`
	// Identifies state for ResponderRule
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// Execution Mode for ResponderRule
	Mode pulumi.StringInput `pulumi:"mode"`
}

func (GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetails)(nil)).Elem()
}

func (i GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsArgs) ToGetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsOutput() GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsOutput {
	return i.ToGetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsOutputWithContext(context.Background())
}

func (i GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsArgs) ToGetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsOutputWithContext(ctx context.Context) GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsOutput)
}

type GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsOutput struct{ *pulumi.OutputState }

func (GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetails)(nil)).Elem()
}

func (o GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsOutput) ToGetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsOutput() GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsOutput {
	return o
}

func (o GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsOutput) ToGetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsOutputWithContext(ctx context.Context) GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsOutput {
	return o
}

func (o GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetails) string {
		return v.Condition
	}).(pulumi.StringOutput)
}

// ResponderRule configurations
func (o GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsOutput) Configurations() GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetails) []GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsConfiguration {
		return v.Configurations
	}).(GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutput)
}

// Identifies state for ResponderRule
func (o GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetails) bool {
		return v.IsEnabled
	}).(pulumi.BoolOutput)
}

// Execution Mode for ResponderRule
func (o GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetails) string { return v.Mode }).(pulumi.StringOutput)
}

type GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsConfiguration struct {
	// Unique name of the configuration
	ConfigKey string `pulumi:"configKey"`
	// configuration name
	Name string `pulumi:"name"`
	// configuration value
	Value string `pulumi:"value"`
}

// GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsConfigurationInput is an input type that accepts GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsConfigurationArgs and GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsConfigurationOutput values.
// You can construct a concrete instance of `GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsConfigurationInput` via:
//
//          GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsConfigurationArgs{...}
type GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsConfigurationInput interface {
	pulumi.Input

	ToGetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsConfigurationOutput() GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsConfigurationOutput
	ToGetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsConfigurationOutputWithContext(context.Context) GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsConfigurationOutput
}

type GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsConfigurationArgs struct {
	// Unique name of the configuration
	ConfigKey pulumi.StringInput `pulumi:"configKey"`
	// configuration name
	Name pulumi.StringInput `pulumi:"name"`
	// configuration value
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsConfiguration)(nil)).Elem()
}

func (i GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsConfigurationArgs) ToGetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsConfigurationOutput() GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsConfigurationOutput {
	return i.ToGetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsConfigurationOutputWithContext(context.Background())
}

func (i GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsConfigurationArgs) ToGetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsConfigurationOutputWithContext(ctx context.Context) GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsConfigurationOutput)
}

// GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsConfigurationArrayInput is an input type that accepts GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsConfigurationArray and GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutput values.
// You can construct a concrete instance of `GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsConfigurationArrayInput` via:
//
//          GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsConfigurationArray{ GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsConfigurationArgs{...} }
type GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsConfigurationArrayInput interface {
	pulumi.Input

	ToGetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutput() GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutput
	ToGetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutputWithContext(context.Context) GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutput
}

type GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsConfigurationArray []GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsConfigurationInput

func (GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsConfiguration)(nil)).Elem()
}

func (i GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsConfigurationArray) ToGetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutput() GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutput {
	return i.ToGetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutputWithContext(context.Background())
}

func (i GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsConfigurationArray) ToGetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutputWithContext(ctx context.Context) GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutput)
}

type GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsConfigurationOutput struct{ *pulumi.OutputState }

func (GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsConfiguration)(nil)).Elem()
}

func (o GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsConfigurationOutput) ToGetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsConfigurationOutput() GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsConfigurationOutput {
	return o
}

func (o GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsConfigurationOutput) ToGetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsConfigurationOutputWithContext(ctx context.Context) GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsConfigurationOutput {
	return o
}

// Unique name of the configuration
func (o GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsConfigurationOutput) ConfigKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsConfiguration) string {
		return v.ConfigKey
	}).(pulumi.StringOutput)
}

// configuration name
func (o GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsConfiguration) string {
		return v.Name
	}).(pulumi.StringOutput)
}

// configuration value
func (o GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsConfigurationOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsConfiguration) string {
		return v.Value
	}).(pulumi.StringOutput)
}

type GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsConfiguration)(nil)).Elem()
}

func (o GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutput) ToGetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutput() GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutput {
	return o
}

func (o GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutput) ToGetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutputWithContext(ctx context.Context) GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutput {
	return o
}

func (o GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutput) Index(i pulumi.IntInput) GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsConfiguration {
		return vs[0].([]GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsConfiguration)[vs[1].(int)]
	}).(GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsConfigurationOutput)
}

func init() {
	pulumi.RegisterOutputType(DataMaskRuleTargetSelectedOutput{})
	pulumi.RegisterOutputType(DataMaskRuleTargetSelectedPtrOutput{})
	pulumi.RegisterOutputType(DetectorRecipeDetectorRuleOutput{})
	pulumi.RegisterOutputType(DetectorRecipeDetectorRuleArrayOutput{})
	pulumi.RegisterOutputType(DetectorRecipeDetectorRuleCandidateResponderRuleOutput{})
	pulumi.RegisterOutputType(DetectorRecipeDetectorRuleCandidateResponderRuleArrayOutput{})
	pulumi.RegisterOutputType(DetectorRecipeDetectorRuleDetailsOutput{})
	pulumi.RegisterOutputType(DetectorRecipeDetectorRuleDetailsConfigurationOutput{})
	pulumi.RegisterOutputType(DetectorRecipeDetectorRuleDetailsConfigurationArrayOutput{})
	pulumi.RegisterOutputType(DetectorRecipeDetectorRuleDetailsConfigurationValueOutput{})
	pulumi.RegisterOutputType(DetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput{})
	pulumi.RegisterOutputType(DetectorRecipeEffectiveDetectorRuleOutput{})
	pulumi.RegisterOutputType(DetectorRecipeEffectiveDetectorRuleArrayOutput{})
	pulumi.RegisterOutputType(DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutput{})
	pulumi.RegisterOutputType(DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutput{})
	pulumi.RegisterOutputType(DetectorRecipeEffectiveDetectorRuleDetailsOutput{})
	pulumi.RegisterOutputType(DetectorRecipeEffectiveDetectorRuleDetailsPtrOutput{})
	pulumi.RegisterOutputType(DetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput{})
	pulumi.RegisterOutputType(DetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput{})
	pulumi.RegisterOutputType(DetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput{})
	pulumi.RegisterOutputType(DetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput{})
	pulumi.RegisterOutputType(ResponderRecipeEffectiveResponderRuleOutput{})
	pulumi.RegisterOutputType(ResponderRecipeEffectiveResponderRuleArrayOutput{})
	pulumi.RegisterOutputType(ResponderRecipeEffectiveResponderRuleDetailsOutput{})
	pulumi.RegisterOutputType(ResponderRecipeEffectiveResponderRuleDetailsPtrOutput{})
	pulumi.RegisterOutputType(ResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput{})
	pulumi.RegisterOutputType(ResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput{})
	pulumi.RegisterOutputType(ResponderRecipeResponderRuleOutput{})
	pulumi.RegisterOutputType(ResponderRecipeResponderRuleArrayOutput{})
	pulumi.RegisterOutputType(ResponderRecipeResponderRuleDetailsOutput{})
	pulumi.RegisterOutputType(ResponderRecipeResponderRuleDetailsConfigurationOutput{})
	pulumi.RegisterOutputType(ResponderRecipeResponderRuleDetailsConfigurationArrayOutput{})
	pulumi.RegisterOutputType(TargetTargetDetectorRecipeOutput{})
	pulumi.RegisterOutputType(TargetTargetDetectorRecipeArrayOutput{})
	pulumi.RegisterOutputType(TargetTargetDetectorRecipeDetectorRuleOutput{})
	pulumi.RegisterOutputType(TargetTargetDetectorRecipeDetectorRuleArrayOutput{})
	pulumi.RegisterOutputType(TargetTargetDetectorRecipeDetectorRuleDetailsOutput{})
	pulumi.RegisterOutputType(TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutput{})
	pulumi.RegisterOutputType(TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutput{})
	pulumi.RegisterOutputType(TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput{})
	pulumi.RegisterOutputType(TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput{})
	pulumi.RegisterOutputType(TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput{})
	pulumi.RegisterOutputType(TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput{})
	pulumi.RegisterOutputType(TargetTargetDetectorRecipeEffectiveDetectorRuleOutput{})
	pulumi.RegisterOutputType(TargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutput{})
	pulumi.RegisterOutputType(TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsOutput{})
	pulumi.RegisterOutputType(TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsPtrOutput{})
	pulumi.RegisterOutputType(TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupOutput{})
	pulumi.RegisterOutputType(TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArrayOutput{})
	pulumi.RegisterOutputType(TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput{})
	pulumi.RegisterOutputType(TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput{})
	pulumi.RegisterOutputType(TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput{})
	pulumi.RegisterOutputType(TargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput{})
	pulumi.RegisterOutputType(TargetTargetResponderRecipeOutput{})
	pulumi.RegisterOutputType(TargetTargetResponderRecipeArrayOutput{})
	pulumi.RegisterOutputType(TargetTargetResponderRecipeEffectiveResponderRuleOutput{})
	pulumi.RegisterOutputType(TargetTargetResponderRecipeEffectiveResponderRuleArrayOutput{})
	pulumi.RegisterOutputType(TargetTargetResponderRecipeEffectiveResponderRuleDetailsOutput{})
	pulumi.RegisterOutputType(TargetTargetResponderRecipeEffectiveResponderRuleDetailsPtrOutput{})
	pulumi.RegisterOutputType(TargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput{})
	pulumi.RegisterOutputType(TargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput{})
	pulumi.RegisterOutputType(TargetTargetResponderRecipeResponderRuleOutput{})
	pulumi.RegisterOutputType(TargetTargetResponderRecipeResponderRuleArrayOutput{})
	pulumi.RegisterOutputType(TargetTargetResponderRecipeResponderRuleDetailsOutput{})
	pulumi.RegisterOutputType(TargetTargetResponderRecipeResponderRuleDetailsConfigurationOutput{})
	pulumi.RegisterOutputType(TargetTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetDataMaskRuleTargetSelectedOutput{})
	pulumi.RegisterOutputType(GetDataMaskRulesDataMaskRuleCollectionOutput{})
	pulumi.RegisterOutputType(GetDataMaskRulesDataMaskRuleCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetDataMaskRulesDataMaskRuleCollectionItemOutput{})
	pulumi.RegisterOutputType(GetDataMaskRulesDataMaskRuleCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedOutput{})
	pulumi.RegisterOutputType(GetDataMaskRulesFilterOutput{})
	pulumi.RegisterOutputType(GetDataMaskRulesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipeDetectorRuleOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipeDetectorRuleArrayOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipeDetectorRuleCandidateResponderRuleOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipeDetectorRuleCandidateResponderRuleArrayOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipeDetectorRuleDetailsOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipeDetectorRuleDetailsConfigurationOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipeEffectiveDetectorRuleOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipeEffectiveDetectorRuleArrayOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipeEffectiveDetectorRuleDetailsOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipesDetectorRecipeCollectionOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipesDetectorRecipeCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipesDetectorRecipeCollectionItemOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipesDetectorRecipeCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleArrayOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleArrayOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationValueOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailsConfigurationValueArrayOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleArrayOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleArrayOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationValueOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailsConfigurationValueArrayOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipesFilterOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetManagedListsFilterOutput{})
	pulumi.RegisterOutputType(GetManagedListsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetManagedListsManagedListCollectionOutput{})
	pulumi.RegisterOutputType(GetManagedListsManagedListCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetManagedListsManagedListCollectionItemOutput{})
	pulumi.RegisterOutputType(GetManagedListsManagedListCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetResponderRecipeEffectiveResponderRuleOutput{})
	pulumi.RegisterOutputType(GetResponderRecipeEffectiveResponderRuleArrayOutput{})
	pulumi.RegisterOutputType(GetResponderRecipeEffectiveResponderRuleDetailsOutput{})
	pulumi.RegisterOutputType(GetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput{})
	pulumi.RegisterOutputType(GetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetResponderRecipeResponderRuleOutput{})
	pulumi.RegisterOutputType(GetResponderRecipeResponderRuleArrayOutput{})
	pulumi.RegisterOutputType(GetResponderRecipeResponderRuleDetailsOutput{})
	pulumi.RegisterOutputType(GetResponderRecipeResponderRuleDetailsConfigurationOutput{})
	pulumi.RegisterOutputType(GetResponderRecipeResponderRuleDetailsConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetResponderRecipesFilterOutput{})
	pulumi.RegisterOutputType(GetResponderRecipesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetResponderRecipesResponderRecipeCollectionOutput{})
	pulumi.RegisterOutputType(GetResponderRecipesResponderRecipeCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetResponderRecipesResponderRecipeCollectionItemOutput{})
	pulumi.RegisterOutputType(GetResponderRecipesResponderRecipeCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleOutput{})
	pulumi.RegisterOutputType(GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleArrayOutput{})
	pulumi.RegisterOutputType(GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsOutput{})
	pulumi.RegisterOutputType(GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsConfigurationOutput{})
	pulumi.RegisterOutputType(GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailsConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetResponderRecipesResponderRecipeCollectionItemResponderRuleOutput{})
	pulumi.RegisterOutputType(GetResponderRecipesResponderRecipeCollectionItemResponderRuleArrayOutput{})
	pulumi.RegisterOutputType(GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsOutput{})
	pulumi.RegisterOutputType(GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsConfigurationOutput{})
	pulumi.RegisterOutputType(GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailsConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetTargetTargetDetectorRecipeOutput{})
	pulumi.RegisterOutputType(GetTargetTargetDetectorRecipeArrayOutput{})
	pulumi.RegisterOutputType(GetTargetTargetDetectorRecipeDetectorRuleOutput{})
	pulumi.RegisterOutputType(GetTargetTargetDetectorRecipeDetectorRuleArrayOutput{})
	pulumi.RegisterOutputType(GetTargetTargetDetectorRecipeDetectorRuleDetailsOutput{})
	pulumi.RegisterOutputType(GetTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutput{})
	pulumi.RegisterOutputType(GetTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutput{})
	pulumi.RegisterOutputType(GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput{})
	pulumi.RegisterOutputType(GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput{})
	pulumi.RegisterOutputType(GetTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput{})
	pulumi.RegisterOutputType(GetTargetTargetDetectorRecipeEffectiveDetectorRuleOutput{})
	pulumi.RegisterOutputType(GetTargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutput{})
	pulumi.RegisterOutputType(GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsOutput{})
	pulumi.RegisterOutputType(GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupOutput{})
	pulumi.RegisterOutputType(GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArrayOutput{})
	pulumi.RegisterOutputType(GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput{})
	pulumi.RegisterOutputType(GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput{})
	pulumi.RegisterOutputType(GetTargetTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput{})
	pulumi.RegisterOutputType(GetTargetTargetResponderRecipeOutput{})
	pulumi.RegisterOutputType(GetTargetTargetResponderRecipeArrayOutput{})
	pulumi.RegisterOutputType(GetTargetTargetResponderRecipeEffectiveResponderRuleOutput{})
	pulumi.RegisterOutputType(GetTargetTargetResponderRecipeEffectiveResponderRuleArrayOutput{})
	pulumi.RegisterOutputType(GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsOutput{})
	pulumi.RegisterOutputType(GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput{})
	pulumi.RegisterOutputType(GetTargetTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetTargetTargetResponderRecipeResponderRuleOutput{})
	pulumi.RegisterOutputType(GetTargetTargetResponderRecipeResponderRuleArrayOutput{})
	pulumi.RegisterOutputType(GetTargetTargetResponderRecipeResponderRuleDetailsOutput{})
	pulumi.RegisterOutputType(GetTargetTargetResponderRecipeResponderRuleDetailsConfigurationOutput{})
	pulumi.RegisterOutputType(GetTargetTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetTargetsFilterOutput{})
	pulumi.RegisterOutputType(GetTargetsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetTargetsTargetCollectionOutput{})
	pulumi.RegisterOutputType(GetTargetsTargetCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetTargetsTargetCollectionItemOutput{})
	pulumi.RegisterOutputType(GetTargetsTargetCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetTargetsTargetCollectionItemTargetDetectorRecipeOutput{})
	pulumi.RegisterOutputType(GetTargetsTargetCollectionItemTargetDetectorRecipeArrayOutput{})
	pulumi.RegisterOutputType(GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleOutput{})
	pulumi.RegisterOutputType(GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleArrayOutput{})
	pulumi.RegisterOutputType(GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsOutput{})
	pulumi.RegisterOutputType(GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutput{})
	pulumi.RegisterOutputType(GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutput{})
	pulumi.RegisterOutputType(GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput{})
	pulumi.RegisterOutputType(GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput{})
	pulumi.RegisterOutputType(GetTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput{})
	pulumi.RegisterOutputType(GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleOutput{})
	pulumi.RegisterOutputType(GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleArrayOutput{})
	pulumi.RegisterOutputType(GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsOutput{})
	pulumi.RegisterOutputType(GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupOutput{})
	pulumi.RegisterOutputType(GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConditionGroupArrayOutput{})
	pulumi.RegisterOutputType(GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationOutput{})
	pulumi.RegisterOutputType(GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueOutput{})
	pulumi.RegisterOutputType(GetTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailsConfigurationValueArrayOutput{})
	pulumi.RegisterOutputType(GetTargetsTargetCollectionItemTargetResponderRecipeOutput{})
	pulumi.RegisterOutputType(GetTargetsTargetCollectionItemTargetResponderRecipeArrayOutput{})
	pulumi.RegisterOutputType(GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleOutput{})
	pulumi.RegisterOutputType(GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleArrayOutput{})
	pulumi.RegisterOutputType(GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsOutput{})
	pulumi.RegisterOutputType(GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationOutput{})
	pulumi.RegisterOutputType(GetTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailsConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleOutput{})
	pulumi.RegisterOutputType(GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleArrayOutput{})
	pulumi.RegisterOutputType(GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsOutput{})
	pulumi.RegisterOutputType(GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsConfigurationOutput{})
	pulumi.RegisterOutputType(GetTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutput{})
}
