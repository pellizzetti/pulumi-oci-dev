// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package containerengine

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Node Pool Option resource in Oracle Cloud Infrastructure Container Engine service.
//
// Get options available for node pools.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci/containerengine"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		opt0 := _var.Compartment_id
// 		_, err := containerengine.GetNodePoolOption(ctx, &containerengine.GetNodePoolOptionArgs{
// 			NodePoolOptionId: oci_containerengine_node_pool_option.Test_node_pool_option.Id,
// 			CompartmentId:    &opt0,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func GetNodePoolOption(ctx *pulumi.Context, args *GetNodePoolOptionArgs, opts ...pulumi.InvokeOption) (*GetNodePoolOptionResult, error) {
	var rv GetNodePoolOptionResult
	err := ctx.Invoke("oci:containerengine/getNodePoolOption:getNodePoolOption", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNodePoolOption.
type GetNodePoolOptionArgs struct {
	// The OCID of the compartment.
	CompartmentId *string `pulumi:"compartmentId"`
	// The id of the option set to retrieve. Use "all" get all options, or use a cluster ID to get options specific to the provided cluster.
	NodePoolOptionId string `pulumi:"nodePoolOptionId"`
}

// A collection of values returned by getNodePoolOption.
type GetNodePoolOptionResult struct {
	CompartmentId *string `pulumi:"compartmentId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Deprecated. See sources. When creating a node pool, only image names contained in this property can be passed to the `nodeImageName` property.
	Images []string `pulumi:"images"`
	// Available Kubernetes versions.
	KubernetesVersions []string `pulumi:"kubernetesVersions"`
	NodePoolOptionId   string   `pulumi:"nodePoolOptionId"`
	// Available shapes for nodes.
	Shapes []string `pulumi:"shapes"`
	// Available source of the node.
	Sources []GetNodePoolOptionSource `pulumi:"sources"`
}
