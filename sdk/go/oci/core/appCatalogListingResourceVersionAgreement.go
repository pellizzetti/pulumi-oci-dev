// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package core

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The `core.AppCatalogListingResourceVersionAgreement` resource creates AppCatalogListingResourceVersionAgreement for a particular resource version of a listing.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci/core"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := core.NewAppCatalogListingResourceVersionAgreement(ctx, "testAppCatalogListingResourceVersionAgreement", &core.AppCatalogListingResourceVersionAgreementArgs{
// 			ListingId:              pulumi.Any(data.Oci_core_app_catalog_listing.Test_listing.Id),
// 			ListingResourceVersion: pulumi.Any(_var.App_catalog_listing_resource_version_agreement_listing_resource_version),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
type AppCatalogListingResourceVersionAgreement struct {
	pulumi.CustomResourceState

	// EULA link
	EulaLink pulumi.StringOutput `pulumi:"eulaLink"`
	// The OCID of the listing.
	ListingId pulumi.StringOutput `pulumi:"listingId"`
	// Listing Resource Version.
	ListingResourceVersion pulumi.StringOutput `pulumi:"listingResourceVersion"`
	// Oracle TOU link
	OracleTermsOfUseLink pulumi.StringOutput `pulumi:"oracleTermsOfUseLink"`
	// A generated signature for this agreement retrieval operation which should be used in the create subscription call.
	Signature pulumi.StringOutput `pulumi:"signature"`
	// Date and time the agreements were retrieved, in RFC3339 format. Example: `2018-03-20T12:32:53.532Z`
	TimeRetrieved pulumi.StringOutput `pulumi:"timeRetrieved"`
}

// NewAppCatalogListingResourceVersionAgreement registers a new resource with the given unique name, arguments, and options.
func NewAppCatalogListingResourceVersionAgreement(ctx *pulumi.Context,
	name string, args *AppCatalogListingResourceVersionAgreementArgs, opts ...pulumi.ResourceOption) (*AppCatalogListingResourceVersionAgreement, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ListingId == nil {
		return nil, errors.New("invalid value for required argument 'ListingId'")
	}
	if args.ListingResourceVersion == nil {
		return nil, errors.New("invalid value for required argument 'ListingResourceVersion'")
	}
	var resource AppCatalogListingResourceVersionAgreement
	err := ctx.RegisterResource("oci:core/appCatalogListingResourceVersionAgreement:AppCatalogListingResourceVersionAgreement", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAppCatalogListingResourceVersionAgreement gets an existing AppCatalogListingResourceVersionAgreement resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAppCatalogListingResourceVersionAgreement(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AppCatalogListingResourceVersionAgreementState, opts ...pulumi.ResourceOption) (*AppCatalogListingResourceVersionAgreement, error) {
	var resource AppCatalogListingResourceVersionAgreement
	err := ctx.ReadResource("oci:core/appCatalogListingResourceVersionAgreement:AppCatalogListingResourceVersionAgreement", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AppCatalogListingResourceVersionAgreement resources.
type appCatalogListingResourceVersionAgreementState struct {
	// EULA link
	EulaLink *string `pulumi:"eulaLink"`
	// The OCID of the listing.
	ListingId *string `pulumi:"listingId"`
	// Listing Resource Version.
	ListingResourceVersion *string `pulumi:"listingResourceVersion"`
	// Oracle TOU link
	OracleTermsOfUseLink *string `pulumi:"oracleTermsOfUseLink"`
	// A generated signature for this agreement retrieval operation which should be used in the create subscription call.
	Signature *string `pulumi:"signature"`
	// Date and time the agreements were retrieved, in RFC3339 format. Example: `2018-03-20T12:32:53.532Z`
	TimeRetrieved *string `pulumi:"timeRetrieved"`
}

type AppCatalogListingResourceVersionAgreementState struct {
	// EULA link
	EulaLink pulumi.StringPtrInput
	// The OCID of the listing.
	ListingId pulumi.StringPtrInput
	// Listing Resource Version.
	ListingResourceVersion pulumi.StringPtrInput
	// Oracle TOU link
	OracleTermsOfUseLink pulumi.StringPtrInput
	// A generated signature for this agreement retrieval operation which should be used in the create subscription call.
	Signature pulumi.StringPtrInput
	// Date and time the agreements were retrieved, in RFC3339 format. Example: `2018-03-20T12:32:53.532Z`
	TimeRetrieved pulumi.StringPtrInput
}

func (AppCatalogListingResourceVersionAgreementState) ElementType() reflect.Type {
	return reflect.TypeOf((*appCatalogListingResourceVersionAgreementState)(nil)).Elem()
}

type appCatalogListingResourceVersionAgreementArgs struct {
	// The OCID of the listing.
	ListingId string `pulumi:"listingId"`
	// Listing Resource Version.
	ListingResourceVersion string `pulumi:"listingResourceVersion"`
}

// The set of arguments for constructing a AppCatalogListingResourceVersionAgreement resource.
type AppCatalogListingResourceVersionAgreementArgs struct {
	// The OCID of the listing.
	ListingId pulumi.StringInput
	// Listing Resource Version.
	ListingResourceVersion pulumi.StringInput
}

func (AppCatalogListingResourceVersionAgreementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*appCatalogListingResourceVersionAgreementArgs)(nil)).Elem()
}

type AppCatalogListingResourceVersionAgreementInput interface {
	pulumi.Input

	ToAppCatalogListingResourceVersionAgreementOutput() AppCatalogListingResourceVersionAgreementOutput
	ToAppCatalogListingResourceVersionAgreementOutputWithContext(ctx context.Context) AppCatalogListingResourceVersionAgreementOutput
}

func (*AppCatalogListingResourceVersionAgreement) ElementType() reflect.Type {
	return reflect.TypeOf((*AppCatalogListingResourceVersionAgreement)(nil))
}

func (i *AppCatalogListingResourceVersionAgreement) ToAppCatalogListingResourceVersionAgreementOutput() AppCatalogListingResourceVersionAgreementOutput {
	return i.ToAppCatalogListingResourceVersionAgreementOutputWithContext(context.Background())
}

func (i *AppCatalogListingResourceVersionAgreement) ToAppCatalogListingResourceVersionAgreementOutputWithContext(ctx context.Context) AppCatalogListingResourceVersionAgreementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppCatalogListingResourceVersionAgreementOutput)
}

func (i *AppCatalogListingResourceVersionAgreement) ToAppCatalogListingResourceVersionAgreementPtrOutput() AppCatalogListingResourceVersionAgreementPtrOutput {
	return i.ToAppCatalogListingResourceVersionAgreementPtrOutputWithContext(context.Background())
}

func (i *AppCatalogListingResourceVersionAgreement) ToAppCatalogListingResourceVersionAgreementPtrOutputWithContext(ctx context.Context) AppCatalogListingResourceVersionAgreementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppCatalogListingResourceVersionAgreementPtrOutput)
}

type AppCatalogListingResourceVersionAgreementPtrInput interface {
	pulumi.Input

	ToAppCatalogListingResourceVersionAgreementPtrOutput() AppCatalogListingResourceVersionAgreementPtrOutput
	ToAppCatalogListingResourceVersionAgreementPtrOutputWithContext(ctx context.Context) AppCatalogListingResourceVersionAgreementPtrOutput
}

type appCatalogListingResourceVersionAgreementPtrType AppCatalogListingResourceVersionAgreementArgs

func (*appCatalogListingResourceVersionAgreementPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppCatalogListingResourceVersionAgreement)(nil))
}

func (i *appCatalogListingResourceVersionAgreementPtrType) ToAppCatalogListingResourceVersionAgreementPtrOutput() AppCatalogListingResourceVersionAgreementPtrOutput {
	return i.ToAppCatalogListingResourceVersionAgreementPtrOutputWithContext(context.Background())
}

func (i *appCatalogListingResourceVersionAgreementPtrType) ToAppCatalogListingResourceVersionAgreementPtrOutputWithContext(ctx context.Context) AppCatalogListingResourceVersionAgreementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppCatalogListingResourceVersionAgreementPtrOutput)
}

// AppCatalogListingResourceVersionAgreementArrayInput is an input type that accepts AppCatalogListingResourceVersionAgreementArray and AppCatalogListingResourceVersionAgreementArrayOutput values.
// You can construct a concrete instance of `AppCatalogListingResourceVersionAgreementArrayInput` via:
//
//          AppCatalogListingResourceVersionAgreementArray{ AppCatalogListingResourceVersionAgreementArgs{...} }
type AppCatalogListingResourceVersionAgreementArrayInput interface {
	pulumi.Input

	ToAppCatalogListingResourceVersionAgreementArrayOutput() AppCatalogListingResourceVersionAgreementArrayOutput
	ToAppCatalogListingResourceVersionAgreementArrayOutputWithContext(context.Context) AppCatalogListingResourceVersionAgreementArrayOutput
}

type AppCatalogListingResourceVersionAgreementArray []AppCatalogListingResourceVersionAgreementInput

func (AppCatalogListingResourceVersionAgreementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AppCatalogListingResourceVersionAgreement)(nil)).Elem()
}

func (i AppCatalogListingResourceVersionAgreementArray) ToAppCatalogListingResourceVersionAgreementArrayOutput() AppCatalogListingResourceVersionAgreementArrayOutput {
	return i.ToAppCatalogListingResourceVersionAgreementArrayOutputWithContext(context.Background())
}

func (i AppCatalogListingResourceVersionAgreementArray) ToAppCatalogListingResourceVersionAgreementArrayOutputWithContext(ctx context.Context) AppCatalogListingResourceVersionAgreementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppCatalogListingResourceVersionAgreementArrayOutput)
}

// AppCatalogListingResourceVersionAgreementMapInput is an input type that accepts AppCatalogListingResourceVersionAgreementMap and AppCatalogListingResourceVersionAgreementMapOutput values.
// You can construct a concrete instance of `AppCatalogListingResourceVersionAgreementMapInput` via:
//
//          AppCatalogListingResourceVersionAgreementMap{ "key": AppCatalogListingResourceVersionAgreementArgs{...} }
type AppCatalogListingResourceVersionAgreementMapInput interface {
	pulumi.Input

	ToAppCatalogListingResourceVersionAgreementMapOutput() AppCatalogListingResourceVersionAgreementMapOutput
	ToAppCatalogListingResourceVersionAgreementMapOutputWithContext(context.Context) AppCatalogListingResourceVersionAgreementMapOutput
}

type AppCatalogListingResourceVersionAgreementMap map[string]AppCatalogListingResourceVersionAgreementInput

func (AppCatalogListingResourceVersionAgreementMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AppCatalogListingResourceVersionAgreement)(nil)).Elem()
}

func (i AppCatalogListingResourceVersionAgreementMap) ToAppCatalogListingResourceVersionAgreementMapOutput() AppCatalogListingResourceVersionAgreementMapOutput {
	return i.ToAppCatalogListingResourceVersionAgreementMapOutputWithContext(context.Background())
}

func (i AppCatalogListingResourceVersionAgreementMap) ToAppCatalogListingResourceVersionAgreementMapOutputWithContext(ctx context.Context) AppCatalogListingResourceVersionAgreementMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppCatalogListingResourceVersionAgreementMapOutput)
}

type AppCatalogListingResourceVersionAgreementOutput struct {
	*pulumi.OutputState
}

func (AppCatalogListingResourceVersionAgreementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppCatalogListingResourceVersionAgreement)(nil))
}

func (o AppCatalogListingResourceVersionAgreementOutput) ToAppCatalogListingResourceVersionAgreementOutput() AppCatalogListingResourceVersionAgreementOutput {
	return o
}

func (o AppCatalogListingResourceVersionAgreementOutput) ToAppCatalogListingResourceVersionAgreementOutputWithContext(ctx context.Context) AppCatalogListingResourceVersionAgreementOutput {
	return o
}

func (o AppCatalogListingResourceVersionAgreementOutput) ToAppCatalogListingResourceVersionAgreementPtrOutput() AppCatalogListingResourceVersionAgreementPtrOutput {
	return o.ToAppCatalogListingResourceVersionAgreementPtrOutputWithContext(context.Background())
}

func (o AppCatalogListingResourceVersionAgreementOutput) ToAppCatalogListingResourceVersionAgreementPtrOutputWithContext(ctx context.Context) AppCatalogListingResourceVersionAgreementPtrOutput {
	return o.ApplyT(func(v AppCatalogListingResourceVersionAgreement) *AppCatalogListingResourceVersionAgreement {
		return &v
	}).(AppCatalogListingResourceVersionAgreementPtrOutput)
}

type AppCatalogListingResourceVersionAgreementPtrOutput struct {
	*pulumi.OutputState
}

func (AppCatalogListingResourceVersionAgreementPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppCatalogListingResourceVersionAgreement)(nil))
}

func (o AppCatalogListingResourceVersionAgreementPtrOutput) ToAppCatalogListingResourceVersionAgreementPtrOutput() AppCatalogListingResourceVersionAgreementPtrOutput {
	return o
}

func (o AppCatalogListingResourceVersionAgreementPtrOutput) ToAppCatalogListingResourceVersionAgreementPtrOutputWithContext(ctx context.Context) AppCatalogListingResourceVersionAgreementPtrOutput {
	return o
}

type AppCatalogListingResourceVersionAgreementArrayOutput struct{ *pulumi.OutputState }

func (AppCatalogListingResourceVersionAgreementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppCatalogListingResourceVersionAgreement)(nil))
}

func (o AppCatalogListingResourceVersionAgreementArrayOutput) ToAppCatalogListingResourceVersionAgreementArrayOutput() AppCatalogListingResourceVersionAgreementArrayOutput {
	return o
}

func (o AppCatalogListingResourceVersionAgreementArrayOutput) ToAppCatalogListingResourceVersionAgreementArrayOutputWithContext(ctx context.Context) AppCatalogListingResourceVersionAgreementArrayOutput {
	return o
}

func (o AppCatalogListingResourceVersionAgreementArrayOutput) Index(i pulumi.IntInput) AppCatalogListingResourceVersionAgreementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppCatalogListingResourceVersionAgreement {
		return vs[0].([]AppCatalogListingResourceVersionAgreement)[vs[1].(int)]
	}).(AppCatalogListingResourceVersionAgreementOutput)
}

type AppCatalogListingResourceVersionAgreementMapOutput struct{ *pulumi.OutputState }

func (AppCatalogListingResourceVersionAgreementMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]AppCatalogListingResourceVersionAgreement)(nil))
}

func (o AppCatalogListingResourceVersionAgreementMapOutput) ToAppCatalogListingResourceVersionAgreementMapOutput() AppCatalogListingResourceVersionAgreementMapOutput {
	return o
}

func (o AppCatalogListingResourceVersionAgreementMapOutput) ToAppCatalogListingResourceVersionAgreementMapOutputWithContext(ctx context.Context) AppCatalogListingResourceVersionAgreementMapOutput {
	return o
}

func (o AppCatalogListingResourceVersionAgreementMapOutput) MapIndex(k pulumi.StringInput) AppCatalogListingResourceVersionAgreementOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) AppCatalogListingResourceVersionAgreement {
		return vs[0].(map[string]AppCatalogListingResourceVersionAgreement)[vs[1].(string)]
	}).(AppCatalogListingResourceVersionAgreementOutput)
}

func init() {
	pulumi.RegisterOutputType(AppCatalogListingResourceVersionAgreementOutput{})
	pulumi.RegisterOutputType(AppCatalogListingResourceVersionAgreementPtrOutput{})
	pulumi.RegisterOutputType(AppCatalogListingResourceVersionAgreementArrayOutput{})
	pulumi.RegisterOutputType(AppCatalogListingResourceVersionAgreementMapOutput{})
}
