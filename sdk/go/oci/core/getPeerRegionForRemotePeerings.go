// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package core

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Peer Region For Remote Peerings in Oracle Cloud Infrastructure Core service.
//
// Lists the regions that support remote VCN peering (which is peering across regions).
// For more information, see [VCN Peering](https://docs.cloud.oracle.com/iaas/Content/Network/Tasks/VCNpeering.htm).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci/core"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := core.GetPeerRegionForRemotePeerings(ctx, nil, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func GetPeerRegionForRemotePeerings(ctx *pulumi.Context, args *GetPeerRegionForRemotePeeringsArgs, opts ...pulumi.InvokeOption) (*GetPeerRegionForRemotePeeringsResult, error) {
	var rv GetPeerRegionForRemotePeeringsResult
	err := ctx.Invoke("oci:core/getPeerRegionForRemotePeerings:getPeerRegionForRemotePeerings", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPeerRegionForRemotePeerings.
type GetPeerRegionForRemotePeeringsArgs struct {
	Filters []GetPeerRegionForRemotePeeringsFilter `pulumi:"filters"`
}

// A collection of values returned by getPeerRegionForRemotePeerings.
type GetPeerRegionForRemotePeeringsResult struct {
	Filters []GetPeerRegionForRemotePeeringsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The list of peer_region_for_remote_peerings.
	PeerRegionForRemotePeerings []GetPeerRegionForRemotePeeringsPeerRegionForRemotePeering `pulumi:"peerRegionForRemotePeerings"`
}
