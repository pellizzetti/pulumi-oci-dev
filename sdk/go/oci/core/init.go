// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package core

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi-oci/sdk/go/oci"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "oci:core/appCatalogListingResourceVersionAgreement:AppCatalogListingResourceVersionAgreement":
		r = &AppCatalogListingResourceVersionAgreement{}
	case "oci:core/appCatalogSubscription:AppCatalogSubscription":
		r = &AppCatalogSubscription{}
	case "oci:core/bootVolume:BootVolume":
		r = &BootVolume{}
	case "oci:core/bootVolumeBackup:BootVolumeBackup":
		r = &BootVolumeBackup{}
	case "oci:core/clusterNetwork:ClusterNetwork":
		r = &ClusterNetwork{}
	case "oci:core/computeCapacityReservation:ComputeCapacityReservation":
		r = &ComputeCapacityReservation{}
	case "oci:core/computeImageCapabilitySchema:ComputeImageCapabilitySchema":
		r = &ComputeImageCapabilitySchema{}
	case "oci:core/consoleHistory:ConsoleHistory":
		r = &ConsoleHistory{}
	case "oci:core/cpe:Cpe":
		r = &Cpe{}
	case "oci:core/crossConnect:CrossConnect":
		r = &CrossConnect{}
	case "oci:core/crossConnectGroup:CrossConnectGroup":
		r = &CrossConnectGroup{}
	case "oci:core/dedicatedVmHost:DedicatedVmHost":
		r = &DedicatedVmHost{}
	case "oci:core/dhcpOptions:DhcpOptions":
		r = &DhcpOptions{}
	case "oci:core/drg:Drg":
		r = &Drg{}
	case "oci:core/drgAttachment:DrgAttachment":
		r = &DrgAttachment{}
	case "oci:core/drgAttachmentManagement:DrgAttachmentManagement":
		r = &DrgAttachmentManagement{}
	case "oci:core/drgAttachmentsList:DrgAttachmentsList":
		r = &DrgAttachmentsList{}
	case "oci:core/drgRouteDistribution:DrgRouteDistribution":
		r = &DrgRouteDistribution{}
	case "oci:core/drgRouteDistributionStatement:DrgRouteDistributionStatement":
		r = &DrgRouteDistributionStatement{}
	case "oci:core/drgRouteTable:DrgRouteTable":
		r = &DrgRouteTable{}
	case "oci:core/drgRouteTableRouteRule:DrgRouteTableRouteRule":
		r = &DrgRouteTableRouteRule{}
	case "oci:core/image:Image":
		r = &Image{}
	case "oci:core/instance:Instance":
		r = &Instance{}
	case "oci:core/instanceConfiguration:InstanceConfiguration":
		r = &InstanceConfiguration{}
	case "oci:core/instanceConsoleConnection:InstanceConsoleConnection":
		r = &InstanceConsoleConnection{}
	case "oci:core/instancePool:InstancePool":
		r = &InstancePool{}
	case "oci:core/instancePoolInstance:InstancePoolInstance":
		r = &InstancePoolInstance{}
	case "oci:core/internetGateway:InternetGateway":
		r = &InternetGateway{}
	case "oci:core/ipsec:Ipsec":
		r = &Ipsec{}
	case "oci:core/ipsecConnectionTunnelManagement:IpsecConnectionTunnelManagement":
		r = &IpsecConnectionTunnelManagement{}
	case "oci:core/ipv6:Ipv6":
		r = &Ipv6{}
	case "oci:core/localPeeringGateway:LocalPeeringGateway":
		r = &LocalPeeringGateway{}
	case "oci:core/natGateway:NatGateway":
		r = &NatGateway{}
	case "oci:core/networkSecurityGroup:NetworkSecurityGroup":
		r = &NetworkSecurityGroup{}
	case "oci:core/networkSecurityGroupSecurityRule:NetworkSecurityGroupSecurityRule":
		r = &NetworkSecurityGroupSecurityRule{}
	case "oci:core/privateIp:PrivateIp":
		r = &PrivateIp{}
	case "oci:core/publicIp:PublicIp":
		r = &PublicIp{}
	case "oci:core/publicIpPool:PublicIpPool":
		r = &PublicIpPool{}
	case "oci:core/publicIpPoolCapacity:PublicIpPoolCapacity":
		r = &PublicIpPoolCapacity{}
	case "oci:core/remotePeeringConnection:RemotePeeringConnection":
		r = &RemotePeeringConnection{}
	case "oci:core/routeTable:RouteTable":
		r = &RouteTable{}
	case "oci:core/routeTableAttachment:RouteTableAttachment":
		r = &RouteTableAttachment{}
	case "oci:core/securityList:SecurityList":
		r = &SecurityList{}
	case "oci:core/serviceGateway:ServiceGateway":
		r = &ServiceGateway{}
	case "oci:core/subnet:Subnet":
		r = &Subnet{}
	case "oci:core/vcn:Vcn":
		r = &Vcn{}
	case "oci:core/virtualCircuit:VirtualCircuit":
		r = &VirtualCircuit{}
	case "oci:core/vlan:Vlan":
		r = &Vlan{}
	case "oci:core/vnicAttachment:VnicAttachment":
		r = &VnicAttachment{}
	case "oci:core/volume:Volume":
		r = &Volume{}
	case "oci:core/volumeAttachment:VolumeAttachment":
		r = &VolumeAttachment{}
	case "oci:core/volumeBackup:VolumeBackup":
		r = &VolumeBackup{}
	case "oci:core/volumeBackupPolicy:VolumeBackupPolicy":
		r = &VolumeBackupPolicy{}
	case "oci:core/volumeBackupPolicyAssignment:VolumeBackupPolicyAssignment":
		r = &VolumeBackupPolicyAssignment{}
	case "oci:core/volumeGroup:VolumeGroup":
		r = &VolumeGroup{}
	case "oci:core/volumeGroupBackup:VolumeGroupBackup":
		r = &VolumeGroupBackup{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

func init() {
	version, err := oci.PkgVersion()
	if err != nil {
		fmt.Printf("failed to determine package version. defaulting to v1: %v\n", err)
	}
	pulumi.RegisterResourceModule(
		"oci",
		"core/appCatalogListingResourceVersionAgreement",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"oci",
		"core/appCatalogSubscription",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"oci",
		"core/bootVolume",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"oci",
		"core/bootVolumeBackup",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"oci",
		"core/clusterNetwork",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"oci",
		"core/computeCapacityReservation",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"oci",
		"core/computeImageCapabilitySchema",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"oci",
		"core/consoleHistory",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"oci",
		"core/cpe",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"oci",
		"core/crossConnect",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"oci",
		"core/crossConnectGroup",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"oci",
		"core/dedicatedVmHost",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"oci",
		"core/dhcpOptions",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"oci",
		"core/drg",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"oci",
		"core/drgAttachment",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"oci",
		"core/drgAttachmentManagement",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"oci",
		"core/drgAttachmentsList",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"oci",
		"core/drgRouteDistribution",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"oci",
		"core/drgRouteDistributionStatement",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"oci",
		"core/drgRouteTable",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"oci",
		"core/drgRouteTableRouteRule",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"oci",
		"core/image",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"oci",
		"core/instance",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"oci",
		"core/instanceConfiguration",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"oci",
		"core/instanceConsoleConnection",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"oci",
		"core/instancePool",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"oci",
		"core/instancePoolInstance",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"oci",
		"core/internetGateway",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"oci",
		"core/ipsec",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"oci",
		"core/ipsecConnectionTunnelManagement",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"oci",
		"core/ipv6",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"oci",
		"core/localPeeringGateway",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"oci",
		"core/natGateway",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"oci",
		"core/networkSecurityGroup",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"oci",
		"core/networkSecurityGroupSecurityRule",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"oci",
		"core/privateIp",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"oci",
		"core/publicIp",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"oci",
		"core/publicIpPool",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"oci",
		"core/publicIpPoolCapacity",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"oci",
		"core/remotePeeringConnection",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"oci",
		"core/routeTable",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"oci",
		"core/routeTableAttachment",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"oci",
		"core/securityList",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"oci",
		"core/serviceGateway",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"oci",
		"core/subnet",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"oci",
		"core/vcn",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"oci",
		"core/virtualCircuit",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"oci",
		"core/vlan",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"oci",
		"core/vnicAttachment",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"oci",
		"core/volume",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"oci",
		"core/volumeAttachment",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"oci",
		"core/volumeBackup",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"oci",
		"core/volumeBackupPolicy",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"oci",
		"core/volumeBackupPolicyAssignment",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"oci",
		"core/volumeGroup",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"oci",
		"core/volumeGroupBackup",
		&module{version},
	)
}
