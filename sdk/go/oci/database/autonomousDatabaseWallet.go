// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package database

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Import
//
// Import is not supported for this resource.
type AutonomousDatabaseWallet struct {
	pulumi.CustomResourceState

	// The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	AutonomousDatabaseId pulumi.StringOutput  `pulumi:"autonomousDatabaseId"`
	Base64EncodeContent  pulumi.BoolPtrOutput `pulumi:"base64EncodeContent"`
	// content of the downloaded zipped wallet for the Autonomous Database. If `base64EncodeContent` is set to `true`, then this content will be base64 encoded.
	Content pulumi.StringOutput `pulumi:"content"`
	// The type of wallet to generate.
	GenerateType pulumi.StringPtrOutput `pulumi:"generateType"`
	// The password to encrypt the keys inside the wallet. The password must be at least 8 characters long and must include at least 1 letter and either 1 numeric character or 1 special character.
	Password pulumi.StringOutput `pulumi:"password"`
}

// NewAutonomousDatabaseWallet registers a new resource with the given unique name, arguments, and options.
func NewAutonomousDatabaseWallet(ctx *pulumi.Context,
	name string, args *AutonomousDatabaseWalletArgs, opts ...pulumi.ResourceOption) (*AutonomousDatabaseWallet, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AutonomousDatabaseId == nil {
		return nil, errors.New("invalid value for required argument 'AutonomousDatabaseId'")
	}
	if args.Password == nil {
		return nil, errors.New("invalid value for required argument 'Password'")
	}
	var resource AutonomousDatabaseWallet
	err := ctx.RegisterResource("oci:database/autonomousDatabaseWallet:AutonomousDatabaseWallet", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAutonomousDatabaseWallet gets an existing AutonomousDatabaseWallet resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAutonomousDatabaseWallet(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AutonomousDatabaseWalletState, opts ...pulumi.ResourceOption) (*AutonomousDatabaseWallet, error) {
	var resource AutonomousDatabaseWallet
	err := ctx.ReadResource("oci:database/autonomousDatabaseWallet:AutonomousDatabaseWallet", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AutonomousDatabaseWallet resources.
type autonomousDatabaseWalletState struct {
	// The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	AutonomousDatabaseId *string `pulumi:"autonomousDatabaseId"`
	Base64EncodeContent  *bool   `pulumi:"base64EncodeContent"`
	// content of the downloaded zipped wallet for the Autonomous Database. If `base64EncodeContent` is set to `true`, then this content will be base64 encoded.
	Content *string `pulumi:"content"`
	// The type of wallet to generate.
	GenerateType *string `pulumi:"generateType"`
	// The password to encrypt the keys inside the wallet. The password must be at least 8 characters long and must include at least 1 letter and either 1 numeric character or 1 special character.
	Password *string `pulumi:"password"`
}

type AutonomousDatabaseWalletState struct {
	// The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	AutonomousDatabaseId pulumi.StringPtrInput
	Base64EncodeContent  pulumi.BoolPtrInput
	// content of the downloaded zipped wallet for the Autonomous Database. If `base64EncodeContent` is set to `true`, then this content will be base64 encoded.
	Content pulumi.StringPtrInput
	// The type of wallet to generate.
	GenerateType pulumi.StringPtrInput
	// The password to encrypt the keys inside the wallet. The password must be at least 8 characters long and must include at least 1 letter and either 1 numeric character or 1 special character.
	Password pulumi.StringPtrInput
}

func (AutonomousDatabaseWalletState) ElementType() reflect.Type {
	return reflect.TypeOf((*autonomousDatabaseWalletState)(nil)).Elem()
}

type autonomousDatabaseWalletArgs struct {
	// The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	AutonomousDatabaseId string `pulumi:"autonomousDatabaseId"`
	Base64EncodeContent  *bool  `pulumi:"base64EncodeContent"`
	// The type of wallet to generate.
	GenerateType *string `pulumi:"generateType"`
	// The password to encrypt the keys inside the wallet. The password must be at least 8 characters long and must include at least 1 letter and either 1 numeric character or 1 special character.
	Password string `pulumi:"password"`
}

// The set of arguments for constructing a AutonomousDatabaseWallet resource.
type AutonomousDatabaseWalletArgs struct {
	// The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	AutonomousDatabaseId pulumi.StringInput
	Base64EncodeContent  pulumi.BoolPtrInput
	// The type of wallet to generate.
	GenerateType pulumi.StringPtrInput
	// The password to encrypt the keys inside the wallet. The password must be at least 8 characters long and must include at least 1 letter and either 1 numeric character or 1 special character.
	Password pulumi.StringInput
}

func (AutonomousDatabaseWalletArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*autonomousDatabaseWalletArgs)(nil)).Elem()
}

type AutonomousDatabaseWalletInput interface {
	pulumi.Input

	ToAutonomousDatabaseWalletOutput() AutonomousDatabaseWalletOutput
	ToAutonomousDatabaseWalletOutputWithContext(ctx context.Context) AutonomousDatabaseWalletOutput
}

func (*AutonomousDatabaseWallet) ElementType() reflect.Type {
	return reflect.TypeOf((*AutonomousDatabaseWallet)(nil))
}

func (i *AutonomousDatabaseWallet) ToAutonomousDatabaseWalletOutput() AutonomousDatabaseWalletOutput {
	return i.ToAutonomousDatabaseWalletOutputWithContext(context.Background())
}

func (i *AutonomousDatabaseWallet) ToAutonomousDatabaseWalletOutputWithContext(ctx context.Context) AutonomousDatabaseWalletOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutonomousDatabaseWalletOutput)
}

func (i *AutonomousDatabaseWallet) ToAutonomousDatabaseWalletPtrOutput() AutonomousDatabaseWalletPtrOutput {
	return i.ToAutonomousDatabaseWalletPtrOutputWithContext(context.Background())
}

func (i *AutonomousDatabaseWallet) ToAutonomousDatabaseWalletPtrOutputWithContext(ctx context.Context) AutonomousDatabaseWalletPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutonomousDatabaseWalletPtrOutput)
}

type AutonomousDatabaseWalletPtrInput interface {
	pulumi.Input

	ToAutonomousDatabaseWalletPtrOutput() AutonomousDatabaseWalletPtrOutput
	ToAutonomousDatabaseWalletPtrOutputWithContext(ctx context.Context) AutonomousDatabaseWalletPtrOutput
}

type autonomousDatabaseWalletPtrType AutonomousDatabaseWalletArgs

func (*autonomousDatabaseWalletPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutonomousDatabaseWallet)(nil))
}

func (i *autonomousDatabaseWalletPtrType) ToAutonomousDatabaseWalletPtrOutput() AutonomousDatabaseWalletPtrOutput {
	return i.ToAutonomousDatabaseWalletPtrOutputWithContext(context.Background())
}

func (i *autonomousDatabaseWalletPtrType) ToAutonomousDatabaseWalletPtrOutputWithContext(ctx context.Context) AutonomousDatabaseWalletPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutonomousDatabaseWalletPtrOutput)
}

// AutonomousDatabaseWalletArrayInput is an input type that accepts AutonomousDatabaseWalletArray and AutonomousDatabaseWalletArrayOutput values.
// You can construct a concrete instance of `AutonomousDatabaseWalletArrayInput` via:
//
//          AutonomousDatabaseWalletArray{ AutonomousDatabaseWalletArgs{...} }
type AutonomousDatabaseWalletArrayInput interface {
	pulumi.Input

	ToAutonomousDatabaseWalletArrayOutput() AutonomousDatabaseWalletArrayOutput
	ToAutonomousDatabaseWalletArrayOutputWithContext(context.Context) AutonomousDatabaseWalletArrayOutput
}

type AutonomousDatabaseWalletArray []AutonomousDatabaseWalletInput

func (AutonomousDatabaseWalletArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AutonomousDatabaseWallet)(nil)).Elem()
}

func (i AutonomousDatabaseWalletArray) ToAutonomousDatabaseWalletArrayOutput() AutonomousDatabaseWalletArrayOutput {
	return i.ToAutonomousDatabaseWalletArrayOutputWithContext(context.Background())
}

func (i AutonomousDatabaseWalletArray) ToAutonomousDatabaseWalletArrayOutputWithContext(ctx context.Context) AutonomousDatabaseWalletArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutonomousDatabaseWalletArrayOutput)
}

// AutonomousDatabaseWalletMapInput is an input type that accepts AutonomousDatabaseWalletMap and AutonomousDatabaseWalletMapOutput values.
// You can construct a concrete instance of `AutonomousDatabaseWalletMapInput` via:
//
//          AutonomousDatabaseWalletMap{ "key": AutonomousDatabaseWalletArgs{...} }
type AutonomousDatabaseWalletMapInput interface {
	pulumi.Input

	ToAutonomousDatabaseWalletMapOutput() AutonomousDatabaseWalletMapOutput
	ToAutonomousDatabaseWalletMapOutputWithContext(context.Context) AutonomousDatabaseWalletMapOutput
}

type AutonomousDatabaseWalletMap map[string]AutonomousDatabaseWalletInput

func (AutonomousDatabaseWalletMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AutonomousDatabaseWallet)(nil)).Elem()
}

func (i AutonomousDatabaseWalletMap) ToAutonomousDatabaseWalletMapOutput() AutonomousDatabaseWalletMapOutput {
	return i.ToAutonomousDatabaseWalletMapOutputWithContext(context.Background())
}

func (i AutonomousDatabaseWalletMap) ToAutonomousDatabaseWalletMapOutputWithContext(ctx context.Context) AutonomousDatabaseWalletMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutonomousDatabaseWalletMapOutput)
}

type AutonomousDatabaseWalletOutput struct {
	*pulumi.OutputState
}

func (AutonomousDatabaseWalletOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutonomousDatabaseWallet)(nil))
}

func (o AutonomousDatabaseWalletOutput) ToAutonomousDatabaseWalletOutput() AutonomousDatabaseWalletOutput {
	return o
}

func (o AutonomousDatabaseWalletOutput) ToAutonomousDatabaseWalletOutputWithContext(ctx context.Context) AutonomousDatabaseWalletOutput {
	return o
}

func (o AutonomousDatabaseWalletOutput) ToAutonomousDatabaseWalletPtrOutput() AutonomousDatabaseWalletPtrOutput {
	return o.ToAutonomousDatabaseWalletPtrOutputWithContext(context.Background())
}

func (o AutonomousDatabaseWalletOutput) ToAutonomousDatabaseWalletPtrOutputWithContext(ctx context.Context) AutonomousDatabaseWalletPtrOutput {
	return o.ApplyT(func(v AutonomousDatabaseWallet) *AutonomousDatabaseWallet {
		return &v
	}).(AutonomousDatabaseWalletPtrOutput)
}

type AutonomousDatabaseWalletPtrOutput struct {
	*pulumi.OutputState
}

func (AutonomousDatabaseWalletPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutonomousDatabaseWallet)(nil))
}

func (o AutonomousDatabaseWalletPtrOutput) ToAutonomousDatabaseWalletPtrOutput() AutonomousDatabaseWalletPtrOutput {
	return o
}

func (o AutonomousDatabaseWalletPtrOutput) ToAutonomousDatabaseWalletPtrOutputWithContext(ctx context.Context) AutonomousDatabaseWalletPtrOutput {
	return o
}

type AutonomousDatabaseWalletArrayOutput struct{ *pulumi.OutputState }

func (AutonomousDatabaseWalletArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AutonomousDatabaseWallet)(nil))
}

func (o AutonomousDatabaseWalletArrayOutput) ToAutonomousDatabaseWalletArrayOutput() AutonomousDatabaseWalletArrayOutput {
	return o
}

func (o AutonomousDatabaseWalletArrayOutput) ToAutonomousDatabaseWalletArrayOutputWithContext(ctx context.Context) AutonomousDatabaseWalletArrayOutput {
	return o
}

func (o AutonomousDatabaseWalletArrayOutput) Index(i pulumi.IntInput) AutonomousDatabaseWalletOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AutonomousDatabaseWallet {
		return vs[0].([]AutonomousDatabaseWallet)[vs[1].(int)]
	}).(AutonomousDatabaseWalletOutput)
}

type AutonomousDatabaseWalletMapOutput struct{ *pulumi.OutputState }

func (AutonomousDatabaseWalletMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]AutonomousDatabaseWallet)(nil))
}

func (o AutonomousDatabaseWalletMapOutput) ToAutonomousDatabaseWalletMapOutput() AutonomousDatabaseWalletMapOutput {
	return o
}

func (o AutonomousDatabaseWalletMapOutput) ToAutonomousDatabaseWalletMapOutputWithContext(ctx context.Context) AutonomousDatabaseWalletMapOutput {
	return o
}

func (o AutonomousDatabaseWalletMapOutput) MapIndex(k pulumi.StringInput) AutonomousDatabaseWalletOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) AutonomousDatabaseWallet {
		return vs[0].(map[string]AutonomousDatabaseWallet)[vs[1].(string)]
	}).(AutonomousDatabaseWalletOutput)
}

func init() {
	pulumi.RegisterOutputType(AutonomousDatabaseWalletOutput{})
	pulumi.RegisterOutputType(AutonomousDatabaseWalletPtrOutput{})
	pulumi.RegisterOutputType(AutonomousDatabaseWalletArrayOutput{})
	pulumi.RegisterOutputType(AutonomousDatabaseWalletMapOutput{})
}
