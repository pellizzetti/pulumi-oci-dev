// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package database

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Database Upgrade resource in Oracle Cloud Infrastructure Database service.
//
// Upgrades the specified Oracle Database instance.
//
// Database upgrade requires source to be `DB_VERSION` or `DB_SOFTWARE_IMAGE`.
// 	`db_home.0.db_version` is updated to target DB version specified in the upgrade request.
// 	To avoid a force new create of the dbHome on the next apply, add the following to the resource
// 	```	lifecycle {
// 	   	ignore_changes = [
// 	   		db_home.0.db_version,
// 	   	]
// 	}
// 	```
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci/database"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := database.NewDatabaseUpgrade(ctx, "testDatabaseUpgrade", &database.DatabaseUpgradeArgs{
// 			Action:     pulumi.Any(_var.Database_upgrade_action),
// 			DatabaseId: pulumi.Any(oci_database_database.Test_database.Id),
// 			DatabaseUpgradeSourceDetails: &database.DatabaseUpgradeDatabaseUpgradeSourceDetailsArgs{
// 				DatabaseSoftwareImageId: pulumi.Any(oci_database_database_software_image.Test_database_software_image.Id),
// 				DbHomeId:                oci_database_db_home.Test_db_home.Id,
// 				DbVersion:               pulumi.Any(_var.Database_upgrade_database_upgrade_source_details_db_version),
// 				Options:                 pulumi.Any(_var.Database_upgrade_database_upgrade_source_details_options),
// 				Source:                  pulumi.Any(_var.Database_upgrade_database_upgrade_source_details_source),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Import is not supported for this resource.
type DatabaseUpgrade struct {
	pulumi.CustomResourceState

	// The database upgrade action.
	Action pulumi.StringOutput `pulumi:"action"`
	// The character set for the database.
	CharacterSet pulumi.StringOutput `pulumi:"characterSet"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// The Connection strings used to connect to the Oracle Database.
	ConnectionStrings DatabaseUpgradeConnectionStringsOutput `pulumi:"connectionStrings"`
	// The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	DatabaseId pulumi.StringOutput `pulumi:"databaseId"`
	// The database software image [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the image to be used to upgrade a database.
	DatabaseSoftwareImageId pulumi.StringOutput `pulumi:"databaseSoftwareImageId"`
	// Details for the database upgrade source.
	DatabaseUpgradeSourceDetails DatabaseUpgradeDatabaseUpgradeSourceDetailsOutput `pulumi:"databaseUpgradeSourceDetails"`
	// Backup Options To use any of the API operations, you must be authorized in an IAM policy. If you're not authorized, talk to an administrator. If you're an administrator who needs to write policies to give users access, see [Getting Started with Policies](https://docs.cloud.oracle.com/iaas/Content/Identity/Concepts/policygetstarted.htm).
	DbBackupConfig DatabaseUpgradeDbBackupConfigOutput `pulumi:"dbBackupConfig"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Database Home.
	DbHomeId pulumi.StringOutput `pulumi:"dbHomeId"`
	// The database name.
	DbName pulumi.StringOutput `pulumi:"dbName"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DB system.
	DbSystemId pulumi.StringOutput `pulumi:"dbSystemId"`
	// A system-generated name for the database to ensure uniqueness within an Oracle Data Guard group (a primary database and its standby databases). The unique name cannot be changed.
	DbUniqueName pulumi.StringOutput `pulumi:"dbUniqueName"`
	// The database workload type.
	DbWorkload pulumi.StringOutput `pulumi:"dbWorkload"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// The date and time when the latest database backup was created.
	LastBackupTimestamp pulumi.StringOutput `pulumi:"lastBackupTimestamp"`
	// Additional information about the current lifecycle state.
	LifecycleDetails pulumi.StringOutput `pulumi:"lifecycleDetails"`
	// The national character set for the database.
	NcharacterSet pulumi.StringOutput `pulumi:"ncharacterSet"`
	// The name of the pluggable database. The name must begin with an alphabetic character and can contain a maximum of thirty alphanumeric characters. Special characters are not permitted. Pluggable database should not be same as database name.
	PdbName pulumi.StringOutput `pulumi:"pdbName"`
	// Point in time recovery timeStamp of the source database at which cloned database system is cloned from the source database system, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)
	SourceDatabasePointInTimeRecoveryTimestamp pulumi.StringOutput `pulumi:"sourceDatabasePointInTimeRecoveryTimestamp"`
	// The current state of the database.
	State pulumi.StringOutput `pulumi:"state"`
	// The date and time the database was created.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VM cluster.
	VmClusterId pulumi.StringOutput `pulumi:"vmClusterId"`
}

// NewDatabaseUpgrade registers a new resource with the given unique name, arguments, and options.
func NewDatabaseUpgrade(ctx *pulumi.Context,
	name string, args *DatabaseUpgradeArgs, opts ...pulumi.ResourceOption) (*DatabaseUpgrade, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Action == nil {
		return nil, errors.New("invalid value for required argument 'Action'")
	}
	if args.DatabaseId == nil {
		return nil, errors.New("invalid value for required argument 'DatabaseId'")
	}
	var resource DatabaseUpgrade
	err := ctx.RegisterResource("oci:database/databaseUpgrade:DatabaseUpgrade", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDatabaseUpgrade gets an existing DatabaseUpgrade resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDatabaseUpgrade(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DatabaseUpgradeState, opts ...pulumi.ResourceOption) (*DatabaseUpgrade, error) {
	var resource DatabaseUpgrade
	err := ctx.ReadResource("oci:database/databaseUpgrade:DatabaseUpgrade", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DatabaseUpgrade resources.
type databaseUpgradeState struct {
	// The database upgrade action.
	Action *string `pulumi:"action"`
	// The character set for the database.
	CharacterSet *string `pulumi:"characterSet"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId *string `pulumi:"compartmentId"`
	// The Connection strings used to connect to the Oracle Database.
	ConnectionStrings *DatabaseUpgradeConnectionStrings `pulumi:"connectionStrings"`
	// The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	DatabaseId *string `pulumi:"databaseId"`
	// The database software image [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the image to be used to upgrade a database.
	DatabaseSoftwareImageId *string `pulumi:"databaseSoftwareImageId"`
	// Details for the database upgrade source.
	DatabaseUpgradeSourceDetails *DatabaseUpgradeDatabaseUpgradeSourceDetails `pulumi:"databaseUpgradeSourceDetails"`
	// Backup Options To use any of the API operations, you must be authorized in an IAM policy. If you're not authorized, talk to an administrator. If you're an administrator who needs to write policies to give users access, see [Getting Started with Policies](https://docs.cloud.oracle.com/iaas/Content/Identity/Concepts/policygetstarted.htm).
	DbBackupConfig *DatabaseUpgradeDbBackupConfig `pulumi:"dbBackupConfig"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Database Home.
	DbHomeId *string `pulumi:"dbHomeId"`
	// The database name.
	DbName *string `pulumi:"dbName"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DB system.
	DbSystemId *string `pulumi:"dbSystemId"`
	// A system-generated name for the database to ensure uniqueness within an Oracle Data Guard group (a primary database and its standby databases). The unique name cannot be changed.
	DbUniqueName *string `pulumi:"dbUniqueName"`
	// The database workload type.
	DbWorkload *string `pulumi:"dbWorkload"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The date and time when the latest database backup was created.
	LastBackupTimestamp *string `pulumi:"lastBackupTimestamp"`
	// Additional information about the current lifecycle state.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// The national character set for the database.
	NcharacterSet *string `pulumi:"ncharacterSet"`
	// The name of the pluggable database. The name must begin with an alphabetic character and can contain a maximum of thirty alphanumeric characters. Special characters are not permitted. Pluggable database should not be same as database name.
	PdbName *string `pulumi:"pdbName"`
	// Point in time recovery timeStamp of the source database at which cloned database system is cloned from the source database system, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)
	SourceDatabasePointInTimeRecoveryTimestamp *string `pulumi:"sourceDatabasePointInTimeRecoveryTimestamp"`
	// The current state of the database.
	State *string `pulumi:"state"`
	// The date and time the database was created.
	TimeCreated *string `pulumi:"timeCreated"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VM cluster.
	VmClusterId *string `pulumi:"vmClusterId"`
}

type DatabaseUpgradeState struct {
	// The database upgrade action.
	Action pulumi.StringPtrInput
	// The character set for the database.
	CharacterSet pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId pulumi.StringPtrInput
	// The Connection strings used to connect to the Oracle Database.
	ConnectionStrings DatabaseUpgradeConnectionStringsPtrInput
	// The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	DatabaseId pulumi.StringPtrInput
	// The database software image [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the image to be used to upgrade a database.
	DatabaseSoftwareImageId pulumi.StringPtrInput
	// Details for the database upgrade source.
	DatabaseUpgradeSourceDetails DatabaseUpgradeDatabaseUpgradeSourceDetailsPtrInput
	// Backup Options To use any of the API operations, you must be authorized in an IAM policy. If you're not authorized, talk to an administrator. If you're an administrator who needs to write policies to give users access, see [Getting Started with Policies](https://docs.cloud.oracle.com/iaas/Content/Identity/Concepts/policygetstarted.htm).
	DbBackupConfig DatabaseUpgradeDbBackupConfigPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Database Home.
	DbHomeId pulumi.StringPtrInput
	// The database name.
	DbName pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DB system.
	DbSystemId pulumi.StringPtrInput
	// A system-generated name for the database to ensure uniqueness within an Oracle Data Guard group (a primary database and its standby databases). The unique name cannot be changed.
	DbUniqueName pulumi.StringPtrInput
	// The database workload type.
	DbWorkload pulumi.StringPtrInput
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags pulumi.MapInput
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// The date and time when the latest database backup was created.
	LastBackupTimestamp pulumi.StringPtrInput
	// Additional information about the current lifecycle state.
	LifecycleDetails pulumi.StringPtrInput
	// The national character set for the database.
	NcharacterSet pulumi.StringPtrInput
	// The name of the pluggable database. The name must begin with an alphabetic character and can contain a maximum of thirty alphanumeric characters. Special characters are not permitted. Pluggable database should not be same as database name.
	PdbName pulumi.StringPtrInput
	// Point in time recovery timeStamp of the source database at which cloned database system is cloned from the source database system, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)
	SourceDatabasePointInTimeRecoveryTimestamp pulumi.StringPtrInput
	// The current state of the database.
	State pulumi.StringPtrInput
	// The date and time the database was created.
	TimeCreated pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VM cluster.
	VmClusterId pulumi.StringPtrInput
}

func (DatabaseUpgradeState) ElementType() reflect.Type {
	return reflect.TypeOf((*databaseUpgradeState)(nil)).Elem()
}

type databaseUpgradeArgs struct {
	// The database upgrade action.
	Action string `pulumi:"action"`
	// The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	DatabaseId string `pulumi:"databaseId"`
	// Details for the database upgrade source.
	DatabaseUpgradeSourceDetails *DatabaseUpgradeDatabaseUpgradeSourceDetails `pulumi:"databaseUpgradeSourceDetails"`
}

// The set of arguments for constructing a DatabaseUpgrade resource.
type DatabaseUpgradeArgs struct {
	// The database upgrade action.
	Action pulumi.StringInput
	// The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	DatabaseId pulumi.StringInput
	// Details for the database upgrade source.
	DatabaseUpgradeSourceDetails DatabaseUpgradeDatabaseUpgradeSourceDetailsPtrInput
}

func (DatabaseUpgradeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*databaseUpgradeArgs)(nil)).Elem()
}

type DatabaseUpgradeInput interface {
	pulumi.Input

	ToDatabaseUpgradeOutput() DatabaseUpgradeOutput
	ToDatabaseUpgradeOutputWithContext(ctx context.Context) DatabaseUpgradeOutput
}

func (*DatabaseUpgrade) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseUpgrade)(nil))
}

func (i *DatabaseUpgrade) ToDatabaseUpgradeOutput() DatabaseUpgradeOutput {
	return i.ToDatabaseUpgradeOutputWithContext(context.Background())
}

func (i *DatabaseUpgrade) ToDatabaseUpgradeOutputWithContext(ctx context.Context) DatabaseUpgradeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseUpgradeOutput)
}

func (i *DatabaseUpgrade) ToDatabaseUpgradePtrOutput() DatabaseUpgradePtrOutput {
	return i.ToDatabaseUpgradePtrOutputWithContext(context.Background())
}

func (i *DatabaseUpgrade) ToDatabaseUpgradePtrOutputWithContext(ctx context.Context) DatabaseUpgradePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseUpgradePtrOutput)
}

type DatabaseUpgradePtrInput interface {
	pulumi.Input

	ToDatabaseUpgradePtrOutput() DatabaseUpgradePtrOutput
	ToDatabaseUpgradePtrOutputWithContext(ctx context.Context) DatabaseUpgradePtrOutput
}

type databaseUpgradePtrType DatabaseUpgradeArgs

func (*databaseUpgradePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseUpgrade)(nil))
}

func (i *databaseUpgradePtrType) ToDatabaseUpgradePtrOutput() DatabaseUpgradePtrOutput {
	return i.ToDatabaseUpgradePtrOutputWithContext(context.Background())
}

func (i *databaseUpgradePtrType) ToDatabaseUpgradePtrOutputWithContext(ctx context.Context) DatabaseUpgradePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseUpgradePtrOutput)
}

// DatabaseUpgradeArrayInput is an input type that accepts DatabaseUpgradeArray and DatabaseUpgradeArrayOutput values.
// You can construct a concrete instance of `DatabaseUpgradeArrayInput` via:
//
//          DatabaseUpgradeArray{ DatabaseUpgradeArgs{...} }
type DatabaseUpgradeArrayInput interface {
	pulumi.Input

	ToDatabaseUpgradeArrayOutput() DatabaseUpgradeArrayOutput
	ToDatabaseUpgradeArrayOutputWithContext(context.Context) DatabaseUpgradeArrayOutput
}

type DatabaseUpgradeArray []DatabaseUpgradeInput

func (DatabaseUpgradeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DatabaseUpgrade)(nil)).Elem()
}

func (i DatabaseUpgradeArray) ToDatabaseUpgradeArrayOutput() DatabaseUpgradeArrayOutput {
	return i.ToDatabaseUpgradeArrayOutputWithContext(context.Background())
}

func (i DatabaseUpgradeArray) ToDatabaseUpgradeArrayOutputWithContext(ctx context.Context) DatabaseUpgradeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseUpgradeArrayOutput)
}

// DatabaseUpgradeMapInput is an input type that accepts DatabaseUpgradeMap and DatabaseUpgradeMapOutput values.
// You can construct a concrete instance of `DatabaseUpgradeMapInput` via:
//
//          DatabaseUpgradeMap{ "key": DatabaseUpgradeArgs{...} }
type DatabaseUpgradeMapInput interface {
	pulumi.Input

	ToDatabaseUpgradeMapOutput() DatabaseUpgradeMapOutput
	ToDatabaseUpgradeMapOutputWithContext(context.Context) DatabaseUpgradeMapOutput
}

type DatabaseUpgradeMap map[string]DatabaseUpgradeInput

func (DatabaseUpgradeMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DatabaseUpgrade)(nil)).Elem()
}

func (i DatabaseUpgradeMap) ToDatabaseUpgradeMapOutput() DatabaseUpgradeMapOutput {
	return i.ToDatabaseUpgradeMapOutputWithContext(context.Background())
}

func (i DatabaseUpgradeMap) ToDatabaseUpgradeMapOutputWithContext(ctx context.Context) DatabaseUpgradeMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseUpgradeMapOutput)
}

type DatabaseUpgradeOutput struct {
	*pulumi.OutputState
}

func (DatabaseUpgradeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseUpgrade)(nil))
}

func (o DatabaseUpgradeOutput) ToDatabaseUpgradeOutput() DatabaseUpgradeOutput {
	return o
}

func (o DatabaseUpgradeOutput) ToDatabaseUpgradeOutputWithContext(ctx context.Context) DatabaseUpgradeOutput {
	return o
}

func (o DatabaseUpgradeOutput) ToDatabaseUpgradePtrOutput() DatabaseUpgradePtrOutput {
	return o.ToDatabaseUpgradePtrOutputWithContext(context.Background())
}

func (o DatabaseUpgradeOutput) ToDatabaseUpgradePtrOutputWithContext(ctx context.Context) DatabaseUpgradePtrOutput {
	return o.ApplyT(func(v DatabaseUpgrade) *DatabaseUpgrade {
		return &v
	}).(DatabaseUpgradePtrOutput)
}

type DatabaseUpgradePtrOutput struct {
	*pulumi.OutputState
}

func (DatabaseUpgradePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseUpgrade)(nil))
}

func (o DatabaseUpgradePtrOutput) ToDatabaseUpgradePtrOutput() DatabaseUpgradePtrOutput {
	return o
}

func (o DatabaseUpgradePtrOutput) ToDatabaseUpgradePtrOutputWithContext(ctx context.Context) DatabaseUpgradePtrOutput {
	return o
}

type DatabaseUpgradeArrayOutput struct{ *pulumi.OutputState }

func (DatabaseUpgradeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseUpgrade)(nil))
}

func (o DatabaseUpgradeArrayOutput) ToDatabaseUpgradeArrayOutput() DatabaseUpgradeArrayOutput {
	return o
}

func (o DatabaseUpgradeArrayOutput) ToDatabaseUpgradeArrayOutputWithContext(ctx context.Context) DatabaseUpgradeArrayOutput {
	return o
}

func (o DatabaseUpgradeArrayOutput) Index(i pulumi.IntInput) DatabaseUpgradeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabaseUpgrade {
		return vs[0].([]DatabaseUpgrade)[vs[1].(int)]
	}).(DatabaseUpgradeOutput)
}

type DatabaseUpgradeMapOutput struct{ *pulumi.OutputState }

func (DatabaseUpgradeMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]DatabaseUpgrade)(nil))
}

func (o DatabaseUpgradeMapOutput) ToDatabaseUpgradeMapOutput() DatabaseUpgradeMapOutput {
	return o
}

func (o DatabaseUpgradeMapOutput) ToDatabaseUpgradeMapOutputWithContext(ctx context.Context) DatabaseUpgradeMapOutput {
	return o
}

func (o DatabaseUpgradeMapOutput) MapIndex(k pulumi.StringInput) DatabaseUpgradeOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) DatabaseUpgrade {
		return vs[0].(map[string]DatabaseUpgrade)[vs[1].(string)]
	}).(DatabaseUpgradeOutput)
}

func init() {
	pulumi.RegisterOutputType(DatabaseUpgradeOutput{})
	pulumi.RegisterOutputType(DatabaseUpgradePtrOutput{})
	pulumi.RegisterOutputType(DatabaseUpgradeArrayOutput{})
	pulumi.RegisterOutputType(DatabaseUpgradeMapOutput{})
}
