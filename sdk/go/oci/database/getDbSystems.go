// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package database

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Db Systems in Oracle Cloud Infrastructure Database service.
//
// Lists the DB systems in the specified compartment. You can specify a `backupId` to list only the DB systems that support creating a database using this backup in this compartment.
//
// **Note:** Deprecated for Exadata Cloud Service systems. Use the [new resource model APIs](https://docs.cloud.oracle.com/iaas/Content/Database/Concepts/exaflexsystem.htm#exaflexsystem_topic-resource_model) instead.
//
// For Exadata Cloud Service instances, support for this API will end on May 15th, 2021. See [Switching an Exadata DB System to the New Resource Model and APIs](https://docs.cloud.oracle.com/iaas/Content/Database/Concepts/exaflexsystem_topic-resource_model_conversion.htm) for details on converting existing Exadata DB systems to the new resource model.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci/database"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		opt0 := _var.Db_system_availability_domain
// 		opt1 := oci_database_backup.Test_backup.Id
// 		opt2 := _var.Db_system_display_name
// 		opt3 := _var.Db_system_state
// 		_, err := database.GetDbSystems(ctx, &database.GetDbSystemsArgs{
// 			CompartmentId:      _var.Compartment_id,
// 			AvailabilityDomain: &opt0,
// 			BackupId:           &opt1,
// 			DisplayName:        &opt2,
// 			State:              &opt3,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func GetDbSystems(ctx *pulumi.Context, args *GetDbSystemsArgs, opts ...pulumi.InvokeOption) (*GetDbSystemsResult, error) {
	var rv GetDbSystemsResult
	err := ctx.Invoke("oci:database/getDbSystems:getDbSystems", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDbSystems.
type GetDbSystemsArgs struct {
	// A filter to return only resources that match the given availability domain exactly.
	AvailabilityDomain *string `pulumi:"availabilityDomain"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup. Specify a backupId to list only the DB systems or DB homes that support creating a database using this backup in this compartment.
	BackupId *string `pulumi:"backupId"`
	// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId string `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given. The match is not case sensitive.
	DisplayName *string              `pulumi:"displayName"`
	Filters     []GetDbSystemsFilter `pulumi:"filters"`
	// A filter to return only resources that match the given lifecycle state exactly.
	State *string `pulumi:"state"`
}

// A collection of values returned by getDbSystems.
type GetDbSystemsResult struct {
	// The name of the availability domain that the DB system is located in.
	AvailabilityDomain *string `pulumi:"availabilityDomain"`
	BackupId           *string `pulumi:"backupId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// The list of db_systems.
	DbSystems []GetDbSystemsDbSystem `pulumi:"dbSystems"`
	// The user-friendly name for the DB system. The name does not have to be unique.
	DisplayName *string              `pulumi:"displayName"`
	Filters     []GetDbSystemsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The current state of the DB system.
	State *string `pulumi:"state"`
}
