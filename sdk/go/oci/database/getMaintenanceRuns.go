// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package database

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Maintenance Runs in Oracle Cloud Infrastructure Database service.
//
// Gets a list of the maintenance runs in the specified compartment.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci/database"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		opt0 := _var.Maintenance_run_availability_domain
// 		opt1 := _var.Maintenance_run_maintenance_type
// 		opt2 := _var.Maintenance_run_state
// 		opt3 := oci_database_target_resource.Test_target_resource.Id
// 		opt4 := _var.Maintenance_run_target_resource_type
// 		_, err := database.GetMaintenanceRuns(ctx, &database.GetMaintenanceRunsArgs{
// 			CompartmentId:      _var.Compartment_id,
// 			AvailabilityDomain: &opt0,
// 			MaintenanceType:    &opt1,
// 			State:              &opt2,
// 			TargetResourceId:   &opt3,
// 			TargetResourceType: &opt4,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func GetMaintenanceRuns(ctx *pulumi.Context, args *GetMaintenanceRunsArgs, opts ...pulumi.InvokeOption) (*GetMaintenanceRunsResult, error) {
	var rv GetMaintenanceRunsResult
	err := ctx.Invoke("oci:database/getMaintenanceRuns:getMaintenanceRuns", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMaintenanceRuns.
type GetMaintenanceRunsArgs struct {
	// A filter to return only resources that match the given availability domain exactly.
	AvailabilityDomain *string `pulumi:"availabilityDomain"`
	// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId string                     `pulumi:"compartmentId"`
	Filters       []GetMaintenanceRunsFilter `pulumi:"filters"`
	// The maintenance type.
	MaintenanceType *string `pulumi:"maintenanceType"`
	// A filter to return only resources that match the given lifecycle state exactly.
	State *string `pulumi:"state"`
	// The target resource ID.
	TargetResourceId *string `pulumi:"targetResourceId"`
	// The type of the target resource. Accepted values are: AUTONOMOUS_CONTAINER_DATABASE, AUTONOMOUS_EXADATA_INFRASTRUCTURE, EXADATA_DB_SYSTEM
	TargetResourceType *string `pulumi:"targetResourceType"`
}

// A collection of values returned by getMaintenanceRuns.
type GetMaintenanceRunsResult struct {
	AvailabilityDomain *string `pulumi:"availabilityDomain"`
	// The OCID of the compartment.
	CompartmentId string                     `pulumi:"compartmentId"`
	Filters       []GetMaintenanceRunsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The list of maintenance_runs.
	MaintenanceRuns []GetMaintenanceRunsMaintenanceRun `pulumi:"maintenanceRuns"`
	// Maintenance type.
	MaintenanceType *string `pulumi:"maintenanceType"`
	// The current state of the maintenance run. For Autonomous Database on shared Exadata infrastructure, valid states are IN_PROGRESS, SUCCEEDED and FAILED.
	State *string `pulumi:"state"`
	// The ID of the target resource on which the maintenance run occurs.
	TargetResourceId *string `pulumi:"targetResourceId"`
	// The type of the target resource on which the maintenance run occurs.
	TargetResourceType *string `pulumi:"targetResourceType"`
}
