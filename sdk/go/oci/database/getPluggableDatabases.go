// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package database

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Pluggable Databases in Oracle Cloud Infrastructure Database service.
//
// Gets a list of the pluggable databases in a database or compartment. You must provide either a `databaseId` or `compartmentId` value.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci/database"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		opt0 := _var.Compartment_id
// 		opt1 := oci_database_database.Test_database.Id
// 		opt2 := _var.Pluggable_database_pdb_name
// 		opt3 := _var.Pluggable_database_state
// 		_, err := database.GetPluggableDatabases(ctx, &database.GetPluggableDatabasesArgs{
// 			CompartmentId: &opt0,
// 			DatabaseId:    &opt1,
// 			PdbName:       &opt2,
// 			State:         &opt3,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func GetPluggableDatabases(ctx *pulumi.Context, args *GetPluggableDatabasesArgs, opts ...pulumi.InvokeOption) (*GetPluggableDatabasesResult, error) {
	var rv GetPluggableDatabasesResult
	err := ctx.Invoke("oci:database/getPluggableDatabases:getPluggableDatabases", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPluggableDatabases.
type GetPluggableDatabasesArgs struct {
	// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId *string `pulumi:"compartmentId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database.
	DatabaseId *string                       `pulumi:"databaseId"`
	Filters    []GetPluggableDatabasesFilter `pulumi:"filters"`
	// A filter to return only pluggable databases that match the entire name given. The match is not case sensitive.
	PdbName *string `pulumi:"pdbName"`
	// A filter to return only resources that match the given lifecycle state exactly.
	State *string `pulumi:"state"`
}

// A collection of values returned by getPluggableDatabases.
type GetPluggableDatabasesResult struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId *string                       `pulumi:"compartmentId"`
	DatabaseId    *string                       `pulumi:"databaseId"`
	Filters       []GetPluggableDatabasesFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The name for the pluggable database (PDB). The name is unique in the context of a [container database](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/Database/). The name must begin with an alphabetic character and can contain a maximum of thirty alphanumeric characters. Special characters are not permitted. The pluggable database name should not be same as the container database name.
	PdbName *string `pulumi:"pdbName"`
	// The list of pluggable_databases.
	PluggableDatabases []GetPluggableDatabasesPluggableDatabase `pulumi:"pluggableDatabases"`
	// The current state of the pluggable database.
	State *string `pulumi:"state"`
}
