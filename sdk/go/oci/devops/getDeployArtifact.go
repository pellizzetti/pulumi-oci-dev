// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package devops

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Deploy Artifact resource in Oracle Cloud Infrastructure Devops service.
//
// Retrieves a deployment artifact by identifier.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci/devops"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := devops.LookupDeployArtifact(ctx, &devops.LookupDeployArtifactArgs{
// 			DeployArtifactId: oci_devops_deploy_artifact.Test_deploy_artifact.Id,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupDeployArtifact(ctx *pulumi.Context, args *LookupDeployArtifactArgs, opts ...pulumi.InvokeOption) (*LookupDeployArtifactResult, error) {
	var rv LookupDeployArtifactResult
	err := ctx.Invoke("oci:devops/getDeployArtifact:getDeployArtifact", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDeployArtifact.
type LookupDeployArtifactArgs struct {
	// Unique artifact identifier.
	DeployArtifactId string `pulumi:"deployArtifactId"`
}

// A collection of values returned by getDeployArtifact.
type LookupDeployArtifactResult struct {
	// Mode for artifact parameter substitution.
	ArgumentSubstitutionMode string `pulumi:"argumentSubstitutionMode"`
	// The OCID of a compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags      map[string]interface{} `pulumi:"definedTags"`
	DeployArtifactId string                 `pulumi:"deployArtifactId"`
	// Specifies source of an artifact.
	DeployArtifactSource GetDeployArtifactDeployArtifactSource `pulumi:"deployArtifactSource"`
	// Type of the deployment artifact.
	DeployArtifactType string `pulumi:"deployArtifactType"`
	// Optional description about the artifact to be deployed.
	Description string `pulumi:"description"`
	// Deployment artifact identifier, which can be renamed and is not necessarily unique. Avoid entering confidential information.
	DisplayName string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// Unique identifier that is immutable on creation.
	Id string `pulumi:"id"`
	// A detailed message describing the current state. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// The OCID of a project.
	ProjectId string `pulumi:"projectId"`
	// Current state of the deployment artifact.
	State string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// Time the deployment artifact was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
	TimeCreated string `pulumi:"timeCreated"`
	// Time the deployment artifact was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
	TimeUpdated string `pulumi:"timeUpdated"`
}
