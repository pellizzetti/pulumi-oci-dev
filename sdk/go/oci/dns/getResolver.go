// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package dns

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Resolver resource in Oracle Cloud Infrastructure DNS service.
//
// Gets information about a specific resolver. Note that attempting to get a
// resolver in the DELETED lifecycleState will result in a `404` response to be
// consistent with other operations of the API. Requires a `PRIVATE` scope query parameter.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci/dns"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := dns.LookupResolver(ctx, &dns.LookupResolverArgs{
// 			ResolverId: oci_dns_resolver.Test_resolver.Id,
// 			Scope:      "PRIVATE",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupResolver(ctx *pulumi.Context, args *LookupResolverArgs, opts ...pulumi.InvokeOption) (*LookupResolverResult, error) {
	var rv LookupResolverResult
	err := ctx.Invoke("oci:dns/getResolver:getResolver", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getResolver.
type LookupResolverArgs struct {
	// The OCID of the target resolver.
	ResolverId string `pulumi:"resolverId"`
	// Value must be `PRIVATE` when listing private name resolvers.
	Scope string `pulumi:"scope"`
}

// A collection of values returned by getResolver.
type LookupResolverResult struct {
	// The OCID of the attached VCN.
	AttachedVcnId string `pulumi:"attachedVcnId"`
	// The attached views. Views are evaluated in order.
	AttachedViews []GetResolverAttachedView `pulumi:"attachedViews"`
	// The OCID of the owning compartment. This will match the resolver that the resolver endpoint is under and will be updated if the resolver's compartment is changed.
	CompartmentId string `pulumi:"compartmentId"`
	// The OCID of the default view.
	DefaultViewId string `pulumi:"defaultViewId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// The display name of the resolver.
	DisplayName string `pulumi:"displayName"`
	// Read-only array of endpoints for the resolver.
	Endpoints []GetResolverEndpointType `pulumi:"endpoints"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The OCID of the resolver.
	Id string `pulumi:"id"`
	// A Boolean flag indicating whether or not parts of the resource are unable to be explicitly managed.
	IsProtected bool   `pulumi:"isProtected"`
	ResolverId  string `pulumi:"resolverId"`
	// Rules for the resolver. Rules are evaluated in order.
	Rules []GetResolverRule `pulumi:"rules"`
	Scope string            `pulumi:"scope"`
	// The canonical absolute URL of the resource.
	Self string `pulumi:"self"`
	// The current state of the resource.
	State string `pulumi:"state"`
	// The date and time the resource was created in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the resource was last updated in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
	TimeUpdated string `pulumi:"timeUpdated"`
}
