// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package dns

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Steering Policies in Oracle Cloud Infrastructure DNS service.
//
// Gets a list of all steering policies in the specified compartment.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci/dns"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		opt0 := _var.Steering_policy_display_name
// 		opt1 := _var.Steering_policy_display_name_contains
// 		opt2 := oci_health_checks_http_monitor.Test_http_monitor.Id
// 		opt3 := _var.Steering_policy_id
// 		opt4 := _var.Steering_policy_state
// 		opt5 := _var.Steering_policy_template
// 		opt6 := _var.Steering_policy_time_created_greater_than_or_equal_to
// 		opt7 := _var.Steering_policy_time_created_less_than
// 		_, err := dns.GetSteeringPolicies(ctx, &dns.GetSteeringPoliciesArgs{
// 			CompartmentId:                   _var.Compartment_id,
// 			DisplayName:                     &opt0,
// 			DisplayNameContains:             &opt1,
// 			HealthCheckMonitorId:            &opt2,
// 			Id:                              &opt3,
// 			State:                           &opt4,
// 			Template:                        &opt5,
// 			TimeCreatedGreaterThanOrEqualTo: &opt6,
// 			TimeCreatedLessThan:             &opt7,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func GetSteeringPolicies(ctx *pulumi.Context, args *GetSteeringPoliciesArgs, opts ...pulumi.InvokeOption) (*GetSteeringPoliciesResult, error) {
	var rv GetSteeringPoliciesResult
	err := ctx.Invoke("oci:dns/getSteeringPolicies:getSteeringPolicies", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSteeringPolicies.
type GetSteeringPoliciesArgs struct {
	// The OCID of the compartment the resource belongs to.
	CompartmentId string `pulumi:"compartmentId"`
	// The displayName of a resource.
	DisplayName *string `pulumi:"displayName"`
	// The partial displayName of a resource. Will match any resource whose name (case-insensitive) contains the provided value.
	DisplayNameContains *string                     `pulumi:"displayNameContains"`
	Filters             []GetSteeringPoliciesFilter `pulumi:"filters"`
	// Search by health check monitor OCID. Will match any resource whose health check monitor ID matches the provided value.
	HealthCheckMonitorId *string `pulumi:"healthCheckMonitorId"`
	// The OCID of a resource.
	Id *string `pulumi:"id"`
	// The state of a resource.
	State *string `pulumi:"state"`
	// Search by steering template type. Will match any resource whose template type matches the provided value.
	Template *string `pulumi:"template"`
	// An [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) timestamp that states all returned resources were created on or after the indicated time.
	TimeCreatedGreaterThanOrEqualTo *string `pulumi:"timeCreatedGreaterThanOrEqualTo"`
	// An [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) timestamp that states all returned resources were created before the indicated time.
	TimeCreatedLessThan *string `pulumi:"timeCreatedLessThan"`
}

// A collection of values returned by getSteeringPolicies.
type GetSteeringPoliciesResult struct {
	// The OCID of the compartment containing the steering policy.
	CompartmentId string `pulumi:"compartmentId"`
	// A user-friendly name for the steering policy. Does not have to be unique and can be changed. Avoid entering confidential information.
	DisplayName         *string                     `pulumi:"displayName"`
	DisplayNameContains *string                     `pulumi:"displayNameContains"`
	Filters             []GetSteeringPoliciesFilter `pulumi:"filters"`
	// The OCID of the health check monitor providing health data about the answers of the steering policy. A steering policy answer with `rdata` matching a monitored endpoint will use the health data of that endpoint. A steering policy answer with `rdata` not matching any monitored endpoint will be assumed healthy.
	HealthCheckMonitorId *string `pulumi:"healthCheckMonitorId"`
	// The OCID of the resource.
	Id *string `pulumi:"id"`
	// The current state of the resource.
	State *string `pulumi:"state"`
	// The list of steering_policies.
	SteeringPolicies []GetSteeringPoliciesSteeringPolicy `pulumi:"steeringPolicies"`
	// A set of predefined rules based on the desired purpose of the steering policy. Each template utilizes Traffic Management's rules in a different order to produce the desired results when answering DNS queries.
	Template                        *string `pulumi:"template"`
	TimeCreatedGreaterThanOrEqualTo *string `pulumi:"timeCreatedGreaterThanOrEqualTo"`
	TimeCreatedLessThan             *string `pulumi:"timeCreatedLessThan"`
}
