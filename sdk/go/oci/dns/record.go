// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package dns

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Import
//
// Import is not supported for this resource.
type Record struct {
	pulumi.CustomResourceState

	// (Updatable) The OCID of the compartment the resource belongs to. If supplied, it must match the Zone's compartment ocid.
	CompartmentId pulumi.StringPtrOutput `pulumi:"compartmentId"`
	// The fully qualified domain name where the record can be located. Domain value is case insensitive.
	//
	// Deprecated: The 'oci_dns_record' resource has been deprecated. Please use 'oci_dns_rrset' instead.
	Domain pulumi.StringOutput `pulumi:"domain"`
	// A Boolean flag indicating whether or not parts of the record are unable to be explicitly managed.
	IsProtected pulumi.BoolOutput `pulumi:"isProtected"`
	// (Updatable) The record's data, as whitespace-delimited tokens in type-specific presentation format. All RDATA is normalized and the returned presentation of your RDATA may differ from its initial input. For more information about RDATA, see [Supported DNS Resource Record Types](https://docs.cloud.oracle.com/iaas/Content/DNS/Reference/supporteddnsresource.htm)
	Rdata pulumi.StringPtrOutput `pulumi:"rdata"`
	// A unique identifier for the record within its zone.
	RecordHash pulumi.StringOutput `pulumi:"recordHash"`
	// The latest version of the record's zone in which its RRSet differs from the preceding version.
	RrsetVersion pulumi.StringOutput `pulumi:"rrsetVersion"`
	// The canonical name for the record's type, such as A or CNAME. For more information, see [Resource Record (RR) TYPEs](https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml#dns-parameters-4).
	//
	// Deprecated: The 'oci_dns_record' resource has been deprecated. Please use 'oci_dns_rrset' instead.
	Rtype pulumi.StringOutput `pulumi:"rtype"`
	// (Updatable) The Time To Live for the record, in seconds.
	Ttl pulumi.IntPtrOutput `pulumi:"ttl"`
	// The name or OCID of the target zone.
	//
	// Deprecated: The 'oci_dns_record' resource has been deprecated. Please use 'oci_dns_rrset' instead.
	ZoneNameOrId pulumi.StringOutput `pulumi:"zoneNameOrId"`
}

// NewRecord registers a new resource with the given unique name, arguments, and options.
func NewRecord(ctx *pulumi.Context,
	name string, args *RecordArgs, opts ...pulumi.ResourceOption) (*Record, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Domain == nil {
		return nil, errors.New("invalid value for required argument 'Domain'")
	}
	if args.Rtype == nil {
		return nil, errors.New("invalid value for required argument 'Rtype'")
	}
	if args.ZoneNameOrId == nil {
		return nil, errors.New("invalid value for required argument 'ZoneNameOrId'")
	}
	var resource Record
	err := ctx.RegisterResource("oci:dns/record:Record", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRecord gets an existing Record resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRecord(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RecordState, opts ...pulumi.ResourceOption) (*Record, error) {
	var resource Record
	err := ctx.ReadResource("oci:dns/record:Record", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Record resources.
type recordState struct {
	// (Updatable) The OCID of the compartment the resource belongs to. If supplied, it must match the Zone's compartment ocid.
	CompartmentId *string `pulumi:"compartmentId"`
	// The fully qualified domain name where the record can be located. Domain value is case insensitive.
	//
	// Deprecated: The 'oci_dns_record' resource has been deprecated. Please use 'oci_dns_rrset' instead.
	Domain *string `pulumi:"domain"`
	// A Boolean flag indicating whether or not parts of the record are unable to be explicitly managed.
	IsProtected *bool `pulumi:"isProtected"`
	// (Updatable) The record's data, as whitespace-delimited tokens in type-specific presentation format. All RDATA is normalized and the returned presentation of your RDATA may differ from its initial input. For more information about RDATA, see [Supported DNS Resource Record Types](https://docs.cloud.oracle.com/iaas/Content/DNS/Reference/supporteddnsresource.htm)
	Rdata *string `pulumi:"rdata"`
	// A unique identifier for the record within its zone.
	RecordHash *string `pulumi:"recordHash"`
	// The latest version of the record's zone in which its RRSet differs from the preceding version.
	RrsetVersion *string `pulumi:"rrsetVersion"`
	// The canonical name for the record's type, such as A or CNAME. For more information, see [Resource Record (RR) TYPEs](https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml#dns-parameters-4).
	//
	// Deprecated: The 'oci_dns_record' resource has been deprecated. Please use 'oci_dns_rrset' instead.
	Rtype *string `pulumi:"rtype"`
	// (Updatable) The Time To Live for the record, in seconds.
	Ttl *int `pulumi:"ttl"`
	// The name or OCID of the target zone.
	//
	// Deprecated: The 'oci_dns_record' resource has been deprecated. Please use 'oci_dns_rrset' instead.
	ZoneNameOrId *string `pulumi:"zoneNameOrId"`
}

type RecordState struct {
	// (Updatable) The OCID of the compartment the resource belongs to. If supplied, it must match the Zone's compartment ocid.
	CompartmentId pulumi.StringPtrInput
	// The fully qualified domain name where the record can be located. Domain value is case insensitive.
	//
	// Deprecated: The 'oci_dns_record' resource has been deprecated. Please use 'oci_dns_rrset' instead.
	Domain pulumi.StringPtrInput
	// A Boolean flag indicating whether or not parts of the record are unable to be explicitly managed.
	IsProtected pulumi.BoolPtrInput
	// (Updatable) The record's data, as whitespace-delimited tokens in type-specific presentation format. All RDATA is normalized and the returned presentation of your RDATA may differ from its initial input. For more information about RDATA, see [Supported DNS Resource Record Types](https://docs.cloud.oracle.com/iaas/Content/DNS/Reference/supporteddnsresource.htm)
	Rdata pulumi.StringPtrInput
	// A unique identifier for the record within its zone.
	RecordHash pulumi.StringPtrInput
	// The latest version of the record's zone in which its RRSet differs from the preceding version.
	RrsetVersion pulumi.StringPtrInput
	// The canonical name for the record's type, such as A or CNAME. For more information, see [Resource Record (RR) TYPEs](https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml#dns-parameters-4).
	//
	// Deprecated: The 'oci_dns_record' resource has been deprecated. Please use 'oci_dns_rrset' instead.
	Rtype pulumi.StringPtrInput
	// (Updatable) The Time To Live for the record, in seconds.
	Ttl pulumi.IntPtrInput
	// The name or OCID of the target zone.
	//
	// Deprecated: The 'oci_dns_record' resource has been deprecated. Please use 'oci_dns_rrset' instead.
	ZoneNameOrId pulumi.StringPtrInput
}

func (RecordState) ElementType() reflect.Type {
	return reflect.TypeOf((*recordState)(nil)).Elem()
}

type recordArgs struct {
	// (Updatable) The OCID of the compartment the resource belongs to. If supplied, it must match the Zone's compartment ocid.
	CompartmentId *string `pulumi:"compartmentId"`
	// The fully qualified domain name where the record can be located. Domain value is case insensitive.
	//
	// Deprecated: The 'oci_dns_record' resource has been deprecated. Please use 'oci_dns_rrset' instead.
	Domain string `pulumi:"domain"`
	// (Updatable) The record's data, as whitespace-delimited tokens in type-specific presentation format. All RDATA is normalized and the returned presentation of your RDATA may differ from its initial input. For more information about RDATA, see [Supported DNS Resource Record Types](https://docs.cloud.oracle.com/iaas/Content/DNS/Reference/supporteddnsresource.htm)
	Rdata *string `pulumi:"rdata"`
	// The canonical name for the record's type, such as A or CNAME. For more information, see [Resource Record (RR) TYPEs](https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml#dns-parameters-4).
	//
	// Deprecated: The 'oci_dns_record' resource has been deprecated. Please use 'oci_dns_rrset' instead.
	Rtype string `pulumi:"rtype"`
	// (Updatable) The Time To Live for the record, in seconds.
	Ttl *int `pulumi:"ttl"`
	// The name or OCID of the target zone.
	//
	// Deprecated: The 'oci_dns_record' resource has been deprecated. Please use 'oci_dns_rrset' instead.
	ZoneNameOrId string `pulumi:"zoneNameOrId"`
}

// The set of arguments for constructing a Record resource.
type RecordArgs struct {
	// (Updatable) The OCID of the compartment the resource belongs to. If supplied, it must match the Zone's compartment ocid.
	CompartmentId pulumi.StringPtrInput
	// The fully qualified domain name where the record can be located. Domain value is case insensitive.
	//
	// Deprecated: The 'oci_dns_record' resource has been deprecated. Please use 'oci_dns_rrset' instead.
	Domain pulumi.StringInput
	// (Updatable) The record's data, as whitespace-delimited tokens in type-specific presentation format. All RDATA is normalized and the returned presentation of your RDATA may differ from its initial input. For more information about RDATA, see [Supported DNS Resource Record Types](https://docs.cloud.oracle.com/iaas/Content/DNS/Reference/supporteddnsresource.htm)
	Rdata pulumi.StringPtrInput
	// The canonical name for the record's type, such as A or CNAME. For more information, see [Resource Record (RR) TYPEs](https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml#dns-parameters-4).
	//
	// Deprecated: The 'oci_dns_record' resource has been deprecated. Please use 'oci_dns_rrset' instead.
	Rtype pulumi.StringInput
	// (Updatable) The Time To Live for the record, in seconds.
	Ttl pulumi.IntPtrInput
	// The name or OCID of the target zone.
	//
	// Deprecated: The 'oci_dns_record' resource has been deprecated. Please use 'oci_dns_rrset' instead.
	ZoneNameOrId pulumi.StringInput
}

func (RecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*recordArgs)(nil)).Elem()
}

type RecordInput interface {
	pulumi.Input

	ToRecordOutput() RecordOutput
	ToRecordOutputWithContext(ctx context.Context) RecordOutput
}

func (*Record) ElementType() reflect.Type {
	return reflect.TypeOf((*Record)(nil))
}

func (i *Record) ToRecordOutput() RecordOutput {
	return i.ToRecordOutputWithContext(context.Background())
}

func (i *Record) ToRecordOutputWithContext(ctx context.Context) RecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecordOutput)
}

func (i *Record) ToRecordPtrOutput() RecordPtrOutput {
	return i.ToRecordPtrOutputWithContext(context.Background())
}

func (i *Record) ToRecordPtrOutputWithContext(ctx context.Context) RecordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecordPtrOutput)
}

type RecordPtrInput interface {
	pulumi.Input

	ToRecordPtrOutput() RecordPtrOutput
	ToRecordPtrOutputWithContext(ctx context.Context) RecordPtrOutput
}

type recordPtrType RecordArgs

func (*recordPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Record)(nil))
}

func (i *recordPtrType) ToRecordPtrOutput() RecordPtrOutput {
	return i.ToRecordPtrOutputWithContext(context.Background())
}

func (i *recordPtrType) ToRecordPtrOutputWithContext(ctx context.Context) RecordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecordPtrOutput)
}

// RecordArrayInput is an input type that accepts RecordArray and RecordArrayOutput values.
// You can construct a concrete instance of `RecordArrayInput` via:
//
//          RecordArray{ RecordArgs{...} }
type RecordArrayInput interface {
	pulumi.Input

	ToRecordArrayOutput() RecordArrayOutput
	ToRecordArrayOutputWithContext(context.Context) RecordArrayOutput
}

type RecordArray []RecordInput

func (RecordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Record)(nil)).Elem()
}

func (i RecordArray) ToRecordArrayOutput() RecordArrayOutput {
	return i.ToRecordArrayOutputWithContext(context.Background())
}

func (i RecordArray) ToRecordArrayOutputWithContext(ctx context.Context) RecordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecordArrayOutput)
}

// RecordMapInput is an input type that accepts RecordMap and RecordMapOutput values.
// You can construct a concrete instance of `RecordMapInput` via:
//
//          RecordMap{ "key": RecordArgs{...} }
type RecordMapInput interface {
	pulumi.Input

	ToRecordMapOutput() RecordMapOutput
	ToRecordMapOutputWithContext(context.Context) RecordMapOutput
}

type RecordMap map[string]RecordInput

func (RecordMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Record)(nil)).Elem()
}

func (i RecordMap) ToRecordMapOutput() RecordMapOutput {
	return i.ToRecordMapOutputWithContext(context.Background())
}

func (i RecordMap) ToRecordMapOutputWithContext(ctx context.Context) RecordMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecordMapOutput)
}

type RecordOutput struct {
	*pulumi.OutputState
}

func (RecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Record)(nil))
}

func (o RecordOutput) ToRecordOutput() RecordOutput {
	return o
}

func (o RecordOutput) ToRecordOutputWithContext(ctx context.Context) RecordOutput {
	return o
}

func (o RecordOutput) ToRecordPtrOutput() RecordPtrOutput {
	return o.ToRecordPtrOutputWithContext(context.Background())
}

func (o RecordOutput) ToRecordPtrOutputWithContext(ctx context.Context) RecordPtrOutput {
	return o.ApplyT(func(v Record) *Record {
		return &v
	}).(RecordPtrOutput)
}

type RecordPtrOutput struct {
	*pulumi.OutputState
}

func (RecordPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Record)(nil))
}

func (o RecordPtrOutput) ToRecordPtrOutput() RecordPtrOutput {
	return o
}

func (o RecordPtrOutput) ToRecordPtrOutputWithContext(ctx context.Context) RecordPtrOutput {
	return o
}

type RecordArrayOutput struct{ *pulumi.OutputState }

func (RecordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Record)(nil))
}

func (o RecordArrayOutput) ToRecordArrayOutput() RecordArrayOutput {
	return o
}

func (o RecordArrayOutput) ToRecordArrayOutputWithContext(ctx context.Context) RecordArrayOutput {
	return o
}

func (o RecordArrayOutput) Index(i pulumi.IntInput) RecordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Record {
		return vs[0].([]Record)[vs[1].(int)]
	}).(RecordOutput)
}

type RecordMapOutput struct{ *pulumi.OutputState }

func (RecordMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]Record)(nil))
}

func (o RecordMapOutput) ToRecordMapOutput() RecordMapOutput {
	return o
}

func (o RecordMapOutput) ToRecordMapOutputWithContext(ctx context.Context) RecordMapOutput {
	return o
}

func (o RecordMapOutput) MapIndex(k pulumi.StringInput) RecordOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) Record {
		return vs[0].(map[string]Record)[vs[1].(string)]
	}).(RecordOutput)
}

func init() {
	pulumi.RegisterOutputType(RecordOutput{})
	pulumi.RegisterOutputType(RecordPtrOutput{})
	pulumi.RegisterOutputType(RecordArrayOutput{})
	pulumi.RegisterOutputType(RecordMapOutput{})
}
