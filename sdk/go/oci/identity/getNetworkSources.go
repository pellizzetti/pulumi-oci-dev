// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package identity

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Network Sources in Oracle Cloud Infrastructure Identity service.
//
// Lists the network sources in your tenancy. You must specify your tenancy's OCID as the value for
// the compartment ID (remember that the tenancy is simply the root compartment).
// See [Where to Get the Tenancy's OCID and User's OCID](https://docs.cloud.oracle.com/iaas/Content/API/Concepts/apisigningkey.htm#five).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci/identity"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		opt0 := _var.Network_source_name
// 		opt1 := _var.Network_source_state
// 		_, err := identity.GetNetworkSources(ctx, &identity.GetNetworkSourcesArgs{
// 			CompartmentId: _var.Tenancy_ocid,
// 			Name:          &opt0,
// 			State:         &opt1,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func GetNetworkSources(ctx *pulumi.Context, args *GetNetworkSourcesArgs, opts ...pulumi.InvokeOption) (*GetNetworkSourcesResult, error) {
	var rv GetNetworkSourcesResult
	err := ctx.Invoke("oci:identity/getNetworkSources:getNetworkSources", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNetworkSources.
type GetNetworkSourcesArgs struct {
	// The OCID of the compartment (remember that the tenancy is simply the root compartment).
	CompartmentId string                    `pulumi:"compartmentId"`
	Filters       []GetNetworkSourcesFilter `pulumi:"filters"`
	// A filter to only return resources that match the given name exactly.
	Name *string `pulumi:"name"`
	// A filter to only return resources that match the given lifecycle state.  The state value is case-insensitive.
	State *string `pulumi:"state"`
}

// A collection of values returned by getNetworkSources.
type GetNetworkSourcesResult struct {
	// The OCID of the tenancy containing the network source. The tenancy is the root compartment.
	CompartmentId string                    `pulumi:"compartmentId"`
	Filters       []GetNetworkSourcesFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The name you assign to the network source during creation. The name must be unique across the tenancy and cannot be changed.
	Name *string `pulumi:"name"`
	// The list of network_sources.
	NetworkSources []GetNetworkSourcesNetworkSource `pulumi:"networkSources"`
	// The network source object's current state. After creating a network source, make sure its `lifecycleState` changes from CREATING to ACTIVE before using it.
	State *string `pulumi:"state"`
}
