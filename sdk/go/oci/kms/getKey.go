// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package kms

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Key resource in Oracle Cloud Infrastructure Kms service.
//
// Gets information about the specified master encryption key.
//
// As a management operation, this call is subject to a Key Management limit that applies to the total number
// of requests across all management read operations. Key Management might throttle this call to reject an
// otherwise valid request when the total rate of management read operations exceeds 10 requests per second for
// a given tenancy.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci/kms"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := kms.LookupKey(ctx, &kms.LookupKeyArgs{
// 			KeyId:              oci_kms_key.Test_key.Id,
// 			ManagementEndpoint: _var.Key_management_endpoint,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupKey(ctx *pulumi.Context, args *LookupKeyArgs, opts ...pulumi.InvokeOption) (*LookupKeyResult, error) {
	var rv LookupKeyResult
	err := ctx.Invoke("oci:kms/getKey:getKey", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getKey.
type LookupKeyArgs struct {
	// The OCID of the key.
	KeyId string `pulumi:"keyId"`
	// The service endpoint to perform management operations against. Management operations include 'Create,' 'Update,' 'List,' 'Get,' and 'Delete' operations. See Vault Management endpoint.
	ManagementEndpoint string `pulumi:"managementEndpoint"`
}

// A collection of values returned by getKey.
type LookupKeyResult struct {
	// The OCID of the compartment that contains this master encryption key.
	CompartmentId string `pulumi:"compartmentId"`
	// The OCID of the key version used in cryptographic operations. During key rotation, the service might be in a transitional state where this or a newer key version are used intermittently. The `currentKeyVersion` property is updated when the service is guaranteed to use the new key version for all subsequent encryption operations.
	CurrentKeyVersion string `pulumi:"currentKeyVersion"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags  map[string]interface{} `pulumi:"definedTags"`
	DesiredState string                 `pulumi:"desiredState"`
	// A user-friendly name for the key. It does not have to be unique, and it is changeable. Avoid entering confidential information.
	DisplayName string `pulumi:"displayName"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The OCID of the key.
	Id string `pulumi:"id"`
	// A boolean that will be true when key is primary, and will be false when key is a replica from a primary key.
	IsPrimary bool   `pulumi:"isPrimary"`
	KeyId     string `pulumi:"keyId"`
	// The cryptographic properties of a key.
	KeyShape           GetKeyKeyShape `pulumi:"keyShape"`
	ManagementEndpoint string         `pulumi:"managementEndpoint"`
	// The key's protection mode indicates how the key persists and where cryptographic operations that use the key are performed. A protection mode of `HSM` means that the key persists on a hardware security module (HSM) and all cryptographic operations are performed inside the HSM. A protection mode of `SOFTWARE` means that the key persists on the server, protected by the vault's RSA wrapping key which persists  on the HSM. All cryptographic operations that use a key with a protection mode of `SOFTWARE` are performed on the server. By default,  a key's protection mode is set to `HSM`. You can't change a key's protection mode after the key is created or imported.
	ProtectionMode string `pulumi:"protectionMode"`
	// Key replica details
	ReplicaDetails GetKeyReplicaDetails `pulumi:"replicaDetails"`
	// Details where key was backed up.
	RestoreFromFile GetKeyRestoreFromFile `pulumi:"restoreFromFile"`
	// Details where key was backed up
	RestoreFromObjectStore GetKeyRestoreFromObjectStore `pulumi:"restoreFromObjectStore"`
	// When flipped, triggers restore if restore options are provided. Values of 0 or 1 are supported.
	RestoreTrigger bool `pulumi:"restoreTrigger"`
	// The OCID of the key from which this key was restored.
	RestoredFromKeyId string `pulumi:"restoredFromKeyId"`
	// The key's current lifecycle state.  Example: `ENABLED`
	State string `pulumi:"state"`
	// The date and time the key was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2018-04-03T21:10:29.600Z`
	TimeCreated string `pulumi:"timeCreated"`
	// An optional property indicating when to delete the key, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfDeletion string `pulumi:"timeOfDeletion"`
	// The OCID of the vault that contains this key.
	VaultId string `pulumi:"vaultId"`
}
