// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package kms

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Key Version resource in Oracle Cloud Infrastructure Kms service.
//
// Gets information about the specified key version.
//
// As a management operation, this call is subject to a Key Management limit that applies to the total number
// of requests across all management read operations. Key Management might throttle this call to reject an
// otherwise valid request when the total rate of management read operations exceeds 10 requests per second
// for a given tenancy.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci/kms"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := kms.LookupKeyVersion(ctx, &kms.LookupKeyVersionArgs{
// 			KeyId:              oci_kms_key.Test_key.Id,
// 			KeyVersionId:       oci_kms_key_version.Test_key_version.Id,
// 			ManagementEndpoint: _var.Key_version_management_endpoint,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupKeyVersion(ctx *pulumi.Context, args *LookupKeyVersionArgs, opts ...pulumi.InvokeOption) (*LookupKeyVersionResult, error) {
	var rv LookupKeyVersionResult
	err := ctx.Invoke("oci:kms/getKeyVersion:getKeyVersion", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getKeyVersion.
type LookupKeyVersionArgs struct {
	// The OCID of the key.
	KeyId string `pulumi:"keyId"`
	// The OCID of the key version.
	KeyVersionId string `pulumi:"keyVersionId"`
	// The service endpoint to perform management operations against. Management operations include 'Create,' 'Update,' 'List,' 'Get,' and 'Delete' operations. See Vault Management endpoint.
	ManagementEndpoint string `pulumi:"managementEndpoint"`
}

// A collection of values returned by getKeyVersion.
type LookupKeyVersionResult struct {
	// The OCID of the compartment that contains this key version.
	CompartmentId string `pulumi:"compartmentId"`
	// The OCID of the key version.
	Id string `pulumi:"id"`
	// A boolean that will be true when key version is primary, and will be false when key version is a replica from a primary key version.
	IsPrimary bool `pulumi:"isPrimary"`
	// The OCID of the master encryption key associated with this key version.
	KeyId string `pulumi:"keyId"`
	// The OCID of the key version.
	KeyVersionId       string `pulumi:"keyVersionId"`
	ManagementEndpoint string `pulumi:"managementEndpoint"`
	// The public key in PEM format. (This value pertains only to RSA and ECDSA keys.)
	PublicKey string `pulumi:"publicKey"`
	// KeyVersion replica details
	ReplicaDetails    GetKeyVersionReplicaDetails `pulumi:"replicaDetails"`
	RestoredFromKeyId string                      `pulumi:"restoredFromKeyId"`
	// The OCID of the key version from which this key version was restored.
	RestoredFromKeyVersionId string `pulumi:"restoredFromKeyVersionId"`
	// The key version's current lifecycle state.  Example: `ENABLED`
	State string `pulumi:"state"`
	// The date and time this key version was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: "2018-04-03T21:10:29.600Z"
	TimeCreated string `pulumi:"timeCreated"`
	// An optional property to indicate when to delete the key version, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfDeletion string `pulumi:"timeOfDeletion"`
	// The OCID of the vault that contains this key version.
	VaultId string `pulumi:"vaultId"`
}
