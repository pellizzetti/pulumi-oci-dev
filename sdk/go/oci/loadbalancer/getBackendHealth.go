// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package loadbalancer

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Backend Health resource in Oracle Cloud Infrastructure Load Balancer service.
//
// Gets the current health status of the specified backend server.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci/loadbalancer"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := loadbalancer.GetBackendHealth(ctx, &loadbalancer.GetBackendHealthArgs{
// 			BackendName:    oci_load_balancer_backend.Test_backend.Name,
// 			BackendSetName: oci_load_balancer_backend_set.Test_backend_set.Name,
// 			LoadBalancerId: oci_load_balancer_load_balancer.Test_load_balancer.Id,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func GetBackendHealth(ctx *pulumi.Context, args *GetBackendHealthArgs, opts ...pulumi.InvokeOption) (*GetBackendHealthResult, error) {
	var rv GetBackendHealthResult
	err := ctx.Invoke("oci:loadbalancer/getBackendHealth:getBackendHealth", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getBackendHealth.
type GetBackendHealthArgs struct {
	// The IP address and port of the backend server to retrieve the health status for.  Example: `10.0.0.3:8080`
	BackendName string `pulumi:"backendName"`
	// The name of the backend set associated with the backend server to retrieve the health status for.  Example: `exampleBackendSet`
	BackendSetName string `pulumi:"backendSetName"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the load balancer associated with the backend server health status to be retrieved.
	LoadBalancerId string `pulumi:"loadBalancerId"`
}

// A collection of values returned by getBackendHealth.
type GetBackendHealthResult struct {
	BackendName    string `pulumi:"backendName"`
	BackendSetName string `pulumi:"backendSetName"`
	// A list of the most recent health check results returned for the specified backend server.
	HealthCheckResults []GetBackendHealthHealthCheckResult `pulumi:"healthCheckResults"`
	// The provider-assigned unique ID for this managed resource.
	Id             string `pulumi:"id"`
	LoadBalancerId string `pulumi:"loadBalancerId"`
	// The general health status of the specified backend server as reported by the primary and standby load balancers.
	// *   **OK:** Both health checks returned `OK`.
	// *   **WARNING:** One health check returned `OK` and one did not.
	// *   **CRITICAL:** Neither health check returned `OK`.
	// *   **UNKNOWN:** One or both health checks returned `UNKNOWN`, or the system was unable to retrieve metrics at this time.
	Status string `pulumi:"status"`
}
