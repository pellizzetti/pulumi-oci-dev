// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package loadbalancer

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi-oci/sdk/go/oci"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "oci:loadbalancer/backend:Backend":
		r = &Backend{}
	case "oci:loadbalancer/backendSet:BackendSet":
		r = &BackendSet{}
	case "oci:loadbalancer/certificate:Certificate":
		r = &Certificate{}
	case "oci:loadbalancer/hostname:Hostname":
		r = &Hostname{}
	case "oci:loadbalancer/listener:Listener":
		r = &Listener{}
	case "oci:loadbalancer/loadBalancer:LoadBalancer":
		r = &LoadBalancer{}
	case "oci:loadbalancer/loadBalancerRoutingPolicy:LoadBalancerRoutingPolicy":
		r = &LoadBalancerRoutingPolicy{}
	case "oci:loadbalancer/pathRouteSet:PathRouteSet":
		r = &PathRouteSet{}
	case "oci:loadbalancer/ruleSet:RuleSet":
		r = &RuleSet{}
	case "oci:loadbalancer/sslCipherSuite:SslCipherSuite":
		r = &SslCipherSuite{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

func init() {
	version, err := oci.PkgVersion()
	if err != nil {
		fmt.Printf("failed to determine package version. defaulting to v1: %v\n", err)
	}
	pulumi.RegisterResourceModule(
		"oci",
		"loadbalancer/backend",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"oci",
		"loadbalancer/backendSet",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"oci",
		"loadbalancer/certificate",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"oci",
		"loadbalancer/hostname",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"oci",
		"loadbalancer/listener",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"oci",
		"loadbalancer/loadBalancer",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"oci",
		"loadbalancer/loadBalancerRoutingPolicy",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"oci",
		"loadbalancer/pathRouteSet",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"oci",
		"loadbalancer/ruleSet",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"oci",
		"loadbalancer/sslCipherSuite",
		&module{version},
	)
}
