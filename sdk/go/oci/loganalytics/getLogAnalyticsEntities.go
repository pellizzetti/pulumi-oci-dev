// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package loganalytics

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Log Analytics Entities in Oracle Cloud Infrastructure Log Analytics service.
//
// Return a list of log analytics entities.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci/loganalytics"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		opt0 := oci_log_analytics_cloud_resource.Test_cloud_resource.Id
// 		opt1 := _var.Log_analytics_entity_hostname
// 		opt2 := _var.Log_analytics_entity_hostname_contains
// 		opt3 := _var.Log_analytics_entity_is_management_agent_id_null
// 		opt4 := _var.Log_analytics_entity_lifecycle_details_contains
// 		opt5 := _var.Log_analytics_entity_name
// 		opt6 := _var.Log_analytics_entity_name_contains
// 		opt7 := oci_log_analytics_source.Test_source.Id
// 		opt8 := _var.Log_analytics_entity_state
// 		_, err := loganalytics.GetLogAnalyticsEntities(ctx, &loganalytics.GetLogAnalyticsEntitiesArgs{
// 			CompartmentId:            _var.Compartment_id,
// 			Namespace:                _var.Log_analytics_entity_namespace,
// 			CloudResourceId:          &opt0,
// 			EntityTypeNames:          _var.Log_analytics_entity_entity_type_name,
// 			Hostname:                 &opt1,
// 			HostnameContains:         &opt2,
// 			IsManagementAgentIdNull:  &opt3,
// 			LifecycleDetailsContains: &opt4,
// 			Name:                     &opt5,
// 			NameContains:             &opt6,
// 			SourceId:                 &opt7,
// 			State:                    &opt8,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func GetLogAnalyticsEntities(ctx *pulumi.Context, args *GetLogAnalyticsEntitiesArgs, opts ...pulumi.InvokeOption) (*GetLogAnalyticsEntitiesResult, error) {
	var rv GetLogAnalyticsEntitiesResult
	err := ctx.Invoke("oci:loganalytics/getLogAnalyticsEntities:getLogAnalyticsEntities", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getLogAnalyticsEntities.
type GetLogAnalyticsEntitiesArgs struct {
	// A filter to return only log analytics entities whose cloudResourceId matches the cloudResourceId given.
	CloudResourceId *string `pulumi:"cloudResourceId"`
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// A filter to return only log analytics entities whose entityTypeName matches the entire log analytics entity type name of one of the entityTypeNames given in the list. The match is case-insensitive.
	EntityTypeNames []string                        `pulumi:"entityTypeNames"`
	Filters         []GetLogAnalyticsEntitiesFilter `pulumi:"filters"`
	// A filter to return only log analytics entities whose hostname matches the entire hostname given.
	Hostname *string `pulumi:"hostname"`
	// A filter to return only log analytics entities whose hostname contains the substring given. The match is case-insensitive.
	HostnameContains *string `pulumi:"hostnameContains"`
	// A filter to return only those log analytics entities whose managementAgentId is null or is not null.
	IsManagementAgentIdNull *string `pulumi:"isManagementAgentIdNull"`
	// A filter to return only log analytics entities whose lifecycleDetails contains the specified string.
	LifecycleDetailsContains *string `pulumi:"lifecycleDetailsContains"`
	// A filter to return only log analytics entities whose name matches the entire name given. The match is case-insensitive.
	Name *string `pulumi:"name"`
	// A filter to return only log analytics entities whose name contains the name given. The match is case-insensitive.
	NameContains *string `pulumi:"nameContains"`
	// The Logging Analytics namespace used for the request.
	Namespace string `pulumi:"namespace"`
	// A filter to return only log analytics entities whose sourceId matches the sourceId given.
	SourceId *string `pulumi:"sourceId"`
	// A filter to return only those log analytics entities with the specified lifecycle state. The state value is case-insensitive.
	State *string `pulumi:"state"`
}

// A collection of values returned by getLogAnalyticsEntities.
type GetLogAnalyticsEntitiesResult struct {
	// The OCID of the Cloud resource which this entity is a representation of. This may be blank when the entity represents a non-cloud resource that the customer may have on their premises.
	CloudResourceId *string `pulumi:"cloudResourceId"`
	// Compartment Identifier [OCID] (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId string `pulumi:"compartmentId"`
	// Log analytics entity type name.
	EntityTypeNames []string                        `pulumi:"entityTypeNames"`
	Filters         []GetLogAnalyticsEntitiesFilter `pulumi:"filters"`
	// The hostname where the entity represented here is actually present. This would be the output one would get if they run `echo $HOSTNAME` on Linux or an equivalent OS command. This may be different from management agents host since logs may be collected remotely.
	Hostname         *string `pulumi:"hostname"`
	HostnameContains *string `pulumi:"hostnameContains"`
	// The provider-assigned unique ID for this managed resource.
	Id                       string  `pulumi:"id"`
	IsManagementAgentIdNull  *string `pulumi:"isManagementAgentIdNull"`
	LifecycleDetailsContains *string `pulumi:"lifecycleDetailsContains"`
	// The list of log_analytics_entity_collection.
	LogAnalyticsEntityCollections []GetLogAnalyticsEntitiesLogAnalyticsEntityCollection `pulumi:"logAnalyticsEntityCollections"`
	// Log analytics entity name.
	Name         *string `pulumi:"name"`
	NameContains *string `pulumi:"nameContains"`
	Namespace    string  `pulumi:"namespace"`
	// This indicates the type of source. It is primarily for Enterprise Manager Repository ID.
	SourceId *string `pulumi:"sourceId"`
	// The current state of the log analytics entity.
	State *string `pulumi:"state"`
}
