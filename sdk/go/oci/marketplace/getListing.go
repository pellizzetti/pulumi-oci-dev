// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package marketplace

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Listing resource in Oracle Cloud Infrastructure Marketplace service.
//
// Gets detailed information about a listing, including the listing's name, version, description, and
// resources.
//
// If you plan to launch an instance from an image listing, you must first subscribe to the listing. When
// you launch the instance, you also need to provide the image ID of the listing resource version that you want.
//
// Subscribing to the listing requires you to first get a signature from the terms of use agreement for the
// listing resource version. To get the signature, issue a [GetAppCatalogListingAgreements](https://docs.cloud.oracle.com/en-us/iaas/api/#/en/iaas/latest/AppCatalogListingResourceVersionAgreements/GetAppCatalogListingAgreements) API call.
// The [AppCatalogListingResourceVersionAgreements](https://docs.cloud.oracle.com/en-us/iaas/api/#/en/iaas/latest/AppCatalogListingResourceVersionAgreements) object, including
// its signature, is returned in the response. With the signature for the terms of use agreement for the desired
// listing resource version, create a subscription by issuing a
// [CreateAppCatalogSubscription](https://docs.cloud.oracle.com/en-us/iaas/api/#/en/iaas/latest/AppCatalogSubscription/CreateAppCatalogSubscription) API call.
//
// To get the image ID to launch an instance, issue a [GetAppCatalogListingResourceVersion](https://docs.cloud.oracle.com/en-us/iaas/api/#/en/iaas/latest/AppCatalogListingResourceVersion/GetAppCatalogListingResourceVersion) API call.
// Lastly, to launch the instance, use the image ID of the listing resource version to issue a [LaunchInstance](https://docs.cloud.oracle.com/en-us/iaas/api/#/en/iaas/latest/Instance/LaunchInstance) API call.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci/marketplace"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		opt0 := _var.Compartment_id
// 		_, err := marketplace.GetListing(ctx, &marketplace.GetListingArgs{
// 			ListingId:     oci_marketplace_listing.Test_listing.Id,
// 			CompartmentId: &opt0,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func GetListing(ctx *pulumi.Context, args *GetListingArgs, opts ...pulumi.InvokeOption) (*GetListingResult, error) {
	var rv GetListingResult
	err := ctx.Invoke("oci:marketplace/getListing:getListing", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getListing.
type GetListingArgs struct {
	// The unique identifier for the compartment.
	CompartmentId *string `pulumi:"compartmentId"`
	// The unique identifier for the listing.
	ListingId string `pulumi:"listingId"`
}

// A collection of values returned by getListing.
type GetListingResult struct {
	// The model for upload data for images and icons.
	Banners []GetListingBanner `pulumi:"banners"`
	// Product categories that the listing belongs to.
	Categories    []string `pulumi:"categories"`
	CompartmentId *string  `pulumi:"compartmentId"`
	// The default package version.
	DefaultPackageVersion string `pulumi:"defaultPackageVersion"`
	// Links to additional documentation provided by the publisher specifically for the listing.
	DocumentationLinks []GetListingDocumentationLink `pulumi:"documentationLinks"`
	// The model for upload data for images and icons.
	Icons []GetListingIcon `pulumi:"icons"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Indicates whether the listing is included in Featured Listings.
	IsFeatured bool `pulumi:"isFeatured"`
	// Keywords associated with the listing.
	Keywords string `pulumi:"keywords"`
	// Languages supported by the listing.
	Languages []GetListingLanguage `pulumi:"languages"`
	// A description of the publisher's licensing model for the listing.
	LicenseModelDescription string `pulumi:"licenseModelDescription"`
	// Reference links.
	Links     []GetListingLink `pulumi:"links"`
	ListingId string           `pulumi:"listingId"`
	// In which catalog the listing should exist.
	ListingType string `pulumi:"listingType"`
	// A long description of the listing.
	LongDescription string `pulumi:"longDescription"`
	// Text that describes the resource.
	Name string `pulumi:"name"`
	// The listing's package type.
	PackageType string `pulumi:"packageType"`
	// Summary details about the publisher of the listing.
	Publishers []GetListingPublisher `pulumi:"publishers"`
	// The regions where the listing is eligible to be deployed.
	Regions []GetListingRegion `pulumi:"regions"`
	// Release notes for the listing.
	ReleaseNotes string `pulumi:"releaseNotes"`
	// Screenshots of the listing.
	Screenshots []GetListingScreenshot `pulumi:"screenshots"`
	// A short description of the listing.
	ShortDescription string `pulumi:"shortDescription"`
	// Contact information to use to get support from the publisher for the listing.
	SupportContacts []GetListingSupportContact `pulumi:"supportContacts"`
	// Links to support resources for the listing.
	SupportLinks []GetListingSupportLink `pulumi:"supportLinks"`
	// List of operating systems supported.
	SupportedOperatingSystems []GetListingSupportedOperatingSystem `pulumi:"supportedOperatingSystems"`
	// System requirements for the listing.
	SystemRequirements string `pulumi:"systemRequirements"`
	// The tagline of the listing.
	Tagline string `pulumi:"tagline"`
	// The release date of the listing.
	TimeReleased string `pulumi:"timeReleased"`
	// Usage information for the listing.
	UsageInformation string `pulumi:"usageInformation"`
	// The version of the listing.
	Version string `pulumi:"version"`
	// Videos of the listing.
	Videos []GetListingVideo `pulumi:"videos"`
}
