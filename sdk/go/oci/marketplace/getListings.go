// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package marketplace

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Listings in Oracle Cloud Infrastructure Marketplace service.
//
// Gets a list of listings from Oracle Cloud Infrastructure Marketplace by searching keywords and
// filtering according to listing attributes.
//
// If you plan to launch an instance from an image listing, you must first subscribe to the listing. When
// you launch the instance, you also need to provide the image ID of the listing resource version that you want.
//
// Subscribing to the listing requires you to first get a signature from the terms of use agreement for the
// listing resource version. To get the signature, issue a [GetAppCatalogListingAgreements](https://docs.cloud.oracle.com/en-us/iaas/api/#/en/iaas/latest/AppCatalogListingResourceVersionAgreements/GetAppCatalogListingAgreements) API call.
// The [AppCatalogListingResourceVersionAgreements](https://docs.cloud.oracle.com/en-us/iaas/api/#/en/iaas/latest/AppCatalogListingResourceVersionAgreements) object, including
// its signature, is returned in the response. With the signature for the terms of use agreement for the desired
// listing resource version, create a subscription by issuing a
// [CreateAppCatalogSubscription](https://docs.cloud.oracle.com/en-us/iaas/api/#/en/iaas/latest/AppCatalogSubscription/CreateAppCatalogSubscription) API call.
//
// To get the image ID to launch an instance, issue a [GetAppCatalogListingResourceVersion](https://docs.cloud.oracle.com/en-us/iaas/api/#/en/iaas/latest/AppCatalogListingResourceVersion/GetAppCatalogListingResourceVersion) API call.
// Lastly, to launch the instance, use the image ID of the listing resource version to issue a [LaunchInstance](https://docs.cloud.oracle.com/en-us/iaas/api/#/en/iaas/latest/Instance/LaunchInstance) API call.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci/marketplace"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		opt0 := _var.Compartment_id
// 		opt1 := _var.Listing_is_featured
// 		opt2 := oci_marketplace_listing.Test_listing.Id
// 		opt3 := _var.Listing_package_type
// 		opt4 := oci_marketplace_publisher.Test_publisher.Id
// 		_, err := marketplace.GetListings(ctx, &marketplace.GetListingsArgs{
// 			Categories:       _var.Listing_category,
// 			CompartmentId:    &opt0,
// 			IsFeatured:       &opt1,
// 			ListingId:        &opt2,
// 			ListingTypes:     _var.Listing_listing_types,
// 			Names:            _var.Listing_name,
// 			OperatingSystems: _var.Listing_operating_systems,
// 			PackageType:      &opt3,
// 			Pricings:         _var.Listing_pricing,
// 			PublisherId:      &opt4,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func GetListings(ctx *pulumi.Context, args *GetListingsArgs, opts ...pulumi.InvokeOption) (*GetListingsResult, error) {
	var rv GetListingsResult
	err := ctx.Invoke("oci:marketplace/getListings:getListings", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getListings.
type GetListingsArgs struct {
	// Name of the product category or categories. If you specify multiple categories, then Marketplace returns any listing with one or more matching categories.
	Categories []string `pulumi:"categories"`
	// The unique identifier for the compartment.
	CompartmentId *string             `pulumi:"compartmentId"`
	Filters       []GetListingsFilter `pulumi:"filters"`
	// Indicates whether to show only featured listings. If this is set to `false` or is omitted, then all listings will be returned.
	IsFeatured *bool `pulumi:"isFeatured"`
	// The unique identifier for the listing.
	ListingId *string `pulumi:"listingId"`
	// The type of the listing
	ListingTypes []string `pulumi:"listingTypes"`
	// The name of the listing.
	Names []string `pulumi:"names"`
	// OS of the listing.
	OperatingSystems []string `pulumi:"operatingSystems"`
	// A filter to return only packages that match the given package type exactly.
	PackageType *string `pulumi:"packageType"`
	// Name of the pricing type. If multiple pricing types are provided, then any listing with one or more matching pricing models will be returned.
	Pricings []string `pulumi:"pricings"`
	// Limit results to just this publisher.
	PublisherId *string `pulumi:"publisherId"`
}

// A collection of values returned by getListings.
type GetListingsResult struct {
	Categories    []string            `pulumi:"categories"`
	CompartmentId *string             `pulumi:"compartmentId"`
	Filters       []GetListingsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Indicates whether the listing is included in Featured Listings.
	IsFeatured   *bool    `pulumi:"isFeatured"`
	ListingId    *string  `pulumi:"listingId"`
	ListingTypes []string `pulumi:"listingTypes"`
	// The list of listings.
	Listings []GetListingsListing `pulumi:"listings"`
	// Text that describes the resource.
	Names            []string `pulumi:"names"`
	OperatingSystems []string `pulumi:"operatingSystems"`
	// The listing's package type.
	PackageType *string  `pulumi:"packageType"`
	Pricings    []string `pulumi:"pricings"`
	PublisherId *string  `pulumi:"publisherId"`
}
