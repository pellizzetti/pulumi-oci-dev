// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package marketplace

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Publication resource in Oracle Cloud Infrastructure Marketplace service.
//
// Creates a publication of the given type with an optional default package
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci/marketplace"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := marketplace.NewPublication(ctx, "testPublication", &marketplace.PublicationArgs{
// 			CompartmentId:           pulumi.Any(_var.Compartment_id),
// 			IsAgreementAcknowledged: pulumi.Any(_var.Publication_is_agreement_acknowledged),
// 			ListingType:             pulumi.Any(_var.Publication_listing_type),
// 			PackageDetails: &marketplace.PublicationPackageDetailsArgs{
// 				Eulas: marketplace.PublicationPackageDetailsEulaArray{
// 					&marketplace.PublicationPackageDetailsEulaArgs{
// 						EulaType:    pulumi.Any(_var.Publication_package_details_eula_eula_type),
// 						LicenseText: pulumi.Any(_var.Publication_package_details_eula_license_text),
// 					},
// 				},
// 				OperatingSystem: &marketplace.PublicationPackageDetailsOperatingSystemArgs{
// 					Name: pulumi.Any(_var.Publication_package_details_operating_system_name),
// 				},
// 				PackageType:    pulumi.Any(_var.Publication_package_details_package_type),
// 				PackageVersion: pulumi.Any(_var.Publication_package_details_package_version),
// 				ImageId:        pulumi.Any(oci_core_image.Test_image.Id),
// 			},
// 			ShortDescription: pulumi.Any(_var.Publication_short_description),
// 			SupportContacts: marketplace.PublicationSupportContactArray{
// 				&marketplace.PublicationSupportContactArgs{
// 					Email:   pulumi.Any(_var.Publication_support_contacts_email),
// 					Name:    pulumi.Any(_var.Publication_support_contacts_name),
// 					Phone:   pulumi.Any(_var.Publication_support_contacts_phone),
// 					Subject: pulumi.Any(_var.Publication_support_contacts_subject),
// 				},
// 			},
// 			DefinedTags: pulumi.AnyMap{
// 				"Operations.CostCenter": pulumi.Any("42"),
// 			},
// 			FreeformTags: pulumi.AnyMap{
// 				"Department": pulumi.Any("Finance"),
// 			},
// 			LongDescription: pulumi.Any(_var.Publication_long_description),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Publications can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import oci:marketplace/publication:Publication test_publication "id"
// ```
type Publication struct {
	pulumi.CustomResourceState

	// (Updatable) The OCID of the compartment to create the resource within.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) The defined tags associated with this resource, if any. Each key is predefined and scoped to namespaces. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) The freeform tags associated with this resource, if any. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// The model for upload data for images and icons.
	Icon PublicationIconOutput `pulumi:"icon"`
	// Acknowledgement that invoker has the right and authority to share this Community Image in accordance with their agreement with Oracle applicable to the Services and the related Service Specifications
	IsAgreementAcknowledged pulumi.BoolOutput `pulumi:"isAgreementAcknowledged"`
	// In which catalog the listing should exist.
	ListingType pulumi.StringOutput `pulumi:"listingType"`
	// (Updatable) short description of the catalog listing
	LongDescription pulumi.StringOutput `pulumi:"longDescription"`
	// (Updatable) The name of the contact.
	Name pulumi.StringOutput `pulumi:"name"`
	// A base object for the properties of the package
	PackageDetails PublicationPackageDetailsOutput `pulumi:"packageDetails"`
	// Type of the artifact of the listing
	PackageType pulumi.StringOutput `pulumi:"packageType"`
	// (Updatable) short description of the catalog listing
	ShortDescription pulumi.StringOutput `pulumi:"shortDescription"`
	// The state of the listing in its lifecycle
	State pulumi.StringOutput `pulumi:"state"`
	// (Updatable) Contact information to use to get support from the publisher for the listing.
	SupportContacts PublicationSupportContactArrayOutput `pulumi:"supportContacts"`
	// List of operating systems supprted.
	SupportedOperatingSystems PublicationSupportedOperatingSystemArrayOutput `pulumi:"supportedOperatingSystems"`
	// The date and time this publication was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
}

// NewPublication registers a new resource with the given unique name, arguments, and options.
func NewPublication(ctx *pulumi.Context,
	name string, args *PublicationArgs, opts ...pulumi.ResourceOption) (*Publication, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.IsAgreementAcknowledged == nil {
		return nil, errors.New("invalid value for required argument 'IsAgreementAcknowledged'")
	}
	if args.ListingType == nil {
		return nil, errors.New("invalid value for required argument 'ListingType'")
	}
	if args.PackageDetails == nil {
		return nil, errors.New("invalid value for required argument 'PackageDetails'")
	}
	if args.ShortDescription == nil {
		return nil, errors.New("invalid value for required argument 'ShortDescription'")
	}
	if args.SupportContacts == nil {
		return nil, errors.New("invalid value for required argument 'SupportContacts'")
	}
	var resource Publication
	err := ctx.RegisterResource("oci:marketplace/publication:Publication", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPublication gets an existing Publication resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPublication(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PublicationState, opts ...pulumi.ResourceOption) (*Publication, error) {
	var resource Publication
	err := ctx.ReadResource("oci:marketplace/publication:Publication", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Publication resources.
type publicationState struct {
	// (Updatable) The OCID of the compartment to create the resource within.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) The defined tags associated with this resource, if any. Each key is predefined and scoped to namespaces. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) The freeform tags associated with this resource, if any. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The model for upload data for images and icons.
	Icon *PublicationIcon `pulumi:"icon"`
	// Acknowledgement that invoker has the right and authority to share this Community Image in accordance with their agreement with Oracle applicable to the Services and the related Service Specifications
	IsAgreementAcknowledged *bool `pulumi:"isAgreementAcknowledged"`
	// In which catalog the listing should exist.
	ListingType *string `pulumi:"listingType"`
	// (Updatable) short description of the catalog listing
	LongDescription *string `pulumi:"longDescription"`
	// (Updatable) The name of the contact.
	Name *string `pulumi:"name"`
	// A base object for the properties of the package
	PackageDetails *PublicationPackageDetails `pulumi:"packageDetails"`
	// Type of the artifact of the listing
	PackageType *string `pulumi:"packageType"`
	// (Updatable) short description of the catalog listing
	ShortDescription *string `pulumi:"shortDescription"`
	// The state of the listing in its lifecycle
	State *string `pulumi:"state"`
	// (Updatable) Contact information to use to get support from the publisher for the listing.
	SupportContacts []PublicationSupportContact `pulumi:"supportContacts"`
	// List of operating systems supprted.
	SupportedOperatingSystems []PublicationSupportedOperatingSystem `pulumi:"supportedOperatingSystems"`
	// The date and time this publication was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated *string `pulumi:"timeCreated"`
}

type PublicationState struct {
	// (Updatable) The OCID of the compartment to create the resource within.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) The defined tags associated with this resource, if any. Each key is predefined and scoped to namespaces. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) The freeform tags associated with this resource, if any. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// The model for upload data for images and icons.
	Icon PublicationIconPtrInput
	// Acknowledgement that invoker has the right and authority to share this Community Image in accordance with their agreement with Oracle applicable to the Services and the related Service Specifications
	IsAgreementAcknowledged pulumi.BoolPtrInput
	// In which catalog the listing should exist.
	ListingType pulumi.StringPtrInput
	// (Updatable) short description of the catalog listing
	LongDescription pulumi.StringPtrInput
	// (Updatable) The name of the contact.
	Name pulumi.StringPtrInput
	// A base object for the properties of the package
	PackageDetails PublicationPackageDetailsPtrInput
	// Type of the artifact of the listing
	PackageType pulumi.StringPtrInput
	// (Updatable) short description of the catalog listing
	ShortDescription pulumi.StringPtrInput
	// The state of the listing in its lifecycle
	State pulumi.StringPtrInput
	// (Updatable) Contact information to use to get support from the publisher for the listing.
	SupportContacts PublicationSupportContactArrayInput
	// List of operating systems supprted.
	SupportedOperatingSystems PublicationSupportedOperatingSystemArrayInput
	// The date and time this publication was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringPtrInput
}

func (PublicationState) ElementType() reflect.Type {
	return reflect.TypeOf((*publicationState)(nil)).Elem()
}

type publicationArgs struct {
	// (Updatable) The OCID of the compartment to create the resource within.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) The defined tags associated with this resource, if any. Each key is predefined and scoped to namespaces. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) The freeform tags associated with this resource, if any. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// Acknowledgement that invoker has the right and authority to share this Community Image in accordance with their agreement with Oracle applicable to the Services and the related Service Specifications
	IsAgreementAcknowledged bool `pulumi:"isAgreementAcknowledged"`
	// In which catalog the listing should exist.
	ListingType string `pulumi:"listingType"`
	// (Updatable) short description of the catalog listing
	LongDescription *string `pulumi:"longDescription"`
	// (Updatable) The name of the contact.
	Name *string `pulumi:"name"`
	// A base object for the properties of the package
	PackageDetails PublicationPackageDetails `pulumi:"packageDetails"`
	// (Updatable) short description of the catalog listing
	ShortDescription string `pulumi:"shortDescription"`
	// (Updatable) Contact information to use to get support from the publisher for the listing.
	SupportContacts []PublicationSupportContact `pulumi:"supportContacts"`
}

// The set of arguments for constructing a Publication resource.
type PublicationArgs struct {
	// (Updatable) The OCID of the compartment to create the resource within.
	CompartmentId pulumi.StringInput
	// (Updatable) The defined tags associated with this resource, if any. Each key is predefined and scoped to namespaces. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) The freeform tags associated with this resource, if any. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// Acknowledgement that invoker has the right and authority to share this Community Image in accordance with their agreement with Oracle applicable to the Services and the related Service Specifications
	IsAgreementAcknowledged pulumi.BoolInput
	// In which catalog the listing should exist.
	ListingType pulumi.StringInput
	// (Updatable) short description of the catalog listing
	LongDescription pulumi.StringPtrInput
	// (Updatable) The name of the contact.
	Name pulumi.StringPtrInput
	// A base object for the properties of the package
	PackageDetails PublicationPackageDetailsInput
	// (Updatable) short description of the catalog listing
	ShortDescription pulumi.StringInput
	// (Updatable) Contact information to use to get support from the publisher for the listing.
	SupportContacts PublicationSupportContactArrayInput
}

func (PublicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*publicationArgs)(nil)).Elem()
}

type PublicationInput interface {
	pulumi.Input

	ToPublicationOutput() PublicationOutput
	ToPublicationOutputWithContext(ctx context.Context) PublicationOutput
}

func (*Publication) ElementType() reflect.Type {
	return reflect.TypeOf((*Publication)(nil))
}

func (i *Publication) ToPublicationOutput() PublicationOutput {
	return i.ToPublicationOutputWithContext(context.Background())
}

func (i *Publication) ToPublicationOutputWithContext(ctx context.Context) PublicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicationOutput)
}

func (i *Publication) ToPublicationPtrOutput() PublicationPtrOutput {
	return i.ToPublicationPtrOutputWithContext(context.Background())
}

func (i *Publication) ToPublicationPtrOutputWithContext(ctx context.Context) PublicationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicationPtrOutput)
}

type PublicationPtrInput interface {
	pulumi.Input

	ToPublicationPtrOutput() PublicationPtrOutput
	ToPublicationPtrOutputWithContext(ctx context.Context) PublicationPtrOutput
}

type publicationPtrType PublicationArgs

func (*publicationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Publication)(nil))
}

func (i *publicationPtrType) ToPublicationPtrOutput() PublicationPtrOutput {
	return i.ToPublicationPtrOutputWithContext(context.Background())
}

func (i *publicationPtrType) ToPublicationPtrOutputWithContext(ctx context.Context) PublicationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicationPtrOutput)
}

// PublicationArrayInput is an input type that accepts PublicationArray and PublicationArrayOutput values.
// You can construct a concrete instance of `PublicationArrayInput` via:
//
//          PublicationArray{ PublicationArgs{...} }
type PublicationArrayInput interface {
	pulumi.Input

	ToPublicationArrayOutput() PublicationArrayOutput
	ToPublicationArrayOutputWithContext(context.Context) PublicationArrayOutput
}

type PublicationArray []PublicationInput

func (PublicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Publication)(nil)).Elem()
}

func (i PublicationArray) ToPublicationArrayOutput() PublicationArrayOutput {
	return i.ToPublicationArrayOutputWithContext(context.Background())
}

func (i PublicationArray) ToPublicationArrayOutputWithContext(ctx context.Context) PublicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicationArrayOutput)
}

// PublicationMapInput is an input type that accepts PublicationMap and PublicationMapOutput values.
// You can construct a concrete instance of `PublicationMapInput` via:
//
//          PublicationMap{ "key": PublicationArgs{...} }
type PublicationMapInput interface {
	pulumi.Input

	ToPublicationMapOutput() PublicationMapOutput
	ToPublicationMapOutputWithContext(context.Context) PublicationMapOutput
}

type PublicationMap map[string]PublicationInput

func (PublicationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Publication)(nil)).Elem()
}

func (i PublicationMap) ToPublicationMapOutput() PublicationMapOutput {
	return i.ToPublicationMapOutputWithContext(context.Background())
}

func (i PublicationMap) ToPublicationMapOutputWithContext(ctx context.Context) PublicationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicationMapOutput)
}

type PublicationOutput struct {
	*pulumi.OutputState
}

func (PublicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Publication)(nil))
}

func (o PublicationOutput) ToPublicationOutput() PublicationOutput {
	return o
}

func (o PublicationOutput) ToPublicationOutputWithContext(ctx context.Context) PublicationOutput {
	return o
}

func (o PublicationOutput) ToPublicationPtrOutput() PublicationPtrOutput {
	return o.ToPublicationPtrOutputWithContext(context.Background())
}

func (o PublicationOutput) ToPublicationPtrOutputWithContext(ctx context.Context) PublicationPtrOutput {
	return o.ApplyT(func(v Publication) *Publication {
		return &v
	}).(PublicationPtrOutput)
}

type PublicationPtrOutput struct {
	*pulumi.OutputState
}

func (PublicationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Publication)(nil))
}

func (o PublicationPtrOutput) ToPublicationPtrOutput() PublicationPtrOutput {
	return o
}

func (o PublicationPtrOutput) ToPublicationPtrOutputWithContext(ctx context.Context) PublicationPtrOutput {
	return o
}

type PublicationArrayOutput struct{ *pulumi.OutputState }

func (PublicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Publication)(nil))
}

func (o PublicationArrayOutput) ToPublicationArrayOutput() PublicationArrayOutput {
	return o
}

func (o PublicationArrayOutput) ToPublicationArrayOutputWithContext(ctx context.Context) PublicationArrayOutput {
	return o
}

func (o PublicationArrayOutput) Index(i pulumi.IntInput) PublicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Publication {
		return vs[0].([]Publication)[vs[1].(int)]
	}).(PublicationOutput)
}

type PublicationMapOutput struct{ *pulumi.OutputState }

func (PublicationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]Publication)(nil))
}

func (o PublicationMapOutput) ToPublicationMapOutput() PublicationMapOutput {
	return o
}

func (o PublicationMapOutput) ToPublicationMapOutputWithContext(ctx context.Context) PublicationMapOutput {
	return o
}

func (o PublicationMapOutput) MapIndex(k pulumi.StringInput) PublicationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) Publication {
		return vs[0].(map[string]Publication)[vs[1].(string)]
	}).(PublicationOutput)
}

func init() {
	pulumi.RegisterOutputType(PublicationOutput{})
	pulumi.RegisterOutputType(PublicationPtrOutput{})
	pulumi.RegisterOutputType(PublicationArrayOutput{})
	pulumi.RegisterOutputType(PublicationMapOutput{})
}
