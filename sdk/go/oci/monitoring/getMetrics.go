// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package monitoring

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Metrics in Oracle Cloud Infrastructure Monitoring service.
//
// Returns metric definitions that match the criteria specified in the request. Compartment OCID required.
// For information about metrics, see [Metrics Overview](https://docs.cloud.oracle.com/iaas/Content/Monitoring/Concepts/monitoringoverview.htm#MetricsOverview).
// For important limits information, see [Limits on Monitoring](https://docs.cloud.oracle.com/iaas/Content/Monitoring/Concepts/monitoringoverview.htm#Limits).
//
// Transactions Per Second (TPS) per-tenancy limit for this operation: 10.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci/monitoring"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		opt0 := _var.Metric_compartment_id_in_subtree
// 		opt1 := _var.Metric_name
// 		opt2 := _var.Metric_namespace
// 		opt3 := _var.Metric_resource_group
// 		_, err := monitoring.GetMetrics(ctx, &monitoring.GetMetricsArgs{
// 			CompartmentId:          _var.Compartment_id,
// 			CompartmentIdInSubtree: &opt0,
// 			DimensionFilters:       _var.Metric_dimension_filters,
// 			GroupBies:              _var.Metric_group_by,
// 			Name:                   &opt1,
// 			Namespace:              &opt2,
// 			ResourceGroup:          &opt3,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func GetMetrics(ctx *pulumi.Context, args *GetMetricsArgs, opts ...pulumi.InvokeOption) (*GetMetricsResult, error) {
	var rv GetMetricsResult
	err := ctx.Invoke("oci:monitoring/getMetrics:getMetrics", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMetrics.
type GetMetricsArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the resources monitored by the metric that you are searching for. Use tenancyId to search in the root compartment.  Example: `ocid1.compartment.oc1..exampleuniqueID`
	CompartmentId string `pulumi:"compartmentId"`
	// When true, returns resources from all compartments and subcompartments. The parameter can only be set to true when compartmentId is the tenancy OCID (the tenancy is the root compartment). A true value requires the user to have tenancy-level permissions. If this requirement is not met, then the call is rejected. When false, returns resources from only the compartment specified in compartmentId. Default is false.
	CompartmentIdInSubtree *bool `pulumi:"compartmentIdInSubtree"`
	// Qualifiers that you want to use when searching for metric definitions. Available dimensions vary by metric namespace. Each dimension takes the form of a key-value pair.  Example: { "resourceId": "<var>&lt;instance_OCID&gt;</var>" }
	DimensionFilters map[string]interface{} `pulumi:"dimensionFilters"`
	Filters          []GetMetricsFilter     `pulumi:"filters"`
	// Group metrics by these fields in the response. For example, to list all metric namespaces available in a compartment, groupBy the "namespace" field. Supported fields: namespace, name, resourceGroup.
	GroupBies []string `pulumi:"groupBies"`
	// The metric name to use when searching for metric definitions.  Example: `CpuUtilization`
	Name *string `pulumi:"name"`
	// The source service or application to use when searching for metric definitions.  Example: `ociComputeagent`
	Namespace *string `pulumi:"namespace"`
	// Resource group that you want to use as a filter. The specified resource group must exist in the definition of the posted metric. Only one resource group can be applied per metric. A valid resourceGroup value starts with an alphabetical character and includes only alphanumeric characters, periods (.), underscores (_), hyphens (-), and dollar signs ($). Avoid entering confidential information.  Example: `frontend-fleet`
	ResourceGroup *string `pulumi:"resourceGroup"`
}

// A collection of values returned by getMetrics.
type GetMetricsResult struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the resources monitored by the metric.
	CompartmentId          string                 `pulumi:"compartmentId"`
	CompartmentIdInSubtree *bool                  `pulumi:"compartmentIdInSubtree"`
	DimensionFilters       map[string]interface{} `pulumi:"dimensionFilters"`
	Filters                []GetMetricsFilter     `pulumi:"filters"`
	GroupBies              []string               `pulumi:"groupBies"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The list of metrics.
	Metrics []GetMetricsMetric `pulumi:"metrics"`
	// The name of the metric.  Example: `CpuUtilization`
	Name *string `pulumi:"name"`
	// The source service or application emitting the metric.  Example: `ociComputeagent`
	Namespace *string `pulumi:"namespace"`
	// Resource group provided with the posted metric. A resource group is a custom string that can be used as a filter. Only one resource group can be applied per metric. A valid resourceGroup value starts with an alphabetical character and includes only alphanumeric characters, periods (.), underscores (_), hyphens (-), and dollar signs ($). Avoid entering confidential information.  Example: `frontend-fleet`
	ResourceGroup *string `pulumi:"resourceGroup"`
}
