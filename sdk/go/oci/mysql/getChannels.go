// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package mysql

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Channels in Oracle Cloud Infrastructure MySQL Database service.
//
// Lists all the Channels that match the specified filters.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci/mysql"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		opt0 := oci_mysql_channel.Test_channel.Id
// 		opt1 := oci_database_db_system.Test_db_system.Id
// 		opt2 := _var.Channel_display_name
// 		opt3 := _var.Channel_is_enabled
// 		opt4 := _var.Channel_state
// 		_, err := mysql.GetChannels(ctx, &mysql.GetChannelsArgs{
// 			CompartmentId: _var.Compartment_id,
// 			ChannelId:     &opt0,
// 			DbSystemId:    &opt1,
// 			DisplayName:   &opt2,
// 			IsEnabled:     &opt3,
// 			State:         &opt4,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func GetChannels(ctx *pulumi.Context, args *GetChannelsArgs, opts ...pulumi.InvokeOption) (*GetChannelsResult, error) {
	var rv GetChannelsResult
	err := ctx.Invoke("oci:mysql/getChannels:getChannels", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getChannels.
type GetChannelsArgs struct {
	// The OCID of the Channel.
	ChannelId *string `pulumi:"channelId"`
	// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId string `pulumi:"compartmentId"`
	// The DB System [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	DbSystemId *string `pulumi:"dbSystemId"`
	// A filter to return only the resource matching the given display name exactly.
	DisplayName *string             `pulumi:"displayName"`
	Filters     []GetChannelsFilter `pulumi:"filters"`
	// If true, returns only Channels that are enabled. If false, returns only Channels that are disabled.
	IsEnabled *bool `pulumi:"isEnabled"`
	// The LifecycleState of the Channel.
	State *string `pulumi:"state"`
}

// A collection of values returned by getChannels.
type GetChannelsResult struct {
	ChannelId *string `pulumi:"channelId"`
	// The list of channels.
	Channels []GetChannelsChannel `pulumi:"channels"`
	// The OCID of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// The OCID of the source DB System.
	DbSystemId *string `pulumi:"dbSystemId"`
	// The user-friendly name for the Channel. It does not have to be unique.
	DisplayName *string             `pulumi:"displayName"`
	Filters     []GetChannelsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Whether the Channel has been enabled by the user.
	IsEnabled *bool `pulumi:"isEnabled"`
	// The state of the Channel.
	State *string `pulumi:"state"`
}
