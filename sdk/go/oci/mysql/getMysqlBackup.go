// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package mysql

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Mysql Backup resource in Oracle Cloud Infrastructure MySQL Database service.
//
// Get information about the specified Backup
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci/mysql"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := mysql.LookupMysqlBackup(ctx, &mysql.LookupMysqlBackupArgs{
// 			BackupId: oci_mysql_mysql_backup.Test_backup.Id,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupMysqlBackup(ctx *pulumi.Context, args *LookupMysqlBackupArgs, opts ...pulumi.InvokeOption) (*LookupMysqlBackupResult, error) {
	var rv LookupMysqlBackupResult
	err := ctx.Invoke("oci:mysql/getMysqlBackup:getMysqlBackup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMysqlBackup.
type LookupMysqlBackupArgs struct {
	// The OCID of the Backup
	BackupId string `pulumi:"backupId"`
}

// A collection of values returned by getMysqlBackup.
type LookupMysqlBackupResult struct {
	BackupId string `pulumi:"backupId"`
	// The size of the backup in base-2 (IEC) gibibytes. (GiB).
	BackupSizeInGbs int `pulumi:"backupSizeInGbs"`
	// The type of backup.
	BackupType string `pulumi:"backupType"`
	// The OCID of the compartment the DB System belongs in.
	CompartmentId string `pulumi:"compartmentId"`
	// If the backup was created automatically, or by a manual request.
	CreationType string `pulumi:"creationType"`
	// Initial size of the data volume in GiBs that will be created and attached.
	DataStorageSizeInGb int `pulumi:"dataStorageSizeInGb"`
	// The OCID of the DB System the backup is associated with.
	DbSystemId string `pulumi:"dbSystemId"`
	// Snapshot of the DbSystem details at the time of the backup
	DbSystemSnapshot GetMysqlBackupDbSystemSnapshot `pulumi:"dbSystemSnapshot"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// A user-supplied description for the backup.
	Description string `pulumi:"description"`
	// A user-supplied display name for the backup.
	DisplayName string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// OCID of the backup itself
	Id string `pulumi:"id"`
	// Additional information about the current lifecycleState.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// The MySQL server version of the DB System used for backup.
	MysqlVersion string `pulumi:"mysqlVersion"`
	// Number of days to retain this backup.
	RetentionInDays int `pulumi:"retentionInDays"`
	// The shape of the DB System instance used for backup.
	ShapeName string `pulumi:"shapeName"`
	// The state of the backup.
	State string `pulumi:"state"`
	// The time the backup record was created.
	TimeCreated string `pulumi:"timeCreated"`
	// The time at which the backup was updated.
	TimeUpdated string `pulumi:"timeUpdated"`
}
