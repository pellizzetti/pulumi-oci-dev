// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package mysql

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Mysql Configurations in Oracle Cloud Infrastructure MySQL Database service.
//
// Lists the Configurations available when creating a DB System.
//
// This may include DEFAULT configurations per Shape and CUSTOM configurations.
//
// The default sort order is a multi-part sort by:
//   - shapeName, ascending
//   - DEFAULT-before-CUSTOM
//   - displayName ascending
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci/mysql"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		opt0 := _var.Mysql_configuration_id
// 		opt1 := _var.Mysql_configuration_display_name
// 		opt2 := _var.Mysql_shape_name
// 		opt3 := _var.Mysql_configuration_state
// 		_, err := mysql.GetMysqlConfigurations(ctx, &mysql.GetMysqlConfigurationsArgs{
// 			CompartmentId:   _var.Compartment_id,
// 			ConfigurationId: &opt0,
// 			DisplayName:     &opt1,
// 			ShapeName:       &opt2,
// 			State:           &opt3,
// 			Types:           _var.Mysql_configuration_type,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func GetMysqlConfigurations(ctx *pulumi.Context, args *GetMysqlConfigurationsArgs, opts ...pulumi.InvokeOption) (*GetMysqlConfigurationsResult, error) {
	var rv GetMysqlConfigurationsResult
	err := ctx.Invoke("oci:mysql/getMysqlConfigurations:getMysqlConfigurations", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMysqlConfigurations.
type GetMysqlConfigurationsArgs struct {
	// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId string `pulumi:"compartmentId"`
	// The requested Configuration instance.
	ConfigurationId *string `pulumi:"configurationId"`
	// A filter to return only the resource matching the given display name exactly.
	DisplayName *string                        `pulumi:"displayName"`
	Filters     []GetMysqlConfigurationsFilter `pulumi:"filters"`
	// The requested Shape name.
	ShapeName *string `pulumi:"shapeName"`
	// Configuration Lifecycle State
	State *string `pulumi:"state"`
	// The requested Configuration types.
	Types []string `pulumi:"types"`
}

// A collection of values returned by getMysqlConfigurations.
type GetMysqlConfigurationsResult struct {
	// OCID of the Compartment the Configuration exists in.
	CompartmentId   string  `pulumi:"compartmentId"`
	ConfigurationId *string `pulumi:"configurationId"`
	// The list of configurations.
	Configurations []GetMysqlConfigurationsConfiguration `pulumi:"configurations"`
	// The display name of the Configuration.
	DisplayName *string                        `pulumi:"displayName"`
	Filters     []GetMysqlConfigurationsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The name of the associated Shape.
	ShapeName *string `pulumi:"shapeName"`
	// The current state of the Configuration.
	State *string `pulumi:"state"`
	// The Configuration type, DEFAULT or CUSTOM.
	Types []string `pulumi:"types"`
}
