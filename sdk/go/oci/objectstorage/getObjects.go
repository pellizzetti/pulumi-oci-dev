// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package objectstorage

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Objects in Oracle Cloud Infrastructure Object Storage service.
//
// Lists the objects in a bucket. By default, ListObjects returns object names only. See the `fields`
// parameter for other fields that you can optionally include in ListObjects response.
//
// ListObjects returns at most 1000 objects. To paginate through more objects, use the returned 'nextStartWith'
// value with the 'start' parameter. To filter which objects ListObjects returns, use the 'start' and 'end'
// parameters.
//
// To use this and other API operations, you must be authorized in an IAM policy. If you are not authorized,
// talk to an administrator. If you are an administrator who needs to write policies to give users access, see
// [Getting Started with Policies](https://docs.cloud.oracle.com/iaas/Content/Identity/Concepts/policygetstarted.htm).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci/objectstorage"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		opt0 := _var.Object_delimiter
// 		opt1 := _var.Object_end
// 		opt2 := _var.Object_prefix
// 		opt3 := _var.Object_start
// 		opt4 := _var.Object_start_after
// 		_, err := objectstorage.GetObjects(ctx, &objectstorage.GetObjectsArgs{
// 			Bucket:     _var.Object_bucket,
// 			Namespace:  _var.Object_namespace,
// 			Delimiter:  &opt0,
// 			End:        &opt1,
// 			Fields:     _var.Object_fields,
// 			Prefix:     &opt2,
// 			Start:      &opt3,
// 			StartAfter: &opt4,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func GetObjects(ctx *pulumi.Context, args *GetObjectsArgs, opts ...pulumi.InvokeOption) (*GetObjectsResult, error) {
	var rv GetObjectsResult
	err := ctx.Invoke("oci:objectstorage/getObjects:getObjects", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getObjects.
type GetObjectsArgs struct {
	// The name of the bucket. Avoid entering confidential information. Example: `my-new-bucket1`
	Bucket string `pulumi:"bucket"`
	// When this parameter is set, only objects whose names do not contain the delimiter character (after an optionally specified prefix) are returned in the objects key of the response body. Scanned objects whose names contain the delimiter have the part of their name up to the first occurrence of the delimiter (including the optional prefix) returned as a set of prefixes. Note that only '/' is a supported delimiter character at this time.
	Delimiter *string `pulumi:"delimiter"`
	// Object names returned by a list query must be strictly less than this parameter.
	End     *string            `pulumi:"end"`
	Filters []GetObjectsFilter `pulumi:"filters"`
	// The Object Storage namespace used for the request.
	Namespace string `pulumi:"namespace"`
	// The string to use for matching against the start of object names in a list query.
	Prefix *string `pulumi:"prefix"`
	// Object names returned by a list query must be greater or equal to this parameter.
	Start *string `pulumi:"start"`
	// Object names returned by a list query must be greater than this parameter.
	StartAfter *string `pulumi:"startAfter"`
}

// A collection of values returned by getObjects.
type GetObjectsResult struct {
	Bucket    string             `pulumi:"bucket"`
	Delimiter *string            `pulumi:"delimiter"`
	End       *string            `pulumi:"end"`
	Filters   []GetObjectsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id        string `pulumi:"id"`
	Namespace string `pulumi:"namespace"`
	// The list of list_objects.
	Objects    []GetObjectsObject `pulumi:"objects"`
	Prefix     *string            `pulumi:"prefix"`
	Prefixes   []string           `pulumi:"prefixes"`
	Start      *string            `pulumi:"start"`
	StartAfter *string            `pulumi:"startAfter"`
}
