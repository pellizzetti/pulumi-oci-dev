// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package objectstorage

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Object Lifecycle Policy resource in Oracle Cloud Infrastructure Object Storage service.
//
// Creates or replaces the object lifecycle policy for the bucket.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci/objectstorage"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := objectstorage.NewObjectstorageObjectLifecyclePolicy(ctx, "testObjectLifecyclePolicy", &objectstorage.ObjectstorageObjectLifecyclePolicyArgs{
// 			Bucket:    pulumi.Any(_var.Object_lifecycle_policy_bucket),
// 			Namespace: pulumi.Any(_var.Object_lifecycle_policy_namespace),
// 			Rules: objectstorage.ObjectstorageObjectLifecyclePolicyRuleArray{
// 				&objectstorage.ObjectstorageObjectLifecyclePolicyRuleArgs{
// 					Action:     pulumi.Any(_var.Object_lifecycle_policy_rules_action),
// 					IsEnabled:  pulumi.Any(_var.Object_lifecycle_policy_rules_is_enabled),
// 					Name:       pulumi.Any(_var.Object_lifecycle_policy_rules_name),
// 					TimeAmount: pulumi.Any(_var.Object_lifecycle_policy_rules_time_amount),
// 					TimeUnit:   pulumi.Any(_var.Object_lifecycle_policy_rules_time_unit),
// 					ObjectNameFilter: &objectstorage.ObjectstorageObjectLifecyclePolicyRuleObjectNameFilterArgs{
// 						ExclusionPatterns: pulumi.Any(_var.Object_lifecycle_policy_rules_object_name_filter_exclusion_patterns),
// 						InclusionPatterns: pulumi.Any(_var.Object_lifecycle_policy_rules_object_name_filter_inclusion_patterns),
// 						InclusionPrefixes: pulumi.Any(_var.Object_lifecycle_policy_rules_object_name_filter_inclusion_prefixes),
// 					},
// 					Target: pulumi.Any(_var.Object_lifecycle_policy_rules_target),
// 				},
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// ObjectLifecyclePolicies can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import oci:objectstorage/objectstorageObjectLifecyclePolicy:ObjectstorageObjectLifecyclePolicy test_object_lifecycle_policy "n/{namespaceName}/b/{bucketName}/l"
// ```
type ObjectstorageObjectLifecyclePolicy struct {
	pulumi.CustomResourceState

	// The name of the bucket. Avoid entering confidential information. Example: `my-new-bucket1`
	Bucket pulumi.StringOutput `pulumi:"bucket"`
	// The Object Storage namespace used for the request.
	Namespace pulumi.StringOutput `pulumi:"namespace"`
	// (Updatable) The bucket's set of lifecycle policy rules.
	Rules ObjectstorageObjectLifecyclePolicyRuleArrayOutput `pulumi:"rules"`
	// The date and time the object lifecycle policy was created, as described in [RFC 3339](https://tools.ietf.org/html/rfc3339).
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
}

// NewObjectstorageObjectLifecyclePolicy registers a new resource with the given unique name, arguments, and options.
func NewObjectstorageObjectLifecyclePolicy(ctx *pulumi.Context,
	name string, args *ObjectstorageObjectLifecyclePolicyArgs, opts ...pulumi.ResourceOption) (*ObjectstorageObjectLifecyclePolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Bucket == nil {
		return nil, errors.New("invalid value for required argument 'Bucket'")
	}
	if args.Namespace == nil {
		return nil, errors.New("invalid value for required argument 'Namespace'")
	}
	var resource ObjectstorageObjectLifecyclePolicy
	err := ctx.RegisterResource("oci:objectstorage/objectstorageObjectLifecyclePolicy:ObjectstorageObjectLifecyclePolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetObjectstorageObjectLifecyclePolicy gets an existing ObjectstorageObjectLifecyclePolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetObjectstorageObjectLifecyclePolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ObjectstorageObjectLifecyclePolicyState, opts ...pulumi.ResourceOption) (*ObjectstorageObjectLifecyclePolicy, error) {
	var resource ObjectstorageObjectLifecyclePolicy
	err := ctx.ReadResource("oci:objectstorage/objectstorageObjectLifecyclePolicy:ObjectstorageObjectLifecyclePolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ObjectstorageObjectLifecyclePolicy resources.
type objectstorageObjectLifecyclePolicyState struct {
	// The name of the bucket. Avoid entering confidential information. Example: `my-new-bucket1`
	Bucket *string `pulumi:"bucket"`
	// The Object Storage namespace used for the request.
	Namespace *string `pulumi:"namespace"`
	// (Updatable) The bucket's set of lifecycle policy rules.
	Rules []ObjectstorageObjectLifecyclePolicyRule `pulumi:"rules"`
	// The date and time the object lifecycle policy was created, as described in [RFC 3339](https://tools.ietf.org/html/rfc3339).
	TimeCreated *string `pulumi:"timeCreated"`
}

type ObjectstorageObjectLifecyclePolicyState struct {
	// The name of the bucket. Avoid entering confidential information. Example: `my-new-bucket1`
	Bucket pulumi.StringPtrInput
	// The Object Storage namespace used for the request.
	Namespace pulumi.StringPtrInput
	// (Updatable) The bucket's set of lifecycle policy rules.
	Rules ObjectstorageObjectLifecyclePolicyRuleArrayInput
	// The date and time the object lifecycle policy was created, as described in [RFC 3339](https://tools.ietf.org/html/rfc3339).
	TimeCreated pulumi.StringPtrInput
}

func (ObjectstorageObjectLifecyclePolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*objectstorageObjectLifecyclePolicyState)(nil)).Elem()
}

type objectstorageObjectLifecyclePolicyArgs struct {
	// The name of the bucket. Avoid entering confidential information. Example: `my-new-bucket1`
	Bucket string `pulumi:"bucket"`
	// The Object Storage namespace used for the request.
	Namespace string `pulumi:"namespace"`
	// (Updatable) The bucket's set of lifecycle policy rules.
	Rules []ObjectstorageObjectLifecyclePolicyRule `pulumi:"rules"`
}

// The set of arguments for constructing a ObjectstorageObjectLifecyclePolicy resource.
type ObjectstorageObjectLifecyclePolicyArgs struct {
	// The name of the bucket. Avoid entering confidential information. Example: `my-new-bucket1`
	Bucket pulumi.StringInput
	// The Object Storage namespace used for the request.
	Namespace pulumi.StringInput
	// (Updatable) The bucket's set of lifecycle policy rules.
	Rules ObjectstorageObjectLifecyclePolicyRuleArrayInput
}

func (ObjectstorageObjectLifecyclePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*objectstorageObjectLifecyclePolicyArgs)(nil)).Elem()
}

type ObjectstorageObjectLifecyclePolicyInput interface {
	pulumi.Input

	ToObjectstorageObjectLifecyclePolicyOutput() ObjectstorageObjectLifecyclePolicyOutput
	ToObjectstorageObjectLifecyclePolicyOutputWithContext(ctx context.Context) ObjectstorageObjectLifecyclePolicyOutput
}

func (*ObjectstorageObjectLifecyclePolicy) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectstorageObjectLifecyclePolicy)(nil))
}

func (i *ObjectstorageObjectLifecyclePolicy) ToObjectstorageObjectLifecyclePolicyOutput() ObjectstorageObjectLifecyclePolicyOutput {
	return i.ToObjectstorageObjectLifecyclePolicyOutputWithContext(context.Background())
}

func (i *ObjectstorageObjectLifecyclePolicy) ToObjectstorageObjectLifecyclePolicyOutputWithContext(ctx context.Context) ObjectstorageObjectLifecyclePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectstorageObjectLifecyclePolicyOutput)
}

func (i *ObjectstorageObjectLifecyclePolicy) ToObjectstorageObjectLifecyclePolicyPtrOutput() ObjectstorageObjectLifecyclePolicyPtrOutput {
	return i.ToObjectstorageObjectLifecyclePolicyPtrOutputWithContext(context.Background())
}

func (i *ObjectstorageObjectLifecyclePolicy) ToObjectstorageObjectLifecyclePolicyPtrOutputWithContext(ctx context.Context) ObjectstorageObjectLifecyclePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectstorageObjectLifecyclePolicyPtrOutput)
}

type ObjectstorageObjectLifecyclePolicyPtrInput interface {
	pulumi.Input

	ToObjectstorageObjectLifecyclePolicyPtrOutput() ObjectstorageObjectLifecyclePolicyPtrOutput
	ToObjectstorageObjectLifecyclePolicyPtrOutputWithContext(ctx context.Context) ObjectstorageObjectLifecyclePolicyPtrOutput
}

type objectstorageObjectLifecyclePolicyPtrType ObjectstorageObjectLifecyclePolicyArgs

func (*objectstorageObjectLifecyclePolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ObjectstorageObjectLifecyclePolicy)(nil))
}

func (i *objectstorageObjectLifecyclePolicyPtrType) ToObjectstorageObjectLifecyclePolicyPtrOutput() ObjectstorageObjectLifecyclePolicyPtrOutput {
	return i.ToObjectstorageObjectLifecyclePolicyPtrOutputWithContext(context.Background())
}

func (i *objectstorageObjectLifecyclePolicyPtrType) ToObjectstorageObjectLifecyclePolicyPtrOutputWithContext(ctx context.Context) ObjectstorageObjectLifecyclePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectstorageObjectLifecyclePolicyPtrOutput)
}

// ObjectstorageObjectLifecyclePolicyArrayInput is an input type that accepts ObjectstorageObjectLifecyclePolicyArray and ObjectstorageObjectLifecyclePolicyArrayOutput values.
// You can construct a concrete instance of `ObjectstorageObjectLifecyclePolicyArrayInput` via:
//
//          ObjectstorageObjectLifecyclePolicyArray{ ObjectstorageObjectLifecyclePolicyArgs{...} }
type ObjectstorageObjectLifecyclePolicyArrayInput interface {
	pulumi.Input

	ToObjectstorageObjectLifecyclePolicyArrayOutput() ObjectstorageObjectLifecyclePolicyArrayOutput
	ToObjectstorageObjectLifecyclePolicyArrayOutputWithContext(context.Context) ObjectstorageObjectLifecyclePolicyArrayOutput
}

type ObjectstorageObjectLifecyclePolicyArray []ObjectstorageObjectLifecyclePolicyInput

func (ObjectstorageObjectLifecyclePolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ObjectstorageObjectLifecyclePolicy)(nil)).Elem()
}

func (i ObjectstorageObjectLifecyclePolicyArray) ToObjectstorageObjectLifecyclePolicyArrayOutput() ObjectstorageObjectLifecyclePolicyArrayOutput {
	return i.ToObjectstorageObjectLifecyclePolicyArrayOutputWithContext(context.Background())
}

func (i ObjectstorageObjectLifecyclePolicyArray) ToObjectstorageObjectLifecyclePolicyArrayOutputWithContext(ctx context.Context) ObjectstorageObjectLifecyclePolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectstorageObjectLifecyclePolicyArrayOutput)
}

// ObjectstorageObjectLifecyclePolicyMapInput is an input type that accepts ObjectstorageObjectLifecyclePolicyMap and ObjectstorageObjectLifecyclePolicyMapOutput values.
// You can construct a concrete instance of `ObjectstorageObjectLifecyclePolicyMapInput` via:
//
//          ObjectstorageObjectLifecyclePolicyMap{ "key": ObjectstorageObjectLifecyclePolicyArgs{...} }
type ObjectstorageObjectLifecyclePolicyMapInput interface {
	pulumi.Input

	ToObjectstorageObjectLifecyclePolicyMapOutput() ObjectstorageObjectLifecyclePolicyMapOutput
	ToObjectstorageObjectLifecyclePolicyMapOutputWithContext(context.Context) ObjectstorageObjectLifecyclePolicyMapOutput
}

type ObjectstorageObjectLifecyclePolicyMap map[string]ObjectstorageObjectLifecyclePolicyInput

func (ObjectstorageObjectLifecyclePolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ObjectstorageObjectLifecyclePolicy)(nil)).Elem()
}

func (i ObjectstorageObjectLifecyclePolicyMap) ToObjectstorageObjectLifecyclePolicyMapOutput() ObjectstorageObjectLifecyclePolicyMapOutput {
	return i.ToObjectstorageObjectLifecyclePolicyMapOutputWithContext(context.Background())
}

func (i ObjectstorageObjectLifecyclePolicyMap) ToObjectstorageObjectLifecyclePolicyMapOutputWithContext(ctx context.Context) ObjectstorageObjectLifecyclePolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectstorageObjectLifecyclePolicyMapOutput)
}

type ObjectstorageObjectLifecyclePolicyOutput struct {
	*pulumi.OutputState
}

func (ObjectstorageObjectLifecyclePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectstorageObjectLifecyclePolicy)(nil))
}

func (o ObjectstorageObjectLifecyclePolicyOutput) ToObjectstorageObjectLifecyclePolicyOutput() ObjectstorageObjectLifecyclePolicyOutput {
	return o
}

func (o ObjectstorageObjectLifecyclePolicyOutput) ToObjectstorageObjectLifecyclePolicyOutputWithContext(ctx context.Context) ObjectstorageObjectLifecyclePolicyOutput {
	return o
}

func (o ObjectstorageObjectLifecyclePolicyOutput) ToObjectstorageObjectLifecyclePolicyPtrOutput() ObjectstorageObjectLifecyclePolicyPtrOutput {
	return o.ToObjectstorageObjectLifecyclePolicyPtrOutputWithContext(context.Background())
}

func (o ObjectstorageObjectLifecyclePolicyOutput) ToObjectstorageObjectLifecyclePolicyPtrOutputWithContext(ctx context.Context) ObjectstorageObjectLifecyclePolicyPtrOutput {
	return o.ApplyT(func(v ObjectstorageObjectLifecyclePolicy) *ObjectstorageObjectLifecyclePolicy {
		return &v
	}).(ObjectstorageObjectLifecyclePolicyPtrOutput)
}

type ObjectstorageObjectLifecyclePolicyPtrOutput struct {
	*pulumi.OutputState
}

func (ObjectstorageObjectLifecyclePolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ObjectstorageObjectLifecyclePolicy)(nil))
}

func (o ObjectstorageObjectLifecyclePolicyPtrOutput) ToObjectstorageObjectLifecyclePolicyPtrOutput() ObjectstorageObjectLifecyclePolicyPtrOutput {
	return o
}

func (o ObjectstorageObjectLifecyclePolicyPtrOutput) ToObjectstorageObjectLifecyclePolicyPtrOutputWithContext(ctx context.Context) ObjectstorageObjectLifecyclePolicyPtrOutput {
	return o
}

type ObjectstorageObjectLifecyclePolicyArrayOutput struct{ *pulumi.OutputState }

func (ObjectstorageObjectLifecyclePolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ObjectstorageObjectLifecyclePolicy)(nil))
}

func (o ObjectstorageObjectLifecyclePolicyArrayOutput) ToObjectstorageObjectLifecyclePolicyArrayOutput() ObjectstorageObjectLifecyclePolicyArrayOutput {
	return o
}

func (o ObjectstorageObjectLifecyclePolicyArrayOutput) ToObjectstorageObjectLifecyclePolicyArrayOutputWithContext(ctx context.Context) ObjectstorageObjectLifecyclePolicyArrayOutput {
	return o
}

func (o ObjectstorageObjectLifecyclePolicyArrayOutput) Index(i pulumi.IntInput) ObjectstorageObjectLifecyclePolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ObjectstorageObjectLifecyclePolicy {
		return vs[0].([]ObjectstorageObjectLifecyclePolicy)[vs[1].(int)]
	}).(ObjectstorageObjectLifecyclePolicyOutput)
}

type ObjectstorageObjectLifecyclePolicyMapOutput struct{ *pulumi.OutputState }

func (ObjectstorageObjectLifecyclePolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ObjectstorageObjectLifecyclePolicy)(nil))
}

func (o ObjectstorageObjectLifecyclePolicyMapOutput) ToObjectstorageObjectLifecyclePolicyMapOutput() ObjectstorageObjectLifecyclePolicyMapOutput {
	return o
}

func (o ObjectstorageObjectLifecyclePolicyMapOutput) ToObjectstorageObjectLifecyclePolicyMapOutputWithContext(ctx context.Context) ObjectstorageObjectLifecyclePolicyMapOutput {
	return o
}

func (o ObjectstorageObjectLifecyclePolicyMapOutput) MapIndex(k pulumi.StringInput) ObjectstorageObjectLifecyclePolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) ObjectstorageObjectLifecyclePolicy {
		return vs[0].(map[string]ObjectstorageObjectLifecyclePolicy)[vs[1].(string)]
	}).(ObjectstorageObjectLifecyclePolicyOutput)
}

func init() {
	pulumi.RegisterOutputType(ObjectstorageObjectLifecyclePolicyOutput{})
	pulumi.RegisterOutputType(ObjectstorageObjectLifecyclePolicyPtrOutput{})
	pulumi.RegisterOutputType(ObjectstorageObjectLifecyclePolicyArrayOutput{})
	pulumi.RegisterOutputType(ObjectstorageObjectLifecyclePolicyMapOutput{})
}
