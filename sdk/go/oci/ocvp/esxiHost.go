// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ocvp

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Esxi Host resource in Oracle Cloud Infrastructure Oracle Cloud VMware Solution service.
//
// Adds another ESXi host to an existing SDDC. The attributes of the specified
// `Sddc` determine the VMware software and other configuration settings used
// by the ESXi host.
//
// Use the [WorkRequest](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/WorkRequest/) operations to track the
// creation of the ESXi host.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci/ocvp"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := ocvp.NewEsxiHost(ctx, "testEsxiHost", &ocvp.EsxiHostArgs{
// 			SddcId:     pulumi.Any(oci_ocvp_sddc.Test_sddc.Id),
// 			CurrentSku: pulumi.Any(_var.Esxi_host_current_sku),
// 			DefinedTags: pulumi.AnyMap{
// 				"Operations.CostCenter": pulumi.Any("42"),
// 			},
// 			DisplayName: pulumi.Any(_var.Esxi_host_display_name),
// 			FreeformTags: pulumi.AnyMap{
// 				"Department": pulumi.Any("Finance"),
// 			},
// 			NextSku: pulumi.Any(_var.Esxi_host_next_sku),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// EsxiHosts can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import oci:ocvp/esxiHost:EsxiHost test_esxi_host "id"
// ```
type EsxiHost struct {
	pulumi.CustomResourceState

	// Current billing cycle end date. If nextSku is different from existing SKU, then we switch to newSKu after this contractEndDate Example: `2016-08-25T21:10:29.600Z`
	BillingContractEndDate pulumi.StringOutput `pulumi:"billingContractEndDate"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the SDDC.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// In terms of implementation, an ESXi host is a Compute instance that is configured with the chosen bundle of VMware software. The `computeInstanceId` is the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of that Compute instance.
	ComputeInstanceId pulumi.StringOutput `pulumi:"computeInstanceId"`
	// Billing option selected during SDDC creation. Oracle Cloud Infrastructure VMware Solution supports the following billing interval SKUs: HOUR, MONTH, ONE_YEAR, and THREE_YEARS. [ListSupportedSkus](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/SupportedSkuSummary/ListSupportedSkus).
	CurrentSku pulumi.StringOutput `pulumi:"currentSku"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) A descriptive name for the ESXi host. It's changeable. Esxi Host name requirements are 1-16 character length limit, Must start with a letter, Must be English letters, numbers, - only, No repeating hyphens, Must be unique within the SDDC.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// (Updatable) Billing option to switch to once existing billing cycle ends. If nextSku is null or empty, currentSku will be used to continue with next billing term. [ListSupportedSkus](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/SupportedSkuSummary/ListSupportedSkus).
	NextSku pulumi.StringOutput `pulumi:"nextSku"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the SDDC to add the ESXi host to.
	SddcId pulumi.StringOutput `pulumi:"sddcId"`
	// The current state of the ESXi host.
	State pulumi.StringOutput `pulumi:"state"`
	// The date and time the ESXi host was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The date and time the ESXi host was updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
}

// NewEsxiHost registers a new resource with the given unique name, arguments, and options.
func NewEsxiHost(ctx *pulumi.Context,
	name string, args *EsxiHostArgs, opts ...pulumi.ResourceOption) (*EsxiHost, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.SddcId == nil {
		return nil, errors.New("invalid value for required argument 'SddcId'")
	}
	var resource EsxiHost
	err := ctx.RegisterResource("oci:ocvp/esxiHost:EsxiHost", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEsxiHost gets an existing EsxiHost resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEsxiHost(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EsxiHostState, opts ...pulumi.ResourceOption) (*EsxiHost, error) {
	var resource EsxiHost
	err := ctx.ReadResource("oci:ocvp/esxiHost:EsxiHost", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EsxiHost resources.
type esxiHostState struct {
	// Current billing cycle end date. If nextSku is different from existing SKU, then we switch to newSKu after this contractEndDate Example: `2016-08-25T21:10:29.600Z`
	BillingContractEndDate *string `pulumi:"billingContractEndDate"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the SDDC.
	CompartmentId *string `pulumi:"compartmentId"`
	// In terms of implementation, an ESXi host is a Compute instance that is configured with the chosen bundle of VMware software. The `computeInstanceId` is the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of that Compute instance.
	ComputeInstanceId *string `pulumi:"computeInstanceId"`
	// Billing option selected during SDDC creation. Oracle Cloud Infrastructure VMware Solution supports the following billing interval SKUs: HOUR, MONTH, ONE_YEAR, and THREE_YEARS. [ListSupportedSkus](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/SupportedSkuSummary/ListSupportedSkus).
	CurrentSku *string `pulumi:"currentSku"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) A descriptive name for the ESXi host. It's changeable. Esxi Host name requirements are 1-16 character length limit, Must start with a letter, Must be English letters, numbers, - only, No repeating hyphens, Must be unique within the SDDC.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// (Updatable) Billing option to switch to once existing billing cycle ends. If nextSku is null or empty, currentSku will be used to continue with next billing term. [ListSupportedSkus](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/SupportedSkuSummary/ListSupportedSkus).
	NextSku *string `pulumi:"nextSku"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the SDDC to add the ESXi host to.
	SddcId *string `pulumi:"sddcId"`
	// The current state of the ESXi host.
	State *string `pulumi:"state"`
	// The date and time the ESXi host was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated *string `pulumi:"timeCreated"`
	// The date and time the ESXi host was updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimeUpdated *string `pulumi:"timeUpdated"`
}

type EsxiHostState struct {
	// Current billing cycle end date. If nextSku is different from existing SKU, then we switch to newSKu after this contractEndDate Example: `2016-08-25T21:10:29.600Z`
	BillingContractEndDate pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the SDDC.
	CompartmentId pulumi.StringPtrInput
	// In terms of implementation, an ESXi host is a Compute instance that is configured with the chosen bundle of VMware software. The `computeInstanceId` is the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of that Compute instance.
	ComputeInstanceId pulumi.StringPtrInput
	// Billing option selected during SDDC creation. Oracle Cloud Infrastructure VMware Solution supports the following billing interval SKUs: HOUR, MONTH, ONE_YEAR, and THREE_YEARS. [ListSupportedSkus](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/SupportedSkuSummary/ListSupportedSkus).
	CurrentSku pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) A descriptive name for the ESXi host. It's changeable. Esxi Host name requirements are 1-16 character length limit, Must start with a letter, Must be English letters, numbers, - only, No repeating hyphens, Must be unique within the SDDC.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// (Updatable) Billing option to switch to once existing billing cycle ends. If nextSku is null or empty, currentSku will be used to continue with next billing term. [ListSupportedSkus](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/SupportedSkuSummary/ListSupportedSkus).
	NextSku pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the SDDC to add the ESXi host to.
	SddcId pulumi.StringPtrInput
	// The current state of the ESXi host.
	State pulumi.StringPtrInput
	// The date and time the ESXi host was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringPtrInput
	// The date and time the ESXi host was updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimeUpdated pulumi.StringPtrInput
}

func (EsxiHostState) ElementType() reflect.Type {
	return reflect.TypeOf((*esxiHostState)(nil)).Elem()
}

type esxiHostArgs struct {
	// Billing option selected during SDDC creation. Oracle Cloud Infrastructure VMware Solution supports the following billing interval SKUs: HOUR, MONTH, ONE_YEAR, and THREE_YEARS. [ListSupportedSkus](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/SupportedSkuSummary/ListSupportedSkus).
	CurrentSku *string `pulumi:"currentSku"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) A descriptive name for the ESXi host. It's changeable. Esxi Host name requirements are 1-16 character length limit, Must start with a letter, Must be English letters, numbers, - only, No repeating hyphens, Must be unique within the SDDC.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// (Updatable) Billing option to switch to once existing billing cycle ends. If nextSku is null or empty, currentSku will be used to continue with next billing term. [ListSupportedSkus](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/SupportedSkuSummary/ListSupportedSkus).
	NextSku *string `pulumi:"nextSku"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the SDDC to add the ESXi host to.
	SddcId string `pulumi:"sddcId"`
}

// The set of arguments for constructing a EsxiHost resource.
type EsxiHostArgs struct {
	// Billing option selected during SDDC creation. Oracle Cloud Infrastructure VMware Solution supports the following billing interval SKUs: HOUR, MONTH, ONE_YEAR, and THREE_YEARS. [ListSupportedSkus](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/SupportedSkuSummary/ListSupportedSkus).
	CurrentSku pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) A descriptive name for the ESXi host. It's changeable. Esxi Host name requirements are 1-16 character length limit, Must start with a letter, Must be English letters, numbers, - only, No repeating hyphens, Must be unique within the SDDC.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// (Updatable) Billing option to switch to once existing billing cycle ends. If nextSku is null or empty, currentSku will be used to continue with next billing term. [ListSupportedSkus](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/SupportedSkuSummary/ListSupportedSkus).
	NextSku pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the SDDC to add the ESXi host to.
	SddcId pulumi.StringInput
}

func (EsxiHostArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*esxiHostArgs)(nil)).Elem()
}

type EsxiHostInput interface {
	pulumi.Input

	ToEsxiHostOutput() EsxiHostOutput
	ToEsxiHostOutputWithContext(ctx context.Context) EsxiHostOutput
}

func (*EsxiHost) ElementType() reflect.Type {
	return reflect.TypeOf((*EsxiHost)(nil))
}

func (i *EsxiHost) ToEsxiHostOutput() EsxiHostOutput {
	return i.ToEsxiHostOutputWithContext(context.Background())
}

func (i *EsxiHost) ToEsxiHostOutputWithContext(ctx context.Context) EsxiHostOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EsxiHostOutput)
}

func (i *EsxiHost) ToEsxiHostPtrOutput() EsxiHostPtrOutput {
	return i.ToEsxiHostPtrOutputWithContext(context.Background())
}

func (i *EsxiHost) ToEsxiHostPtrOutputWithContext(ctx context.Context) EsxiHostPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EsxiHostPtrOutput)
}

type EsxiHostPtrInput interface {
	pulumi.Input

	ToEsxiHostPtrOutput() EsxiHostPtrOutput
	ToEsxiHostPtrOutputWithContext(ctx context.Context) EsxiHostPtrOutput
}

type esxiHostPtrType EsxiHostArgs

func (*esxiHostPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EsxiHost)(nil))
}

func (i *esxiHostPtrType) ToEsxiHostPtrOutput() EsxiHostPtrOutput {
	return i.ToEsxiHostPtrOutputWithContext(context.Background())
}

func (i *esxiHostPtrType) ToEsxiHostPtrOutputWithContext(ctx context.Context) EsxiHostPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EsxiHostPtrOutput)
}

// EsxiHostArrayInput is an input type that accepts EsxiHostArray and EsxiHostArrayOutput values.
// You can construct a concrete instance of `EsxiHostArrayInput` via:
//
//          EsxiHostArray{ EsxiHostArgs{...} }
type EsxiHostArrayInput interface {
	pulumi.Input

	ToEsxiHostArrayOutput() EsxiHostArrayOutput
	ToEsxiHostArrayOutputWithContext(context.Context) EsxiHostArrayOutput
}

type EsxiHostArray []EsxiHostInput

func (EsxiHostArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EsxiHost)(nil)).Elem()
}

func (i EsxiHostArray) ToEsxiHostArrayOutput() EsxiHostArrayOutput {
	return i.ToEsxiHostArrayOutputWithContext(context.Background())
}

func (i EsxiHostArray) ToEsxiHostArrayOutputWithContext(ctx context.Context) EsxiHostArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EsxiHostArrayOutput)
}

// EsxiHostMapInput is an input type that accepts EsxiHostMap and EsxiHostMapOutput values.
// You can construct a concrete instance of `EsxiHostMapInput` via:
//
//          EsxiHostMap{ "key": EsxiHostArgs{...} }
type EsxiHostMapInput interface {
	pulumi.Input

	ToEsxiHostMapOutput() EsxiHostMapOutput
	ToEsxiHostMapOutputWithContext(context.Context) EsxiHostMapOutput
}

type EsxiHostMap map[string]EsxiHostInput

func (EsxiHostMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EsxiHost)(nil)).Elem()
}

func (i EsxiHostMap) ToEsxiHostMapOutput() EsxiHostMapOutput {
	return i.ToEsxiHostMapOutputWithContext(context.Background())
}

func (i EsxiHostMap) ToEsxiHostMapOutputWithContext(ctx context.Context) EsxiHostMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EsxiHostMapOutput)
}

type EsxiHostOutput struct {
	*pulumi.OutputState
}

func (EsxiHostOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EsxiHost)(nil))
}

func (o EsxiHostOutput) ToEsxiHostOutput() EsxiHostOutput {
	return o
}

func (o EsxiHostOutput) ToEsxiHostOutputWithContext(ctx context.Context) EsxiHostOutput {
	return o
}

func (o EsxiHostOutput) ToEsxiHostPtrOutput() EsxiHostPtrOutput {
	return o.ToEsxiHostPtrOutputWithContext(context.Background())
}

func (o EsxiHostOutput) ToEsxiHostPtrOutputWithContext(ctx context.Context) EsxiHostPtrOutput {
	return o.ApplyT(func(v EsxiHost) *EsxiHost {
		return &v
	}).(EsxiHostPtrOutput)
}

type EsxiHostPtrOutput struct {
	*pulumi.OutputState
}

func (EsxiHostPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EsxiHost)(nil))
}

func (o EsxiHostPtrOutput) ToEsxiHostPtrOutput() EsxiHostPtrOutput {
	return o
}

func (o EsxiHostPtrOutput) ToEsxiHostPtrOutputWithContext(ctx context.Context) EsxiHostPtrOutput {
	return o
}

type EsxiHostArrayOutput struct{ *pulumi.OutputState }

func (EsxiHostArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EsxiHost)(nil))
}

func (o EsxiHostArrayOutput) ToEsxiHostArrayOutput() EsxiHostArrayOutput {
	return o
}

func (o EsxiHostArrayOutput) ToEsxiHostArrayOutputWithContext(ctx context.Context) EsxiHostArrayOutput {
	return o
}

func (o EsxiHostArrayOutput) Index(i pulumi.IntInput) EsxiHostOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EsxiHost {
		return vs[0].([]EsxiHost)[vs[1].(int)]
	}).(EsxiHostOutput)
}

type EsxiHostMapOutput struct{ *pulumi.OutputState }

func (EsxiHostMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]EsxiHost)(nil))
}

func (o EsxiHostMapOutput) ToEsxiHostMapOutput() EsxiHostMapOutput {
	return o
}

func (o EsxiHostMapOutput) ToEsxiHostMapOutputWithContext(ctx context.Context) EsxiHostMapOutput {
	return o
}

func (o EsxiHostMapOutput) MapIndex(k pulumi.StringInput) EsxiHostOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) EsxiHost {
		return vs[0].(map[string]EsxiHost)[vs[1].(string)]
	}).(EsxiHostOutput)
}

func init() {
	pulumi.RegisterOutputType(EsxiHostOutput{})
	pulumi.RegisterOutputType(EsxiHostPtrOutput{})
	pulumi.RegisterOutputType(EsxiHostArrayOutput{})
	pulumi.RegisterOutputType(EsxiHostMapOutput{})
}
