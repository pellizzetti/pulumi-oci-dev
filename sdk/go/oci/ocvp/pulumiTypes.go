// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ocvp

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type SddcHcxOnPremLicense struct {
	// HCX on-premise license key value
	ActivationKey *string `pulumi:"activationKey"`
	// status of HCX on-premise license
	Status *string `pulumi:"status"`
	// Name of the system that consumed the HCX on-premise license
	SystemName *string `pulumi:"systemName"`
}

// SddcHcxOnPremLicenseInput is an input type that accepts SddcHcxOnPremLicenseArgs and SddcHcxOnPremLicenseOutput values.
// You can construct a concrete instance of `SddcHcxOnPremLicenseInput` via:
//
//          SddcHcxOnPremLicenseArgs{...}
type SddcHcxOnPremLicenseInput interface {
	pulumi.Input

	ToSddcHcxOnPremLicenseOutput() SddcHcxOnPremLicenseOutput
	ToSddcHcxOnPremLicenseOutputWithContext(context.Context) SddcHcxOnPremLicenseOutput
}

type SddcHcxOnPremLicenseArgs struct {
	// HCX on-premise license key value
	ActivationKey pulumi.StringPtrInput `pulumi:"activationKey"`
	// status of HCX on-premise license
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Name of the system that consumed the HCX on-premise license
	SystemName pulumi.StringPtrInput `pulumi:"systemName"`
}

func (SddcHcxOnPremLicenseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SddcHcxOnPremLicense)(nil)).Elem()
}

func (i SddcHcxOnPremLicenseArgs) ToSddcHcxOnPremLicenseOutput() SddcHcxOnPremLicenseOutput {
	return i.ToSddcHcxOnPremLicenseOutputWithContext(context.Background())
}

func (i SddcHcxOnPremLicenseArgs) ToSddcHcxOnPremLicenseOutputWithContext(ctx context.Context) SddcHcxOnPremLicenseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SddcHcxOnPremLicenseOutput)
}

// SddcHcxOnPremLicenseArrayInput is an input type that accepts SddcHcxOnPremLicenseArray and SddcHcxOnPremLicenseArrayOutput values.
// You can construct a concrete instance of `SddcHcxOnPremLicenseArrayInput` via:
//
//          SddcHcxOnPremLicenseArray{ SddcHcxOnPremLicenseArgs{...} }
type SddcHcxOnPremLicenseArrayInput interface {
	pulumi.Input

	ToSddcHcxOnPremLicenseArrayOutput() SddcHcxOnPremLicenseArrayOutput
	ToSddcHcxOnPremLicenseArrayOutputWithContext(context.Context) SddcHcxOnPremLicenseArrayOutput
}

type SddcHcxOnPremLicenseArray []SddcHcxOnPremLicenseInput

func (SddcHcxOnPremLicenseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SddcHcxOnPremLicense)(nil)).Elem()
}

func (i SddcHcxOnPremLicenseArray) ToSddcHcxOnPremLicenseArrayOutput() SddcHcxOnPremLicenseArrayOutput {
	return i.ToSddcHcxOnPremLicenseArrayOutputWithContext(context.Background())
}

func (i SddcHcxOnPremLicenseArray) ToSddcHcxOnPremLicenseArrayOutputWithContext(ctx context.Context) SddcHcxOnPremLicenseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SddcHcxOnPremLicenseArrayOutput)
}

type SddcHcxOnPremLicenseOutput struct{ *pulumi.OutputState }

func (SddcHcxOnPremLicenseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SddcHcxOnPremLicense)(nil)).Elem()
}

func (o SddcHcxOnPremLicenseOutput) ToSddcHcxOnPremLicenseOutput() SddcHcxOnPremLicenseOutput {
	return o
}

func (o SddcHcxOnPremLicenseOutput) ToSddcHcxOnPremLicenseOutputWithContext(ctx context.Context) SddcHcxOnPremLicenseOutput {
	return o
}

// HCX on-premise license key value
func (o SddcHcxOnPremLicenseOutput) ActivationKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SddcHcxOnPremLicense) *string { return v.ActivationKey }).(pulumi.StringPtrOutput)
}

// status of HCX on-premise license
func (o SddcHcxOnPremLicenseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SddcHcxOnPremLicense) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Name of the system that consumed the HCX on-premise license
func (o SddcHcxOnPremLicenseOutput) SystemName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SddcHcxOnPremLicense) *string { return v.SystemName }).(pulumi.StringPtrOutput)
}

type SddcHcxOnPremLicenseArrayOutput struct{ *pulumi.OutputState }

func (SddcHcxOnPremLicenseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SddcHcxOnPremLicense)(nil)).Elem()
}

func (o SddcHcxOnPremLicenseArrayOutput) ToSddcHcxOnPremLicenseArrayOutput() SddcHcxOnPremLicenseArrayOutput {
	return o
}

func (o SddcHcxOnPremLicenseArrayOutput) ToSddcHcxOnPremLicenseArrayOutputWithContext(ctx context.Context) SddcHcxOnPremLicenseArrayOutput {
	return o
}

func (o SddcHcxOnPremLicenseArrayOutput) Index(i pulumi.IntInput) SddcHcxOnPremLicenseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SddcHcxOnPremLicense {
		return vs[0].([]SddcHcxOnPremLicense)[vs[1].(int)]
	}).(SddcHcxOnPremLicenseOutput)
}

type GetEsxiHostsEsxiHostCollection struct {
	// Current billing cycle end date. If nextSku is different from existing SKU, then we switch to newSKu after this contractEndDate Example: `2016-08-25T21:10:29.600Z`
	BillingContractEndDate string `pulumi:"billingContractEndDate"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the SDDC.
	CompartmentId string `pulumi:"compartmentId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Compute instance.
	ComputeInstanceId string `pulumi:"computeInstanceId"`
	// Billing option selected during SDDC creation. Oracle Cloud Infrastructure VMware Solution supports the following billing interval SKUs: HOUR, MONTH, ONE_YEAR, and THREE_YEARS. [ListSupportedSkus](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/SupportedSkuSummary/ListSupportedSkus).
	CurrentSku string `pulumi:"currentSku"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// A filter to return only resources that match the given display name exactly.
	DisplayName string `pulumi:"displayName"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the ESXi host.
	Id string `pulumi:"id"`
	// Billing option to switch to once existing billing cycle ends. [ListSupportedSkus](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/SupportedSkuSummary/ListSupportedSkus).
	NextSku string `pulumi:"nextSku"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the SDDC.
	SddcId string `pulumi:"sddcId"`
	// The lifecycle state of the resource.
	State string `pulumi:"state"`
	// The date and time the ESXi host was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the ESXi host was updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetEsxiHostsEsxiHostCollectionInput is an input type that accepts GetEsxiHostsEsxiHostCollectionArgs and GetEsxiHostsEsxiHostCollectionOutput values.
// You can construct a concrete instance of `GetEsxiHostsEsxiHostCollectionInput` via:
//
//          GetEsxiHostsEsxiHostCollectionArgs{...}
type GetEsxiHostsEsxiHostCollectionInput interface {
	pulumi.Input

	ToGetEsxiHostsEsxiHostCollectionOutput() GetEsxiHostsEsxiHostCollectionOutput
	ToGetEsxiHostsEsxiHostCollectionOutputWithContext(context.Context) GetEsxiHostsEsxiHostCollectionOutput
}

type GetEsxiHostsEsxiHostCollectionArgs struct {
	// Current billing cycle end date. If nextSku is different from existing SKU, then we switch to newSKu after this contractEndDate Example: `2016-08-25T21:10:29.600Z`
	BillingContractEndDate pulumi.StringInput `pulumi:"billingContractEndDate"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the SDDC.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Compute instance.
	ComputeInstanceId pulumi.StringInput `pulumi:"computeInstanceId"`
	// Billing option selected during SDDC creation. Oracle Cloud Infrastructure VMware Solution supports the following billing interval SKUs: HOUR, MONTH, ONE_YEAR, and THREE_YEARS. [ListSupportedSkus](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/SupportedSkuSummary/ListSupportedSkus).
	CurrentSku pulumi.StringInput `pulumi:"currentSku"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// A filter to return only resources that match the given display name exactly.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the ESXi host.
	Id pulumi.StringInput `pulumi:"id"`
	// Billing option to switch to once existing billing cycle ends. [ListSupportedSkus](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/SupportedSkuSummary/ListSupportedSkus).
	NextSku pulumi.StringInput `pulumi:"nextSku"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the SDDC.
	SddcId pulumi.StringInput `pulumi:"sddcId"`
	// The lifecycle state of the resource.
	State pulumi.StringInput `pulumi:"state"`
	// The date and time the ESXi host was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The date and time the ESXi host was updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetEsxiHostsEsxiHostCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEsxiHostsEsxiHostCollection)(nil)).Elem()
}

func (i GetEsxiHostsEsxiHostCollectionArgs) ToGetEsxiHostsEsxiHostCollectionOutput() GetEsxiHostsEsxiHostCollectionOutput {
	return i.ToGetEsxiHostsEsxiHostCollectionOutputWithContext(context.Background())
}

func (i GetEsxiHostsEsxiHostCollectionArgs) ToGetEsxiHostsEsxiHostCollectionOutputWithContext(ctx context.Context) GetEsxiHostsEsxiHostCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEsxiHostsEsxiHostCollectionOutput)
}

// GetEsxiHostsEsxiHostCollectionArrayInput is an input type that accepts GetEsxiHostsEsxiHostCollectionArray and GetEsxiHostsEsxiHostCollectionArrayOutput values.
// You can construct a concrete instance of `GetEsxiHostsEsxiHostCollectionArrayInput` via:
//
//          GetEsxiHostsEsxiHostCollectionArray{ GetEsxiHostsEsxiHostCollectionArgs{...} }
type GetEsxiHostsEsxiHostCollectionArrayInput interface {
	pulumi.Input

	ToGetEsxiHostsEsxiHostCollectionArrayOutput() GetEsxiHostsEsxiHostCollectionArrayOutput
	ToGetEsxiHostsEsxiHostCollectionArrayOutputWithContext(context.Context) GetEsxiHostsEsxiHostCollectionArrayOutput
}

type GetEsxiHostsEsxiHostCollectionArray []GetEsxiHostsEsxiHostCollectionInput

func (GetEsxiHostsEsxiHostCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEsxiHostsEsxiHostCollection)(nil)).Elem()
}

func (i GetEsxiHostsEsxiHostCollectionArray) ToGetEsxiHostsEsxiHostCollectionArrayOutput() GetEsxiHostsEsxiHostCollectionArrayOutput {
	return i.ToGetEsxiHostsEsxiHostCollectionArrayOutputWithContext(context.Background())
}

func (i GetEsxiHostsEsxiHostCollectionArray) ToGetEsxiHostsEsxiHostCollectionArrayOutputWithContext(ctx context.Context) GetEsxiHostsEsxiHostCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEsxiHostsEsxiHostCollectionArrayOutput)
}

type GetEsxiHostsEsxiHostCollectionOutput struct{ *pulumi.OutputState }

func (GetEsxiHostsEsxiHostCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEsxiHostsEsxiHostCollection)(nil)).Elem()
}

func (o GetEsxiHostsEsxiHostCollectionOutput) ToGetEsxiHostsEsxiHostCollectionOutput() GetEsxiHostsEsxiHostCollectionOutput {
	return o
}

func (o GetEsxiHostsEsxiHostCollectionOutput) ToGetEsxiHostsEsxiHostCollectionOutputWithContext(ctx context.Context) GetEsxiHostsEsxiHostCollectionOutput {
	return o
}

// Current billing cycle end date. If nextSku is different from existing SKU, then we switch to newSKu after this contractEndDate Example: `2016-08-25T21:10:29.600Z`
func (o GetEsxiHostsEsxiHostCollectionOutput) BillingContractEndDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetEsxiHostsEsxiHostCollection) string { return v.BillingContractEndDate }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the SDDC.
func (o GetEsxiHostsEsxiHostCollectionOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEsxiHostsEsxiHostCollection) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Compute instance.
func (o GetEsxiHostsEsxiHostCollectionOutput) ComputeInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEsxiHostsEsxiHostCollection) string { return v.ComputeInstanceId }).(pulumi.StringOutput)
}

// Billing option selected during SDDC creation. Oracle Cloud Infrastructure VMware Solution supports the following billing interval SKUs: HOUR, MONTH, ONE_YEAR, and THREE_YEARS. [ListSupportedSkus](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/SupportedSkuSummary/ListSupportedSkus).
func (o GetEsxiHostsEsxiHostCollectionOutput) CurrentSku() pulumi.StringOutput {
	return o.ApplyT(func(v GetEsxiHostsEsxiHostCollection) string { return v.CurrentSku }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
func (o GetEsxiHostsEsxiHostCollectionOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetEsxiHostsEsxiHostCollection) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// A filter to return only resources that match the given display name exactly.
func (o GetEsxiHostsEsxiHostCollectionOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetEsxiHostsEsxiHostCollection) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
func (o GetEsxiHostsEsxiHostCollectionOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetEsxiHostsEsxiHostCollection) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the ESXi host.
func (o GetEsxiHostsEsxiHostCollectionOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetEsxiHostsEsxiHostCollection) string { return v.Id }).(pulumi.StringOutput)
}

// Billing option to switch to once existing billing cycle ends. [ListSupportedSkus](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/SupportedSkuSummary/ListSupportedSkus).
func (o GetEsxiHostsEsxiHostCollectionOutput) NextSku() pulumi.StringOutput {
	return o.ApplyT(func(v GetEsxiHostsEsxiHostCollection) string { return v.NextSku }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the SDDC.
func (o GetEsxiHostsEsxiHostCollectionOutput) SddcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEsxiHostsEsxiHostCollection) string { return v.SddcId }).(pulumi.StringOutput)
}

// The lifecycle state of the resource.
func (o GetEsxiHostsEsxiHostCollectionOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetEsxiHostsEsxiHostCollection) string { return v.State }).(pulumi.StringOutput)
}

// The date and time the ESXi host was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
func (o GetEsxiHostsEsxiHostCollectionOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetEsxiHostsEsxiHostCollection) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the ESXi host was updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
func (o GetEsxiHostsEsxiHostCollectionOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetEsxiHostsEsxiHostCollection) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetEsxiHostsEsxiHostCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetEsxiHostsEsxiHostCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEsxiHostsEsxiHostCollection)(nil)).Elem()
}

func (o GetEsxiHostsEsxiHostCollectionArrayOutput) ToGetEsxiHostsEsxiHostCollectionArrayOutput() GetEsxiHostsEsxiHostCollectionArrayOutput {
	return o
}

func (o GetEsxiHostsEsxiHostCollectionArrayOutput) ToGetEsxiHostsEsxiHostCollectionArrayOutputWithContext(ctx context.Context) GetEsxiHostsEsxiHostCollectionArrayOutput {
	return o
}

func (o GetEsxiHostsEsxiHostCollectionArrayOutput) Index(i pulumi.IntInput) GetEsxiHostsEsxiHostCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEsxiHostsEsxiHostCollection {
		return vs[0].([]GetEsxiHostsEsxiHostCollection)[vs[1].(int)]
	}).(GetEsxiHostsEsxiHostCollectionOutput)
}

type GetEsxiHostsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetEsxiHostsFilterInput is an input type that accepts GetEsxiHostsFilterArgs and GetEsxiHostsFilterOutput values.
// You can construct a concrete instance of `GetEsxiHostsFilterInput` via:
//
//          GetEsxiHostsFilterArgs{...}
type GetEsxiHostsFilterInput interface {
	pulumi.Input

	ToGetEsxiHostsFilterOutput() GetEsxiHostsFilterOutput
	ToGetEsxiHostsFilterOutputWithContext(context.Context) GetEsxiHostsFilterOutput
}

type GetEsxiHostsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetEsxiHostsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEsxiHostsFilter)(nil)).Elem()
}

func (i GetEsxiHostsFilterArgs) ToGetEsxiHostsFilterOutput() GetEsxiHostsFilterOutput {
	return i.ToGetEsxiHostsFilterOutputWithContext(context.Background())
}

func (i GetEsxiHostsFilterArgs) ToGetEsxiHostsFilterOutputWithContext(ctx context.Context) GetEsxiHostsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEsxiHostsFilterOutput)
}

// GetEsxiHostsFilterArrayInput is an input type that accepts GetEsxiHostsFilterArray and GetEsxiHostsFilterArrayOutput values.
// You can construct a concrete instance of `GetEsxiHostsFilterArrayInput` via:
//
//          GetEsxiHostsFilterArray{ GetEsxiHostsFilterArgs{...} }
type GetEsxiHostsFilterArrayInput interface {
	pulumi.Input

	ToGetEsxiHostsFilterArrayOutput() GetEsxiHostsFilterArrayOutput
	ToGetEsxiHostsFilterArrayOutputWithContext(context.Context) GetEsxiHostsFilterArrayOutput
}

type GetEsxiHostsFilterArray []GetEsxiHostsFilterInput

func (GetEsxiHostsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEsxiHostsFilter)(nil)).Elem()
}

func (i GetEsxiHostsFilterArray) ToGetEsxiHostsFilterArrayOutput() GetEsxiHostsFilterArrayOutput {
	return i.ToGetEsxiHostsFilterArrayOutputWithContext(context.Background())
}

func (i GetEsxiHostsFilterArray) ToGetEsxiHostsFilterArrayOutputWithContext(ctx context.Context) GetEsxiHostsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEsxiHostsFilterArrayOutput)
}

type GetEsxiHostsFilterOutput struct{ *pulumi.OutputState }

func (GetEsxiHostsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEsxiHostsFilter)(nil)).Elem()
}

func (o GetEsxiHostsFilterOutput) ToGetEsxiHostsFilterOutput() GetEsxiHostsFilterOutput {
	return o
}

func (o GetEsxiHostsFilterOutput) ToGetEsxiHostsFilterOutputWithContext(ctx context.Context) GetEsxiHostsFilterOutput {
	return o
}

func (o GetEsxiHostsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetEsxiHostsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetEsxiHostsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetEsxiHostsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetEsxiHostsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetEsxiHostsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetEsxiHostsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetEsxiHostsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEsxiHostsFilter)(nil)).Elem()
}

func (o GetEsxiHostsFilterArrayOutput) ToGetEsxiHostsFilterArrayOutput() GetEsxiHostsFilterArrayOutput {
	return o
}

func (o GetEsxiHostsFilterArrayOutput) ToGetEsxiHostsFilterArrayOutputWithContext(ctx context.Context) GetEsxiHostsFilterArrayOutput {
	return o
}

func (o GetEsxiHostsFilterArrayOutput) Index(i pulumi.IntInput) GetEsxiHostsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEsxiHostsFilter {
		return vs[0].([]GetEsxiHostsFilter)[vs[1].(int)]
	}).(GetEsxiHostsFilterOutput)
}

type GetSddcHcxOnPremLicense struct {
	// HCX on-premise license key value
	ActivationKey string `pulumi:"activationKey"`
	// status of HCX on-premise license
	Status string `pulumi:"status"`
	// Name of the system that consumed the HCX on-premise license
	SystemName string `pulumi:"systemName"`
}

// GetSddcHcxOnPremLicenseInput is an input type that accepts GetSddcHcxOnPremLicenseArgs and GetSddcHcxOnPremLicenseOutput values.
// You can construct a concrete instance of `GetSddcHcxOnPremLicenseInput` via:
//
//          GetSddcHcxOnPremLicenseArgs{...}
type GetSddcHcxOnPremLicenseInput interface {
	pulumi.Input

	ToGetSddcHcxOnPremLicenseOutput() GetSddcHcxOnPremLicenseOutput
	ToGetSddcHcxOnPremLicenseOutputWithContext(context.Context) GetSddcHcxOnPremLicenseOutput
}

type GetSddcHcxOnPremLicenseArgs struct {
	// HCX on-premise license key value
	ActivationKey pulumi.StringInput `pulumi:"activationKey"`
	// status of HCX on-premise license
	Status pulumi.StringInput `pulumi:"status"`
	// Name of the system that consumed the HCX on-premise license
	SystemName pulumi.StringInput `pulumi:"systemName"`
}

func (GetSddcHcxOnPremLicenseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSddcHcxOnPremLicense)(nil)).Elem()
}

func (i GetSddcHcxOnPremLicenseArgs) ToGetSddcHcxOnPremLicenseOutput() GetSddcHcxOnPremLicenseOutput {
	return i.ToGetSddcHcxOnPremLicenseOutputWithContext(context.Background())
}

func (i GetSddcHcxOnPremLicenseArgs) ToGetSddcHcxOnPremLicenseOutputWithContext(ctx context.Context) GetSddcHcxOnPremLicenseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSddcHcxOnPremLicenseOutput)
}

// GetSddcHcxOnPremLicenseArrayInput is an input type that accepts GetSddcHcxOnPremLicenseArray and GetSddcHcxOnPremLicenseArrayOutput values.
// You can construct a concrete instance of `GetSddcHcxOnPremLicenseArrayInput` via:
//
//          GetSddcHcxOnPremLicenseArray{ GetSddcHcxOnPremLicenseArgs{...} }
type GetSddcHcxOnPremLicenseArrayInput interface {
	pulumi.Input

	ToGetSddcHcxOnPremLicenseArrayOutput() GetSddcHcxOnPremLicenseArrayOutput
	ToGetSddcHcxOnPremLicenseArrayOutputWithContext(context.Context) GetSddcHcxOnPremLicenseArrayOutput
}

type GetSddcHcxOnPremLicenseArray []GetSddcHcxOnPremLicenseInput

func (GetSddcHcxOnPremLicenseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSddcHcxOnPremLicense)(nil)).Elem()
}

func (i GetSddcHcxOnPremLicenseArray) ToGetSddcHcxOnPremLicenseArrayOutput() GetSddcHcxOnPremLicenseArrayOutput {
	return i.ToGetSddcHcxOnPremLicenseArrayOutputWithContext(context.Background())
}

func (i GetSddcHcxOnPremLicenseArray) ToGetSddcHcxOnPremLicenseArrayOutputWithContext(ctx context.Context) GetSddcHcxOnPremLicenseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSddcHcxOnPremLicenseArrayOutput)
}

type GetSddcHcxOnPremLicenseOutput struct{ *pulumi.OutputState }

func (GetSddcHcxOnPremLicenseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSddcHcxOnPremLicense)(nil)).Elem()
}

func (o GetSddcHcxOnPremLicenseOutput) ToGetSddcHcxOnPremLicenseOutput() GetSddcHcxOnPremLicenseOutput {
	return o
}

func (o GetSddcHcxOnPremLicenseOutput) ToGetSddcHcxOnPremLicenseOutputWithContext(ctx context.Context) GetSddcHcxOnPremLicenseOutput {
	return o
}

// HCX on-premise license key value
func (o GetSddcHcxOnPremLicenseOutput) ActivationKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSddcHcxOnPremLicense) string { return v.ActivationKey }).(pulumi.StringOutput)
}

// status of HCX on-premise license
func (o GetSddcHcxOnPremLicenseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetSddcHcxOnPremLicense) string { return v.Status }).(pulumi.StringOutput)
}

// Name of the system that consumed the HCX on-premise license
func (o GetSddcHcxOnPremLicenseOutput) SystemName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSddcHcxOnPremLicense) string { return v.SystemName }).(pulumi.StringOutput)
}

type GetSddcHcxOnPremLicenseArrayOutput struct{ *pulumi.OutputState }

func (GetSddcHcxOnPremLicenseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSddcHcxOnPremLicense)(nil)).Elem()
}

func (o GetSddcHcxOnPremLicenseArrayOutput) ToGetSddcHcxOnPremLicenseArrayOutput() GetSddcHcxOnPremLicenseArrayOutput {
	return o
}

func (o GetSddcHcxOnPremLicenseArrayOutput) ToGetSddcHcxOnPremLicenseArrayOutputWithContext(ctx context.Context) GetSddcHcxOnPremLicenseArrayOutput {
	return o
}

func (o GetSddcHcxOnPremLicenseArrayOutput) Index(i pulumi.IntInput) GetSddcHcxOnPremLicenseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSddcHcxOnPremLicense {
		return vs[0].([]GetSddcHcxOnPremLicense)[vs[1].(int)]
	}).(GetSddcHcxOnPremLicenseOutput)
}

type GetSddcsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetSddcsFilterInput is an input type that accepts GetSddcsFilterArgs and GetSddcsFilterOutput values.
// You can construct a concrete instance of `GetSddcsFilterInput` via:
//
//          GetSddcsFilterArgs{...}
type GetSddcsFilterInput interface {
	pulumi.Input

	ToGetSddcsFilterOutput() GetSddcsFilterOutput
	ToGetSddcsFilterOutputWithContext(context.Context) GetSddcsFilterOutput
}

type GetSddcsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetSddcsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSddcsFilter)(nil)).Elem()
}

func (i GetSddcsFilterArgs) ToGetSddcsFilterOutput() GetSddcsFilterOutput {
	return i.ToGetSddcsFilterOutputWithContext(context.Background())
}

func (i GetSddcsFilterArgs) ToGetSddcsFilterOutputWithContext(ctx context.Context) GetSddcsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSddcsFilterOutput)
}

// GetSddcsFilterArrayInput is an input type that accepts GetSddcsFilterArray and GetSddcsFilterArrayOutput values.
// You can construct a concrete instance of `GetSddcsFilterArrayInput` via:
//
//          GetSddcsFilterArray{ GetSddcsFilterArgs{...} }
type GetSddcsFilterArrayInput interface {
	pulumi.Input

	ToGetSddcsFilterArrayOutput() GetSddcsFilterArrayOutput
	ToGetSddcsFilterArrayOutputWithContext(context.Context) GetSddcsFilterArrayOutput
}

type GetSddcsFilterArray []GetSddcsFilterInput

func (GetSddcsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSddcsFilter)(nil)).Elem()
}

func (i GetSddcsFilterArray) ToGetSddcsFilterArrayOutput() GetSddcsFilterArrayOutput {
	return i.ToGetSddcsFilterArrayOutputWithContext(context.Background())
}

func (i GetSddcsFilterArray) ToGetSddcsFilterArrayOutputWithContext(ctx context.Context) GetSddcsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSddcsFilterArrayOutput)
}

type GetSddcsFilterOutput struct{ *pulumi.OutputState }

func (GetSddcsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSddcsFilter)(nil)).Elem()
}

func (o GetSddcsFilterOutput) ToGetSddcsFilterOutput() GetSddcsFilterOutput {
	return o
}

func (o GetSddcsFilterOutput) ToGetSddcsFilterOutputWithContext(ctx context.Context) GetSddcsFilterOutput {
	return o
}

func (o GetSddcsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSddcsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetSddcsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSddcsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetSddcsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSddcsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetSddcsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetSddcsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSddcsFilter)(nil)).Elem()
}

func (o GetSddcsFilterArrayOutput) ToGetSddcsFilterArrayOutput() GetSddcsFilterArrayOutput {
	return o
}

func (o GetSddcsFilterArrayOutput) ToGetSddcsFilterArrayOutputWithContext(ctx context.Context) GetSddcsFilterArrayOutput {
	return o
}

func (o GetSddcsFilterArrayOutput) Index(i pulumi.IntInput) GetSddcsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSddcsFilter {
		return vs[0].([]GetSddcsFilter)[vs[1].(int)]
	}).(GetSddcsFilterOutput)
}

type GetSddcsSddcCollection struct {
	// The number of actual ESXi hosts in the SDDC on the cloud. This attribute will be different when esxi Host is added to an existing SDDC.
	ActualEsxiHostsCount int `pulumi:"actualEsxiHostsCount"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// The name of the availability domain that the Compute instances are running in.  Example: `Uocm:PHX-AD-1`
	ComputeAvailabilityDomain string `pulumi:"computeAvailabilityDomain"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// A filter to return only resources that match the given display name exactly.
	DisplayName string `pulumi:"displayName"`
	// The number of ESXi hosts in the SDDC.
	EsxiHostsCount int `pulumi:"esxiHostsCount"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	HcxAction    string                 `pulumi:"hcxAction"`
	// The FQDN for HCX Manager.  Example: `hcx-my-sddc.sddc.us-phoenix-1.oraclecloud.com`
	HcxFqdn string `pulumi:"hcxFqdn"`
	// The SDDC includes an administrator username and initial password for HCX Manager. Make sure to change this initial HCX Manager password to a different value.
	HcxInitialPassword string `pulumi:"hcxInitialPassword"`
	// The activation key to use on the on-premises HCX Enterprise appliance you site pair with HCX Manager in your VMware Solution. Your implementation might need more than one activation key. To obtain additional keys, contact Oracle Support.
	HcxOnPremKey string `pulumi:"hcxOnPremKey"`
	// The activation licenses to use on the on-premises HCX Enterprise appliance you site pair with HCX Manager in your VMware Solution.
	HcxOnPremLicenses []GetSddcsSddcCollectionHcxOnPremLicense `pulumi:"hcxOnPremLicenses"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the `PrivateIp` object that is the virtual IP (VIP) for HCX Manager. For information about `PrivateIp` objects, see the Core Services API.
	HcxPrivateIpId string `pulumi:"hcxPrivateIpId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the HCX component of the VMware environment.
	HcxVlanId string `pulumi:"hcxVlanId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the SDDC.
	Id string `pulumi:"id"`
	// Billing option selected during SDDC creation. Oracle Cloud Infrastructure VMware Solution supports the following billing interval SKUs: HOUR, MONTH, ONE_YEAR, and THREE_YEARS. [ListSupportedSkus](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/SupportedSkuSummary/ListSupportedSkus).
	InitialSku string `pulumi:"initialSku"`
	// A prefix used in the name of each ESXi host and Compute instance in the SDDC. If this isn't set, the SDDC's `displayName` is used as the prefix.
	InstanceDisplayNamePrefix string `pulumi:"instanceDisplayNamePrefix"`
	// Indicates whether HCX is enabled for this SDDC.
	IsHcxEnabled bool `pulumi:"isHcxEnabled"`
	// Indicates whether HCX Enterprise is enabled for this SDDC.
	IsHcxEnterpriseEnabled bool `pulumi:"isHcxEnterpriseEnabled"`
	// Indicates whether SDDC is pending downgrade from HCX Enterprise to HCX Advanced.
	IsHcxPendingDowngrade bool `pulumi:"isHcxPendingDowngrade"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the NSX Edge Uplink 1 component of the VMware environment.
	NsxEdgeUplink1vlanId string `pulumi:"nsxEdgeUplink1vlanId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the NSX Edge Uplink 2 component of the VMware environment.
	NsxEdgeUplink2vlanId string `pulumi:"nsxEdgeUplink2vlanId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the `PrivateIp` object that is the virtual IP (VIP) for the NSX Edge Uplink. Use this OCID as the route target for route table rules when setting up connectivity between the SDDC and other networks. For information about `PrivateIp` objects, see the Core Services API.
	NsxEdgeUplinkIpId string `pulumi:"nsxEdgeUplinkIpId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the NSX Edge VTEP component of the VMware environment.
	NsxEdgeVtepVlanId string `pulumi:"nsxEdgeVtepVlanId"`
	// The FQDN for NSX Manager.  Example: `nsx-my-sddc.sddc.us-phoenix-1.oraclecloud.com`
	NsxManagerFqdn string `pulumi:"nsxManagerFqdn"`
	// The SDDC includes an administrator username and initial password for NSX Manager. Make sure to change this initial NSX Manager password to a different value.
	NsxManagerInitialPassword string `pulumi:"nsxManagerInitialPassword"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the `PrivateIp` object that is the virtual IP (VIP) for NSX Manager. For information about `PrivateIp` objects, see the Core Services API.
	NsxManagerPrivateIpId string `pulumi:"nsxManagerPrivateIpId"`
	// The SDDC includes an administrator username and initial password for NSX Manager. You can change this initial username to a different value in NSX Manager.
	NsxManagerUsername string `pulumi:"nsxManagerUsername"`
	// The VMware NSX overlay workload segment to host your application. Connect to workload portgroup in vCenter to access this overlay segment.
	NsxOverlaySegmentName string `pulumi:"nsxOverlaySegmentName"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the NSX VTEP component of the VMware environment.
	NsxVtepVlanId string `pulumi:"nsxVtepVlanId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the management subnet used to provision the SDDC.
	ProvisioningSubnetId string `pulumi:"provisioningSubnetId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the Provisioning component of the VMware environment.
	ProvisioningVlanId      string `pulumi:"provisioningVlanId"`
	RefreshHcxLicenseStatus bool   `pulumi:"refreshHcxLicenseStatus"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the vSphere Replication component of the VMware environment.
	ReplicationVlanId                string   `pulumi:"replicationVlanId"`
	ReservingHcxOnPremiseLicenseKeys []string `pulumi:"reservingHcxOnPremiseLicenseKeys"`
	// One or more public SSH keys to be included in the `~/.ssh/authorized_keys` file for the default user on each ESXi host. Use a newline character to separate multiple keys. The SSH keys must be in the format required for the `authorizedKeys` file.
	SshAuthorizedKeys string `pulumi:"sshAuthorizedKeys"`
	// The lifecycle state of the resource.
	State string `pulumi:"state"`
	// The date and time the SDDC was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time current HCX Enterprise billing cycle ends, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeHcxBillingCycleEnd string `pulumi:"timeHcxBillingCycleEnd"`
	// The date and time the SDDC's HCX on-premise license status was updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeHcxLicenseStatusUpdated string `pulumi:"timeHcxLicenseStatusUpdated"`
	// The date and time the SDDC was updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimeUpdated string `pulumi:"timeUpdated"`
	// The FQDN for vCenter.  Example: `vcenter-my-sddc.sddc.us-phoenix-1.oraclecloud.com`
	VcenterFqdn string `pulumi:"vcenterFqdn"`
	// The SDDC includes an administrator username and initial password for vCenter. Make sure to change this initial vCenter password to a different value.
	VcenterInitialPassword string `pulumi:"vcenterInitialPassword"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the `PrivateIp` object that is the virtual IP (VIP) for vCenter. For information about `PrivateIp` objects, see the Core Services API.
	VcenterPrivateIpId string `pulumi:"vcenterPrivateIpId"`
	// The SDDC includes an administrator username and initial password for vCenter. You can change this initial username to a different value in vCenter.
	VcenterUsername string `pulumi:"vcenterUsername"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the vMotion component of the VMware environment.
	VmotionVlanId string `pulumi:"vmotionVlanId"`
	// In general, this is a specific version of bundled VMware software supported by Oracle Cloud VMware Solution (see [ListSupportedVmwareSoftwareVersions](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/SupportedVmwareSoftwareVersionSummary/ListSupportedVmwareSoftwareVersions)).
	VmwareSoftwareVersion string `pulumi:"vmwareSoftwareVersion"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the vSAN component of the VMware environment.
	VsanVlanId string `pulumi:"vsanVlanId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the vSphere component of the VMware environment.
	VsphereVlanId string `pulumi:"vsphereVlanId"`
	// The CIDR block for the IP addresses that VMware VMs in the SDDC use to run application workloads.
	WorkloadNetworkCidr string `pulumi:"workloadNetworkCidr"`
}

// GetSddcsSddcCollectionInput is an input type that accepts GetSddcsSddcCollectionArgs and GetSddcsSddcCollectionOutput values.
// You can construct a concrete instance of `GetSddcsSddcCollectionInput` via:
//
//          GetSddcsSddcCollectionArgs{...}
type GetSddcsSddcCollectionInput interface {
	pulumi.Input

	ToGetSddcsSddcCollectionOutput() GetSddcsSddcCollectionOutput
	ToGetSddcsSddcCollectionOutputWithContext(context.Context) GetSddcsSddcCollectionOutput
}

type GetSddcsSddcCollectionArgs struct {
	// The number of actual ESXi hosts in the SDDC on the cloud. This attribute will be different when esxi Host is added to an existing SDDC.
	ActualEsxiHostsCount pulumi.IntInput `pulumi:"actualEsxiHostsCount"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// The name of the availability domain that the Compute instances are running in.  Example: `Uocm:PHX-AD-1`
	ComputeAvailabilityDomain pulumi.StringInput `pulumi:"computeAvailabilityDomain"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// A filter to return only resources that match the given display name exactly.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// The number of ESXi hosts in the SDDC.
	EsxiHostsCount pulumi.IntInput `pulumi:"esxiHostsCount"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput    `pulumi:"freeformTags"`
	HcxAction    pulumi.StringInput `pulumi:"hcxAction"`
	// The FQDN for HCX Manager.  Example: `hcx-my-sddc.sddc.us-phoenix-1.oraclecloud.com`
	HcxFqdn pulumi.StringInput `pulumi:"hcxFqdn"`
	// The SDDC includes an administrator username and initial password for HCX Manager. Make sure to change this initial HCX Manager password to a different value.
	HcxInitialPassword pulumi.StringInput `pulumi:"hcxInitialPassword"`
	// The activation key to use on the on-premises HCX Enterprise appliance you site pair with HCX Manager in your VMware Solution. Your implementation might need more than one activation key. To obtain additional keys, contact Oracle Support.
	HcxOnPremKey pulumi.StringInput `pulumi:"hcxOnPremKey"`
	// The activation licenses to use on the on-premises HCX Enterprise appliance you site pair with HCX Manager in your VMware Solution.
	HcxOnPremLicenses GetSddcsSddcCollectionHcxOnPremLicenseArrayInput `pulumi:"hcxOnPremLicenses"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the `PrivateIp` object that is the virtual IP (VIP) for HCX Manager. For information about `PrivateIp` objects, see the Core Services API.
	HcxPrivateIpId pulumi.StringInput `pulumi:"hcxPrivateIpId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the HCX component of the VMware environment.
	HcxVlanId pulumi.StringInput `pulumi:"hcxVlanId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the SDDC.
	Id pulumi.StringInput `pulumi:"id"`
	// Billing option selected during SDDC creation. Oracle Cloud Infrastructure VMware Solution supports the following billing interval SKUs: HOUR, MONTH, ONE_YEAR, and THREE_YEARS. [ListSupportedSkus](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/SupportedSkuSummary/ListSupportedSkus).
	InitialSku pulumi.StringInput `pulumi:"initialSku"`
	// A prefix used in the name of each ESXi host and Compute instance in the SDDC. If this isn't set, the SDDC's `displayName` is used as the prefix.
	InstanceDisplayNamePrefix pulumi.StringInput `pulumi:"instanceDisplayNamePrefix"`
	// Indicates whether HCX is enabled for this SDDC.
	IsHcxEnabled pulumi.BoolInput `pulumi:"isHcxEnabled"`
	// Indicates whether HCX Enterprise is enabled for this SDDC.
	IsHcxEnterpriseEnabled pulumi.BoolInput `pulumi:"isHcxEnterpriseEnabled"`
	// Indicates whether SDDC is pending downgrade from HCX Enterprise to HCX Advanced.
	IsHcxPendingDowngrade pulumi.BoolInput `pulumi:"isHcxPendingDowngrade"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the NSX Edge Uplink 1 component of the VMware environment.
	NsxEdgeUplink1vlanId pulumi.StringInput `pulumi:"nsxEdgeUplink1vlanId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the NSX Edge Uplink 2 component of the VMware environment.
	NsxEdgeUplink2vlanId pulumi.StringInput `pulumi:"nsxEdgeUplink2vlanId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the `PrivateIp` object that is the virtual IP (VIP) for the NSX Edge Uplink. Use this OCID as the route target for route table rules when setting up connectivity between the SDDC and other networks. For information about `PrivateIp` objects, see the Core Services API.
	NsxEdgeUplinkIpId pulumi.StringInput `pulumi:"nsxEdgeUplinkIpId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the NSX Edge VTEP component of the VMware environment.
	NsxEdgeVtepVlanId pulumi.StringInput `pulumi:"nsxEdgeVtepVlanId"`
	// The FQDN for NSX Manager.  Example: `nsx-my-sddc.sddc.us-phoenix-1.oraclecloud.com`
	NsxManagerFqdn pulumi.StringInput `pulumi:"nsxManagerFqdn"`
	// The SDDC includes an administrator username and initial password for NSX Manager. Make sure to change this initial NSX Manager password to a different value.
	NsxManagerInitialPassword pulumi.StringInput `pulumi:"nsxManagerInitialPassword"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the `PrivateIp` object that is the virtual IP (VIP) for NSX Manager. For information about `PrivateIp` objects, see the Core Services API.
	NsxManagerPrivateIpId pulumi.StringInput `pulumi:"nsxManagerPrivateIpId"`
	// The SDDC includes an administrator username and initial password for NSX Manager. You can change this initial username to a different value in NSX Manager.
	NsxManagerUsername pulumi.StringInput `pulumi:"nsxManagerUsername"`
	// The VMware NSX overlay workload segment to host your application. Connect to workload portgroup in vCenter to access this overlay segment.
	NsxOverlaySegmentName pulumi.StringInput `pulumi:"nsxOverlaySegmentName"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the NSX VTEP component of the VMware environment.
	NsxVtepVlanId pulumi.StringInput `pulumi:"nsxVtepVlanId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the management subnet used to provision the SDDC.
	ProvisioningSubnetId pulumi.StringInput `pulumi:"provisioningSubnetId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the Provisioning component of the VMware environment.
	ProvisioningVlanId      pulumi.StringInput `pulumi:"provisioningVlanId"`
	RefreshHcxLicenseStatus pulumi.BoolInput   `pulumi:"refreshHcxLicenseStatus"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the vSphere Replication component of the VMware environment.
	ReplicationVlanId                pulumi.StringInput      `pulumi:"replicationVlanId"`
	ReservingHcxOnPremiseLicenseKeys pulumi.StringArrayInput `pulumi:"reservingHcxOnPremiseLicenseKeys"`
	// One or more public SSH keys to be included in the `~/.ssh/authorized_keys` file for the default user on each ESXi host. Use a newline character to separate multiple keys. The SSH keys must be in the format required for the `authorizedKeys` file.
	SshAuthorizedKeys pulumi.StringInput `pulumi:"sshAuthorizedKeys"`
	// The lifecycle state of the resource.
	State pulumi.StringInput `pulumi:"state"`
	// The date and time the SDDC was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The date and time current HCX Enterprise billing cycle ends, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeHcxBillingCycleEnd pulumi.StringInput `pulumi:"timeHcxBillingCycleEnd"`
	// The date and time the SDDC's HCX on-premise license status was updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeHcxLicenseStatusUpdated pulumi.StringInput `pulumi:"timeHcxLicenseStatusUpdated"`
	// The date and time the SDDC was updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
	// The FQDN for vCenter.  Example: `vcenter-my-sddc.sddc.us-phoenix-1.oraclecloud.com`
	VcenterFqdn pulumi.StringInput `pulumi:"vcenterFqdn"`
	// The SDDC includes an administrator username and initial password for vCenter. Make sure to change this initial vCenter password to a different value.
	VcenterInitialPassword pulumi.StringInput `pulumi:"vcenterInitialPassword"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the `PrivateIp` object that is the virtual IP (VIP) for vCenter. For information about `PrivateIp` objects, see the Core Services API.
	VcenterPrivateIpId pulumi.StringInput `pulumi:"vcenterPrivateIpId"`
	// The SDDC includes an administrator username and initial password for vCenter. You can change this initial username to a different value in vCenter.
	VcenterUsername pulumi.StringInput `pulumi:"vcenterUsername"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the vMotion component of the VMware environment.
	VmotionVlanId pulumi.StringInput `pulumi:"vmotionVlanId"`
	// In general, this is a specific version of bundled VMware software supported by Oracle Cloud VMware Solution (see [ListSupportedVmwareSoftwareVersions](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/SupportedVmwareSoftwareVersionSummary/ListSupportedVmwareSoftwareVersions)).
	VmwareSoftwareVersion pulumi.StringInput `pulumi:"vmwareSoftwareVersion"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the vSAN component of the VMware environment.
	VsanVlanId pulumi.StringInput `pulumi:"vsanVlanId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the vSphere component of the VMware environment.
	VsphereVlanId pulumi.StringInput `pulumi:"vsphereVlanId"`
	// The CIDR block for the IP addresses that VMware VMs in the SDDC use to run application workloads.
	WorkloadNetworkCidr pulumi.StringInput `pulumi:"workloadNetworkCidr"`
}

func (GetSddcsSddcCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSddcsSddcCollection)(nil)).Elem()
}

func (i GetSddcsSddcCollectionArgs) ToGetSddcsSddcCollectionOutput() GetSddcsSddcCollectionOutput {
	return i.ToGetSddcsSddcCollectionOutputWithContext(context.Background())
}

func (i GetSddcsSddcCollectionArgs) ToGetSddcsSddcCollectionOutputWithContext(ctx context.Context) GetSddcsSddcCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSddcsSddcCollectionOutput)
}

// GetSddcsSddcCollectionArrayInput is an input type that accepts GetSddcsSddcCollectionArray and GetSddcsSddcCollectionArrayOutput values.
// You can construct a concrete instance of `GetSddcsSddcCollectionArrayInput` via:
//
//          GetSddcsSddcCollectionArray{ GetSddcsSddcCollectionArgs{...} }
type GetSddcsSddcCollectionArrayInput interface {
	pulumi.Input

	ToGetSddcsSddcCollectionArrayOutput() GetSddcsSddcCollectionArrayOutput
	ToGetSddcsSddcCollectionArrayOutputWithContext(context.Context) GetSddcsSddcCollectionArrayOutput
}

type GetSddcsSddcCollectionArray []GetSddcsSddcCollectionInput

func (GetSddcsSddcCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSddcsSddcCollection)(nil)).Elem()
}

func (i GetSddcsSddcCollectionArray) ToGetSddcsSddcCollectionArrayOutput() GetSddcsSddcCollectionArrayOutput {
	return i.ToGetSddcsSddcCollectionArrayOutputWithContext(context.Background())
}

func (i GetSddcsSddcCollectionArray) ToGetSddcsSddcCollectionArrayOutputWithContext(ctx context.Context) GetSddcsSddcCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSddcsSddcCollectionArrayOutput)
}

type GetSddcsSddcCollectionOutput struct{ *pulumi.OutputState }

func (GetSddcsSddcCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSddcsSddcCollection)(nil)).Elem()
}

func (o GetSddcsSddcCollectionOutput) ToGetSddcsSddcCollectionOutput() GetSddcsSddcCollectionOutput {
	return o
}

func (o GetSddcsSddcCollectionOutput) ToGetSddcsSddcCollectionOutputWithContext(ctx context.Context) GetSddcsSddcCollectionOutput {
	return o
}

// The number of actual ESXi hosts in the SDDC on the cloud. This attribute will be different when esxi Host is added to an existing SDDC.
func (o GetSddcsSddcCollectionOutput) ActualEsxiHostsCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetSddcsSddcCollection) int { return v.ActualEsxiHostsCount }).(pulumi.IntOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
func (o GetSddcsSddcCollectionOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSddcsSddcCollection) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The name of the availability domain that the Compute instances are running in.  Example: `Uocm:PHX-AD-1`
func (o GetSddcsSddcCollectionOutput) ComputeAvailabilityDomain() pulumi.StringOutput {
	return o.ApplyT(func(v GetSddcsSddcCollection) string { return v.ComputeAvailabilityDomain }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
func (o GetSddcsSddcCollectionOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetSddcsSddcCollection) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// A filter to return only resources that match the given display name exactly.
func (o GetSddcsSddcCollectionOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSddcsSddcCollection) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The number of ESXi hosts in the SDDC.
func (o GetSddcsSddcCollectionOutput) EsxiHostsCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetSddcsSddcCollection) int { return v.EsxiHostsCount }).(pulumi.IntOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
func (o GetSddcsSddcCollectionOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetSddcsSddcCollection) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

func (o GetSddcsSddcCollectionOutput) HcxAction() pulumi.StringOutput {
	return o.ApplyT(func(v GetSddcsSddcCollection) string { return v.HcxAction }).(pulumi.StringOutput)
}

// The FQDN for HCX Manager.  Example: `hcx-my-sddc.sddc.us-phoenix-1.oraclecloud.com`
func (o GetSddcsSddcCollectionOutput) HcxFqdn() pulumi.StringOutput {
	return o.ApplyT(func(v GetSddcsSddcCollection) string { return v.HcxFqdn }).(pulumi.StringOutput)
}

// The SDDC includes an administrator username and initial password for HCX Manager. Make sure to change this initial HCX Manager password to a different value.
func (o GetSddcsSddcCollectionOutput) HcxInitialPassword() pulumi.StringOutput {
	return o.ApplyT(func(v GetSddcsSddcCollection) string { return v.HcxInitialPassword }).(pulumi.StringOutput)
}

// The activation key to use on the on-premises HCX Enterprise appliance you site pair with HCX Manager in your VMware Solution. Your implementation might need more than one activation key. To obtain additional keys, contact Oracle Support.
func (o GetSddcsSddcCollectionOutput) HcxOnPremKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSddcsSddcCollection) string { return v.HcxOnPremKey }).(pulumi.StringOutput)
}

// The activation licenses to use on the on-premises HCX Enterprise appliance you site pair with HCX Manager in your VMware Solution.
func (o GetSddcsSddcCollectionOutput) HcxOnPremLicenses() GetSddcsSddcCollectionHcxOnPremLicenseArrayOutput {
	return o.ApplyT(func(v GetSddcsSddcCollection) []GetSddcsSddcCollectionHcxOnPremLicense { return v.HcxOnPremLicenses }).(GetSddcsSddcCollectionHcxOnPremLicenseArrayOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the `PrivateIp` object that is the virtual IP (VIP) for HCX Manager. For information about `PrivateIp` objects, see the Core Services API.
func (o GetSddcsSddcCollectionOutput) HcxPrivateIpId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSddcsSddcCollection) string { return v.HcxPrivateIpId }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the HCX component of the VMware environment.
func (o GetSddcsSddcCollectionOutput) HcxVlanId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSddcsSddcCollection) string { return v.HcxVlanId }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the SDDC.
func (o GetSddcsSddcCollectionOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSddcsSddcCollection) string { return v.Id }).(pulumi.StringOutput)
}

// Billing option selected during SDDC creation. Oracle Cloud Infrastructure VMware Solution supports the following billing interval SKUs: HOUR, MONTH, ONE_YEAR, and THREE_YEARS. [ListSupportedSkus](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/SupportedSkuSummary/ListSupportedSkus).
func (o GetSddcsSddcCollectionOutput) InitialSku() pulumi.StringOutput {
	return o.ApplyT(func(v GetSddcsSddcCollection) string { return v.InitialSku }).(pulumi.StringOutput)
}

// A prefix used in the name of each ESXi host and Compute instance in the SDDC. If this isn't set, the SDDC's `displayName` is used as the prefix.
func (o GetSddcsSddcCollectionOutput) InstanceDisplayNamePrefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetSddcsSddcCollection) string { return v.InstanceDisplayNamePrefix }).(pulumi.StringOutput)
}

// Indicates whether HCX is enabled for this SDDC.
func (o GetSddcsSddcCollectionOutput) IsHcxEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSddcsSddcCollection) bool { return v.IsHcxEnabled }).(pulumi.BoolOutput)
}

// Indicates whether HCX Enterprise is enabled for this SDDC.
func (o GetSddcsSddcCollectionOutput) IsHcxEnterpriseEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSddcsSddcCollection) bool { return v.IsHcxEnterpriseEnabled }).(pulumi.BoolOutput)
}

// Indicates whether SDDC is pending downgrade from HCX Enterprise to HCX Advanced.
func (o GetSddcsSddcCollectionOutput) IsHcxPendingDowngrade() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSddcsSddcCollection) bool { return v.IsHcxPendingDowngrade }).(pulumi.BoolOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the NSX Edge Uplink 1 component of the VMware environment.
func (o GetSddcsSddcCollectionOutput) NsxEdgeUplink1vlanId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSddcsSddcCollection) string { return v.NsxEdgeUplink1vlanId }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the NSX Edge Uplink 2 component of the VMware environment.
func (o GetSddcsSddcCollectionOutput) NsxEdgeUplink2vlanId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSddcsSddcCollection) string { return v.NsxEdgeUplink2vlanId }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the `PrivateIp` object that is the virtual IP (VIP) for the NSX Edge Uplink. Use this OCID as the route target for route table rules when setting up connectivity between the SDDC and other networks. For information about `PrivateIp` objects, see the Core Services API.
func (o GetSddcsSddcCollectionOutput) NsxEdgeUplinkIpId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSddcsSddcCollection) string { return v.NsxEdgeUplinkIpId }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the NSX Edge VTEP component of the VMware environment.
func (o GetSddcsSddcCollectionOutput) NsxEdgeVtepVlanId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSddcsSddcCollection) string { return v.NsxEdgeVtepVlanId }).(pulumi.StringOutput)
}

// The FQDN for NSX Manager.  Example: `nsx-my-sddc.sddc.us-phoenix-1.oraclecloud.com`
func (o GetSddcsSddcCollectionOutput) NsxManagerFqdn() pulumi.StringOutput {
	return o.ApplyT(func(v GetSddcsSddcCollection) string { return v.NsxManagerFqdn }).(pulumi.StringOutput)
}

// The SDDC includes an administrator username and initial password for NSX Manager. Make sure to change this initial NSX Manager password to a different value.
func (o GetSddcsSddcCollectionOutput) NsxManagerInitialPassword() pulumi.StringOutput {
	return o.ApplyT(func(v GetSddcsSddcCollection) string { return v.NsxManagerInitialPassword }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the `PrivateIp` object that is the virtual IP (VIP) for NSX Manager. For information about `PrivateIp` objects, see the Core Services API.
func (o GetSddcsSddcCollectionOutput) NsxManagerPrivateIpId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSddcsSddcCollection) string { return v.NsxManagerPrivateIpId }).(pulumi.StringOutput)
}

// The SDDC includes an administrator username and initial password for NSX Manager. You can change this initial username to a different value in NSX Manager.
func (o GetSddcsSddcCollectionOutput) NsxManagerUsername() pulumi.StringOutput {
	return o.ApplyT(func(v GetSddcsSddcCollection) string { return v.NsxManagerUsername }).(pulumi.StringOutput)
}

// The VMware NSX overlay workload segment to host your application. Connect to workload portgroup in vCenter to access this overlay segment.
func (o GetSddcsSddcCollectionOutput) NsxOverlaySegmentName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSddcsSddcCollection) string { return v.NsxOverlaySegmentName }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the NSX VTEP component of the VMware environment.
func (o GetSddcsSddcCollectionOutput) NsxVtepVlanId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSddcsSddcCollection) string { return v.NsxVtepVlanId }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the management subnet used to provision the SDDC.
func (o GetSddcsSddcCollectionOutput) ProvisioningSubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSddcsSddcCollection) string { return v.ProvisioningSubnetId }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the Provisioning component of the VMware environment.
func (o GetSddcsSddcCollectionOutput) ProvisioningVlanId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSddcsSddcCollection) string { return v.ProvisioningVlanId }).(pulumi.StringOutput)
}

func (o GetSddcsSddcCollectionOutput) RefreshHcxLicenseStatus() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSddcsSddcCollection) bool { return v.RefreshHcxLicenseStatus }).(pulumi.BoolOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the vSphere Replication component of the VMware environment.
func (o GetSddcsSddcCollectionOutput) ReplicationVlanId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSddcsSddcCollection) string { return v.ReplicationVlanId }).(pulumi.StringOutput)
}

func (o GetSddcsSddcCollectionOutput) ReservingHcxOnPremiseLicenseKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSddcsSddcCollection) []string { return v.ReservingHcxOnPremiseLicenseKeys }).(pulumi.StringArrayOutput)
}

// One or more public SSH keys to be included in the `~/.ssh/authorized_keys` file for the default user on each ESXi host. Use a newline character to separate multiple keys. The SSH keys must be in the format required for the `authorizedKeys` file.
func (o GetSddcsSddcCollectionOutput) SshAuthorizedKeys() pulumi.StringOutput {
	return o.ApplyT(func(v GetSddcsSddcCollection) string { return v.SshAuthorizedKeys }).(pulumi.StringOutput)
}

// The lifecycle state of the resource.
func (o GetSddcsSddcCollectionOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetSddcsSddcCollection) string { return v.State }).(pulumi.StringOutput)
}

// The date and time the SDDC was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
func (o GetSddcsSddcCollectionOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetSddcsSddcCollection) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time current HCX Enterprise billing cycle ends, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
func (o GetSddcsSddcCollectionOutput) TimeHcxBillingCycleEnd() pulumi.StringOutput {
	return o.ApplyT(func(v GetSddcsSddcCollection) string { return v.TimeHcxBillingCycleEnd }).(pulumi.StringOutput)
}

// The date and time the SDDC's HCX on-premise license status was updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
func (o GetSddcsSddcCollectionOutput) TimeHcxLicenseStatusUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetSddcsSddcCollection) string { return v.TimeHcxLicenseStatusUpdated }).(pulumi.StringOutput)
}

// The date and time the SDDC was updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
func (o GetSddcsSddcCollectionOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetSddcsSddcCollection) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

// The FQDN for vCenter.  Example: `vcenter-my-sddc.sddc.us-phoenix-1.oraclecloud.com`
func (o GetSddcsSddcCollectionOutput) VcenterFqdn() pulumi.StringOutput {
	return o.ApplyT(func(v GetSddcsSddcCollection) string { return v.VcenterFqdn }).(pulumi.StringOutput)
}

// The SDDC includes an administrator username and initial password for vCenter. Make sure to change this initial vCenter password to a different value.
func (o GetSddcsSddcCollectionOutput) VcenterInitialPassword() pulumi.StringOutput {
	return o.ApplyT(func(v GetSddcsSddcCollection) string { return v.VcenterInitialPassword }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the `PrivateIp` object that is the virtual IP (VIP) for vCenter. For information about `PrivateIp` objects, see the Core Services API.
func (o GetSddcsSddcCollectionOutput) VcenterPrivateIpId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSddcsSddcCollection) string { return v.VcenterPrivateIpId }).(pulumi.StringOutput)
}

// The SDDC includes an administrator username and initial password for vCenter. You can change this initial username to a different value in vCenter.
func (o GetSddcsSddcCollectionOutput) VcenterUsername() pulumi.StringOutput {
	return o.ApplyT(func(v GetSddcsSddcCollection) string { return v.VcenterUsername }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the vMotion component of the VMware environment.
func (o GetSddcsSddcCollectionOutput) VmotionVlanId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSddcsSddcCollection) string { return v.VmotionVlanId }).(pulumi.StringOutput)
}

// In general, this is a specific version of bundled VMware software supported by Oracle Cloud VMware Solution (see [ListSupportedVmwareSoftwareVersions](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/SupportedVmwareSoftwareVersionSummary/ListSupportedVmwareSoftwareVersions)).
func (o GetSddcsSddcCollectionOutput) VmwareSoftwareVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetSddcsSddcCollection) string { return v.VmwareSoftwareVersion }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the vSAN component of the VMware environment.
func (o GetSddcsSddcCollectionOutput) VsanVlanId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSddcsSddcCollection) string { return v.VsanVlanId }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the vSphere component of the VMware environment.
func (o GetSddcsSddcCollectionOutput) VsphereVlanId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSddcsSddcCollection) string { return v.VsphereVlanId }).(pulumi.StringOutput)
}

// The CIDR block for the IP addresses that VMware VMs in the SDDC use to run application workloads.
func (o GetSddcsSddcCollectionOutput) WorkloadNetworkCidr() pulumi.StringOutput {
	return o.ApplyT(func(v GetSddcsSddcCollection) string { return v.WorkloadNetworkCidr }).(pulumi.StringOutput)
}

type GetSddcsSddcCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetSddcsSddcCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSddcsSddcCollection)(nil)).Elem()
}

func (o GetSddcsSddcCollectionArrayOutput) ToGetSddcsSddcCollectionArrayOutput() GetSddcsSddcCollectionArrayOutput {
	return o
}

func (o GetSddcsSddcCollectionArrayOutput) ToGetSddcsSddcCollectionArrayOutputWithContext(ctx context.Context) GetSddcsSddcCollectionArrayOutput {
	return o
}

func (o GetSddcsSddcCollectionArrayOutput) Index(i pulumi.IntInput) GetSddcsSddcCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSddcsSddcCollection {
		return vs[0].([]GetSddcsSddcCollection)[vs[1].(int)]
	}).(GetSddcsSddcCollectionOutput)
}

type GetSddcsSddcCollectionHcxOnPremLicense struct {
	// HCX on-premise license key value
	ActivationKey string `pulumi:"activationKey"`
	// status of HCX on-premise license
	Status string `pulumi:"status"`
	// Name of the system that consumed the HCX on-premise license
	SystemName string `pulumi:"systemName"`
}

// GetSddcsSddcCollectionHcxOnPremLicenseInput is an input type that accepts GetSddcsSddcCollectionHcxOnPremLicenseArgs and GetSddcsSddcCollectionHcxOnPremLicenseOutput values.
// You can construct a concrete instance of `GetSddcsSddcCollectionHcxOnPremLicenseInput` via:
//
//          GetSddcsSddcCollectionHcxOnPremLicenseArgs{...}
type GetSddcsSddcCollectionHcxOnPremLicenseInput interface {
	pulumi.Input

	ToGetSddcsSddcCollectionHcxOnPremLicenseOutput() GetSddcsSddcCollectionHcxOnPremLicenseOutput
	ToGetSddcsSddcCollectionHcxOnPremLicenseOutputWithContext(context.Context) GetSddcsSddcCollectionHcxOnPremLicenseOutput
}

type GetSddcsSddcCollectionHcxOnPremLicenseArgs struct {
	// HCX on-premise license key value
	ActivationKey pulumi.StringInput `pulumi:"activationKey"`
	// status of HCX on-premise license
	Status pulumi.StringInput `pulumi:"status"`
	// Name of the system that consumed the HCX on-premise license
	SystemName pulumi.StringInput `pulumi:"systemName"`
}

func (GetSddcsSddcCollectionHcxOnPremLicenseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSddcsSddcCollectionHcxOnPremLicense)(nil)).Elem()
}

func (i GetSddcsSddcCollectionHcxOnPremLicenseArgs) ToGetSddcsSddcCollectionHcxOnPremLicenseOutput() GetSddcsSddcCollectionHcxOnPremLicenseOutput {
	return i.ToGetSddcsSddcCollectionHcxOnPremLicenseOutputWithContext(context.Background())
}

func (i GetSddcsSddcCollectionHcxOnPremLicenseArgs) ToGetSddcsSddcCollectionHcxOnPremLicenseOutputWithContext(ctx context.Context) GetSddcsSddcCollectionHcxOnPremLicenseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSddcsSddcCollectionHcxOnPremLicenseOutput)
}

// GetSddcsSddcCollectionHcxOnPremLicenseArrayInput is an input type that accepts GetSddcsSddcCollectionHcxOnPremLicenseArray and GetSddcsSddcCollectionHcxOnPremLicenseArrayOutput values.
// You can construct a concrete instance of `GetSddcsSddcCollectionHcxOnPremLicenseArrayInput` via:
//
//          GetSddcsSddcCollectionHcxOnPremLicenseArray{ GetSddcsSddcCollectionHcxOnPremLicenseArgs{...} }
type GetSddcsSddcCollectionHcxOnPremLicenseArrayInput interface {
	pulumi.Input

	ToGetSddcsSddcCollectionHcxOnPremLicenseArrayOutput() GetSddcsSddcCollectionHcxOnPremLicenseArrayOutput
	ToGetSddcsSddcCollectionHcxOnPremLicenseArrayOutputWithContext(context.Context) GetSddcsSddcCollectionHcxOnPremLicenseArrayOutput
}

type GetSddcsSddcCollectionHcxOnPremLicenseArray []GetSddcsSddcCollectionHcxOnPremLicenseInput

func (GetSddcsSddcCollectionHcxOnPremLicenseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSddcsSddcCollectionHcxOnPremLicense)(nil)).Elem()
}

func (i GetSddcsSddcCollectionHcxOnPremLicenseArray) ToGetSddcsSddcCollectionHcxOnPremLicenseArrayOutput() GetSddcsSddcCollectionHcxOnPremLicenseArrayOutput {
	return i.ToGetSddcsSddcCollectionHcxOnPremLicenseArrayOutputWithContext(context.Background())
}

func (i GetSddcsSddcCollectionHcxOnPremLicenseArray) ToGetSddcsSddcCollectionHcxOnPremLicenseArrayOutputWithContext(ctx context.Context) GetSddcsSddcCollectionHcxOnPremLicenseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSddcsSddcCollectionHcxOnPremLicenseArrayOutput)
}

type GetSddcsSddcCollectionHcxOnPremLicenseOutput struct{ *pulumi.OutputState }

func (GetSddcsSddcCollectionHcxOnPremLicenseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSddcsSddcCollectionHcxOnPremLicense)(nil)).Elem()
}

func (o GetSddcsSddcCollectionHcxOnPremLicenseOutput) ToGetSddcsSddcCollectionHcxOnPremLicenseOutput() GetSddcsSddcCollectionHcxOnPremLicenseOutput {
	return o
}

func (o GetSddcsSddcCollectionHcxOnPremLicenseOutput) ToGetSddcsSddcCollectionHcxOnPremLicenseOutputWithContext(ctx context.Context) GetSddcsSddcCollectionHcxOnPremLicenseOutput {
	return o
}

// HCX on-premise license key value
func (o GetSddcsSddcCollectionHcxOnPremLicenseOutput) ActivationKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSddcsSddcCollectionHcxOnPremLicense) string { return v.ActivationKey }).(pulumi.StringOutput)
}

// status of HCX on-premise license
func (o GetSddcsSddcCollectionHcxOnPremLicenseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetSddcsSddcCollectionHcxOnPremLicense) string { return v.Status }).(pulumi.StringOutput)
}

// Name of the system that consumed the HCX on-premise license
func (o GetSddcsSddcCollectionHcxOnPremLicenseOutput) SystemName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSddcsSddcCollectionHcxOnPremLicense) string { return v.SystemName }).(pulumi.StringOutput)
}

type GetSddcsSddcCollectionHcxOnPremLicenseArrayOutput struct{ *pulumi.OutputState }

func (GetSddcsSddcCollectionHcxOnPremLicenseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSddcsSddcCollectionHcxOnPremLicense)(nil)).Elem()
}

func (o GetSddcsSddcCollectionHcxOnPremLicenseArrayOutput) ToGetSddcsSddcCollectionHcxOnPremLicenseArrayOutput() GetSddcsSddcCollectionHcxOnPremLicenseArrayOutput {
	return o
}

func (o GetSddcsSddcCollectionHcxOnPremLicenseArrayOutput) ToGetSddcsSddcCollectionHcxOnPremLicenseArrayOutputWithContext(ctx context.Context) GetSddcsSddcCollectionHcxOnPremLicenseArrayOutput {
	return o
}

func (o GetSddcsSddcCollectionHcxOnPremLicenseArrayOutput) Index(i pulumi.IntInput) GetSddcsSddcCollectionHcxOnPremLicenseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSddcsSddcCollectionHcxOnPremLicense {
		return vs[0].([]GetSddcsSddcCollectionHcxOnPremLicense)[vs[1].(int)]
	}).(GetSddcsSddcCollectionHcxOnPremLicenseOutput)
}

type GetSupportedSkusFilter struct {
	// name of SKU
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetSupportedSkusFilterInput is an input type that accepts GetSupportedSkusFilterArgs and GetSupportedSkusFilterOutput values.
// You can construct a concrete instance of `GetSupportedSkusFilterInput` via:
//
//          GetSupportedSkusFilterArgs{...}
type GetSupportedSkusFilterInput interface {
	pulumi.Input

	ToGetSupportedSkusFilterOutput() GetSupportedSkusFilterOutput
	ToGetSupportedSkusFilterOutputWithContext(context.Context) GetSupportedSkusFilterOutput
}

type GetSupportedSkusFilterArgs struct {
	// name of SKU
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetSupportedSkusFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSupportedSkusFilter)(nil)).Elem()
}

func (i GetSupportedSkusFilterArgs) ToGetSupportedSkusFilterOutput() GetSupportedSkusFilterOutput {
	return i.ToGetSupportedSkusFilterOutputWithContext(context.Background())
}

func (i GetSupportedSkusFilterArgs) ToGetSupportedSkusFilterOutputWithContext(ctx context.Context) GetSupportedSkusFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSupportedSkusFilterOutput)
}

// GetSupportedSkusFilterArrayInput is an input type that accepts GetSupportedSkusFilterArray and GetSupportedSkusFilterArrayOutput values.
// You can construct a concrete instance of `GetSupportedSkusFilterArrayInput` via:
//
//          GetSupportedSkusFilterArray{ GetSupportedSkusFilterArgs{...} }
type GetSupportedSkusFilterArrayInput interface {
	pulumi.Input

	ToGetSupportedSkusFilterArrayOutput() GetSupportedSkusFilterArrayOutput
	ToGetSupportedSkusFilterArrayOutputWithContext(context.Context) GetSupportedSkusFilterArrayOutput
}

type GetSupportedSkusFilterArray []GetSupportedSkusFilterInput

func (GetSupportedSkusFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSupportedSkusFilter)(nil)).Elem()
}

func (i GetSupportedSkusFilterArray) ToGetSupportedSkusFilterArrayOutput() GetSupportedSkusFilterArrayOutput {
	return i.ToGetSupportedSkusFilterArrayOutputWithContext(context.Background())
}

func (i GetSupportedSkusFilterArray) ToGetSupportedSkusFilterArrayOutputWithContext(ctx context.Context) GetSupportedSkusFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSupportedSkusFilterArrayOutput)
}

type GetSupportedSkusFilterOutput struct{ *pulumi.OutputState }

func (GetSupportedSkusFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSupportedSkusFilter)(nil)).Elem()
}

func (o GetSupportedSkusFilterOutput) ToGetSupportedSkusFilterOutput() GetSupportedSkusFilterOutput {
	return o
}

func (o GetSupportedSkusFilterOutput) ToGetSupportedSkusFilterOutputWithContext(ctx context.Context) GetSupportedSkusFilterOutput {
	return o
}

// name of SKU
func (o GetSupportedSkusFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSupportedSkusFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetSupportedSkusFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSupportedSkusFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetSupportedSkusFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSupportedSkusFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetSupportedSkusFilterArrayOutput struct{ *pulumi.OutputState }

func (GetSupportedSkusFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSupportedSkusFilter)(nil)).Elem()
}

func (o GetSupportedSkusFilterArrayOutput) ToGetSupportedSkusFilterArrayOutput() GetSupportedSkusFilterArrayOutput {
	return o
}

func (o GetSupportedSkusFilterArrayOutput) ToGetSupportedSkusFilterArrayOutputWithContext(ctx context.Context) GetSupportedSkusFilterArrayOutput {
	return o
}

func (o GetSupportedSkusFilterArrayOutput) Index(i pulumi.IntInput) GetSupportedSkusFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSupportedSkusFilter {
		return vs[0].([]GetSupportedSkusFilter)[vs[1].(int)]
	}).(GetSupportedSkusFilterOutput)
}

type GetSupportedSkusItem struct {
	// name of SKU
	Name string `pulumi:"name"`
}

// GetSupportedSkusItemInput is an input type that accepts GetSupportedSkusItemArgs and GetSupportedSkusItemOutput values.
// You can construct a concrete instance of `GetSupportedSkusItemInput` via:
//
//          GetSupportedSkusItemArgs{...}
type GetSupportedSkusItemInput interface {
	pulumi.Input

	ToGetSupportedSkusItemOutput() GetSupportedSkusItemOutput
	ToGetSupportedSkusItemOutputWithContext(context.Context) GetSupportedSkusItemOutput
}

type GetSupportedSkusItemArgs struct {
	// name of SKU
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetSupportedSkusItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSupportedSkusItem)(nil)).Elem()
}

func (i GetSupportedSkusItemArgs) ToGetSupportedSkusItemOutput() GetSupportedSkusItemOutput {
	return i.ToGetSupportedSkusItemOutputWithContext(context.Background())
}

func (i GetSupportedSkusItemArgs) ToGetSupportedSkusItemOutputWithContext(ctx context.Context) GetSupportedSkusItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSupportedSkusItemOutput)
}

// GetSupportedSkusItemArrayInput is an input type that accepts GetSupportedSkusItemArray and GetSupportedSkusItemArrayOutput values.
// You can construct a concrete instance of `GetSupportedSkusItemArrayInput` via:
//
//          GetSupportedSkusItemArray{ GetSupportedSkusItemArgs{...} }
type GetSupportedSkusItemArrayInput interface {
	pulumi.Input

	ToGetSupportedSkusItemArrayOutput() GetSupportedSkusItemArrayOutput
	ToGetSupportedSkusItemArrayOutputWithContext(context.Context) GetSupportedSkusItemArrayOutput
}

type GetSupportedSkusItemArray []GetSupportedSkusItemInput

func (GetSupportedSkusItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSupportedSkusItem)(nil)).Elem()
}

func (i GetSupportedSkusItemArray) ToGetSupportedSkusItemArrayOutput() GetSupportedSkusItemArrayOutput {
	return i.ToGetSupportedSkusItemArrayOutputWithContext(context.Background())
}

func (i GetSupportedSkusItemArray) ToGetSupportedSkusItemArrayOutputWithContext(ctx context.Context) GetSupportedSkusItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSupportedSkusItemArrayOutput)
}

type GetSupportedSkusItemOutput struct{ *pulumi.OutputState }

func (GetSupportedSkusItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSupportedSkusItem)(nil)).Elem()
}

func (o GetSupportedSkusItemOutput) ToGetSupportedSkusItemOutput() GetSupportedSkusItemOutput {
	return o
}

func (o GetSupportedSkusItemOutput) ToGetSupportedSkusItemOutputWithContext(ctx context.Context) GetSupportedSkusItemOutput {
	return o
}

// name of SKU
func (o GetSupportedSkusItemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSupportedSkusItem) string { return v.Name }).(pulumi.StringOutput)
}

type GetSupportedSkusItemArrayOutput struct{ *pulumi.OutputState }

func (GetSupportedSkusItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSupportedSkusItem)(nil)).Elem()
}

func (o GetSupportedSkusItemArrayOutput) ToGetSupportedSkusItemArrayOutput() GetSupportedSkusItemArrayOutput {
	return o
}

func (o GetSupportedSkusItemArrayOutput) ToGetSupportedSkusItemArrayOutputWithContext(ctx context.Context) GetSupportedSkusItemArrayOutput {
	return o
}

func (o GetSupportedSkusItemArrayOutput) Index(i pulumi.IntInput) GetSupportedSkusItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSupportedSkusItem {
		return vs[0].([]GetSupportedSkusItem)[vs[1].(int)]
	}).(GetSupportedSkusItemOutput)
}

type GetSupportedVmwareSoftwareVersionsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetSupportedVmwareSoftwareVersionsFilterInput is an input type that accepts GetSupportedVmwareSoftwareVersionsFilterArgs and GetSupportedVmwareSoftwareVersionsFilterOutput values.
// You can construct a concrete instance of `GetSupportedVmwareSoftwareVersionsFilterInput` via:
//
//          GetSupportedVmwareSoftwareVersionsFilterArgs{...}
type GetSupportedVmwareSoftwareVersionsFilterInput interface {
	pulumi.Input

	ToGetSupportedVmwareSoftwareVersionsFilterOutput() GetSupportedVmwareSoftwareVersionsFilterOutput
	ToGetSupportedVmwareSoftwareVersionsFilterOutputWithContext(context.Context) GetSupportedVmwareSoftwareVersionsFilterOutput
}

type GetSupportedVmwareSoftwareVersionsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetSupportedVmwareSoftwareVersionsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSupportedVmwareSoftwareVersionsFilter)(nil)).Elem()
}

func (i GetSupportedVmwareSoftwareVersionsFilterArgs) ToGetSupportedVmwareSoftwareVersionsFilterOutput() GetSupportedVmwareSoftwareVersionsFilterOutput {
	return i.ToGetSupportedVmwareSoftwareVersionsFilterOutputWithContext(context.Background())
}

func (i GetSupportedVmwareSoftwareVersionsFilterArgs) ToGetSupportedVmwareSoftwareVersionsFilterOutputWithContext(ctx context.Context) GetSupportedVmwareSoftwareVersionsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSupportedVmwareSoftwareVersionsFilterOutput)
}

// GetSupportedVmwareSoftwareVersionsFilterArrayInput is an input type that accepts GetSupportedVmwareSoftwareVersionsFilterArray and GetSupportedVmwareSoftwareVersionsFilterArrayOutput values.
// You can construct a concrete instance of `GetSupportedVmwareSoftwareVersionsFilterArrayInput` via:
//
//          GetSupportedVmwareSoftwareVersionsFilterArray{ GetSupportedVmwareSoftwareVersionsFilterArgs{...} }
type GetSupportedVmwareSoftwareVersionsFilterArrayInput interface {
	pulumi.Input

	ToGetSupportedVmwareSoftwareVersionsFilterArrayOutput() GetSupportedVmwareSoftwareVersionsFilterArrayOutput
	ToGetSupportedVmwareSoftwareVersionsFilterArrayOutputWithContext(context.Context) GetSupportedVmwareSoftwareVersionsFilterArrayOutput
}

type GetSupportedVmwareSoftwareVersionsFilterArray []GetSupportedVmwareSoftwareVersionsFilterInput

func (GetSupportedVmwareSoftwareVersionsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSupportedVmwareSoftwareVersionsFilter)(nil)).Elem()
}

func (i GetSupportedVmwareSoftwareVersionsFilterArray) ToGetSupportedVmwareSoftwareVersionsFilterArrayOutput() GetSupportedVmwareSoftwareVersionsFilterArrayOutput {
	return i.ToGetSupportedVmwareSoftwareVersionsFilterArrayOutputWithContext(context.Background())
}

func (i GetSupportedVmwareSoftwareVersionsFilterArray) ToGetSupportedVmwareSoftwareVersionsFilterArrayOutputWithContext(ctx context.Context) GetSupportedVmwareSoftwareVersionsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSupportedVmwareSoftwareVersionsFilterArrayOutput)
}

type GetSupportedVmwareSoftwareVersionsFilterOutput struct{ *pulumi.OutputState }

func (GetSupportedVmwareSoftwareVersionsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSupportedVmwareSoftwareVersionsFilter)(nil)).Elem()
}

func (o GetSupportedVmwareSoftwareVersionsFilterOutput) ToGetSupportedVmwareSoftwareVersionsFilterOutput() GetSupportedVmwareSoftwareVersionsFilterOutput {
	return o
}

func (o GetSupportedVmwareSoftwareVersionsFilterOutput) ToGetSupportedVmwareSoftwareVersionsFilterOutputWithContext(ctx context.Context) GetSupportedVmwareSoftwareVersionsFilterOutput {
	return o
}

func (o GetSupportedVmwareSoftwareVersionsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSupportedVmwareSoftwareVersionsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetSupportedVmwareSoftwareVersionsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSupportedVmwareSoftwareVersionsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetSupportedVmwareSoftwareVersionsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSupportedVmwareSoftwareVersionsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetSupportedVmwareSoftwareVersionsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetSupportedVmwareSoftwareVersionsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSupportedVmwareSoftwareVersionsFilter)(nil)).Elem()
}

func (o GetSupportedVmwareSoftwareVersionsFilterArrayOutput) ToGetSupportedVmwareSoftwareVersionsFilterArrayOutput() GetSupportedVmwareSoftwareVersionsFilterArrayOutput {
	return o
}

func (o GetSupportedVmwareSoftwareVersionsFilterArrayOutput) ToGetSupportedVmwareSoftwareVersionsFilterArrayOutputWithContext(ctx context.Context) GetSupportedVmwareSoftwareVersionsFilterArrayOutput {
	return o
}

func (o GetSupportedVmwareSoftwareVersionsFilterArrayOutput) Index(i pulumi.IntInput) GetSupportedVmwareSoftwareVersionsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSupportedVmwareSoftwareVersionsFilter {
		return vs[0].([]GetSupportedVmwareSoftwareVersionsFilter)[vs[1].(int)]
	}).(GetSupportedVmwareSoftwareVersionsFilterOutput)
}

type GetSupportedVmwareSoftwareVersionsItem struct {
	// A description of the software in the bundle.
	Description string `pulumi:"description"`
	// A short, unique string that identifies the version of bundled software.
	Version string `pulumi:"version"`
}

// GetSupportedVmwareSoftwareVersionsItemInput is an input type that accepts GetSupportedVmwareSoftwareVersionsItemArgs and GetSupportedVmwareSoftwareVersionsItemOutput values.
// You can construct a concrete instance of `GetSupportedVmwareSoftwareVersionsItemInput` via:
//
//          GetSupportedVmwareSoftwareVersionsItemArgs{...}
type GetSupportedVmwareSoftwareVersionsItemInput interface {
	pulumi.Input

	ToGetSupportedVmwareSoftwareVersionsItemOutput() GetSupportedVmwareSoftwareVersionsItemOutput
	ToGetSupportedVmwareSoftwareVersionsItemOutputWithContext(context.Context) GetSupportedVmwareSoftwareVersionsItemOutput
}

type GetSupportedVmwareSoftwareVersionsItemArgs struct {
	// A description of the software in the bundle.
	Description pulumi.StringInput `pulumi:"description"`
	// A short, unique string that identifies the version of bundled software.
	Version pulumi.StringInput `pulumi:"version"`
}

func (GetSupportedVmwareSoftwareVersionsItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSupportedVmwareSoftwareVersionsItem)(nil)).Elem()
}

func (i GetSupportedVmwareSoftwareVersionsItemArgs) ToGetSupportedVmwareSoftwareVersionsItemOutput() GetSupportedVmwareSoftwareVersionsItemOutput {
	return i.ToGetSupportedVmwareSoftwareVersionsItemOutputWithContext(context.Background())
}

func (i GetSupportedVmwareSoftwareVersionsItemArgs) ToGetSupportedVmwareSoftwareVersionsItemOutputWithContext(ctx context.Context) GetSupportedVmwareSoftwareVersionsItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSupportedVmwareSoftwareVersionsItemOutput)
}

// GetSupportedVmwareSoftwareVersionsItemArrayInput is an input type that accepts GetSupportedVmwareSoftwareVersionsItemArray and GetSupportedVmwareSoftwareVersionsItemArrayOutput values.
// You can construct a concrete instance of `GetSupportedVmwareSoftwareVersionsItemArrayInput` via:
//
//          GetSupportedVmwareSoftwareVersionsItemArray{ GetSupportedVmwareSoftwareVersionsItemArgs{...} }
type GetSupportedVmwareSoftwareVersionsItemArrayInput interface {
	pulumi.Input

	ToGetSupportedVmwareSoftwareVersionsItemArrayOutput() GetSupportedVmwareSoftwareVersionsItemArrayOutput
	ToGetSupportedVmwareSoftwareVersionsItemArrayOutputWithContext(context.Context) GetSupportedVmwareSoftwareVersionsItemArrayOutput
}

type GetSupportedVmwareSoftwareVersionsItemArray []GetSupportedVmwareSoftwareVersionsItemInput

func (GetSupportedVmwareSoftwareVersionsItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSupportedVmwareSoftwareVersionsItem)(nil)).Elem()
}

func (i GetSupportedVmwareSoftwareVersionsItemArray) ToGetSupportedVmwareSoftwareVersionsItemArrayOutput() GetSupportedVmwareSoftwareVersionsItemArrayOutput {
	return i.ToGetSupportedVmwareSoftwareVersionsItemArrayOutputWithContext(context.Background())
}

func (i GetSupportedVmwareSoftwareVersionsItemArray) ToGetSupportedVmwareSoftwareVersionsItemArrayOutputWithContext(ctx context.Context) GetSupportedVmwareSoftwareVersionsItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSupportedVmwareSoftwareVersionsItemArrayOutput)
}

type GetSupportedVmwareSoftwareVersionsItemOutput struct{ *pulumi.OutputState }

func (GetSupportedVmwareSoftwareVersionsItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSupportedVmwareSoftwareVersionsItem)(nil)).Elem()
}

func (o GetSupportedVmwareSoftwareVersionsItemOutput) ToGetSupportedVmwareSoftwareVersionsItemOutput() GetSupportedVmwareSoftwareVersionsItemOutput {
	return o
}

func (o GetSupportedVmwareSoftwareVersionsItemOutput) ToGetSupportedVmwareSoftwareVersionsItemOutputWithContext(ctx context.Context) GetSupportedVmwareSoftwareVersionsItemOutput {
	return o
}

// A description of the software in the bundle.
func (o GetSupportedVmwareSoftwareVersionsItemOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetSupportedVmwareSoftwareVersionsItem) string { return v.Description }).(pulumi.StringOutput)
}

// A short, unique string that identifies the version of bundled software.
func (o GetSupportedVmwareSoftwareVersionsItemOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetSupportedVmwareSoftwareVersionsItem) string { return v.Version }).(pulumi.StringOutput)
}

type GetSupportedVmwareSoftwareVersionsItemArrayOutput struct{ *pulumi.OutputState }

func (GetSupportedVmwareSoftwareVersionsItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSupportedVmwareSoftwareVersionsItem)(nil)).Elem()
}

func (o GetSupportedVmwareSoftwareVersionsItemArrayOutput) ToGetSupportedVmwareSoftwareVersionsItemArrayOutput() GetSupportedVmwareSoftwareVersionsItemArrayOutput {
	return o
}

func (o GetSupportedVmwareSoftwareVersionsItemArrayOutput) ToGetSupportedVmwareSoftwareVersionsItemArrayOutputWithContext(ctx context.Context) GetSupportedVmwareSoftwareVersionsItemArrayOutput {
	return o
}

func (o GetSupportedVmwareSoftwareVersionsItemArrayOutput) Index(i pulumi.IntInput) GetSupportedVmwareSoftwareVersionsItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSupportedVmwareSoftwareVersionsItem {
		return vs[0].([]GetSupportedVmwareSoftwareVersionsItem)[vs[1].(int)]
	}).(GetSupportedVmwareSoftwareVersionsItemOutput)
}

func init() {
	pulumi.RegisterOutputType(SddcHcxOnPremLicenseOutput{})
	pulumi.RegisterOutputType(SddcHcxOnPremLicenseArrayOutput{})
	pulumi.RegisterOutputType(GetEsxiHostsEsxiHostCollectionOutput{})
	pulumi.RegisterOutputType(GetEsxiHostsEsxiHostCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetEsxiHostsFilterOutput{})
	pulumi.RegisterOutputType(GetEsxiHostsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetSddcHcxOnPremLicenseOutput{})
	pulumi.RegisterOutputType(GetSddcHcxOnPremLicenseArrayOutput{})
	pulumi.RegisterOutputType(GetSddcsFilterOutput{})
	pulumi.RegisterOutputType(GetSddcsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetSddcsSddcCollectionOutput{})
	pulumi.RegisterOutputType(GetSddcsSddcCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetSddcsSddcCollectionHcxOnPremLicenseOutput{})
	pulumi.RegisterOutputType(GetSddcsSddcCollectionHcxOnPremLicenseArrayOutput{})
	pulumi.RegisterOutputType(GetSupportedSkusFilterOutput{})
	pulumi.RegisterOutputType(GetSupportedSkusFilterArrayOutput{})
	pulumi.RegisterOutputType(GetSupportedSkusItemOutput{})
	pulumi.RegisterOutputType(GetSupportedSkusItemArrayOutput{})
	pulumi.RegisterOutputType(GetSupportedVmwareSoftwareVersionsFilterOutput{})
	pulumi.RegisterOutputType(GetSupportedVmwareSoftwareVersionsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetSupportedVmwareSoftwareVersionsItemOutput{})
	pulumi.RegisterOutputType(GetSupportedVmwareSoftwareVersionsItemArrayOutput{})
}
