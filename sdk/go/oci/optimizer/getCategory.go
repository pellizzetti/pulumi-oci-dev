// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package optimizer

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Category resource in Oracle Cloud Infrastructure Optimizer service.
//
// Gets the category that corresponds to the specified OCID.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci/optimizer"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := optimizer.GetCategory(ctx, &optimizer.GetCategoryArgs{
// 			CategoryId: oci_optimizer_category.Test_category.Id,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func GetCategory(ctx *pulumi.Context, args *GetCategoryArgs, opts ...pulumi.InvokeOption) (*GetCategoryResult, error) {
	var rv GetCategoryResult
	err := ctx.Invoke("oci:optimizer/getCategory:getCategory", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCategory.
type GetCategoryArgs struct {
	// The unique OCID associated with the category.
	CategoryId string `pulumi:"categoryId"`
}

// A collection of values returned by getCategory.
type GetCategoryResult struct {
	CategoryId string `pulumi:"categoryId"`
	// The OCID of the tenancy. The tenancy is the root compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// Text describing the category. Avoid entering confidential information.
	Description string `pulumi:"description"`
	// The estimated cost savings, in dollars, for the category.
	EstimatedCostSaving float64 `pulumi:"estimatedCostSaving"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The name assigned to the category. Avoid entering confidential information.
	Name string `pulumi:"name"`
	// An array of `RecommendationCount` objects grouped by the level of importance assigned to the recommendation.
	RecommendationCounts []GetCategoryRecommendationCount `pulumi:"recommendationCounts"`
	// An array of `ResourceCount` objects grouped by the status of the recommendation.
	ResourceCounts []GetCategoryResourceCount `pulumi:"resourceCounts"`
	// The category's current state.
	State string `pulumi:"state"`
	// The date and time the category details were created, in the format defined by RFC3339.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the category details were last updated, in the format defined by RFC3339.
	TimeUpdated string `pulumi:"timeUpdated"`
}
