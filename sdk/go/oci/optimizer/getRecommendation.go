// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package optimizer

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Recommendation resource in Oracle Cloud Infrastructure Optimizer service.
//
// Gets the recommendation for the specified OCID.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci/optimizer"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := optimizer.LookupRecommendation(ctx, &optimizer.LookupRecommendationArgs{
// 			RecommendationId: oci_optimizer_recommendation.Test_recommendation.Id,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupRecommendation(ctx *pulumi.Context, args *LookupRecommendationArgs, opts ...pulumi.InvokeOption) (*LookupRecommendationResult, error) {
	var rv LookupRecommendationResult
	err := ctx.Invoke("oci:optimizer/getRecommendation:getRecommendation", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRecommendation.
type LookupRecommendationArgs struct {
	// The unique OCID associated with the recommendation.
	RecommendationId string `pulumi:"recommendationId"`
}

// A collection of values returned by getRecommendation.
type LookupRecommendationResult struct {
	// The unique OCID associated with the category.
	CategoryId string `pulumi:"categoryId"`
	// The OCID of the tenancy. The tenancy is the root compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// Text describing the recommendation.
	Description string `pulumi:"description"`
	// The estimated cost savings, in dollars, for the recommendation.
	EstimatedCostSaving float64 `pulumi:"estimatedCostSaving"`
	// The unique OCID associated with the recommendation.
	Id string `pulumi:"id"`
	// The level of importance assigned to the recommendation.
	Importance string `pulumi:"importance"`
	// The name of the profile level.
	Name             string `pulumi:"name"`
	RecommendationId string `pulumi:"recommendationId"`
	// An array of `ResourceCount` objects grouped by the status of the resource actions.
	ResourceCounts []GetRecommendationResourceCount `pulumi:"resourceCounts"`
	// The recommendation's current state.
	State string `pulumi:"state"`
	// The current status of the recommendation.
	Status string `pulumi:"status"`
	// Optional. The profile levels supported by a recommendation. For example, profile level values could be `Low`, `Medium`, and `High`. Not all recommendations support this field.
	SupportedLevels GetRecommendationSupportedLevels `pulumi:"supportedLevels"`
	// The date and time the recommendation details were created, in the format defined by RFC3339.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time that the recommendation entered its current status. The format is defined by RFC3339.
	TimeStatusBegin string `pulumi:"timeStatusBegin"`
	// The date and time the current status will change. The format is defined by RFC3339.
	TimeStatusEnd string `pulumi:"timeStatusEnd"`
	// The date and time the recommendation details were last updated, in the format defined by RFC3339.
	TimeUpdated string `pulumi:"timeUpdated"`
}
