// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package servicecatalog

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Service Catalog resource in Oracle Cloud Infrastructure Service Catalog service.
//
// Gets detailed information about the service catalog including name, compartmentId
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci/servicecatalog"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := servicecatalog.LookupServiceCatalog(ctx, &servicecatalog.LookupServiceCatalogArgs{
// 			ServiceCatalogId: oci_service_catalog_service_catalog.Test_service_catalog.Id,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupServiceCatalog(ctx *pulumi.Context, args *LookupServiceCatalogArgs, opts ...pulumi.InvokeOption) (*LookupServiceCatalogResult, error) {
	var rv LookupServiceCatalogResult
	err := ctx.Invoke("oci:servicecatalog/getServiceCatalog:getServiceCatalog", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getServiceCatalog.
type LookupServiceCatalogArgs struct {
	// The unique identifier for the service catalog.
	ServiceCatalogId string `pulumi:"serviceCatalogId"`
}

// A collection of values returned by getServiceCatalog.
type LookupServiceCatalogResult struct {
	// The Compartment id where the service catalog exists
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// The name of the service catalog.
	DisplayName string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The unique identifier for the Service catalog.
	Id               string `pulumi:"id"`
	ServiceCatalogId string `pulumi:"serviceCatalogId"`
	// The lifecycle state of the service catalog.
	State string `pulumi:"state"`
	// The date and time the service catalog was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2021-05-26T21:10:29.600Z`
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the service catalog was last modified, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2021-12-10T05:10:29.721Z`
	TimeUpdated string `pulumi:"timeUpdated"`
}
