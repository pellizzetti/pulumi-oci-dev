// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package servicecatalog

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Service Catalog Association resource in Oracle Cloud Infrastructure Service Catalog service.
//
// Creates an association between service catalog and a resource.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci/servicecatalog"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := servicecatalog.NewServiceCatalogAssociation(ctx, "testServiceCatalogAssociation", &servicecatalog.ServiceCatalogAssociationArgs{
// 			EntityId:         pulumi.Any(oci_service_catalog_entity.Test_entity.Id),
// 			ServiceCatalogId: pulumi.Any(oci_service_catalog_service_catalog.Test_service_catalog.Id),
// 			EntityType:       pulumi.Any(_var.Service_catalog_association_entity_type),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// ServiceCatalogAssociations can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import oci:servicecatalog/serviceCatalogAssociation:ServiceCatalogAssociation test_service_catalog_association "id"
// ```
type ServiceCatalogAssociation struct {
	pulumi.CustomResourceState

	// Identifier of the entity being associated with service catalog.
	EntityId pulumi.StringOutput `pulumi:"entityId"`
	// The type of the entity that is associated with the service catalog.
	EntityType pulumi.StringOutput `pulumi:"entityType"`
	// Identifier of the service catalog.
	ServiceCatalogId pulumi.StringOutput `pulumi:"serviceCatalogId"`
	// Timestamp of when the resource was associated with service catalog.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
}

// NewServiceCatalogAssociation registers a new resource with the given unique name, arguments, and options.
func NewServiceCatalogAssociation(ctx *pulumi.Context,
	name string, args *ServiceCatalogAssociationArgs, opts ...pulumi.ResourceOption) (*ServiceCatalogAssociation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EntityId == nil {
		return nil, errors.New("invalid value for required argument 'EntityId'")
	}
	if args.ServiceCatalogId == nil {
		return nil, errors.New("invalid value for required argument 'ServiceCatalogId'")
	}
	var resource ServiceCatalogAssociation
	err := ctx.RegisterResource("oci:servicecatalog/serviceCatalogAssociation:ServiceCatalogAssociation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceCatalogAssociation gets an existing ServiceCatalogAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceCatalogAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceCatalogAssociationState, opts ...pulumi.ResourceOption) (*ServiceCatalogAssociation, error) {
	var resource ServiceCatalogAssociation
	err := ctx.ReadResource("oci:servicecatalog/serviceCatalogAssociation:ServiceCatalogAssociation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceCatalogAssociation resources.
type serviceCatalogAssociationState struct {
	// Identifier of the entity being associated with service catalog.
	EntityId *string `pulumi:"entityId"`
	// The type of the entity that is associated with the service catalog.
	EntityType *string `pulumi:"entityType"`
	// Identifier of the service catalog.
	ServiceCatalogId *string `pulumi:"serviceCatalogId"`
	// Timestamp of when the resource was associated with service catalog.
	TimeCreated *string `pulumi:"timeCreated"`
}

type ServiceCatalogAssociationState struct {
	// Identifier of the entity being associated with service catalog.
	EntityId pulumi.StringPtrInput
	// The type of the entity that is associated with the service catalog.
	EntityType pulumi.StringPtrInput
	// Identifier of the service catalog.
	ServiceCatalogId pulumi.StringPtrInput
	// Timestamp of when the resource was associated with service catalog.
	TimeCreated pulumi.StringPtrInput
}

func (ServiceCatalogAssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceCatalogAssociationState)(nil)).Elem()
}

type serviceCatalogAssociationArgs struct {
	// Identifier of the entity being associated with service catalog.
	EntityId string `pulumi:"entityId"`
	// The type of the entity that is associated with the service catalog.
	EntityType *string `pulumi:"entityType"`
	// Identifier of the service catalog.
	ServiceCatalogId string `pulumi:"serviceCatalogId"`
}

// The set of arguments for constructing a ServiceCatalogAssociation resource.
type ServiceCatalogAssociationArgs struct {
	// Identifier of the entity being associated with service catalog.
	EntityId pulumi.StringInput
	// The type of the entity that is associated with the service catalog.
	EntityType pulumi.StringPtrInput
	// Identifier of the service catalog.
	ServiceCatalogId pulumi.StringInput
}

func (ServiceCatalogAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceCatalogAssociationArgs)(nil)).Elem()
}

type ServiceCatalogAssociationInput interface {
	pulumi.Input

	ToServiceCatalogAssociationOutput() ServiceCatalogAssociationOutput
	ToServiceCatalogAssociationOutputWithContext(ctx context.Context) ServiceCatalogAssociationOutput
}

func (*ServiceCatalogAssociation) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceCatalogAssociation)(nil))
}

func (i *ServiceCatalogAssociation) ToServiceCatalogAssociationOutput() ServiceCatalogAssociationOutput {
	return i.ToServiceCatalogAssociationOutputWithContext(context.Background())
}

func (i *ServiceCatalogAssociation) ToServiceCatalogAssociationOutputWithContext(ctx context.Context) ServiceCatalogAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceCatalogAssociationOutput)
}

func (i *ServiceCatalogAssociation) ToServiceCatalogAssociationPtrOutput() ServiceCatalogAssociationPtrOutput {
	return i.ToServiceCatalogAssociationPtrOutputWithContext(context.Background())
}

func (i *ServiceCatalogAssociation) ToServiceCatalogAssociationPtrOutputWithContext(ctx context.Context) ServiceCatalogAssociationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceCatalogAssociationPtrOutput)
}

type ServiceCatalogAssociationPtrInput interface {
	pulumi.Input

	ToServiceCatalogAssociationPtrOutput() ServiceCatalogAssociationPtrOutput
	ToServiceCatalogAssociationPtrOutputWithContext(ctx context.Context) ServiceCatalogAssociationPtrOutput
}

type serviceCatalogAssociationPtrType ServiceCatalogAssociationArgs

func (*serviceCatalogAssociationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceCatalogAssociation)(nil))
}

func (i *serviceCatalogAssociationPtrType) ToServiceCatalogAssociationPtrOutput() ServiceCatalogAssociationPtrOutput {
	return i.ToServiceCatalogAssociationPtrOutputWithContext(context.Background())
}

func (i *serviceCatalogAssociationPtrType) ToServiceCatalogAssociationPtrOutputWithContext(ctx context.Context) ServiceCatalogAssociationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceCatalogAssociationPtrOutput)
}

// ServiceCatalogAssociationArrayInput is an input type that accepts ServiceCatalogAssociationArray and ServiceCatalogAssociationArrayOutput values.
// You can construct a concrete instance of `ServiceCatalogAssociationArrayInput` via:
//
//          ServiceCatalogAssociationArray{ ServiceCatalogAssociationArgs{...} }
type ServiceCatalogAssociationArrayInput interface {
	pulumi.Input

	ToServiceCatalogAssociationArrayOutput() ServiceCatalogAssociationArrayOutput
	ToServiceCatalogAssociationArrayOutputWithContext(context.Context) ServiceCatalogAssociationArrayOutput
}

type ServiceCatalogAssociationArray []ServiceCatalogAssociationInput

func (ServiceCatalogAssociationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceCatalogAssociation)(nil)).Elem()
}

func (i ServiceCatalogAssociationArray) ToServiceCatalogAssociationArrayOutput() ServiceCatalogAssociationArrayOutput {
	return i.ToServiceCatalogAssociationArrayOutputWithContext(context.Background())
}

func (i ServiceCatalogAssociationArray) ToServiceCatalogAssociationArrayOutputWithContext(ctx context.Context) ServiceCatalogAssociationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceCatalogAssociationArrayOutput)
}

// ServiceCatalogAssociationMapInput is an input type that accepts ServiceCatalogAssociationMap and ServiceCatalogAssociationMapOutput values.
// You can construct a concrete instance of `ServiceCatalogAssociationMapInput` via:
//
//          ServiceCatalogAssociationMap{ "key": ServiceCatalogAssociationArgs{...} }
type ServiceCatalogAssociationMapInput interface {
	pulumi.Input

	ToServiceCatalogAssociationMapOutput() ServiceCatalogAssociationMapOutput
	ToServiceCatalogAssociationMapOutputWithContext(context.Context) ServiceCatalogAssociationMapOutput
}

type ServiceCatalogAssociationMap map[string]ServiceCatalogAssociationInput

func (ServiceCatalogAssociationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceCatalogAssociation)(nil)).Elem()
}

func (i ServiceCatalogAssociationMap) ToServiceCatalogAssociationMapOutput() ServiceCatalogAssociationMapOutput {
	return i.ToServiceCatalogAssociationMapOutputWithContext(context.Background())
}

func (i ServiceCatalogAssociationMap) ToServiceCatalogAssociationMapOutputWithContext(ctx context.Context) ServiceCatalogAssociationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceCatalogAssociationMapOutput)
}

type ServiceCatalogAssociationOutput struct {
	*pulumi.OutputState
}

func (ServiceCatalogAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceCatalogAssociation)(nil))
}

func (o ServiceCatalogAssociationOutput) ToServiceCatalogAssociationOutput() ServiceCatalogAssociationOutput {
	return o
}

func (o ServiceCatalogAssociationOutput) ToServiceCatalogAssociationOutputWithContext(ctx context.Context) ServiceCatalogAssociationOutput {
	return o
}

func (o ServiceCatalogAssociationOutput) ToServiceCatalogAssociationPtrOutput() ServiceCatalogAssociationPtrOutput {
	return o.ToServiceCatalogAssociationPtrOutputWithContext(context.Background())
}

func (o ServiceCatalogAssociationOutput) ToServiceCatalogAssociationPtrOutputWithContext(ctx context.Context) ServiceCatalogAssociationPtrOutput {
	return o.ApplyT(func(v ServiceCatalogAssociation) *ServiceCatalogAssociation {
		return &v
	}).(ServiceCatalogAssociationPtrOutput)
}

type ServiceCatalogAssociationPtrOutput struct {
	*pulumi.OutputState
}

func (ServiceCatalogAssociationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceCatalogAssociation)(nil))
}

func (o ServiceCatalogAssociationPtrOutput) ToServiceCatalogAssociationPtrOutput() ServiceCatalogAssociationPtrOutput {
	return o
}

func (o ServiceCatalogAssociationPtrOutput) ToServiceCatalogAssociationPtrOutputWithContext(ctx context.Context) ServiceCatalogAssociationPtrOutput {
	return o
}

type ServiceCatalogAssociationArrayOutput struct{ *pulumi.OutputState }

func (ServiceCatalogAssociationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceCatalogAssociation)(nil))
}

func (o ServiceCatalogAssociationArrayOutput) ToServiceCatalogAssociationArrayOutput() ServiceCatalogAssociationArrayOutput {
	return o
}

func (o ServiceCatalogAssociationArrayOutput) ToServiceCatalogAssociationArrayOutputWithContext(ctx context.Context) ServiceCatalogAssociationArrayOutput {
	return o
}

func (o ServiceCatalogAssociationArrayOutput) Index(i pulumi.IntInput) ServiceCatalogAssociationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceCatalogAssociation {
		return vs[0].([]ServiceCatalogAssociation)[vs[1].(int)]
	}).(ServiceCatalogAssociationOutput)
}

type ServiceCatalogAssociationMapOutput struct{ *pulumi.OutputState }

func (ServiceCatalogAssociationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ServiceCatalogAssociation)(nil))
}

func (o ServiceCatalogAssociationMapOutput) ToServiceCatalogAssociationMapOutput() ServiceCatalogAssociationMapOutput {
	return o
}

func (o ServiceCatalogAssociationMapOutput) ToServiceCatalogAssociationMapOutputWithContext(ctx context.Context) ServiceCatalogAssociationMapOutput {
	return o
}

func (o ServiceCatalogAssociationMapOutput) MapIndex(k pulumi.StringInput) ServiceCatalogAssociationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) ServiceCatalogAssociation {
		return vs[0].(map[string]ServiceCatalogAssociation)[vs[1].(string)]
	}).(ServiceCatalogAssociationOutput)
}

func init() {
	pulumi.RegisterOutputType(ServiceCatalogAssociationOutput{})
	pulumi.RegisterOutputType(ServiceCatalogAssociationPtrOutput{})
	pulumi.RegisterOutputType(ServiceCatalogAssociationArrayOutput{})
	pulumi.RegisterOutputType(ServiceCatalogAssociationMapOutput{})
}
