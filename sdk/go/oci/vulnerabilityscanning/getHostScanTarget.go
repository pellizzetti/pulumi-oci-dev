// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package vulnerabilityscanning

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Host Scan Target resource in Oracle Cloud Infrastructure Vulnerability Scanning service.
//
// Retrieves a HostScanTarget identified by the target ID. A host scan target is a collection of compute instances that you want routinely scanned for security vulnerabilities.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci/vulnerabilityscanning"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := vulnerabilityscanning.LookupHostScanTarget(ctx, &vulnerabilityscanning.LookupHostScanTargetArgs{
// 			HostScanTargetId: oci_vulnerability_scanning_host_scan_target.Test_host_scan_target.Id,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupHostScanTarget(ctx *pulumi.Context, args *LookupHostScanTargetArgs, opts ...pulumi.InvokeOption) (*LookupHostScanTargetResult, error) {
	var rv LookupHostScanTargetResult
	err := ctx.Invoke("oci:vulnerabilityscanning/getHostScanTarget:getHostScanTarget", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getHostScanTarget.
type LookupHostScanTargetArgs struct {
	// unique HostScanTarget identifier
	HostScanTargetId string `pulumi:"hostScanTargetId"`
}

// A collection of values returned by getHostScanTarget.
type LookupHostScanTargetResult struct {
	// Compartment ID of the object (this).
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// Target description.
	Description string `pulumi:"description"`
	// Target identifier, which can be renamed.
	DisplayName string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// ID of the host scan recipe this target applies.
	HostScanRecipeId string `pulumi:"hostScanRecipeId"`
	HostScanTargetId string `pulumi:"hostScanTargetId"`
	// Unique identifier of the config that is immutable on creation
	Id string `pulumi:"id"`
	// List of compute instance IDs to target (optional). If empty, targets the entire targetCompartmentId.
	InstanceIds []string `pulumi:"instanceIds"`
	// The current state of the config.
	State string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// Compartment ID to target. If a list of hosts is provided, all hosts must be in this compartment.
	TargetCompartmentId string `pulumi:"targetCompartmentId"`
	// Date and time the target was created, format as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)
	TimeCreated string `pulumi:"timeCreated"`
	// Date and time the target was last updated, format as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)
	TimeUpdated string `pulumi:"timeUpdated"`
}
