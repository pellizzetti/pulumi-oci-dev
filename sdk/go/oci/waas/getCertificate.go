// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package waas

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Certificate resource in Oracle Cloud Infrastructure Web Application Acceleration and Security service.
//
// Gets the details of an SSL certificate.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci/waas"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := waas.LookupCertificate(ctx, &waas.LookupCertificateArgs{
// 			CertificateId: oci_waas_certificate.Test_certificate.Id,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupCertificate(ctx *pulumi.Context, args *LookupCertificateArgs, opts ...pulumi.InvokeOption) (*LookupCertificateResult, error) {
	var rv LookupCertificateResult
	err := ctx.Invoke("oci:waas/getCertificate:getCertificate", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCertificate.
type LookupCertificateArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the SSL certificate used in the WAAS policy. This number is generated when the certificate is added to the policy.
	CertificateId string `pulumi:"certificateId"`
}

// A collection of values returned by getCertificate.
type LookupCertificateResult struct {
	// The data of the SSL certificate.
	CertificateData string `pulumi:"certificateData"`
	CertificateId   string `pulumi:"certificateId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the SSL certificate's compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// The user-friendly name of the SSL certificate.
	DisplayName string `pulumi:"displayName"`
	// Additional attributes associated with users or public keys for managing relationships between Certificate Authorities.
	Extensions []GetCertificateExtension `pulumi:"extensions"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the SSL certificate.
	Id string `pulumi:"id"`
	// This indicates whether trust verification was disabled during the creation of SSL certificate. If `true` SSL certificate trust verification was disabled and this SSL certificate is most likely self-signed.
	IsTrustVerificationDisabled bool   `pulumi:"isTrustVerificationDisabled"`
	IssuedBy                    string `pulumi:"issuedBy"`
	// The issuer of the certificate.
	IssuerName     GetCertificateIssuerName `pulumi:"issuerName"`
	PrivateKeyData string                   `pulumi:"privateKeyData"`
	// Information about the public key and the algorithm used by the public key.
	PublicKeyInfo GetCertificatePublicKeyInfo `pulumi:"publicKeyInfo"`
	// A unique, positive integer assigned by the Certificate Authority (CA). The issuer name and serial number identify a unique certificate.
	SerialNumber string `pulumi:"serialNumber"`
	// The identifier for the cryptographic algorithm used by the Certificate Authority (CA) to sign this certificate.
	SignatureAlgorithm string `pulumi:"signatureAlgorithm"`
	// The current lifecycle state of the SSL certificate.
	State string `pulumi:"state"`
	// The entity to be secured by the certificate.
	SubjectName GetCertificateSubjectName `pulumi:"subjectName"`
	// The date and time the certificate was created, expressed in RFC 3339 timestamp format.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the certificate will expire, expressed in RFC 3339 timestamp format.
	TimeNotValidAfter string `pulumi:"timeNotValidAfter"`
	// The date and time the certificate will become valid, expressed in RFC 3339 timestamp format.
	TimeNotValidBefore string `pulumi:"timeNotValidBefore"`
	// The version of the encoded certificate.
	Version int `pulumi:"version"`
}
