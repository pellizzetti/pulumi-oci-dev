// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * This resource provides the Blockchain Platform resource in Oracle Cloud Infrastructure Blockchain service.
 *
 * Creates a new Blockchain Platform.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testBlockchainPlatform = new oci.blockchain.BlockchainPlatform("testBlockchainPlatform", {
 *     compartmentId: _var.compartment_id,
 *     computeShape: _var.blockchain_platform_compute_shape,
 *     displayName: _var.blockchain_platform_display_name,
 *     idcsAccessToken: _var.blockchain_platform_idcs_access_token,
 *     platformRole: _var.blockchain_platform_platform_role,
 *     caCertArchiveText: _var.blockchain_platform_ca_cert_archive_text,
 *     definedTags: {
 *         "foo-namespace.bar-key": "value",
 *     },
 *     description: _var.blockchain_platform_description,
 *     federatedUserId: oci_identity_user.test_user.id,
 *     freeformTags: {
 *         "bar-key": "value",
 *     },
 *     isByol: _var.blockchain_platform_is_byol,
 * });
 * ```
 *
 * ## Import
 *
 * BlockchainPlatforms can be imported using the `id`, e.g.
 *
 * ```sh
 *  $ pulumi import oci:blockchain/blockchainPlatform:BlockchainPlatform test_blockchain_platform "id"
 * ```
 */
export class BlockchainPlatform extends pulumi.CustomResource {
    /**
     * Get an existing BlockchainPlatform resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BlockchainPlatformState, opts?: pulumi.CustomResourceOptions): BlockchainPlatform {
        return new BlockchainPlatform(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:blockchain/blockchainPlatform:BlockchainPlatform';

    /**
     * Returns true if the given object is an instance of BlockchainPlatform.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BlockchainPlatform {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BlockchainPlatform.__pulumiType;
    }

    /**
     * Base64 encoded text in ASCII character set of a Thirdparty CA Certificates archive file. The Archive file is a zip file containing third part CA Certificates, the ca key and certificate files used when issuing enrollment certificates (ECerts) and transaction certificates (TCerts). The chainfile (if it exists) contains the certificate chain which should be trusted for this CA, where the 1st in the chain is always the root CA certificate. File list in zip file [ca-cert.pem,ca-key.pem,ca-chain.pem(optional)].
     */
    public readonly caCertArchiveText!: pulumi.Output<string>;
    /**
     * (Updatable) Compartment Identifier
     */
    public readonly compartmentId!: pulumi.Output<string>;
    /**
     * Blockchain Platform component details.
     */
    public /*out*/ readonly componentDetails!: pulumi.Output<outputs.blockchain.BlockchainPlatformComponentDetails>;
    /**
     * Compute shape - STANDARD or ENTERPRISE_SMALL or ENTERPRISE_MEDIUM or ENTERPRISE_LARGE or ENTERPRISE_EXTRA_LARGE
     */
    public readonly computeShape!: pulumi.Output<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    public readonly definedTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * (Updatable) Platform Instance Description
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * Platform Instance Display name, can be renamed
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * Identifier for a federated user
     */
    public readonly federatedUserId!: pulumi.Output<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    public readonly freeformTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * List of OcpuUtilization for all hosts
     */
    public /*out*/ readonly hostOcpuUtilizationInfos!: pulumi.Output<outputs.blockchain.BlockchainPlatformHostOcpuUtilizationInfo[]>;
    /**
     * IDCS access token with Identity Domain Administrator role
     */
    public readonly idcsAccessToken!: pulumi.Output<string>;
    /**
     * Bring your own license
     */
    public readonly isByol!: pulumi.Output<boolean>;
    /**
     * True for multi-AD blockchain plaforms, false for single-AD
     */
    public /*out*/ readonly isMultiAd!: pulumi.Output<boolean>;
    /**
     * An message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    public /*out*/ readonly lifecycleDetails!: pulumi.Output<string>;
    /**
     * (Updatable) Type of Load Balancer shape - LB_100_MBPS or LB_400_MBPS. Default is LB_100_MBPS.
     */
    public readonly loadBalancerShape!: pulumi.Output<string>;
    /**
     * Role of platform - founder or participant
     */
    public readonly platformRole!: pulumi.Output<string>;
    /**
     * Type of Platform shape - DEFAULT or CUSTOM
     */
    public /*out*/ readonly platformShapeType!: pulumi.Output<string>;
    /**
     * Number of replicas of service components like Rest Proxy, CA and Console
     */
    public readonly replicas!: pulumi.Output<outputs.blockchain.BlockchainPlatformReplicas>;
    /**
     * Service endpoint URL, valid post-provisioning
     */
    public /*out*/ readonly serviceEndpoint!: pulumi.Output<string>;
    /**
     * The version of the Platform Instance.
     */
    public /*out*/ readonly serviceVersion!: pulumi.Output<string>;
    /**
     * The current state of the Platform Instance.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * Storage size in TBs
     */
    public readonly storageSizeInTbs!: pulumi.Output<number>;
    /**
     * Storage used in TBs
     */
    public /*out*/ readonly storageUsedInTbs!: pulumi.Output<number>;
    /**
     * The time the the Platform Instance was created. An RFC3339 formatted datetime string
     */
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    /**
     * The time the Platform Instance was updated. An RFC3339 formatted datetime string
     */
    public /*out*/ readonly timeUpdated!: pulumi.Output<string>;
    /**
     * Number of total OCPUs allocated to the platform cluster
     */
    public readonly totalOcpuCapacity!: pulumi.Output<number>;

    /**
     * Create a BlockchainPlatform resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BlockchainPlatformArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BlockchainPlatformArgs | BlockchainPlatformState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BlockchainPlatformState | undefined;
            inputs["caCertArchiveText"] = state ? state.caCertArchiveText : undefined;
            inputs["compartmentId"] = state ? state.compartmentId : undefined;
            inputs["componentDetails"] = state ? state.componentDetails : undefined;
            inputs["computeShape"] = state ? state.computeShape : undefined;
            inputs["definedTags"] = state ? state.definedTags : undefined;
            inputs["description"] = state ? state.description : undefined;
            inputs["displayName"] = state ? state.displayName : undefined;
            inputs["federatedUserId"] = state ? state.federatedUserId : undefined;
            inputs["freeformTags"] = state ? state.freeformTags : undefined;
            inputs["hostOcpuUtilizationInfos"] = state ? state.hostOcpuUtilizationInfos : undefined;
            inputs["idcsAccessToken"] = state ? state.idcsAccessToken : undefined;
            inputs["isByol"] = state ? state.isByol : undefined;
            inputs["isMultiAd"] = state ? state.isMultiAd : undefined;
            inputs["lifecycleDetails"] = state ? state.lifecycleDetails : undefined;
            inputs["loadBalancerShape"] = state ? state.loadBalancerShape : undefined;
            inputs["platformRole"] = state ? state.platformRole : undefined;
            inputs["platformShapeType"] = state ? state.platformShapeType : undefined;
            inputs["replicas"] = state ? state.replicas : undefined;
            inputs["serviceEndpoint"] = state ? state.serviceEndpoint : undefined;
            inputs["serviceVersion"] = state ? state.serviceVersion : undefined;
            inputs["state"] = state ? state.state : undefined;
            inputs["storageSizeInTbs"] = state ? state.storageSizeInTbs : undefined;
            inputs["storageUsedInTbs"] = state ? state.storageUsedInTbs : undefined;
            inputs["timeCreated"] = state ? state.timeCreated : undefined;
            inputs["timeUpdated"] = state ? state.timeUpdated : undefined;
            inputs["totalOcpuCapacity"] = state ? state.totalOcpuCapacity : undefined;
        } else {
            const args = argsOrState as BlockchainPlatformArgs | undefined;
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.computeShape === undefined) && !opts.urn) {
                throw new Error("Missing required property 'computeShape'");
            }
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if ((!args || args.idcsAccessToken === undefined) && !opts.urn) {
                throw new Error("Missing required property 'idcsAccessToken'");
            }
            if ((!args || args.platformRole === undefined) && !opts.urn) {
                throw new Error("Missing required property 'platformRole'");
            }
            inputs["caCertArchiveText"] = args ? args.caCertArchiveText : undefined;
            inputs["compartmentId"] = args ? args.compartmentId : undefined;
            inputs["computeShape"] = args ? args.computeShape : undefined;
            inputs["definedTags"] = args ? args.definedTags : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["displayName"] = args ? args.displayName : undefined;
            inputs["federatedUserId"] = args ? args.federatedUserId : undefined;
            inputs["freeformTags"] = args ? args.freeformTags : undefined;
            inputs["idcsAccessToken"] = args ? args.idcsAccessToken : undefined;
            inputs["isByol"] = args ? args.isByol : undefined;
            inputs["loadBalancerShape"] = args ? args.loadBalancerShape : undefined;
            inputs["platformRole"] = args ? args.platformRole : undefined;
            inputs["replicas"] = args ? args.replicas : undefined;
            inputs["storageSizeInTbs"] = args ? args.storageSizeInTbs : undefined;
            inputs["totalOcpuCapacity"] = args ? args.totalOcpuCapacity : undefined;
            inputs["componentDetails"] = undefined /*out*/;
            inputs["hostOcpuUtilizationInfos"] = undefined /*out*/;
            inputs["isMultiAd"] = undefined /*out*/;
            inputs["lifecycleDetails"] = undefined /*out*/;
            inputs["platformShapeType"] = undefined /*out*/;
            inputs["serviceEndpoint"] = undefined /*out*/;
            inputs["serviceVersion"] = undefined /*out*/;
            inputs["state"] = undefined /*out*/;
            inputs["storageUsedInTbs"] = undefined /*out*/;
            inputs["timeCreated"] = undefined /*out*/;
            inputs["timeUpdated"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(BlockchainPlatform.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering BlockchainPlatform resources.
 */
export interface BlockchainPlatformState {
    /**
     * Base64 encoded text in ASCII character set of a Thirdparty CA Certificates archive file. The Archive file is a zip file containing third part CA Certificates, the ca key and certificate files used when issuing enrollment certificates (ECerts) and transaction certificates (TCerts). The chainfile (if it exists) contains the certificate chain which should be trusted for this CA, where the 1st in the chain is always the root CA certificate. File list in zip file [ca-cert.pem,ca-key.pem,ca-chain.pem(optional)].
     */
    caCertArchiveText?: pulumi.Input<string>;
    /**
     * (Updatable) Compartment Identifier
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * Blockchain Platform component details.
     */
    componentDetails?: pulumi.Input<inputs.blockchain.BlockchainPlatformComponentDetails>;
    /**
     * Compute shape - STANDARD or ENTERPRISE_SMALL or ENTERPRISE_MEDIUM or ENTERPRISE_LARGE or ENTERPRISE_EXTRA_LARGE
     */
    computeShape?: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) Platform Instance Description
     */
    description?: pulumi.Input<string>;
    /**
     * Platform Instance Display name, can be renamed
     */
    displayName?: pulumi.Input<string>;
    /**
     * Identifier for a federated user
     */
    federatedUserId?: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * List of OcpuUtilization for all hosts
     */
    hostOcpuUtilizationInfos?: pulumi.Input<pulumi.Input<inputs.blockchain.BlockchainPlatformHostOcpuUtilizationInfo>[]>;
    /**
     * IDCS access token with Identity Domain Administrator role
     */
    idcsAccessToken?: pulumi.Input<string>;
    /**
     * Bring your own license
     */
    isByol?: pulumi.Input<boolean>;
    /**
     * True for multi-AD blockchain plaforms, false for single-AD
     */
    isMultiAd?: pulumi.Input<boolean>;
    /**
     * An message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    lifecycleDetails?: pulumi.Input<string>;
    /**
     * (Updatable) Type of Load Balancer shape - LB_100_MBPS or LB_400_MBPS. Default is LB_100_MBPS.
     */
    loadBalancerShape?: pulumi.Input<string>;
    /**
     * Role of platform - founder or participant
     */
    platformRole?: pulumi.Input<string>;
    /**
     * Type of Platform shape - DEFAULT or CUSTOM
     */
    platformShapeType?: pulumi.Input<string>;
    /**
     * Number of replicas of service components like Rest Proxy, CA and Console
     */
    replicas?: pulumi.Input<inputs.blockchain.BlockchainPlatformReplicas>;
    /**
     * Service endpoint URL, valid post-provisioning
     */
    serviceEndpoint?: pulumi.Input<string>;
    /**
     * The version of the Platform Instance.
     */
    serviceVersion?: pulumi.Input<string>;
    /**
     * The current state of the Platform Instance.
     */
    state?: pulumi.Input<string>;
    /**
     * Storage size in TBs
     */
    storageSizeInTbs?: pulumi.Input<number>;
    /**
     * Storage used in TBs
     */
    storageUsedInTbs?: pulumi.Input<number>;
    /**
     * The time the the Platform Instance was created. An RFC3339 formatted datetime string
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * The time the Platform Instance was updated. An RFC3339 formatted datetime string
     */
    timeUpdated?: pulumi.Input<string>;
    /**
     * Number of total OCPUs allocated to the platform cluster
     */
    totalOcpuCapacity?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a BlockchainPlatform resource.
 */
export interface BlockchainPlatformArgs {
    /**
     * Base64 encoded text in ASCII character set of a Thirdparty CA Certificates archive file. The Archive file is a zip file containing third part CA Certificates, the ca key and certificate files used when issuing enrollment certificates (ECerts) and transaction certificates (TCerts). The chainfile (if it exists) contains the certificate chain which should be trusted for this CA, where the 1st in the chain is always the root CA certificate. File list in zip file [ca-cert.pem,ca-key.pem,ca-chain.pem(optional)].
     */
    caCertArchiveText?: pulumi.Input<string>;
    /**
     * (Updatable) Compartment Identifier
     */
    compartmentId: pulumi.Input<string>;
    /**
     * Compute shape - STANDARD or ENTERPRISE_SMALL or ENTERPRISE_MEDIUM or ENTERPRISE_LARGE or ENTERPRISE_EXTRA_LARGE
     */
    computeShape: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) Platform Instance Description
     */
    description?: pulumi.Input<string>;
    /**
     * Platform Instance Display name, can be renamed
     */
    displayName: pulumi.Input<string>;
    /**
     * Identifier for a federated user
     */
    federatedUserId?: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * IDCS access token with Identity Domain Administrator role
     */
    idcsAccessToken: pulumi.Input<string>;
    /**
     * Bring your own license
     */
    isByol?: pulumi.Input<boolean>;
    /**
     * (Updatable) Type of Load Balancer shape - LB_100_MBPS or LB_400_MBPS. Default is LB_100_MBPS.
     */
    loadBalancerShape?: pulumi.Input<string>;
    /**
     * Role of platform - founder or participant
     */
    platformRole: pulumi.Input<string>;
    /**
     * Number of replicas of service components like Rest Proxy, CA and Console
     */
    replicas?: pulumi.Input<inputs.blockchain.BlockchainPlatformReplicas>;
    /**
     * Storage size in TBs
     */
    storageSizeInTbs?: pulumi.Input<number>;
    /**
     * Number of total OCPUs allocated to the platform cluster
     */
    totalOcpuCapacity?: pulumi.Input<number>;
}
