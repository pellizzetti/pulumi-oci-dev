// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Dedicated Vm Hosts Instances in Oracle Cloud Infrastructure Core service.
 *
 * Returns the list of instances on the dedicated virtual machine hosts that match the specified criteria.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testDedicatedVmHostsInstances = oci.core.getDedicatedVmHostsInstances({
 *     compartmentId: _var.compartment_id,
 *     dedicatedVmHostId: oci_core_dedicated_vm_host.test_dedicated_vm_host.id,
 *     availabilityDomain: _var.dedicated_vm_hosts_instance_availability_domain,
 * });
 * ```
 */
export function getDedicatedVmHostsInstances(args: GetDedicatedVmHostsInstancesArgs, opts?: pulumi.InvokeOptions): Promise<GetDedicatedVmHostsInstancesResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("oci:core/getDedicatedVmHostsInstances:getDedicatedVmHostsInstances", {
        "availabilityDomain": args.availabilityDomain,
        "compartmentId": args.compartmentId,
        "dedicatedVmHostId": args.dedicatedVmHostId,
        "filters": args.filters,
    }, opts);
}

/**
 * A collection of arguments for invoking getDedicatedVmHostsInstances.
 */
export interface GetDedicatedVmHostsInstancesArgs {
    /**
     * The name of the availability domain.  Example: `Uocm:PHX-AD-1`
     */
    availabilityDomain?: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: string;
    /**
     * The OCID of the dedicated VM host.
     */
    dedicatedVmHostId: string;
    filters?: inputs.core.GetDedicatedVmHostsInstancesFilter[];
}

/**
 * A collection of values returned by getDedicatedVmHostsInstances.
 */
export interface GetDedicatedVmHostsInstancesResult {
    /**
     * The availability domain the virtual machine instance is running in.  Example: `Uocm:PHX-AD-1`
     */
    readonly availabilityDomain?: string;
    /**
     * The OCID of the compartment that contains the virtual machine instance.
     */
    readonly compartmentId: string;
    readonly dedicatedVmHostId: string;
    /**
     * The list of dedicated_vm_host_instances.
     */
    readonly dedicatedVmHostInstances: outputs.core.GetDedicatedVmHostsInstancesDedicatedVmHostInstance[];
    readonly filters?: outputs.core.GetDedicatedVmHostsInstancesFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
}
