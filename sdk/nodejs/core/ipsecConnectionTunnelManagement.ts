// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * This resource provides the Ip Sec Connection Tunnel Management resource in Oracle Cloud Infrastructure Core service.
 *
 * Updates the specified tunnel. This operation lets you change tunnel attributes such as the
 * routing type (BGP dynamic routing or static routing). Here are some important notes:
 *
 *     * If you change the tunnel's routing type or BGP session configuration, the tunnel will go
 *     down while it's reprovisioned.
 *     
 *     * If you want to switch the tunnel's `routing` from `STATIC` to `BGP`, make sure the tunnel's
 *     BGP session configuration attributes have been set (bgpSessionConfig).
 *     
 *     * If you want to switch the tunnel's `routing` from `BGP` to `STATIC`, make sure the
 *     IPSecConnection already has at least one valid CIDR
 *     static route.
 *
 * ** IMPORTANT **
 * Destroying `the oci.core.IpsecConnectionTunnelManagement` leaves the resource in its existing state. It will not destroy the tunnel and it will not return the tunnel to its default values.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testIpSecConnectionTunnel = new oci.core.IpsecConnectionTunnelManagement("testIpSecConnectionTunnel", {
 *     ipsecId: oci_core_ipsec.test_ipsec.id,
 *     tunnelId: data.oci_core_ipsec_connection_tunnels.test_ip_sec_connection_tunnels.ip_sec_connection_tunnels[0].id,
 *     routing: _var.ip_sec_connection_tunnel_management_routing,
 *     bgpSessionInfos: [{
 *         customerBgpAsn: _var.ip_sec_connection_tunnel_management_bgp_session_info_customer_bgp_asn,
 *         customerInterfaceIp: _var.ip_sec_connection_tunnel_management_bgp_session_info_customer_interface_ip,
 *         oracleInterfaceIp: _var.ip_sec_connection_tunnel_management_bgp_session_info_oracle_interface_ip,
 *     }],
 *     displayName: _var.ip_sec_connection_tunnel_management_display_name,
 *     encryptionDomainConfig: {
 *         cpeTrafficSelectors: _var.ip_sec_connection_tunnel_management_encryption_domain_config_cpe_traffic_selector,
 *         oracleTrafficSelectors: _var.ip_sec_connection_tunnel_management_encryption_domain_config_oracle_traffic_selector,
 *     },
 *     sharedSecret: _var.ip_sec_connection_tunnel_management_shared_secret,
 *     ikeVersion: "V1",
 * });
 * ```
 */
export class IpsecConnectionTunnelManagement extends pulumi.CustomResource {
    /**
     * Get an existing IpsecConnectionTunnelManagement resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IpsecConnectionTunnelManagementState, opts?: pulumi.CustomResourceOptions): IpsecConnectionTunnelManagement {
        return new IpsecConnectionTunnelManagement(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:core/ipsecConnectionTunnelManagement:IpsecConnectionTunnelManagement';

    /**
     * Returns true if the given object is an instance of IpsecConnectionTunnelManagement.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IpsecConnectionTunnelManagement {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IpsecConnectionTunnelManagement.__pulumiType;
    }

    /**
     * Information for establishing a BGP session for the IPSec tunnel. Required if the tunnel uses BGP dynamic routing.
     */
    public readonly bgpSessionInfos!: pulumi.Output<outputs.core.IpsecConnectionTunnelManagementBgpSessionInfo[]>;
    /**
     * The OCID of the compartment containing the tunnel.
     */
    public /*out*/ readonly compartmentId!: pulumi.Output<string>;
    /**
     * The IP address of Cpe headend.  Example: `129.146.17.50`
     */
    public /*out*/ readonly cpeIp!: pulumi.Output<string>;
    /**
     * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * Configuration information used by the encryption domain policy. Required if the tunnel uses POLICY routing.
     */
    public readonly encryptionDomainConfig!: pulumi.Output<outputs.core.IpsecConnectionTunnelManagementEncryptionDomainConfig>;
    /**
     * Internet Key Exchange protocol version.
     */
    public readonly ikeVersion!: pulumi.Output<string>;
    /**
     * The OCID of the IPSec connection.
     */
    public readonly ipsecId!: pulumi.Output<string>;
    /**
     * The type of routing to use for this tunnel (either BGP dynamic routing, STATIC routing or POLICY routing).
     */
    public readonly routing!: pulumi.Output<string>;
    /**
     * The shared secret (pre-shared key) to use for the IPSec tunnel. If you don't provide a value, Oracle generates a value for you. You can specify your own shared secret later if you like with [UpdateIPSecConnectionTunnelSharedSecret](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/IPSecConnectionTunnelSharedSecret/UpdateIPSecConnectionTunnelSharedSecret).  Example: `EXAMPLEToUis6j1c.p8G.dVQxcmdfMO0yXMLi.lZTbYCMDGu4V8o`
     */
    public readonly sharedSecret!: pulumi.Output<string>;
    /**
     * The IPSec connection's tunnel's lifecycle state.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * The tunnel's current state.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * The date and time the IPSec connection tunnel was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
     */
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    /**
     * When the status of the tunnel last changed, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
     */
    public /*out*/ readonly timeStatusUpdated!: pulumi.Output<string>;
    /**
     * The OCID of the IPSec connection's tunnel.
     */
    public readonly tunnelId!: pulumi.Output<string>;
    /**
     * The IP address of Oracle's VPN headend.  Example: `129.146.17.50`
     */
    public /*out*/ readonly vpnIp!: pulumi.Output<string>;

    /**
     * Create a IpsecConnectionTunnelManagement resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IpsecConnectionTunnelManagementArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IpsecConnectionTunnelManagementArgs | IpsecConnectionTunnelManagementState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IpsecConnectionTunnelManagementState | undefined;
            inputs["bgpSessionInfos"] = state ? state.bgpSessionInfos : undefined;
            inputs["compartmentId"] = state ? state.compartmentId : undefined;
            inputs["cpeIp"] = state ? state.cpeIp : undefined;
            inputs["displayName"] = state ? state.displayName : undefined;
            inputs["encryptionDomainConfig"] = state ? state.encryptionDomainConfig : undefined;
            inputs["ikeVersion"] = state ? state.ikeVersion : undefined;
            inputs["ipsecId"] = state ? state.ipsecId : undefined;
            inputs["routing"] = state ? state.routing : undefined;
            inputs["sharedSecret"] = state ? state.sharedSecret : undefined;
            inputs["state"] = state ? state.state : undefined;
            inputs["status"] = state ? state.status : undefined;
            inputs["timeCreated"] = state ? state.timeCreated : undefined;
            inputs["timeStatusUpdated"] = state ? state.timeStatusUpdated : undefined;
            inputs["tunnelId"] = state ? state.tunnelId : undefined;
            inputs["vpnIp"] = state ? state.vpnIp : undefined;
        } else {
            const args = argsOrState as IpsecConnectionTunnelManagementArgs | undefined;
            if ((!args || args.ipsecId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ipsecId'");
            }
            if ((!args || args.routing === undefined) && !opts.urn) {
                throw new Error("Missing required property 'routing'");
            }
            if ((!args || args.tunnelId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tunnelId'");
            }
            inputs["bgpSessionInfos"] = args ? args.bgpSessionInfos : undefined;
            inputs["displayName"] = args ? args.displayName : undefined;
            inputs["encryptionDomainConfig"] = args ? args.encryptionDomainConfig : undefined;
            inputs["ikeVersion"] = args ? args.ikeVersion : undefined;
            inputs["ipsecId"] = args ? args.ipsecId : undefined;
            inputs["routing"] = args ? args.routing : undefined;
            inputs["sharedSecret"] = args ? args.sharedSecret : undefined;
            inputs["tunnelId"] = args ? args.tunnelId : undefined;
            inputs["compartmentId"] = undefined /*out*/;
            inputs["cpeIp"] = undefined /*out*/;
            inputs["state"] = undefined /*out*/;
            inputs["status"] = undefined /*out*/;
            inputs["timeCreated"] = undefined /*out*/;
            inputs["timeStatusUpdated"] = undefined /*out*/;
            inputs["vpnIp"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(IpsecConnectionTunnelManagement.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering IpsecConnectionTunnelManagement resources.
 */
export interface IpsecConnectionTunnelManagementState {
    /**
     * Information for establishing a BGP session for the IPSec tunnel. Required if the tunnel uses BGP dynamic routing.
     */
    bgpSessionInfos?: pulumi.Input<pulumi.Input<inputs.core.IpsecConnectionTunnelManagementBgpSessionInfo>[]>;
    /**
     * The OCID of the compartment containing the tunnel.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * The IP address of Cpe headend.  Example: `129.146.17.50`
     */
    cpeIp?: pulumi.Input<string>;
    /**
     * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    displayName?: pulumi.Input<string>;
    /**
     * Configuration information used by the encryption domain policy. Required if the tunnel uses POLICY routing.
     */
    encryptionDomainConfig?: pulumi.Input<inputs.core.IpsecConnectionTunnelManagementEncryptionDomainConfig>;
    /**
     * Internet Key Exchange protocol version.
     */
    ikeVersion?: pulumi.Input<string>;
    /**
     * The OCID of the IPSec connection.
     */
    ipsecId?: pulumi.Input<string>;
    /**
     * The type of routing to use for this tunnel (either BGP dynamic routing, STATIC routing or POLICY routing).
     */
    routing?: pulumi.Input<string>;
    /**
     * The shared secret (pre-shared key) to use for the IPSec tunnel. If you don't provide a value, Oracle generates a value for you. You can specify your own shared secret later if you like with [UpdateIPSecConnectionTunnelSharedSecret](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/IPSecConnectionTunnelSharedSecret/UpdateIPSecConnectionTunnelSharedSecret).  Example: `EXAMPLEToUis6j1c.p8G.dVQxcmdfMO0yXMLi.lZTbYCMDGu4V8o`
     */
    sharedSecret?: pulumi.Input<string>;
    /**
     * The IPSec connection's tunnel's lifecycle state.
     */
    state?: pulumi.Input<string>;
    /**
     * The tunnel's current state.
     */
    status?: pulumi.Input<string>;
    /**
     * The date and time the IPSec connection tunnel was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * When the status of the tunnel last changed, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
     */
    timeStatusUpdated?: pulumi.Input<string>;
    /**
     * The OCID of the IPSec connection's tunnel.
     */
    tunnelId?: pulumi.Input<string>;
    /**
     * The IP address of Oracle's VPN headend.  Example: `129.146.17.50`
     */
    vpnIp?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a IpsecConnectionTunnelManagement resource.
 */
export interface IpsecConnectionTunnelManagementArgs {
    /**
     * Information for establishing a BGP session for the IPSec tunnel. Required if the tunnel uses BGP dynamic routing.
     */
    bgpSessionInfos?: pulumi.Input<pulumi.Input<inputs.core.IpsecConnectionTunnelManagementBgpSessionInfo>[]>;
    /**
     * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    displayName?: pulumi.Input<string>;
    /**
     * Configuration information used by the encryption domain policy. Required if the tunnel uses POLICY routing.
     */
    encryptionDomainConfig?: pulumi.Input<inputs.core.IpsecConnectionTunnelManagementEncryptionDomainConfig>;
    /**
     * Internet Key Exchange protocol version.
     */
    ikeVersion?: pulumi.Input<string>;
    /**
     * The OCID of the IPSec connection.
     */
    ipsecId: pulumi.Input<string>;
    /**
     * The type of routing to use for this tunnel (either BGP dynamic routing, STATIC routing or POLICY routing).
     */
    routing: pulumi.Input<string>;
    /**
     * The shared secret (pre-shared key) to use for the IPSec tunnel. If you don't provide a value, Oracle generates a value for you. You can specify your own shared secret later if you like with [UpdateIPSecConnectionTunnelSharedSecret](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/IPSecConnectionTunnelSharedSecret/UpdateIPSecConnectionTunnelSharedSecret).  Example: `EXAMPLEToUis6j1c.p8G.dVQxcmdfMO0yXMLi.lZTbYCMDGu4V8o`
     */
    sharedSecret?: pulumi.Input<string>;
    /**
     * The OCID of the IPSec connection's tunnel.
     */
    tunnelId: pulumi.Input<string>;
}
