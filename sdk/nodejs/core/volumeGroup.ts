// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * ## Import
 *
 * VolumeGroups can be imported using the `id`, e.g.
 *
 * ```sh
 *  $ pulumi import oci:core/volumeGroup:VolumeGroup test_volume_group "id"
 * ```
 */
export class VolumeGroup extends pulumi.CustomResource {
    /**
     * Get an existing VolumeGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VolumeGroupState, opts?: pulumi.CustomResourceOptions): VolumeGroup {
        return new VolumeGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:core/volumeGroup:VolumeGroup';

    /**
     * Returns true if the given object is an instance of VolumeGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VolumeGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VolumeGroup.__pulumiType;
    }

    /**
     * The availability domain of the volume group.
     */
    public readonly availabilityDomain!: pulumi.Output<string>;
    /**
     * If provided, specifies the ID of the volume backup policy to assign to the newly created volume group. If omitted, no policy will be assigned.
     */
    public readonly backupPolicyId!: pulumi.Output<string>;
    /**
     * (Updatable) The OCID of the compartment that contains the volume group.
     */
    public readonly compartmentId!: pulumi.Output<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    public readonly definedTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * (Updatable) A user-friendly name for the volume group. Does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    public readonly freeformTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * Specifies whether the newly created cloned volume group's data has finished copying from the source volume group or backup.
     */
    public /*out*/ readonly isHydrated!: pulumi.Output<boolean>;
    /**
     * The aggregate size of the volume group in GBs.
     */
    public /*out*/ readonly sizeInGbs!: pulumi.Output<string>;
    /**
     * The aggregate size of the volume group in MBs.
     */
    public /*out*/ readonly sizeInMbs!: pulumi.Output<string>;
    /**
     * Specifies the source for a volume group.
     */
    public readonly sourceDetails!: pulumi.Output<outputs.core.VolumeGroupSourceDetails>;
    /**
     * The current state of a volume group.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * The date and time the volume group was created. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     */
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    /**
     * OCIDs for the volumes in this volume group.
     */
    public /*out*/ readonly volumeIds!: pulumi.Output<string[]>;

    /**
     * Create a VolumeGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VolumeGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VolumeGroupArgs | VolumeGroupState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VolumeGroupState | undefined;
            inputs["availabilityDomain"] = state ? state.availabilityDomain : undefined;
            inputs["backupPolicyId"] = state ? state.backupPolicyId : undefined;
            inputs["compartmentId"] = state ? state.compartmentId : undefined;
            inputs["definedTags"] = state ? state.definedTags : undefined;
            inputs["displayName"] = state ? state.displayName : undefined;
            inputs["freeformTags"] = state ? state.freeformTags : undefined;
            inputs["isHydrated"] = state ? state.isHydrated : undefined;
            inputs["sizeInGbs"] = state ? state.sizeInGbs : undefined;
            inputs["sizeInMbs"] = state ? state.sizeInMbs : undefined;
            inputs["sourceDetails"] = state ? state.sourceDetails : undefined;
            inputs["state"] = state ? state.state : undefined;
            inputs["timeCreated"] = state ? state.timeCreated : undefined;
            inputs["volumeIds"] = state ? state.volumeIds : undefined;
        } else {
            const args = argsOrState as VolumeGroupArgs | undefined;
            if ((!args || args.availabilityDomain === undefined) && !opts.urn) {
                throw new Error("Missing required property 'availabilityDomain'");
            }
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.sourceDetails === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sourceDetails'");
            }
            inputs["availabilityDomain"] = args ? args.availabilityDomain : undefined;
            inputs["backupPolicyId"] = args ? args.backupPolicyId : undefined;
            inputs["compartmentId"] = args ? args.compartmentId : undefined;
            inputs["definedTags"] = args ? args.definedTags : undefined;
            inputs["displayName"] = args ? args.displayName : undefined;
            inputs["freeformTags"] = args ? args.freeformTags : undefined;
            inputs["sourceDetails"] = args ? args.sourceDetails : undefined;
            inputs["isHydrated"] = undefined /*out*/;
            inputs["sizeInGbs"] = undefined /*out*/;
            inputs["sizeInMbs"] = undefined /*out*/;
            inputs["state"] = undefined /*out*/;
            inputs["timeCreated"] = undefined /*out*/;
            inputs["volumeIds"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(VolumeGroup.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering VolumeGroup resources.
 */
export interface VolumeGroupState {
    /**
     * The availability domain of the volume group.
     */
    availabilityDomain?: pulumi.Input<string>;
    /**
     * If provided, specifies the ID of the volume backup policy to assign to the newly created volume group. If omitted, no policy will be assigned.
     */
    backupPolicyId?: pulumi.Input<string>;
    /**
     * (Updatable) The OCID of the compartment that contains the volume group.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) A user-friendly name for the volume group. Does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * Specifies whether the newly created cloned volume group's data has finished copying from the source volume group or backup.
     */
    isHydrated?: pulumi.Input<boolean>;
    /**
     * The aggregate size of the volume group in GBs.
     */
    sizeInGbs?: pulumi.Input<string>;
    /**
     * The aggregate size of the volume group in MBs.
     */
    sizeInMbs?: pulumi.Input<string>;
    /**
     * Specifies the source for a volume group.
     */
    sourceDetails?: pulumi.Input<inputs.core.VolumeGroupSourceDetails>;
    /**
     * The current state of a volume group.
     */
    state?: pulumi.Input<string>;
    /**
     * The date and time the volume group was created. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * OCIDs for the volumes in this volume group.
     */
    volumeIds?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a VolumeGroup resource.
 */
export interface VolumeGroupArgs {
    /**
     * The availability domain of the volume group.
     */
    availabilityDomain: pulumi.Input<string>;
    /**
     * If provided, specifies the ID of the volume backup policy to assign to the newly created volume group. If omitted, no policy will be assigned.
     */
    backupPolicyId?: pulumi.Input<string>;
    /**
     * (Updatable) The OCID of the compartment that contains the volume group.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) A user-friendly name for the volume group. Does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * Specifies the source for a volume group.
     */
    sourceDetails: pulumi.Input<inputs.core.VolumeGroupSourceDetails>;
}
