// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

export function getAutonomousDatabaseWallet(args: GetAutonomousDatabaseWalletArgs, opts?: pulumi.InvokeOptions): Promise<GetAutonomousDatabaseWalletResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("oci:database/getAutonomousDatabaseWallet:getAutonomousDatabaseWallet", {
        "autonomousDatabaseId": args.autonomousDatabaseId,
        "base64EncodeContent": args.base64EncodeContent,
        "generateType": args.generateType,
        "password": args.password,
    }, opts);
}

/**
 * A collection of arguments for invoking getAutonomousDatabaseWallet.
 */
export interface GetAutonomousDatabaseWalletArgs {
    /**
     * The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     *
     * @deprecated The 'data.oci_database_autonomous_database_wallet' resource has been deprecated. Please use 'oci_database_autonomous_database_wallet' instead.
     */
    autonomousDatabaseId: string;
    base64EncodeContent?: boolean;
    /**
     * The type of wallet to generate.
     */
    generateType?: string;
    /**
     * The password to encrypt the keys inside the wallet. The password must be at least 8 characters long and must include at least 1 letter and either 1 numeric character or 1 special character.
     */
    password: string;
}

/**
 * A collection of values returned by getAutonomousDatabaseWallet.
 */
export interface GetAutonomousDatabaseWalletResult {
    /**
     * @deprecated The 'data.oci_database_autonomous_database_wallet' resource has been deprecated. Please use 'oci_database_autonomous_database_wallet' instead.
     */
    readonly autonomousDatabaseId: string;
    readonly base64EncodeContent?: boolean;
    /**
     * content of the downloaded zipped wallet for the Autonomous Database. If `base64EncodeContent` is set to `true`, then this content will be base64 encoded.
     */
    readonly content: string;
    readonly generateType?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly password: string;
}
