// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Autonomous Vm Clusters in Oracle Cloud Infrastructure Database service.
 *
 * Gets a list of Exadata Cloud@Customer Autonomous VM clusters in the specified compartment.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testAutonomousVmClusters = oci.database.getAutonomousVmClusters({
 *     compartmentId: _var.compartment_id,
 *     displayName: _var.autonomous_vm_cluster_display_name,
 *     exadataInfrastructureId: oci_database_exadata_infrastructure.test_exadata_infrastructure.id,
 *     state: _var.autonomous_vm_cluster_state,
 * });
 * ```
 */
export function getAutonomousVmClusters(args: GetAutonomousVmClustersArgs, opts?: pulumi.InvokeOptions): Promise<GetAutonomousVmClustersResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("oci:database/getAutonomousVmClusters:getAutonomousVmClusters", {
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "exadataInfrastructureId": args.exadataInfrastructureId,
        "filters": args.filters,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getAutonomousVmClusters.
 */
export interface GetAutonomousVmClustersArgs {
    /**
     * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    compartmentId: string;
    /**
     * A filter to return only resources that match the entire display name given. The match is not case sensitive.
     */
    displayName?: string;
    /**
     * If provided, filters the results for the given Exadata Infrastructure.
     */
    exadataInfrastructureId?: string;
    filters?: inputs.database.GetAutonomousVmClustersFilter[];
    /**
     * A filter to return only resources that match the given lifecycle state exactly.
     */
    state?: string;
}

/**
 * A collection of values returned by getAutonomousVmClusters.
 */
export interface GetAutonomousVmClustersResult {
    /**
     * The list of autonomous_vm_clusters.
     */
    readonly autonomousVmClusters: outputs.database.GetAutonomousVmClustersAutonomousVmCluster[];
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    readonly compartmentId: string;
    /**
     * The user-friendly name for the Autonomous VM cluster. The name does not need to be unique.
     */
    readonly displayName?: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata infrastructure.
     */
    readonly exadataInfrastructureId?: string;
    readonly filters?: outputs.database.GetAutonomousVmClustersFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The current state of the Autonomous VM cluster.
     */
    readonly state?: string;
}
