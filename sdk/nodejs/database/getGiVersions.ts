// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Gi Versions in Oracle Cloud Infrastructure Database service.
 *
 * Gets a list of supported GI versions for the Exadata Cloud@Customer VM cluster.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testGiVersions = oci.database.getGiVersions({
 *     compartmentId: _var.compartment_id,
 *     shape: _var.gi_version_shape,
 * });
 * ```
 */
export function getGiVersions(args: GetGiVersionsArgs, opts?: pulumi.InvokeOptions): Promise<GetGiVersionsResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("oci:database/getGiVersions:getGiVersions", {
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "shape": args.shape,
    }, opts);
}

/**
 * A collection of arguments for invoking getGiVersions.
 */
export interface GetGiVersionsArgs {
    /**
     * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    compartmentId: string;
    filters?: inputs.database.GetGiVersionsFilter[];
    /**
     * If provided, filters the results for the given shape.
     */
    shape?: string;
}

/**
 * A collection of values returned by getGiVersions.
 */
export interface GetGiVersionsResult {
    readonly compartmentId: string;
    readonly filters?: outputs.database.GetGiVersionsFilter[];
    /**
     * The list of gi_versions.
     */
    readonly giVersions: outputs.database.GetGiVersionsGiVersion[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly shape?: string;
}
