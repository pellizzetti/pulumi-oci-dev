// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * This resource provides the Data Safe Configuration resource in Oracle Cloud Infrastructure Data Safe service.
 *
 * Enables Data Safe in the tenancy and region.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testDataSafeConfiguration = new oci.datasafe.DataSafeConfiguration("testDataSafeConfiguration", {
 *     isEnabled: _var.data_safe_configuration_is_enabled,
 *     compartmentId: _var.compartment_id,
 * });
 * ```
 *
 * ## Import
 *
 * Import is not supported for this resource.
 */
export class DataSafeConfiguration extends pulumi.CustomResource {
    /**
     * Get an existing DataSafeConfiguration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DataSafeConfigurationState, opts?: pulumi.CustomResourceOptions): DataSafeConfiguration {
        return new DataSafeConfiguration(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:datasafe/dataSafeConfiguration:DataSafeConfiguration';

    /**
     * Returns true if the given object is an instance of DataSafeConfiguration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DataSafeConfiguration {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DataSafeConfiguration.__pulumiType;
    }

    /**
     * (Updatable) A filter to return only resources that match the specified compartment OCID.
     */
    public readonly compartmentId!: pulumi.Output<string>;
    /**
     * (Updatable) Indicates if Data Safe is enabled.
     */
    public readonly isEnabled!: pulumi.Output<boolean>;
    /**
     * The current state of Data Safe.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * The date and time Data Safe was enabled, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     */
    public /*out*/ readonly timeEnabled!: pulumi.Output<string>;
    /**
     * The URL of the Data Safe service.
     */
    public /*out*/ readonly url!: pulumi.Output<string>;

    /**
     * Create a DataSafeConfiguration resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DataSafeConfigurationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DataSafeConfigurationArgs | DataSafeConfigurationState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DataSafeConfigurationState | undefined;
            inputs["compartmentId"] = state ? state.compartmentId : undefined;
            inputs["isEnabled"] = state ? state.isEnabled : undefined;
            inputs["state"] = state ? state.state : undefined;
            inputs["timeEnabled"] = state ? state.timeEnabled : undefined;
            inputs["url"] = state ? state.url : undefined;
        } else {
            const args = argsOrState as DataSafeConfigurationArgs | undefined;
            if ((!args || args.isEnabled === undefined) && !opts.urn) {
                throw new Error("Missing required property 'isEnabled'");
            }
            inputs["compartmentId"] = args ? args.compartmentId : undefined;
            inputs["isEnabled"] = args ? args.isEnabled : undefined;
            inputs["state"] = undefined /*out*/;
            inputs["timeEnabled"] = undefined /*out*/;
            inputs["url"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(DataSafeConfiguration.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DataSafeConfiguration resources.
 */
export interface DataSafeConfigurationState {
    /**
     * (Updatable) A filter to return only resources that match the specified compartment OCID.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * (Updatable) Indicates if Data Safe is enabled.
     */
    isEnabled?: pulumi.Input<boolean>;
    /**
     * The current state of Data Safe.
     */
    state?: pulumi.Input<string>;
    /**
     * The date and time Data Safe was enabled, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     */
    timeEnabled?: pulumi.Input<string>;
    /**
     * The URL of the Data Safe service.
     */
    url?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DataSafeConfiguration resource.
 */
export interface DataSafeConfigurationArgs {
    /**
     * (Updatable) A filter to return only resources that match the specified compartment OCID.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * (Updatable) Indicates if Data Safe is enabled.
     */
    isEnabled: pulumi.Input<boolean>;
}
