// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * This resource provides the Deploy Stage resource in Oracle Cloud Infrastructure Devops service.
 *
 * Creates a new deployment stage.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testDeployStage = new oci.devops.DeployStage("testDeployStage", {
 *     deployPipelineId: oci_devops_deploy_pipeline.test_deploy_pipeline.id,
 *     deployStagePredecessorCollection: {
 *         items: [{
 *             id: _var.deploy_stage_deploy_stage_predecessor_collection_items_id,
 *         }],
 *     },
 *     deployStageType: _var.deploy_stage_deploy_stage_type,
 *     approvalPolicy: {
 *         approvalPolicyType: _var.deploy_stage_approval_policy_approval_policy_type,
 *         numberOfApprovalsRequired: _var.deploy_stage_approval_policy_number_of_approvals_required,
 *     },
 *     blueBackendIps: {
 *         items: _var.deploy_stage_blue_backend_ips_items,
 *     },
 *     computeInstanceGroupDeployEnvironmentId: oci_devops_deploy_environment.test_deploy_environment.id,
 *     config: _var.deploy_stage_config,
 *     definedTags: {
 *         "foo-namespace.bar-key": "value",
 *     },
 *     deployArtifactId: oci_devops_deploy_artifact.test_deploy_artifact.id,
 *     deployArtifactIds: _var.deploy_stage_deploy_artifact_ids,
 *     deploymentSpecDeployArtifactId: oci_devops_deploy_artifact.test_deploy_artifact.id,
 *     description: _var.deploy_stage_description,
 *     displayName: _var.deploy_stage_display_name,
 *     dockerImageDeployArtifactId: oci_devops_deploy_artifact.test_deploy_artifact.id,
 *     failurePolicy: {
 *         policyType: _var.deploy_stage_failure_policy_policy_type,
 *         failureCount: _var.deploy_stage_failure_policy_failure_count,
 *         failurePercentage: _var.deploy_stage_failure_policy_failure_percentage,
 *     },
 *     freeformTags: {
 *         "bar-key": "value",
 *     },
 *     functionDeployEnvironmentId: oci_devops_deploy_environment.test_deploy_environment.id,
 *     functionTimeoutInSeconds: _var.deploy_stage_function_timeout_in_seconds,
 *     greenBackendIps: {
 *         items: _var.deploy_stage_green_backend_ips_items,
 *     },
 *     isAsync: _var.deploy_stage_is_async,
 *     isValidationEnabled: _var.deploy_stage_is_validation_enabled,
 *     kubernetesManifestDeployArtifactIds: _var.deploy_stage_kubernetes_manifest_deploy_artifact_ids,
 *     loadBalancerConfig: {
 *         backendPort: _var.deploy_stage_load_balancer_config_backend_port,
 *         listenerName: oci_load_balancer_listener.test_listener.name,
 *         loadBalancerId: oci_load_balancer_load_balancer.test_load_balancer.id,
 *     },
 *     maxMemoryInMbs: _var.deploy_stage_max_memory_in_mbs,
 *     namespace: _var.deploy_stage_namespace,
 *     okeClusterDeployEnvironmentId: oci_devops_deploy_environment.test_deploy_environment.id,
 *     rollbackPolicy: {
 *         policyType: _var.deploy_stage_rollback_policy_policy_type,
 *     },
 *     rolloutPolicy: {
 *         policyType: _var.deploy_stage_rollout_policy_policy_type,
 *         batchCount: _var.deploy_stage_rollout_policy_batch_count,
 *         batchDelayInSeconds: _var.deploy_stage_rollout_policy_batch_delay_in_seconds,
 *         batchPercentage: _var.deploy_stage_rollout_policy_batch_percentage,
 *         rampLimitPercent: _var.deploy_stage_rollout_policy_ramp_limit_percent,
 *     },
 *     trafficShiftTarget: _var.deploy_stage_traffic_shift_target,
 *     waitCriteria: {
 *         waitDuration: _var.deploy_stage_wait_criteria_wait_duration,
 *         waitType: _var.deploy_stage_wait_criteria_wait_type,
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * DeployStages can be imported using the `id`, e.g.
 *
 * ```sh
 *  $ pulumi import oci:devops/deployStage:DeployStage test_deploy_stage "id"
 * ```
 */
export class DeployStage extends pulumi.CustomResource {
    /**
     * Get an existing DeployStage resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DeployStageState, opts?: pulumi.CustomResourceOptions): DeployStage {
        return new DeployStage(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:devops/deployStage:DeployStage';

    /**
     * Returns true if the given object is an instance of DeployStage.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DeployStage {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DeployStage.__pulumiType;
    }

    /**
     * (Updatable) Specifies the approval policy.
     */
    public readonly approvalPolicy!: pulumi.Output<outputs.devops.DeployStageApprovalPolicy>;
    /**
     * (Updatable) Collection of backend environment IP addresses.
     */
    public readonly blueBackendIps!: pulumi.Output<outputs.devops.DeployStageBlueBackendIps>;
    /**
     * The OCID of a compartment.
     */
    public /*out*/ readonly compartmentId!: pulumi.Output<string>;
    /**
     * (Updatable) A compute instance group environment OCID for rolling deployment.
     */
    public readonly computeInstanceGroupDeployEnvironmentId!: pulumi.Output<string>;
    /**
     * (Updatable) User provided key and value pair configuration, which is assigned through constants or parameter.
     */
    public readonly config!: pulumi.Output<{[key: string]: any} | undefined>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
     */
    public readonly definedTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * (Updatable) Optional binary artifact OCID user may provide to this stage.
     */
    public readonly deployArtifactId!: pulumi.Output<string | undefined>;
    /**
     * (Updatable) Additional file artifact OCIDs.
     */
    public readonly deployArtifactIds!: pulumi.Output<string[] | undefined>;
    /**
     * The OCID of a pipeline.
     */
    public readonly deployPipelineId!: pulumi.Output<string>;
    /**
     * (Updatable) Collection containing the predecessors of a stage.
     */
    public readonly deployStagePredecessorCollection!: pulumi.Output<outputs.devops.DeployStageDeployStagePredecessorCollection>;
    /**
     * (Updatable) Deployment stage type.
     */
    public readonly deployStageType!: pulumi.Output<string>;
    /**
     * (Updatable) The OCID of the artifact that contains the deployment specification.
     */
    public readonly deploymentSpecDeployArtifactId!: pulumi.Output<string>;
    /**
     * (Updatable) Optional description about the deployment stage.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * (Updatable) Deployment stage display name, which can be renamed and is not necessarily unique. Avoid entering confidential information.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * (Updatable) A Docker image artifact OCID.
     */
    public readonly dockerImageDeployArtifactId!: pulumi.Output<string>;
    /**
     * (Updatable) Specifies a failure policy for a compute instance group rolling deployment stage.
     */
    public readonly failurePolicy!: pulumi.Output<outputs.devops.DeployStageFailurePolicy>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
     */
    public readonly freeformTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * (Updatable) Function environment OCID.
     */
    public readonly functionDeployEnvironmentId!: pulumi.Output<string>;
    /**
     * (Updatable) Timeout for execution of the Function. Value in seconds.
     */
    public readonly functionTimeoutInSeconds!: pulumi.Output<number>;
    /**
     * (Updatable) Collection of backend environment IP addresses.
     */
    public readonly greenBackendIps!: pulumi.Output<outputs.devops.DeployStageGreenBackendIps>;
    /**
     * (Updatable) A boolean flag specifies whether this stage executes asynchronously.
     */
    public readonly isAsync!: pulumi.Output<boolean>;
    /**
     * (Updatable) A boolean flag specifies whether the invoked function should be validated.
     */
    public readonly isValidationEnabled!: pulumi.Output<boolean>;
    /**
     * (Updatable) List of Kubernetes manifest artifact OCIDs, the manifests should not include any job resource.
     */
    public readonly kubernetesManifestDeployArtifactIds!: pulumi.Output<string[] | undefined>;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    public /*out*/ readonly lifecycleDetails!: pulumi.Output<string>;
    /**
     * (Updatable) Specifies config for load balancer traffic shift stages.
     */
    public readonly loadBalancerConfig!: pulumi.Output<outputs.devops.DeployStageLoadBalancerConfig>;
    /**
     * (Updatable) Maximum usable memory for the Function (in MB).
     */
    public readonly maxMemoryInMbs!: pulumi.Output<string>;
    /**
     * (Updatable) Default namespace to be used for Kubernetes deployment when not specified in the manifest.
     */
    public readonly namespace!: pulumi.Output<string>;
    /**
     * (Updatable) Kubernetes cluster environment OCID for deployment.
     */
    public readonly okeClusterDeployEnvironmentId!: pulumi.Output<string>;
    /**
     * The OCID of a project.
     */
    public /*out*/ readonly projectId!: pulumi.Output<string>;
    /**
     * (Updatable) Specifies the rollback policy. This is initiated on the failure of certain stage types.
     */
    public readonly rollbackPolicy!: pulumi.Output<outputs.devops.DeployStageRollbackPolicy>;
    /**
     * (Updatable) Description of rollout policy for load balancer traffic shift stage.
     */
    public readonly rolloutPolicy!: pulumi.Output<outputs.devops.DeployStageRolloutPolicy>;
    /**
     * The current state of the deployment stage.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    public /*out*/ readonly systemTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * Time the deployment stage was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     */
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    /**
     * Time the deployment stage was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     */
    public /*out*/ readonly timeUpdated!: pulumi.Output<string>;
    /**
     * (Updatable) Specifies the target or destination backend set.
     */
    public readonly trafficShiftTarget!: pulumi.Output<string>;
    /**
     * (Updatable) Specifies wait criteria for the Wait stage.
     */
    public readonly waitCriteria!: pulumi.Output<outputs.devops.DeployStageWaitCriteria>;

    /**
     * Create a DeployStage resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DeployStageArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DeployStageArgs | DeployStageState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DeployStageState | undefined;
            inputs["approvalPolicy"] = state ? state.approvalPolicy : undefined;
            inputs["blueBackendIps"] = state ? state.blueBackendIps : undefined;
            inputs["compartmentId"] = state ? state.compartmentId : undefined;
            inputs["computeInstanceGroupDeployEnvironmentId"] = state ? state.computeInstanceGroupDeployEnvironmentId : undefined;
            inputs["config"] = state ? state.config : undefined;
            inputs["definedTags"] = state ? state.definedTags : undefined;
            inputs["deployArtifactId"] = state ? state.deployArtifactId : undefined;
            inputs["deployArtifactIds"] = state ? state.deployArtifactIds : undefined;
            inputs["deployPipelineId"] = state ? state.deployPipelineId : undefined;
            inputs["deployStagePredecessorCollection"] = state ? state.deployStagePredecessorCollection : undefined;
            inputs["deployStageType"] = state ? state.deployStageType : undefined;
            inputs["deploymentSpecDeployArtifactId"] = state ? state.deploymentSpecDeployArtifactId : undefined;
            inputs["description"] = state ? state.description : undefined;
            inputs["displayName"] = state ? state.displayName : undefined;
            inputs["dockerImageDeployArtifactId"] = state ? state.dockerImageDeployArtifactId : undefined;
            inputs["failurePolicy"] = state ? state.failurePolicy : undefined;
            inputs["freeformTags"] = state ? state.freeformTags : undefined;
            inputs["functionDeployEnvironmentId"] = state ? state.functionDeployEnvironmentId : undefined;
            inputs["functionTimeoutInSeconds"] = state ? state.functionTimeoutInSeconds : undefined;
            inputs["greenBackendIps"] = state ? state.greenBackendIps : undefined;
            inputs["isAsync"] = state ? state.isAsync : undefined;
            inputs["isValidationEnabled"] = state ? state.isValidationEnabled : undefined;
            inputs["kubernetesManifestDeployArtifactIds"] = state ? state.kubernetesManifestDeployArtifactIds : undefined;
            inputs["lifecycleDetails"] = state ? state.lifecycleDetails : undefined;
            inputs["loadBalancerConfig"] = state ? state.loadBalancerConfig : undefined;
            inputs["maxMemoryInMbs"] = state ? state.maxMemoryInMbs : undefined;
            inputs["namespace"] = state ? state.namespace : undefined;
            inputs["okeClusterDeployEnvironmentId"] = state ? state.okeClusterDeployEnvironmentId : undefined;
            inputs["projectId"] = state ? state.projectId : undefined;
            inputs["rollbackPolicy"] = state ? state.rollbackPolicy : undefined;
            inputs["rolloutPolicy"] = state ? state.rolloutPolicy : undefined;
            inputs["state"] = state ? state.state : undefined;
            inputs["systemTags"] = state ? state.systemTags : undefined;
            inputs["timeCreated"] = state ? state.timeCreated : undefined;
            inputs["timeUpdated"] = state ? state.timeUpdated : undefined;
            inputs["trafficShiftTarget"] = state ? state.trafficShiftTarget : undefined;
            inputs["waitCriteria"] = state ? state.waitCriteria : undefined;
        } else {
            const args = argsOrState as DeployStageArgs | undefined;
            if ((!args || args.deployPipelineId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'deployPipelineId'");
            }
            if ((!args || args.deployStagePredecessorCollection === undefined) && !opts.urn) {
                throw new Error("Missing required property 'deployStagePredecessorCollection'");
            }
            if ((!args || args.deployStageType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'deployStageType'");
            }
            inputs["approvalPolicy"] = args ? args.approvalPolicy : undefined;
            inputs["blueBackendIps"] = args ? args.blueBackendIps : undefined;
            inputs["computeInstanceGroupDeployEnvironmentId"] = args ? args.computeInstanceGroupDeployEnvironmentId : undefined;
            inputs["config"] = args ? args.config : undefined;
            inputs["definedTags"] = args ? args.definedTags : undefined;
            inputs["deployArtifactId"] = args ? args.deployArtifactId : undefined;
            inputs["deployArtifactIds"] = args ? args.deployArtifactIds : undefined;
            inputs["deployPipelineId"] = args ? args.deployPipelineId : undefined;
            inputs["deployStagePredecessorCollection"] = args ? args.deployStagePredecessorCollection : undefined;
            inputs["deployStageType"] = args ? args.deployStageType : undefined;
            inputs["deploymentSpecDeployArtifactId"] = args ? args.deploymentSpecDeployArtifactId : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["displayName"] = args ? args.displayName : undefined;
            inputs["dockerImageDeployArtifactId"] = args ? args.dockerImageDeployArtifactId : undefined;
            inputs["failurePolicy"] = args ? args.failurePolicy : undefined;
            inputs["freeformTags"] = args ? args.freeformTags : undefined;
            inputs["functionDeployEnvironmentId"] = args ? args.functionDeployEnvironmentId : undefined;
            inputs["functionTimeoutInSeconds"] = args ? args.functionTimeoutInSeconds : undefined;
            inputs["greenBackendIps"] = args ? args.greenBackendIps : undefined;
            inputs["isAsync"] = args ? args.isAsync : undefined;
            inputs["isValidationEnabled"] = args ? args.isValidationEnabled : undefined;
            inputs["kubernetesManifestDeployArtifactIds"] = args ? args.kubernetesManifestDeployArtifactIds : undefined;
            inputs["loadBalancerConfig"] = args ? args.loadBalancerConfig : undefined;
            inputs["maxMemoryInMbs"] = args ? args.maxMemoryInMbs : undefined;
            inputs["namespace"] = args ? args.namespace : undefined;
            inputs["okeClusterDeployEnvironmentId"] = args ? args.okeClusterDeployEnvironmentId : undefined;
            inputs["rollbackPolicy"] = args ? args.rollbackPolicy : undefined;
            inputs["rolloutPolicy"] = args ? args.rolloutPolicy : undefined;
            inputs["trafficShiftTarget"] = args ? args.trafficShiftTarget : undefined;
            inputs["waitCriteria"] = args ? args.waitCriteria : undefined;
            inputs["compartmentId"] = undefined /*out*/;
            inputs["lifecycleDetails"] = undefined /*out*/;
            inputs["projectId"] = undefined /*out*/;
            inputs["state"] = undefined /*out*/;
            inputs["systemTags"] = undefined /*out*/;
            inputs["timeCreated"] = undefined /*out*/;
            inputs["timeUpdated"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(DeployStage.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DeployStage resources.
 */
export interface DeployStageState {
    /**
     * (Updatable) Specifies the approval policy.
     */
    approvalPolicy?: pulumi.Input<inputs.devops.DeployStageApprovalPolicy>;
    /**
     * (Updatable) Collection of backend environment IP addresses.
     */
    blueBackendIps?: pulumi.Input<inputs.devops.DeployStageBlueBackendIps>;
    /**
     * The OCID of a compartment.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * (Updatable) A compute instance group environment OCID for rolling deployment.
     */
    computeInstanceGroupDeployEnvironmentId?: pulumi.Input<string>;
    /**
     * (Updatable) User provided key and value pair configuration, which is assigned through constants or parameter.
     */
    config?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) Optional binary artifact OCID user may provide to this stage.
     */
    deployArtifactId?: pulumi.Input<string>;
    /**
     * (Updatable) Additional file artifact OCIDs.
     */
    deployArtifactIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The OCID of a pipeline.
     */
    deployPipelineId?: pulumi.Input<string>;
    /**
     * (Updatable) Collection containing the predecessors of a stage.
     */
    deployStagePredecessorCollection?: pulumi.Input<inputs.devops.DeployStageDeployStagePredecessorCollection>;
    /**
     * (Updatable) Deployment stage type.
     */
    deployStageType?: pulumi.Input<string>;
    /**
     * (Updatable) The OCID of the artifact that contains the deployment specification.
     */
    deploymentSpecDeployArtifactId?: pulumi.Input<string>;
    /**
     * (Updatable) Optional description about the deployment stage.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) Deployment stage display name, which can be renamed and is not necessarily unique. Avoid entering confidential information.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) A Docker image artifact OCID.
     */
    dockerImageDeployArtifactId?: pulumi.Input<string>;
    /**
     * (Updatable) Specifies a failure policy for a compute instance group rolling deployment stage.
     */
    failurePolicy?: pulumi.Input<inputs.devops.DeployStageFailurePolicy>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) Function environment OCID.
     */
    functionDeployEnvironmentId?: pulumi.Input<string>;
    /**
     * (Updatable) Timeout for execution of the Function. Value in seconds.
     */
    functionTimeoutInSeconds?: pulumi.Input<number>;
    /**
     * (Updatable) Collection of backend environment IP addresses.
     */
    greenBackendIps?: pulumi.Input<inputs.devops.DeployStageGreenBackendIps>;
    /**
     * (Updatable) A boolean flag specifies whether this stage executes asynchronously.
     */
    isAsync?: pulumi.Input<boolean>;
    /**
     * (Updatable) A boolean flag specifies whether the invoked function should be validated.
     */
    isValidationEnabled?: pulumi.Input<boolean>;
    /**
     * (Updatable) List of Kubernetes manifest artifact OCIDs, the manifests should not include any job resource.
     */
    kubernetesManifestDeployArtifactIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    lifecycleDetails?: pulumi.Input<string>;
    /**
     * (Updatable) Specifies config for load balancer traffic shift stages.
     */
    loadBalancerConfig?: pulumi.Input<inputs.devops.DeployStageLoadBalancerConfig>;
    /**
     * (Updatable) Maximum usable memory for the Function (in MB).
     */
    maxMemoryInMbs?: pulumi.Input<string>;
    /**
     * (Updatable) Default namespace to be used for Kubernetes deployment when not specified in the manifest.
     */
    namespace?: pulumi.Input<string>;
    /**
     * (Updatable) Kubernetes cluster environment OCID for deployment.
     */
    okeClusterDeployEnvironmentId?: pulumi.Input<string>;
    /**
     * The OCID of a project.
     */
    projectId?: pulumi.Input<string>;
    /**
     * (Updatable) Specifies the rollback policy. This is initiated on the failure of certain stage types.
     */
    rollbackPolicy?: pulumi.Input<inputs.devops.DeployStageRollbackPolicy>;
    /**
     * (Updatable) Description of rollout policy for load balancer traffic shift stage.
     */
    rolloutPolicy?: pulumi.Input<inputs.devops.DeployStageRolloutPolicy>;
    /**
     * The current state of the deployment stage.
     */
    state?: pulumi.Input<string>;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    systemTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * Time the deployment stage was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * Time the deployment stage was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     */
    timeUpdated?: pulumi.Input<string>;
    /**
     * (Updatable) Specifies the target or destination backend set.
     */
    trafficShiftTarget?: pulumi.Input<string>;
    /**
     * (Updatable) Specifies wait criteria for the Wait stage.
     */
    waitCriteria?: pulumi.Input<inputs.devops.DeployStageWaitCriteria>;
}

/**
 * The set of arguments for constructing a DeployStage resource.
 */
export interface DeployStageArgs {
    /**
     * (Updatable) Specifies the approval policy.
     */
    approvalPolicy?: pulumi.Input<inputs.devops.DeployStageApprovalPolicy>;
    /**
     * (Updatable) Collection of backend environment IP addresses.
     */
    blueBackendIps?: pulumi.Input<inputs.devops.DeployStageBlueBackendIps>;
    /**
     * (Updatable) A compute instance group environment OCID for rolling deployment.
     */
    computeInstanceGroupDeployEnvironmentId?: pulumi.Input<string>;
    /**
     * (Updatable) User provided key and value pair configuration, which is assigned through constants or parameter.
     */
    config?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) Optional binary artifact OCID user may provide to this stage.
     */
    deployArtifactId?: pulumi.Input<string>;
    /**
     * (Updatable) Additional file artifact OCIDs.
     */
    deployArtifactIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The OCID of a pipeline.
     */
    deployPipelineId: pulumi.Input<string>;
    /**
     * (Updatable) Collection containing the predecessors of a stage.
     */
    deployStagePredecessorCollection: pulumi.Input<inputs.devops.DeployStageDeployStagePredecessorCollection>;
    /**
     * (Updatable) Deployment stage type.
     */
    deployStageType: pulumi.Input<string>;
    /**
     * (Updatable) The OCID of the artifact that contains the deployment specification.
     */
    deploymentSpecDeployArtifactId?: pulumi.Input<string>;
    /**
     * (Updatable) Optional description about the deployment stage.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) Deployment stage display name, which can be renamed and is not necessarily unique. Avoid entering confidential information.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) A Docker image artifact OCID.
     */
    dockerImageDeployArtifactId?: pulumi.Input<string>;
    /**
     * (Updatable) Specifies a failure policy for a compute instance group rolling deployment stage.
     */
    failurePolicy?: pulumi.Input<inputs.devops.DeployStageFailurePolicy>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) Function environment OCID.
     */
    functionDeployEnvironmentId?: pulumi.Input<string>;
    /**
     * (Updatable) Timeout for execution of the Function. Value in seconds.
     */
    functionTimeoutInSeconds?: pulumi.Input<number>;
    /**
     * (Updatable) Collection of backend environment IP addresses.
     */
    greenBackendIps?: pulumi.Input<inputs.devops.DeployStageGreenBackendIps>;
    /**
     * (Updatable) A boolean flag specifies whether this stage executes asynchronously.
     */
    isAsync?: pulumi.Input<boolean>;
    /**
     * (Updatable) A boolean flag specifies whether the invoked function should be validated.
     */
    isValidationEnabled?: pulumi.Input<boolean>;
    /**
     * (Updatable) List of Kubernetes manifest artifact OCIDs, the manifests should not include any job resource.
     */
    kubernetesManifestDeployArtifactIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Updatable) Specifies config for load balancer traffic shift stages.
     */
    loadBalancerConfig?: pulumi.Input<inputs.devops.DeployStageLoadBalancerConfig>;
    /**
     * (Updatable) Maximum usable memory for the Function (in MB).
     */
    maxMemoryInMbs?: pulumi.Input<string>;
    /**
     * (Updatable) Default namespace to be used for Kubernetes deployment when not specified in the manifest.
     */
    namespace?: pulumi.Input<string>;
    /**
     * (Updatable) Kubernetes cluster environment OCID for deployment.
     */
    okeClusterDeployEnvironmentId?: pulumi.Input<string>;
    /**
     * (Updatable) Specifies the rollback policy. This is initiated on the failure of certain stage types.
     */
    rollbackPolicy?: pulumi.Input<inputs.devops.DeployStageRollbackPolicy>;
    /**
     * (Updatable) Description of rollout policy for load balancer traffic shift stage.
     */
    rolloutPolicy?: pulumi.Input<inputs.devops.DeployStageRolloutPolicy>;
    /**
     * (Updatable) Specifies the target or destination backend set.
     */
    trafficShiftTarget?: pulumi.Input<string>;
    /**
     * (Updatable) Specifies wait criteria for the Wait stage.
     */
    waitCriteria?: pulumi.Input<inputs.devops.DeployStageWaitCriteria>;
}
