// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * This resource provides the Steering Policy resource in Oracle Cloud Infrastructure DNS service.
 *
 * Creates a new steering policy in the specified compartment. For more information on
 * creating policies with templates, see [Traffic Management API Guide](https://docs.cloud.oracle.com/iaas/Content/TrafficManagement/Concepts/trafficmanagementapi.htm).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testSteeringPolicy = new oci.dns.SteeringPolicy("testSteeringPolicy", {
 *     compartmentId: _var.compartment_id,
 *     displayName: _var.steering_policy_display_name,
 *     template: _var.steering_policy_template,
 *     answers: [{
 *         name: _var.steering_policy_answers_name,
 *         rdata: _var.steering_policy_answers_rdata,
 *         rtype: _var.steering_policy_answers_rtype,
 *         isDisabled: _var.steering_policy_answers_is_disabled,
 *         pool: _var.steering_policy_answers_pool,
 *     }],
 *     definedTags: _var.steering_policy_defined_tags,
 *     freeformTags: _var.steering_policy_freeform_tags,
 *     healthCheckMonitorId: oci_health_checks_http_monitor.test_http_monitor.id,
 *     rules: [{
 *         ruleType: _var.steering_policy_rules_rule_type,
 *         cases: [{
 *             answerDatas: [{
 *                 answerCondition: _var.steering_policy_rules_cases_answer_data_answer_condition,
 *                 shouldKeep: _var.steering_policy_rules_cases_answer_data_should_keep,
 *                 value: _var.steering_policy_rules_cases_answer_data_value,
 *             }],
 *             caseCondition: _var.steering_policy_rules_cases_case_condition,
 *             count: _var.steering_policy_rules_cases_count,
 *         }],
 *         defaultAnswerDatas: [{
 *             answerCondition: _var.steering_policy_rules_default_answer_data_answer_condition,
 *             shouldKeep: _var.steering_policy_rules_default_answer_data_should_keep,
 *             value: _var.steering_policy_rules_default_answer_data_value,
 *         }],
 *         defaultCount: _var.steering_policy_rules_default_count,
 *         description: _var.steering_policy_rules_description,
 *     }],
 *     ttl: _var.steering_policy_ttl,
 * });
 * ```
 *
 * ## Import
 *
 * SteeringPolicies can be imported using the `id`, e.g.
 *
 * ```sh
 *  $ pulumi import oci:dns/steeringPolicy:SteeringPolicy test_steering_policy "id"
 * ```
 */
export class SteeringPolicy extends pulumi.CustomResource {
    /**
     * Get an existing SteeringPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SteeringPolicyState, opts?: pulumi.CustomResourceOptions): SteeringPolicy {
        return new SteeringPolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:dns/steeringPolicy:SteeringPolicy';

    /**
     * Returns true if the given object is an instance of SteeringPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SteeringPolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SteeringPolicy.__pulumiType;
    }

    /**
     * The set of all answers that can potentially issue from the steering policy.
     */
    public readonly answers!: pulumi.Output<outputs.dns.SteeringPolicyAnswer[]>;
    /**
     * (Updatable) The OCID of the compartment containing the steering policy.
     */
    public readonly compartmentId!: pulumi.Output<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    public readonly definedTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * (Updatable) A user-friendly name for the steering policy. Does not have to be unique and can be changed. Avoid entering confidential information.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    public readonly freeformTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * (Updatable) The OCID of the health check monitor providing health data about the answers of the steering policy. A steering policy answer with `rdata` matching a monitored endpoint will use the health data of that endpoint. A steering policy answer with `rdata` not matching any monitored endpoint will be assumed healthy.
     */
    public readonly healthCheckMonitorId!: pulumi.Output<string>;
    /**
     * The series of rules that will be processed in sequence to reduce the pool of answers to a response for any given request.
     */
    public readonly rules!: pulumi.Output<outputs.dns.SteeringPolicyRule[]>;
    /**
     * The canonical absolute URL of the resource.
     */
    public /*out*/ readonly self!: pulumi.Output<string>;
    /**
     * The current state of the resource.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * (Updatable) A set of predefined rules based on the desired purpose of the steering policy. Each template utilizes Traffic Management's rules in a different order to produce the desired results when answering DNS queries.
     */
    public readonly template!: pulumi.Output<string>;
    /**
     * The date and time the resource was created, expressed in RFC 3339 timestamp format.
     */
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    /**
     * (Updatable) The Time To Live (TTL) for responses from the steering policy, in seconds. If not specified during creation, a value of 30 seconds will be used.
     */
    public readonly ttl!: pulumi.Output<number>;

    /**
     * Create a SteeringPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SteeringPolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SteeringPolicyArgs | SteeringPolicyState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SteeringPolicyState | undefined;
            inputs["answers"] = state ? state.answers : undefined;
            inputs["compartmentId"] = state ? state.compartmentId : undefined;
            inputs["definedTags"] = state ? state.definedTags : undefined;
            inputs["displayName"] = state ? state.displayName : undefined;
            inputs["freeformTags"] = state ? state.freeformTags : undefined;
            inputs["healthCheckMonitorId"] = state ? state.healthCheckMonitorId : undefined;
            inputs["rules"] = state ? state.rules : undefined;
            inputs["self"] = state ? state.self : undefined;
            inputs["state"] = state ? state.state : undefined;
            inputs["template"] = state ? state.template : undefined;
            inputs["timeCreated"] = state ? state.timeCreated : undefined;
            inputs["ttl"] = state ? state.ttl : undefined;
        } else {
            const args = argsOrState as SteeringPolicyArgs | undefined;
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if ((!args || args.template === undefined) && !opts.urn) {
                throw new Error("Missing required property 'template'");
            }
            inputs["answers"] = args ? args.answers : undefined;
            inputs["compartmentId"] = args ? args.compartmentId : undefined;
            inputs["definedTags"] = args ? args.definedTags : undefined;
            inputs["displayName"] = args ? args.displayName : undefined;
            inputs["freeformTags"] = args ? args.freeformTags : undefined;
            inputs["healthCheckMonitorId"] = args ? args.healthCheckMonitorId : undefined;
            inputs["rules"] = args ? args.rules : undefined;
            inputs["template"] = args ? args.template : undefined;
            inputs["ttl"] = args ? args.ttl : undefined;
            inputs["self"] = undefined /*out*/;
            inputs["state"] = undefined /*out*/;
            inputs["timeCreated"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(SteeringPolicy.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SteeringPolicy resources.
 */
export interface SteeringPolicyState {
    /**
     * The set of all answers that can potentially issue from the steering policy.
     */
    answers?: pulumi.Input<pulumi.Input<inputs.dns.SteeringPolicyAnswer>[]>;
    /**
     * (Updatable) The OCID of the compartment containing the steering policy.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    definedTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) A user-friendly name for the steering policy. Does not have to be unique and can be changed. Avoid entering confidential information.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    freeformTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) The OCID of the health check monitor providing health data about the answers of the steering policy. A steering policy answer with `rdata` matching a monitored endpoint will use the health data of that endpoint. A steering policy answer with `rdata` not matching any monitored endpoint will be assumed healthy.
     */
    healthCheckMonitorId?: pulumi.Input<string>;
    /**
     * The series of rules that will be processed in sequence to reduce the pool of answers to a response for any given request.
     */
    rules?: pulumi.Input<pulumi.Input<inputs.dns.SteeringPolicyRule>[]>;
    /**
     * The canonical absolute URL of the resource.
     */
    self?: pulumi.Input<string>;
    /**
     * The current state of the resource.
     */
    state?: pulumi.Input<string>;
    /**
     * (Updatable) A set of predefined rules based on the desired purpose of the steering policy. Each template utilizes Traffic Management's rules in a different order to produce the desired results when answering DNS queries.
     */
    template?: pulumi.Input<string>;
    /**
     * The date and time the resource was created, expressed in RFC 3339 timestamp format.
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * (Updatable) The Time To Live (TTL) for responses from the steering policy, in seconds. If not specified during creation, a value of 30 seconds will be used.
     */
    ttl?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a SteeringPolicy resource.
 */
export interface SteeringPolicyArgs {
    /**
     * The set of all answers that can potentially issue from the steering policy.
     */
    answers?: pulumi.Input<pulumi.Input<inputs.dns.SteeringPolicyAnswer>[]>;
    /**
     * (Updatable) The OCID of the compartment containing the steering policy.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    definedTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) A user-friendly name for the steering policy. Does not have to be unique and can be changed. Avoid entering confidential information.
     */
    displayName: pulumi.Input<string>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    freeformTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) The OCID of the health check monitor providing health data about the answers of the steering policy. A steering policy answer with `rdata` matching a monitored endpoint will use the health data of that endpoint. A steering policy answer with `rdata` not matching any monitored endpoint will be assumed healthy.
     */
    healthCheckMonitorId?: pulumi.Input<string>;
    /**
     * The series of rules that will be processed in sequence to reduce the pool of answers to a response for any given request.
     */
    rules?: pulumi.Input<pulumi.Input<inputs.dns.SteeringPolicyRule>[]>;
    /**
     * (Updatable) A set of predefined rules based on the desired purpose of the steering policy. Each template utilizes Traffic Management's rules in a different order to produce the desired results when answering DNS queries.
     */
    template: pulumi.Input<string>;
    /**
     * (Updatable) The Time To Live (TTL) for responses from the steering policy, in seconds. If not specified during creation, a value of 30 seconds will be used.
     */
    ttl?: pulumi.Input<number>;
}
