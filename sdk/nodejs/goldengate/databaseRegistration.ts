// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * This resource provides the Database Registration resource in Oracle Cloud Infrastructure Golden Gate service.
 *
 * Creates a new DatabaseRegistration.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testDatabaseRegistration = new oci.goldengate.DatabaseRegistration("testDatabaseRegistration", {
 *     aliasName: _var.database_registration_alias_name,
 *     compartmentId: _var.compartment_id,
 *     displayName: _var.database_registration_display_name,
 *     fqdn: _var.database_registration_fqdn,
 *     password: _var.database_registration_password,
 *     username: _var.database_registration_username,
 *     connectionString: _var.database_registration_connection_string,
 *     databaseId: oci_database_database.test_database.id,
 *     definedTags: {
 *         "foo-namespace.bar-key": "value",
 *     },
 *     description: _var.database_registration_description,
 *     freeformTags: {
 *         "bar-key": "value",
 *     },
 *     ipAddress: _var.database_registration_ip_address,
 *     keyId: oci_kms_key.test_key.id,
 *     secretCompartmentId: oci_identity_compartment.test_compartment.id,
 *     subnetId: oci_core_subnet.test_subnet.id,
 *     vaultId: oci_kms_vault.test_vault.id,
 *     wallet: _var.database_registration_wallet,
 * });
 * ```
 *
 * ## Import
 *
 * DatabaseRegistrations can be imported using the `id`, e.g.
 *
 * ```sh
 *  $ pulumi import oci:goldengate/databaseRegistration:DatabaseRegistration test_database_registration "id"
 * ```
 */
export class DatabaseRegistration extends pulumi.CustomResource {
    /**
     * Get an existing DatabaseRegistration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DatabaseRegistrationState, opts?: pulumi.CustomResourceOptions): DatabaseRegistration {
        return new DatabaseRegistration(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:goldengate/databaseRegistration:DatabaseRegistration';

    /**
     * Returns true if the given object is an instance of DatabaseRegistration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DatabaseRegistration {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DatabaseRegistration.__pulumiType;
    }

    /**
     * (Updatable) Credential store alias.
     */
    public readonly aliasName!: pulumi.Output<string>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment being referenced.
     */
    public readonly compartmentId!: pulumi.Output<string>;
    /**
     * (Updatable) Connect descriptor or Easy Connect Naming method that Oracle GoldenGate uses to connect to a database.
     */
    public readonly connectionString!: pulumi.Output<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database being referenced.
     */
    public readonly databaseId!: pulumi.Output<string>;
    /**
     * (Updatable) Tags defined for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    public readonly definedTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * (Updatable) Metadata about this specific object.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * (Updatable) An object's Display Name.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * (Updatable) A three-label Fully Qualified Domain Name (FQDN) for a resource.
     */
    public readonly fqdn!: pulumi.Output<string>;
    /**
     * (Updatable) A simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    public readonly freeformTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * The private IP address in the customer's VCN of the customer's endpoint, typically a database.
     */
    public readonly ipAddress!: pulumi.Output<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the customer "Master" key being referenced. If provided, this will reference a key which the customer will be required to ensure the policies are established to permit the GoldenGate Service to utilize this key to manage secrets.
     */
    public readonly keyId!: pulumi.Output<string>;
    /**
     * Describes the object's current state in detail. For example, it can be used to provide actionable information for a resource in a Failed state.
     */
    public /*out*/ readonly lifecycleDetails!: pulumi.Output<string>;
    /**
     * (Updatable) The password Oracle GoldenGate uses to connect the associated RDBMS.  It must conform to the specific security requirements implemented by the database including length, case sensitivity, and so on.
     */
    public readonly password!: pulumi.Output<string>;
    /**
     * A Private Endpoint IP Address created in the customer's subnet.  A customer database can expect network traffic initiated by GGS from this IP address and send network traffic to this IP address, typically in response to requests from GGS (OGG).  The customer may utilize this IP address in Security Lists or Network Security Groups (NSG) as needed.
     */
    public /*out*/ readonly rcePrivateIp!: pulumi.Output<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment where the the GGS Secret will be created. If provided, this will reference a key which the customer will be required to ensure the policies are established to permit the GoldenGate Service to utilize this Compartment in which to create a Secret.
     */
    public readonly secretCompartmentId!: pulumi.Output<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the customer GGS Secret being referenced. If provided, this will reference a key which the customer will be required to ensure the policies are established to permit the GoldenGate Service to utilize this Secret
     */
    public /*out*/ readonly secretId!: pulumi.Output<string>;
    /**
     * Possible lifecycle states.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet being referenced.
     */
    public readonly subnetId!: pulumi.Output<string>;
    /**
     * The system tags associated with this resource, if any. The system tags are set by Oracle Cloud Infrastructure services. Each key is predefined and scoped to namespaces.  For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{orcl-cloud: {free-tier-retain: true}}`
     */
    public /*out*/ readonly systemTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * The time the resource was created. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     */
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    /**
     * The time the resource was last updated. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     */
    public /*out*/ readonly timeUpdated!: pulumi.Output<string>;
    /**
     * (Updatable) The username Oracle GoldenGate uses to connect the associated RDBMS.  This username must already exist and be available for use by the database.  It must conform to the security requirements implemented by the database including length, case sensitivity, and so on.
     */
    public readonly username!: pulumi.Output<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the customer vault being referenced. If provided, this will reference a vault which the customer will be required to ensure the policies are established to permit the GoldenGate Service to manage secrets contained within this vault.
     */
    public readonly vaultId!: pulumi.Output<string>;
    /**
     * (Updatable) The wallet contents Oracle GoldenGate uses to make connections to a database.  This attribute is expected to be base64 encoded.
     */
    public readonly wallet!: pulumi.Output<string>;

    /**
     * Create a DatabaseRegistration resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DatabaseRegistrationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DatabaseRegistrationArgs | DatabaseRegistrationState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DatabaseRegistrationState | undefined;
            inputs["aliasName"] = state ? state.aliasName : undefined;
            inputs["compartmentId"] = state ? state.compartmentId : undefined;
            inputs["connectionString"] = state ? state.connectionString : undefined;
            inputs["databaseId"] = state ? state.databaseId : undefined;
            inputs["definedTags"] = state ? state.definedTags : undefined;
            inputs["description"] = state ? state.description : undefined;
            inputs["displayName"] = state ? state.displayName : undefined;
            inputs["fqdn"] = state ? state.fqdn : undefined;
            inputs["freeformTags"] = state ? state.freeformTags : undefined;
            inputs["ipAddress"] = state ? state.ipAddress : undefined;
            inputs["keyId"] = state ? state.keyId : undefined;
            inputs["lifecycleDetails"] = state ? state.lifecycleDetails : undefined;
            inputs["password"] = state ? state.password : undefined;
            inputs["rcePrivateIp"] = state ? state.rcePrivateIp : undefined;
            inputs["secretCompartmentId"] = state ? state.secretCompartmentId : undefined;
            inputs["secretId"] = state ? state.secretId : undefined;
            inputs["state"] = state ? state.state : undefined;
            inputs["subnetId"] = state ? state.subnetId : undefined;
            inputs["systemTags"] = state ? state.systemTags : undefined;
            inputs["timeCreated"] = state ? state.timeCreated : undefined;
            inputs["timeUpdated"] = state ? state.timeUpdated : undefined;
            inputs["username"] = state ? state.username : undefined;
            inputs["vaultId"] = state ? state.vaultId : undefined;
            inputs["wallet"] = state ? state.wallet : undefined;
        } else {
            const args = argsOrState as DatabaseRegistrationArgs | undefined;
            if ((!args || args.aliasName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'aliasName'");
            }
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if ((!args || args.fqdn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'fqdn'");
            }
            if ((!args || args.password === undefined) && !opts.urn) {
                throw new Error("Missing required property 'password'");
            }
            if ((!args || args.username === undefined) && !opts.urn) {
                throw new Error("Missing required property 'username'");
            }
            inputs["aliasName"] = args ? args.aliasName : undefined;
            inputs["compartmentId"] = args ? args.compartmentId : undefined;
            inputs["connectionString"] = args ? args.connectionString : undefined;
            inputs["databaseId"] = args ? args.databaseId : undefined;
            inputs["definedTags"] = args ? args.definedTags : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["displayName"] = args ? args.displayName : undefined;
            inputs["fqdn"] = args ? args.fqdn : undefined;
            inputs["freeformTags"] = args ? args.freeformTags : undefined;
            inputs["ipAddress"] = args ? args.ipAddress : undefined;
            inputs["keyId"] = args ? args.keyId : undefined;
            inputs["password"] = args ? args.password : undefined;
            inputs["secretCompartmentId"] = args ? args.secretCompartmentId : undefined;
            inputs["subnetId"] = args ? args.subnetId : undefined;
            inputs["username"] = args ? args.username : undefined;
            inputs["vaultId"] = args ? args.vaultId : undefined;
            inputs["wallet"] = args ? args.wallet : undefined;
            inputs["lifecycleDetails"] = undefined /*out*/;
            inputs["rcePrivateIp"] = undefined /*out*/;
            inputs["secretId"] = undefined /*out*/;
            inputs["state"] = undefined /*out*/;
            inputs["systemTags"] = undefined /*out*/;
            inputs["timeCreated"] = undefined /*out*/;
            inputs["timeUpdated"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(DatabaseRegistration.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DatabaseRegistration resources.
 */
export interface DatabaseRegistrationState {
    /**
     * (Updatable) Credential store alias.
     */
    aliasName?: pulumi.Input<string>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment being referenced.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * (Updatable) Connect descriptor or Easy Connect Naming method that Oracle GoldenGate uses to connect to a database.
     */
    connectionString?: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database being referenced.
     */
    databaseId?: pulumi.Input<string>;
    /**
     * (Updatable) Tags defined for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) Metadata about this specific object.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) An object's Display Name.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) A three-label Fully Qualified Domain Name (FQDN) for a resource.
     */
    fqdn?: pulumi.Input<string>;
    /**
     * (Updatable) A simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * The private IP address in the customer's VCN of the customer's endpoint, typically a database.
     */
    ipAddress?: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the customer "Master" key being referenced. If provided, this will reference a key which the customer will be required to ensure the policies are established to permit the GoldenGate Service to utilize this key to manage secrets.
     */
    keyId?: pulumi.Input<string>;
    /**
     * Describes the object's current state in detail. For example, it can be used to provide actionable information for a resource in a Failed state.
     */
    lifecycleDetails?: pulumi.Input<string>;
    /**
     * (Updatable) The password Oracle GoldenGate uses to connect the associated RDBMS.  It must conform to the specific security requirements implemented by the database including length, case sensitivity, and so on.
     */
    password?: pulumi.Input<string>;
    /**
     * A Private Endpoint IP Address created in the customer's subnet.  A customer database can expect network traffic initiated by GGS from this IP address and send network traffic to this IP address, typically in response to requests from GGS (OGG).  The customer may utilize this IP address in Security Lists or Network Security Groups (NSG) as needed.
     */
    rcePrivateIp?: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment where the the GGS Secret will be created. If provided, this will reference a key which the customer will be required to ensure the policies are established to permit the GoldenGate Service to utilize this Compartment in which to create a Secret.
     */
    secretCompartmentId?: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the customer GGS Secret being referenced. If provided, this will reference a key which the customer will be required to ensure the policies are established to permit the GoldenGate Service to utilize this Secret
     */
    secretId?: pulumi.Input<string>;
    /**
     * Possible lifecycle states.
     */
    state?: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet being referenced.
     */
    subnetId?: pulumi.Input<string>;
    /**
     * The system tags associated with this resource, if any. The system tags are set by Oracle Cloud Infrastructure services. Each key is predefined and scoped to namespaces.  For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{orcl-cloud: {free-tier-retain: true}}`
     */
    systemTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * The time the resource was created. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * The time the resource was last updated. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     */
    timeUpdated?: pulumi.Input<string>;
    /**
     * (Updatable) The username Oracle GoldenGate uses to connect the associated RDBMS.  This username must already exist and be available for use by the database.  It must conform to the security requirements implemented by the database including length, case sensitivity, and so on.
     */
    username?: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the customer vault being referenced. If provided, this will reference a vault which the customer will be required to ensure the policies are established to permit the GoldenGate Service to manage secrets contained within this vault.
     */
    vaultId?: pulumi.Input<string>;
    /**
     * (Updatable) The wallet contents Oracle GoldenGate uses to make connections to a database.  This attribute is expected to be base64 encoded.
     */
    wallet?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DatabaseRegistration resource.
 */
export interface DatabaseRegistrationArgs {
    /**
     * (Updatable) Credential store alias.
     */
    aliasName: pulumi.Input<string>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment being referenced.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * (Updatable) Connect descriptor or Easy Connect Naming method that Oracle GoldenGate uses to connect to a database.
     */
    connectionString?: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database being referenced.
     */
    databaseId?: pulumi.Input<string>;
    /**
     * (Updatable) Tags defined for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) Metadata about this specific object.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) An object's Display Name.
     */
    displayName: pulumi.Input<string>;
    /**
     * (Updatable) A three-label Fully Qualified Domain Name (FQDN) for a resource.
     */
    fqdn: pulumi.Input<string>;
    /**
     * (Updatable) A simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * The private IP address in the customer's VCN of the customer's endpoint, typically a database.
     */
    ipAddress?: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the customer "Master" key being referenced. If provided, this will reference a key which the customer will be required to ensure the policies are established to permit the GoldenGate Service to utilize this key to manage secrets.
     */
    keyId?: pulumi.Input<string>;
    /**
     * (Updatable) The password Oracle GoldenGate uses to connect the associated RDBMS.  It must conform to the specific security requirements implemented by the database including length, case sensitivity, and so on.
     */
    password: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment where the the GGS Secret will be created. If provided, this will reference a key which the customer will be required to ensure the policies are established to permit the GoldenGate Service to utilize this Compartment in which to create a Secret.
     */
    secretCompartmentId?: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet being referenced.
     */
    subnetId?: pulumi.Input<string>;
    /**
     * (Updatable) The username Oracle GoldenGate uses to connect the associated RDBMS.  This username must already exist and be available for use by the database.  It must conform to the security requirements implemented by the database including length, case sensitivity, and so on.
     */
    username: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the customer vault being referenced. If provided, this will reference a vault which the customer will be required to ensure the policies are established to permit the GoldenGate Service to manage secrets contained within this vault.
     */
    vaultId?: pulumi.Input<string>;
    /**
     * (Updatable) The wallet contents Oracle GoldenGate uses to make connections to a database.  This attribute is expected to be base64 encoded.
     */
    wallet?: pulumi.Input<string>;
}
