// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * This resource provides the Key Version resource in Oracle Cloud Infrastructure Kms service.
 *
 * Generates a new [KeyVersion](https://docs.cloud.oracle.com/iaas/api/#/en/key/latest/KeyVersion/) resource that provides new cryptographic
 * material for a master encryption key. The key must be in an `ENABLED` state to be rotated.
 *
 * As a management operation, this call is subject to a Key Management limit that applies to the total number
 * of requests across all  management write operations. Key Management might throttle this call to reject an
 * otherwise valid request when the total rate of management write operations exceeds 10 requests per second
 * for a given tenancy.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testKeyVersion = new oci.kms.KeyVersion("testKeyVersion", {
 *     keyId: oci_kms_key.test_key.id,
 *     managementEndpoint: _var.key_version_management_endpoint,
 * });
 * ```
 *
 * ## Import
 *
 * KeyVersions can be imported using the `id`, e.g.
 *
 * ```sh
 *  $ pulumi import oci:kms/keyVersion:KeyVersion test_key_version "managementEndpoint/{managementEndpoint}/keys/{keyId}/keyVersions/{keyVersionId}"
 * ```
 */
export class KeyVersion extends pulumi.CustomResource {
    /**
     * Get an existing KeyVersion resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: KeyVersionState, opts?: pulumi.CustomResourceOptions): KeyVersion {
        return new KeyVersion(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:kms/keyVersion:KeyVersion';

    /**
     * Returns true if the given object is an instance of KeyVersion.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is KeyVersion {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === KeyVersion.__pulumiType;
    }

    /**
     * The OCID of the compartment that contains this key version.
     */
    public /*out*/ readonly compartmentId!: pulumi.Output<string>;
    /**
     * A boolean that will be true when key version is primary, and will be false when key version is a replica from a primary key version.
     */
    public /*out*/ readonly isPrimary!: pulumi.Output<boolean>;
    /**
     * The OCID of the key.
     */
    public readonly keyId!: pulumi.Output<string>;
    public /*out*/ readonly keyVersionId!: pulumi.Output<string>;
    /**
     * The service endpoint to perform management operations against. Management operations include 'Create,' 'Update,' 'List,' 'Get,' and 'Delete' operations. See Vault Management endpoint.
     */
    public readonly managementEndpoint!: pulumi.Output<string>;
    /**
     * The public key in PEM format. (This value pertains only to RSA and ECDSA keys.)
     */
    public /*out*/ readonly publicKey!: pulumi.Output<string>;
    /**
     * KeyVersion replica details
     */
    public /*out*/ readonly replicaDetails!: pulumi.Output<outputs.kms.KeyVersionReplicaDetails>;
    public /*out*/ readonly restoredFromKeyId!: pulumi.Output<string>;
    /**
     * The OCID of the key version from which this key version was restored.
     */
    public /*out*/ readonly restoredFromKeyVersionId!: pulumi.Output<string>;
    /**
     * The key version's current lifecycle state.  Example: `ENABLED`
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * The date and time this key version was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: "2018-04-03T21:10:29.600Z"
     */
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    /**
     * (Updatable) An optional property for the deletion time of the key version, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
     */
    public readonly timeOfDeletion!: pulumi.Output<string>;
    /**
     * The OCID of the vault that contains this key version.
     */
    public /*out*/ readonly vaultId!: pulumi.Output<string>;

    /**
     * Create a KeyVersion resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: KeyVersionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: KeyVersionArgs | KeyVersionState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as KeyVersionState | undefined;
            inputs["compartmentId"] = state ? state.compartmentId : undefined;
            inputs["isPrimary"] = state ? state.isPrimary : undefined;
            inputs["keyId"] = state ? state.keyId : undefined;
            inputs["keyVersionId"] = state ? state.keyVersionId : undefined;
            inputs["managementEndpoint"] = state ? state.managementEndpoint : undefined;
            inputs["publicKey"] = state ? state.publicKey : undefined;
            inputs["replicaDetails"] = state ? state.replicaDetails : undefined;
            inputs["restoredFromKeyId"] = state ? state.restoredFromKeyId : undefined;
            inputs["restoredFromKeyVersionId"] = state ? state.restoredFromKeyVersionId : undefined;
            inputs["state"] = state ? state.state : undefined;
            inputs["timeCreated"] = state ? state.timeCreated : undefined;
            inputs["timeOfDeletion"] = state ? state.timeOfDeletion : undefined;
            inputs["vaultId"] = state ? state.vaultId : undefined;
        } else {
            const args = argsOrState as KeyVersionArgs | undefined;
            if ((!args || args.keyId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'keyId'");
            }
            if ((!args || args.managementEndpoint === undefined) && !opts.urn) {
                throw new Error("Missing required property 'managementEndpoint'");
            }
            inputs["keyId"] = args ? args.keyId : undefined;
            inputs["managementEndpoint"] = args ? args.managementEndpoint : undefined;
            inputs["timeOfDeletion"] = args ? args.timeOfDeletion : undefined;
            inputs["compartmentId"] = undefined /*out*/;
            inputs["isPrimary"] = undefined /*out*/;
            inputs["keyVersionId"] = undefined /*out*/;
            inputs["publicKey"] = undefined /*out*/;
            inputs["replicaDetails"] = undefined /*out*/;
            inputs["restoredFromKeyId"] = undefined /*out*/;
            inputs["restoredFromKeyVersionId"] = undefined /*out*/;
            inputs["state"] = undefined /*out*/;
            inputs["timeCreated"] = undefined /*out*/;
            inputs["vaultId"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(KeyVersion.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering KeyVersion resources.
 */
export interface KeyVersionState {
    /**
     * The OCID of the compartment that contains this key version.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * A boolean that will be true when key version is primary, and will be false when key version is a replica from a primary key version.
     */
    isPrimary?: pulumi.Input<boolean>;
    /**
     * The OCID of the key.
     */
    keyId?: pulumi.Input<string>;
    keyVersionId?: pulumi.Input<string>;
    /**
     * The service endpoint to perform management operations against. Management operations include 'Create,' 'Update,' 'List,' 'Get,' and 'Delete' operations. See Vault Management endpoint.
     */
    managementEndpoint?: pulumi.Input<string>;
    /**
     * The public key in PEM format. (This value pertains only to RSA and ECDSA keys.)
     */
    publicKey?: pulumi.Input<string>;
    /**
     * KeyVersion replica details
     */
    replicaDetails?: pulumi.Input<inputs.kms.KeyVersionReplicaDetails>;
    restoredFromKeyId?: pulumi.Input<string>;
    /**
     * The OCID of the key version from which this key version was restored.
     */
    restoredFromKeyVersionId?: pulumi.Input<string>;
    /**
     * The key version's current lifecycle state.  Example: `ENABLED`
     */
    state?: pulumi.Input<string>;
    /**
     * The date and time this key version was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: "2018-04-03T21:10:29.600Z"
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * (Updatable) An optional property for the deletion time of the key version, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
     */
    timeOfDeletion?: pulumi.Input<string>;
    /**
     * The OCID of the vault that contains this key version.
     */
    vaultId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a KeyVersion resource.
 */
export interface KeyVersionArgs {
    /**
     * The OCID of the key.
     */
    keyId: pulumi.Input<string>;
    /**
     * The service endpoint to perform management operations against. Management operations include 'Create,' 'Update,' 'List,' 'Get,' and 'Delete' operations. See Vault Management endpoint.
     */
    managementEndpoint: pulumi.Input<string>;
    /**
     * (Updatable) An optional property for the deletion time of the key version, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
     */
    timeOfDeletion?: pulumi.Input<string>;
}
