// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * This resource provides the Log Analytics Object Collection Rule resource in Oracle Cloud Infrastructure Log Analytics service.
 *
 * Create a configuration to collect logs from object storage bucket.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testLogAnalyticsObjectCollectionRule = new oci.loganalytics.LogAnalyticsObjectCollectionRule("testLogAnalyticsObjectCollectionRule", {
 *     compartmentId: _var.compartment_id,
 *     logGroupId: oci_logging_log_group.test_log_group.id,
 *     logSourceName: _var.log_analytics_object_collection_rule_log_source_name,
 *     namespace: _var.log_analytics_object_collection_rule_namespace,
 *     osBucketName: oci_objectstorage_bucket.test_bucket.name,
 *     osNamespace: _var.log_analytics_object_collection_rule_os_namespace,
 *     charEncoding: _var.log_analytics_object_collection_rule_char_encoding,
 *     collectionType: _var.log_analytics_object_collection_rule_collection_type,
 *     definedTags: {
 *         "foo-namespace.bar-key": "value",
 *     },
 *     description: _var.log_analytics_object_collection_rule_description,
 *     entityId: oci_log_analytics_entity.test_entity.id,
 *     freeformTags: {
 *         "bar-key": "value",
 *     },
 *     overrides: _var.log_analytics_object_collection_rule_overrides,
 *     pollSince: _var.log_analytics_object_collection_rule_poll_since,
 *     pollTill: _var.log_analytics_object_collection_rule_poll_till,
 * });
 * ```
 *
 * ## Import
 *
 * LogAnalyticsObjectCollectionRules can be imported using the `id`, e.g.
 *
 * ```sh
 *  $ pulumi import oci:loganalytics/logAnalyticsObjectCollectionRule:LogAnalyticsObjectCollectionRule test_log_analytics_object_collection_rule "namespaces/{namespaceName}/logAnalyticsObjectCollectionRules/{logAnalyticsObjectCollectionRuleId}"
 * ```
 */
export class LogAnalyticsObjectCollectionRule extends pulumi.CustomResource {
    /**
     * Get an existing LogAnalyticsObjectCollectionRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LogAnalyticsObjectCollectionRuleState, opts?: pulumi.CustomResourceOptions): LogAnalyticsObjectCollectionRule {
        return new LogAnalyticsObjectCollectionRule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:loganalytics/logAnalyticsObjectCollectionRule:LogAnalyticsObjectCollectionRule';

    /**
     * Returns true if the given object is an instance of LogAnalyticsObjectCollectionRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LogAnalyticsObjectCollectionRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LogAnalyticsObjectCollectionRule.__pulumiType;
    }

    /**
     * (Updatable) An optional character encoding to aid in detecting the character encoding of the contents of the objects while processing. It is recommended to set this value as ISO_8589_1 when configuring content of the objects having more numeric characters, and very few alphabets. For e.g. this applies when configuring VCN Flow Logs.
     */
    public readonly charEncoding!: pulumi.Output<string>;
    /**
     * The type of collection. Supported collection types: LIVE, HISTORIC, HISTORIC_LIVE
     */
    public readonly collectionType!: pulumi.Output<string>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to which this rule belongs.
     */
    public readonly compartmentId!: pulumi.Output<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    public readonly definedTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * (Updatable) A string that describes the details of the rule. It does not have to be unique, and can be changed. Avoid entering confidential information.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * (Updatable) Logging Analytics entity OCID. Associates the processed logs with the given entity (optional).
     */
    public readonly entityId!: pulumi.Output<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    public readonly freeformTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * A detailed status of the life cycle state.
     */
    public /*out*/ readonly lifecycleDetails!: pulumi.Output<string>;
    /**
     * (Updatable) Logging Analytics Log group OCID to associate the processed logs with.
     */
    public readonly logGroupId!: pulumi.Output<string>;
    /**
     * (Updatable) Name of the Logging Analytics Source to use for the processing.
     */
    public readonly logSourceName!: pulumi.Output<string>;
    /**
     * A unique name given to the rule. The name must be unique within the tenancy, and cannot be modified.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The Logging Analytics namespace used for the request.
     */
    public readonly namespace!: pulumi.Output<string>;
    /**
     * Name of the Object Storage bucket.
     */
    public readonly osBucketName!: pulumi.Output<string>;
    /**
     * Object Storage namespace.
     */
    public readonly osNamespace!: pulumi.Output<string>;
    /**
     * (Updatable) The override is used to modify some important configuration properties for objects matching a specific pattern inside the bucket. Supported propeties for override are - logSourceName, charEncoding. Supported matchType for override are "contains".
     */
    public readonly overrides!: pulumi.Output<outputs.loganalytics.LogAnalyticsObjectCollectionRuleOverride[]>;
    /**
     * The oldest time of the file in the bucket to consider for collection. Accepted values are: BEGINNING or CURRENT_TIME or RFC3339 formatted datetime string. When collectionType is LIVE, specifying pollSince value other than CURRENT_TIME will result in error.
     */
    public readonly pollSince!: pulumi.Output<string>;
    /**
     * The oldest time of the file in the bucket to consider for collection. Accepted values are: CURRENT_TIME or RFC3339 formatted datetime string. When collectionType is LIVE, specifying pollTill will result in error.
     */
    public readonly pollTill!: pulumi.Output<string>;
    /**
     * The current state of the rule.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * The time when this rule was created. An RFC3339 formatted datetime string.
     */
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    /**
     * The time when this rule was last updated. An RFC3339 formatted datetime string.
     */
    public /*out*/ readonly timeUpdated!: pulumi.Output<string>;

    /**
     * Create a LogAnalyticsObjectCollectionRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LogAnalyticsObjectCollectionRuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LogAnalyticsObjectCollectionRuleArgs | LogAnalyticsObjectCollectionRuleState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LogAnalyticsObjectCollectionRuleState | undefined;
            inputs["charEncoding"] = state ? state.charEncoding : undefined;
            inputs["collectionType"] = state ? state.collectionType : undefined;
            inputs["compartmentId"] = state ? state.compartmentId : undefined;
            inputs["definedTags"] = state ? state.definedTags : undefined;
            inputs["description"] = state ? state.description : undefined;
            inputs["entityId"] = state ? state.entityId : undefined;
            inputs["freeformTags"] = state ? state.freeformTags : undefined;
            inputs["lifecycleDetails"] = state ? state.lifecycleDetails : undefined;
            inputs["logGroupId"] = state ? state.logGroupId : undefined;
            inputs["logSourceName"] = state ? state.logSourceName : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["namespace"] = state ? state.namespace : undefined;
            inputs["osBucketName"] = state ? state.osBucketName : undefined;
            inputs["osNamespace"] = state ? state.osNamespace : undefined;
            inputs["overrides"] = state ? state.overrides : undefined;
            inputs["pollSince"] = state ? state.pollSince : undefined;
            inputs["pollTill"] = state ? state.pollTill : undefined;
            inputs["state"] = state ? state.state : undefined;
            inputs["timeCreated"] = state ? state.timeCreated : undefined;
            inputs["timeUpdated"] = state ? state.timeUpdated : undefined;
        } else {
            const args = argsOrState as LogAnalyticsObjectCollectionRuleArgs | undefined;
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.logGroupId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'logGroupId'");
            }
            if ((!args || args.logSourceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'logSourceName'");
            }
            if ((!args || args.namespace === undefined) && !opts.urn) {
                throw new Error("Missing required property 'namespace'");
            }
            if ((!args || args.osBucketName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'osBucketName'");
            }
            if ((!args || args.osNamespace === undefined) && !opts.urn) {
                throw new Error("Missing required property 'osNamespace'");
            }
            inputs["charEncoding"] = args ? args.charEncoding : undefined;
            inputs["collectionType"] = args ? args.collectionType : undefined;
            inputs["compartmentId"] = args ? args.compartmentId : undefined;
            inputs["definedTags"] = args ? args.definedTags : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["entityId"] = args ? args.entityId : undefined;
            inputs["freeformTags"] = args ? args.freeformTags : undefined;
            inputs["logGroupId"] = args ? args.logGroupId : undefined;
            inputs["logSourceName"] = args ? args.logSourceName : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["namespace"] = args ? args.namespace : undefined;
            inputs["osBucketName"] = args ? args.osBucketName : undefined;
            inputs["osNamespace"] = args ? args.osNamespace : undefined;
            inputs["overrides"] = args ? args.overrides : undefined;
            inputs["pollSince"] = args ? args.pollSince : undefined;
            inputs["pollTill"] = args ? args.pollTill : undefined;
            inputs["lifecycleDetails"] = undefined /*out*/;
            inputs["state"] = undefined /*out*/;
            inputs["timeCreated"] = undefined /*out*/;
            inputs["timeUpdated"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(LogAnalyticsObjectCollectionRule.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering LogAnalyticsObjectCollectionRule resources.
 */
export interface LogAnalyticsObjectCollectionRuleState {
    /**
     * (Updatable) An optional character encoding to aid in detecting the character encoding of the contents of the objects while processing. It is recommended to set this value as ISO_8589_1 when configuring content of the objects having more numeric characters, and very few alphabets. For e.g. this applies when configuring VCN Flow Logs.
     */
    charEncoding?: pulumi.Input<string>;
    /**
     * The type of collection. Supported collection types: LIVE, HISTORIC, HISTORIC_LIVE
     */
    collectionType?: pulumi.Input<string>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to which this rule belongs.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) A string that describes the details of the rule. It does not have to be unique, and can be changed. Avoid entering confidential information.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) Logging Analytics entity OCID. Associates the processed logs with the given entity (optional).
     */
    entityId?: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * A detailed status of the life cycle state.
     */
    lifecycleDetails?: pulumi.Input<string>;
    /**
     * (Updatable) Logging Analytics Log group OCID to associate the processed logs with.
     */
    logGroupId?: pulumi.Input<string>;
    /**
     * (Updatable) Name of the Logging Analytics Source to use for the processing.
     */
    logSourceName?: pulumi.Input<string>;
    /**
     * A unique name given to the rule. The name must be unique within the tenancy, and cannot be modified.
     */
    name?: pulumi.Input<string>;
    /**
     * The Logging Analytics namespace used for the request.
     */
    namespace?: pulumi.Input<string>;
    /**
     * Name of the Object Storage bucket.
     */
    osBucketName?: pulumi.Input<string>;
    /**
     * Object Storage namespace.
     */
    osNamespace?: pulumi.Input<string>;
    /**
     * (Updatable) The override is used to modify some important configuration properties for objects matching a specific pattern inside the bucket. Supported propeties for override are - logSourceName, charEncoding. Supported matchType for override are "contains".
     */
    overrides?: pulumi.Input<pulumi.Input<inputs.loganalytics.LogAnalyticsObjectCollectionRuleOverride>[]>;
    /**
     * The oldest time of the file in the bucket to consider for collection. Accepted values are: BEGINNING or CURRENT_TIME or RFC3339 formatted datetime string. When collectionType is LIVE, specifying pollSince value other than CURRENT_TIME will result in error.
     */
    pollSince?: pulumi.Input<string>;
    /**
     * The oldest time of the file in the bucket to consider for collection. Accepted values are: CURRENT_TIME or RFC3339 formatted datetime string. When collectionType is LIVE, specifying pollTill will result in error.
     */
    pollTill?: pulumi.Input<string>;
    /**
     * The current state of the rule.
     */
    state?: pulumi.Input<string>;
    /**
     * The time when this rule was created. An RFC3339 formatted datetime string.
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * The time when this rule was last updated. An RFC3339 formatted datetime string.
     */
    timeUpdated?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a LogAnalyticsObjectCollectionRule resource.
 */
export interface LogAnalyticsObjectCollectionRuleArgs {
    /**
     * (Updatable) An optional character encoding to aid in detecting the character encoding of the contents of the objects while processing. It is recommended to set this value as ISO_8589_1 when configuring content of the objects having more numeric characters, and very few alphabets. For e.g. this applies when configuring VCN Flow Logs.
     */
    charEncoding?: pulumi.Input<string>;
    /**
     * The type of collection. Supported collection types: LIVE, HISTORIC, HISTORIC_LIVE
     */
    collectionType?: pulumi.Input<string>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to which this rule belongs.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) A string that describes the details of the rule. It does not have to be unique, and can be changed. Avoid entering confidential information.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) Logging Analytics entity OCID. Associates the processed logs with the given entity (optional).
     */
    entityId?: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) Logging Analytics Log group OCID to associate the processed logs with.
     */
    logGroupId: pulumi.Input<string>;
    /**
     * (Updatable) Name of the Logging Analytics Source to use for the processing.
     */
    logSourceName: pulumi.Input<string>;
    /**
     * A unique name given to the rule. The name must be unique within the tenancy, and cannot be modified.
     */
    name?: pulumi.Input<string>;
    /**
     * The Logging Analytics namespace used for the request.
     */
    namespace: pulumi.Input<string>;
    /**
     * Name of the Object Storage bucket.
     */
    osBucketName: pulumi.Input<string>;
    /**
     * Object Storage namespace.
     */
    osNamespace: pulumi.Input<string>;
    /**
     * (Updatable) The override is used to modify some important configuration properties for objects matching a specific pattern inside the bucket. Supported propeties for override are - logSourceName, charEncoding. Supported matchType for override are "contains".
     */
    overrides?: pulumi.Input<pulumi.Input<inputs.loganalytics.LogAnalyticsObjectCollectionRuleOverride>[]>;
    /**
     * The oldest time of the file in the bucket to consider for collection. Accepted values are: BEGINNING or CURRENT_TIME or RFC3339 formatted datetime string. When collectionType is LIVE, specifying pollSince value other than CURRENT_TIME will result in error.
     */
    pollSince?: pulumi.Input<string>;
    /**
     * The oldest time of the file in the bucket to consider for collection. Accepted values are: CURRENT_TIME or RFC3339 formatted datetime string. When collectionType is LIVE, specifying pollTill will result in error.
     */
    pollTill?: pulumi.Input<string>;
}
