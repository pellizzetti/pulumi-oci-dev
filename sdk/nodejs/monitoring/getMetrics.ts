// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Metrics in Oracle Cloud Infrastructure Monitoring service.
 *
 * Returns metric definitions that match the criteria specified in the request. Compartment OCID required.
 * For information about metrics, see [Metrics Overview](https://docs.cloud.oracle.com/iaas/Content/Monitoring/Concepts/monitoringoverview.htm#MetricsOverview).
 * For important limits information, see [Limits on Monitoring](https://docs.cloud.oracle.com/iaas/Content/Monitoring/Concepts/monitoringoverview.htm#Limits).
 *
 * Transactions Per Second (TPS) per-tenancy limit for this operation: 10.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testMetrics = oci.monitoring.getMetrics({
 *     compartmentId: _var.compartment_id,
 *     compartmentIdInSubtree: _var.metric_compartment_id_in_subtree,
 *     dimensionFilters: _var.metric_dimension_filters,
 *     groupBies: _var.metric_group_by,
 *     name: _var.metric_name,
 *     namespace: _var.metric_namespace,
 *     resourceGroup: _var.metric_resource_group,
 * });
 * ```
 */
export function getMetrics(args: GetMetricsArgs, opts?: pulumi.InvokeOptions): Promise<GetMetricsResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("oci:monitoring/getMetrics:getMetrics", {
        "compartmentId": args.compartmentId,
        "compartmentIdInSubtree": args.compartmentIdInSubtree,
        "dimensionFilters": args.dimensionFilters,
        "filters": args.filters,
        "groupBies": args.groupBies,
        "name": args.name,
        "namespace": args.namespace,
        "resourceGroup": args.resourceGroup,
    }, opts);
}

/**
 * A collection of arguments for invoking getMetrics.
 */
export interface GetMetricsArgs {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the resources monitored by the metric that you are searching for. Use tenancyId to search in the root compartment.  Example: `ocid1.compartment.oc1..exampleuniqueID`
     */
    compartmentId: string;
    /**
     * When true, returns resources from all compartments and subcompartments. The parameter can only be set to true when compartmentId is the tenancy OCID (the tenancy is the root compartment). A true value requires the user to have tenancy-level permissions. If this requirement is not met, then the call is rejected. When false, returns resources from only the compartment specified in compartmentId. Default is false.
     */
    compartmentIdInSubtree?: boolean;
    /**
     * Qualifiers that you want to use when searching for metric definitions. Available dimensions vary by metric namespace. Each dimension takes the form of a key-value pair.  Example: { "resourceId": "<var>&lt;instance_OCID&gt;</var>" }
     */
    dimensionFilters?: {[key: string]: any};
    filters?: inputs.monitoring.GetMetricsFilter[];
    /**
     * Group metrics by these fields in the response. For example, to list all metric namespaces available in a compartment, groupBy the "namespace" field. Supported fields: namespace, name, resourceGroup.
     */
    groupBies?: string[];
    /**
     * The metric name to use when searching for metric definitions.  Example: `CpuUtilization`
     */
    name?: string;
    /**
     * The source service or application to use when searching for metric definitions.  Example: `ociComputeagent`
     */
    namespace?: string;
    /**
     * Resource group that you want to use as a filter. The specified resource group must exist in the definition of the posted metric. Only one resource group can be applied per metric. A valid resourceGroup value starts with an alphabetical character and includes only alphanumeric characters, periods (.), underscores (_), hyphens (-), and dollar signs ($). Avoid entering confidential information.  Example: `frontend-fleet`
     */
    resourceGroup?: string;
}

/**
 * A collection of values returned by getMetrics.
 */
export interface GetMetricsResult {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the resources monitored by the metric.
     */
    readonly compartmentId: string;
    readonly compartmentIdInSubtree?: boolean;
    readonly dimensionFilters?: {[key: string]: any};
    readonly filters?: outputs.monitoring.GetMetricsFilter[];
    readonly groupBies?: string[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The list of metrics.
     */
    readonly metrics: outputs.monitoring.GetMetricsMetric[];
    /**
     * The name of the metric.  Example: `CpuUtilization`
     */
    readonly name?: string;
    /**
     * The source service or application emitting the metric.  Example: `ociComputeagent`
     */
    readonly namespace?: string;
    /**
     * Resource group provided with the posted metric. A resource group is a custom string that can be used as a filter. Only one resource group can be applied per metric. A valid resourceGroup value starts with an alphabetical character and includes only alphanumeric characters, periods (.), underscores (_), hyphens (-), and dollar signs ($). Avoid entering confidential information.  Example: `frontend-fleet`
     */
    readonly resourceGroup?: string;
}
