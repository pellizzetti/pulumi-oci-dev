// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Mysql Backups in Oracle Cloud Infrastructure MySQL Database service.
 *
 * Get a list of DB System backups.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testMysqlBackups = oci.mysql.getMysqlBackups({
 *     compartmentId: _var.compartment_id,
 *     backupId: oci_mysql_mysql_backup.test_backup.id,
 *     creationType: _var.mysql_backup_creation_type,
 *     dbSystemId: oci_mysql_mysql_db_system.test_db_system.id,
 *     displayName: _var.mysql_backup_display_name,
 *     state: _var.mysql_backup_state,
 * });
 * ```
 */
export function getMysqlBackups(args: GetMysqlBackupsArgs, opts?: pulumi.InvokeOptions): Promise<GetMysqlBackupsResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("oci:mysql/getMysqlBackups:getMysqlBackups", {
        "backupId": args.backupId,
        "compartmentId": args.compartmentId,
        "creationType": args.creationType,
        "dbSystemId": args.dbSystemId,
        "displayName": args.displayName,
        "filters": args.filters,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getMysqlBackups.
 */
export interface GetMysqlBackupsArgs {
    /**
     * Backup OCID
     */
    backupId?: string;
    /**
     * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    compartmentId: string;
    /**
     * Backup creationType
     */
    creationType?: string;
    /**
     * The DB System [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    dbSystemId?: string;
    /**
     * A filter to return only the resource matching the given display name exactly.
     */
    displayName?: string;
    filters?: inputs.mysql.GetMysqlBackupsFilter[];
    /**
     * Backup Lifecycle State
     */
    state?: string;
}

/**
 * A collection of values returned by getMysqlBackups.
 */
export interface GetMysqlBackupsResult {
    readonly backupId?: string;
    /**
     * The list of backups.
     */
    readonly backups: outputs.mysql.GetMysqlBackupsBackup[];
    /**
     * The OCID of the compartment the DB System belongs in.
     */
    readonly compartmentId: string;
    /**
     * If the backup was created automatically, or by a manual request.
     */
    readonly creationType?: string;
    /**
     * The OCID of the DB System the backup is associated with.
     */
    readonly dbSystemId?: string;
    /**
     * A user-supplied display name for the backup.
     */
    readonly displayName?: string;
    readonly filters?: outputs.mysql.GetMysqlBackupsFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The state of the backup.
     */
    readonly state?: string;
}
