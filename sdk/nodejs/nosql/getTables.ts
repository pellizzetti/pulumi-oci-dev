// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Tables in Oracle Cloud Infrastructure NoSQL Database service.
 *
 * Get a list of tables in a compartment.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testTables = oci.nosql.getTables({
 *     compartmentId: _var.compartment_id,
 *     name: _var.table_name,
 *     state: _var.table_state,
 * });
 * ```
 */
export function getTables(args: GetTablesArgs, opts?: pulumi.InvokeOptions): Promise<GetTablesResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("oci:nosql/getTables:getTables", {
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "name": args.name,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getTables.
 */
export interface GetTablesArgs {
    /**
     * The ID of a table's compartment.
     */
    compartmentId: string;
    filters?: inputs.nosql.GetTablesFilter[];
    /**
     * A shell-globbing-style (*?[]) filter for names.
     */
    name?: string;
    /**
     * Filter list by the lifecycle state of the item.
     */
    state?: string;
}

/**
 * A collection of values returned by getTables.
 */
export interface GetTablesResult {
    /**
     * Compartment Identifier.
     */
    readonly compartmentId: string;
    readonly filters?: outputs.nosql.GetTablesFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The column name.
     */
    readonly name?: string;
    /**
     * The state of a table.
     */
    readonly state?: string;
    /**
     * The list of table_collection.
     */
    readonly tableCollections: outputs.nosql.GetTablesTableCollection[];
}
