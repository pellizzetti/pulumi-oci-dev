// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Database Insight resource in Oracle Cloud Infrastructure Opsi service.
 *
 * Gets details of a database insight.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testDatabaseInsight = oci.opsi.getDatabaseInsight({
 *     databaseInsightId: oci_opsi_database_insight.test_database_insight.id,
 * });
 * ```
 */
export function getDatabaseInsight(args: GetDatabaseInsightArgs, opts?: pulumi.InvokeOptions): Promise<GetDatabaseInsightResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("oci:opsi/getDatabaseInsight:getDatabaseInsight", {
        "databaseInsightId": args.databaseInsightId,
    }, opts);
}

/**
 * A collection of arguments for invoking getDatabaseInsight.
 */
export interface GetDatabaseInsightArgs {
    /**
     * Unique database insight identifier
     */
    databaseInsightId: string;
}

/**
 * A collection of values returned by getDatabaseInsight.
 */
export interface GetDatabaseInsightResult {
    /**
     * Compartment identifier of the database
     */
    readonly compartmentId: string;
    readonly databaseDisplayName: string;
    readonly databaseId: string;
    readonly databaseInsightId: string;
    readonly databaseName: string;
    /**
     * Operations Insights internal representation of the database type.
     */
    readonly databaseType: string;
    /**
     * The version of the database.
     */
    readonly databaseVersion: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    readonly definedTags: {[key: string]: any};
    /**
     * OPSI Enterprise Manager Bridge OCID
     */
    readonly enterpriseManagerBridgeId: string;
    /**
     * Enterprise Manager Entity Display Name
     */
    readonly enterpriseManagerEntityDisplayName: string;
    /**
     * Enterprise Manager Entity Unique Identifier
     */
    readonly enterpriseManagerEntityIdentifier: string;
    /**
     * Enterprise Manager Entity Name
     */
    readonly enterpriseManagerEntityName: string;
    /**
     * Enterprise Manager Entity Type
     */
    readonly enterpriseManagerEntityType: string;
    /**
     * Enterprise Manager Unqiue Identifier
     */
    readonly enterpriseManagerIdentifier: string;
    /**
     * Source of the database entity.
     */
    readonly entitySource: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    readonly freeformTags: {[key: string]: any};
    /**
     * Database insight identifier
     */
    readonly id: string;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    readonly lifecycleDetails: string;
    /**
     * Processor count.
     */
    readonly processorCount: number;
    /**
     * The current state of the database.
     */
    readonly state: string;
    /**
     * Indicates the status of a database insight in Operations Insights
     */
    readonly status: string;
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    readonly systemTags: {[key: string]: any};
    /**
     * The time the the database insight was first enabled. An RFC3339 formatted datetime string
     */
    readonly timeCreated: string;
    /**
     * The time the database insight was updated. An RFC3339 formatted datetime string
     */
    readonly timeUpdated: string;
}
