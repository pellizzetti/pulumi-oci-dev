// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Database Insights in Oracle Cloud Infrastructure Opsi service.
 *
 * Gets a list of database insights based on the query parameters specified. Either compartmentId or id query parameter must be specified.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testDatabaseInsights = oci.opsi.getDatabaseInsights({
 *     compartmentId: _var.compartment_id,
 *     databaseIds: oci_database_database.test_database.id,
 *     databaseTypes: _var.database_insight_database_type,
 *     enterpriseManagerBridgeId: oci_opsi_enterprise_manager_bridge.test_enterprise_manager_bridge.id,
 *     fields: _var.database_insight_fields,
 *     id: _var.database_insight_id,
 *     states: _var.database_insight_state,
 *     statuses: _var.database_insight_status,
 * });
 * ```
 */
export function getDatabaseInsights(args?: GetDatabaseInsightsArgs, opts?: pulumi.InvokeOptions): Promise<GetDatabaseInsightsResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("oci:opsi/getDatabaseInsights:getDatabaseInsights", {
        "compartmentId": args.compartmentId,
        "databaseIds": args.databaseIds,
        "databaseTypes": args.databaseTypes,
        "enterpriseManagerBridgeId": args.enterpriseManagerBridgeId,
        "fields": args.fields,
        "filters": args.filters,
        "id": args.id,
        "states": args.states,
        "statuses": args.statuses,
    }, opts);
}

/**
 * A collection of arguments for invoking getDatabaseInsights.
 */
export interface GetDatabaseInsightsArgs {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId?: string;
    /**
     * Optional list of database [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the associated DBaaS entity.
     */
    databaseIds?: string[];
    /**
     * Filter by one or more database type. Possible values are ADW-S, ATP-S, ADW-D, ATP-D, EXTERNAL-PDB, EXTERNAL-NONCDB.
     */
    databaseTypes?: string[];
    /**
     * Unique Enterprise Manager bridge identifier
     */
    enterpriseManagerBridgeId?: string;
    /**
     * Specifies the fields to return in a database summary response. By default all fields are returned if omitted.
     */
    fields?: string[];
    filters?: inputs.opsi.GetDatabaseInsightsFilter[];
    /**
     * Optional database insight resource [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database insight resource.
     */
    id?: string;
    /**
     * Lifecycle states
     */
    states?: string[];
    /**
     * Resource Status
     */
    statuses?: string[];
}

/**
 * A collection of values returned by getDatabaseInsights.
 */
export interface GetDatabaseInsightsResult {
    /**
     * Compartment identifier of the database
     */
    readonly compartmentId?: string;
    readonly databaseIds?: string[];
    /**
     * The list of database_insights_collection.
     */
    readonly databaseInsightsCollections: outputs.opsi.GetDatabaseInsightsDatabaseInsightsCollection[];
    /**
     * Operations Insights internal representation of the database type.
     */
    readonly databaseTypes?: string[];
    /**
     * OPSI Enterprise Manager Bridge OCID
     */
    readonly enterpriseManagerBridgeId?: string;
    readonly fields?: string[];
    readonly filters?: outputs.opsi.GetDatabaseInsightsFilter[];
    /**
     * Database insight identifier
     */
    readonly id?: string;
    /**
     * The current state of the database.
     */
    readonly states?: string[];
    /**
     * Indicates the status of a database insight in Operations Insights
     */
    readonly statuses?: string[];
}
