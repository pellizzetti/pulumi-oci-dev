// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Category resource in Oracle Cloud Infrastructure Optimizer service.
 *
 * Gets the category that corresponds to the specified OCID.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testCategory = oci.optimizer.getCategory({
 *     categoryId: oci_optimizer_category.test_category.id,
 * });
 * ```
 */
export function getCategory(args: GetCategoryArgs, opts?: pulumi.InvokeOptions): Promise<GetCategoryResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("oci:optimizer/getCategory:getCategory", {
        "categoryId": args.categoryId,
    }, opts);
}

/**
 * A collection of arguments for invoking getCategory.
 */
export interface GetCategoryArgs {
    /**
     * The unique OCID associated with the category.
     */
    categoryId: string;
}

/**
 * A collection of values returned by getCategory.
 */
export interface GetCategoryResult {
    readonly categoryId: string;
    /**
     * The OCID of the tenancy. The tenancy is the root compartment.
     */
    readonly compartmentId: string;
    /**
     * Text describing the category. Avoid entering confidential information.
     */
    readonly description: string;
    /**
     * The estimated cost savings, in dollars, for the category.
     */
    readonly estimatedCostSaving: number;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The name assigned to the category. Avoid entering confidential information.
     */
    readonly name: string;
    /**
     * An array of `RecommendationCount` objects grouped by the level of importance assigned to the recommendation.
     */
    readonly recommendationCounts: outputs.optimizer.GetCategoryRecommendationCount[];
    /**
     * An array of `ResourceCount` objects grouped by the status of the recommendation.
     */
    readonly resourceCounts: outputs.optimizer.GetCategoryResourceCount[];
    /**
     * The category's current state.
     */
    readonly state: string;
    /**
     * The date and time the category details were created, in the format defined by RFC3339.
     */
    readonly timeCreated: string;
    /**
     * The date and time the category details were last updated, in the format defined by RFC3339.
     */
    readonly timeUpdated: string;
}
