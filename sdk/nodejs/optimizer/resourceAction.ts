// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * This resource provides the Resource Action resource in Oracle Cloud Infrastructure Optimizer service.
 *
 * Updates the resource action that corresponds to the specified OCID.
 * Use this operation to implement the following actions:
 *
 *   * Postpone resource action
 *   * Ignore resource action
 *   * Reactivate resource action
 *
 * ## Import
 *
 * ResourceActions can be imported using the `id`, e.g.
 *
 * ```sh
 *  $ pulumi import oci:optimizer/resourceAction:ResourceAction test_resource_action "id"
 * ```
 */
export class ResourceAction extends pulumi.CustomResource {
    /**
     * Get an existing ResourceAction resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ResourceActionState, opts?: pulumi.CustomResourceOptions): ResourceAction {
        return new ResourceAction(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:optimizer/resourceAction:ResourceAction';

    /**
     * Returns true if the given object is an instance of ResourceAction.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ResourceAction {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ResourceAction.__pulumiType;
    }

    /**
     * Details about the recommended action.
     */
    public /*out*/ readonly action!: pulumi.Output<outputs.optimizer.ResourceActionAction>;
    /**
     * The unique OCID associated with the category.
     */
    public /*out*/ readonly categoryId!: pulumi.Output<string>;
    /**
     * The OCID of the compartment.
     */
    public /*out*/ readonly compartmentId!: pulumi.Output<string>;
    /**
     * The name associated with the compartment.
     */
    public /*out*/ readonly compartmentName!: pulumi.Output<string>;
    /**
     * The estimated cost savings, in dollars, for the resource action.
     */
    public /*out*/ readonly estimatedCostSaving!: pulumi.Output<number>;
    /**
     * Additional metadata key/value pairs that you provide. They serve the same purpose and functionality as fields in the `metadata` object.
     */
    public /*out*/ readonly extendedMetadata!: pulumi.Output<{[key: string]: any}>;
    /**
     * Custom metadata key/value pairs for the resource action.
     */
    public /*out*/ readonly metadata!: pulumi.Output<{[key: string]: any}>;
    /**
     * The name assigned to the resource.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * The unique OCID associated with the recommendation.
     */
    public /*out*/ readonly recommendationId!: pulumi.Output<string>;
    /**
     * The unique OCID associated with the resource action.
     */
    public readonly resourceActionId!: pulumi.Output<string>;
    /**
     * The unique OCID associated with the resource.
     */
    public /*out*/ readonly resourceId!: pulumi.Output<string>;
    /**
     * The kind of resource.
     */
    public /*out*/ readonly resourceType!: pulumi.Output<string>;
    /**
     * The resource action's current state.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * (Updatable) The status of the resource action.
     */
    public readonly status!: pulumi.Output<string>;
    /**
     * The date and time the resource action details were created, in the format defined by RFC3339.
     */
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    /**
     * The date and time that the resource action entered its current status. The format is defined by RFC3339.
     */
    public /*out*/ readonly timeStatusBegin!: pulumi.Output<string>;
    /**
     * (Updatable) The date and time the current status will change. The format is defined by RFC3339.
     */
    public readonly timeStatusEnd!: pulumi.Output<string>;
    /**
     * The date and time the resource action details were last updated, in the format defined by RFC3339.
     */
    public /*out*/ readonly timeUpdated!: pulumi.Output<string>;

    /**
     * Create a ResourceAction resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ResourceActionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ResourceActionArgs | ResourceActionState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ResourceActionState | undefined;
            inputs["action"] = state ? state.action : undefined;
            inputs["categoryId"] = state ? state.categoryId : undefined;
            inputs["compartmentId"] = state ? state.compartmentId : undefined;
            inputs["compartmentName"] = state ? state.compartmentName : undefined;
            inputs["estimatedCostSaving"] = state ? state.estimatedCostSaving : undefined;
            inputs["extendedMetadata"] = state ? state.extendedMetadata : undefined;
            inputs["metadata"] = state ? state.metadata : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["recommendationId"] = state ? state.recommendationId : undefined;
            inputs["resourceActionId"] = state ? state.resourceActionId : undefined;
            inputs["resourceId"] = state ? state.resourceId : undefined;
            inputs["resourceType"] = state ? state.resourceType : undefined;
            inputs["state"] = state ? state.state : undefined;
            inputs["status"] = state ? state.status : undefined;
            inputs["timeCreated"] = state ? state.timeCreated : undefined;
            inputs["timeStatusBegin"] = state ? state.timeStatusBegin : undefined;
            inputs["timeStatusEnd"] = state ? state.timeStatusEnd : undefined;
            inputs["timeUpdated"] = state ? state.timeUpdated : undefined;
        } else {
            const args = argsOrState as ResourceActionArgs | undefined;
            if ((!args || args.resourceActionId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceActionId'");
            }
            if ((!args || args.status === undefined) && !opts.urn) {
                throw new Error("Missing required property 'status'");
            }
            inputs["resourceActionId"] = args ? args.resourceActionId : undefined;
            inputs["status"] = args ? args.status : undefined;
            inputs["timeStatusEnd"] = args ? args.timeStatusEnd : undefined;
            inputs["action"] = undefined /*out*/;
            inputs["categoryId"] = undefined /*out*/;
            inputs["compartmentId"] = undefined /*out*/;
            inputs["compartmentName"] = undefined /*out*/;
            inputs["estimatedCostSaving"] = undefined /*out*/;
            inputs["extendedMetadata"] = undefined /*out*/;
            inputs["metadata"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["recommendationId"] = undefined /*out*/;
            inputs["resourceId"] = undefined /*out*/;
            inputs["resourceType"] = undefined /*out*/;
            inputs["state"] = undefined /*out*/;
            inputs["timeCreated"] = undefined /*out*/;
            inputs["timeStatusBegin"] = undefined /*out*/;
            inputs["timeUpdated"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(ResourceAction.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ResourceAction resources.
 */
export interface ResourceActionState {
    /**
     * Details about the recommended action.
     */
    action?: pulumi.Input<inputs.optimizer.ResourceActionAction>;
    /**
     * The unique OCID associated with the category.
     */
    categoryId?: pulumi.Input<string>;
    /**
     * The OCID of the compartment.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * The name associated with the compartment.
     */
    compartmentName?: pulumi.Input<string>;
    /**
     * The estimated cost savings, in dollars, for the resource action.
     */
    estimatedCostSaving?: pulumi.Input<number>;
    /**
     * Additional metadata key/value pairs that you provide. They serve the same purpose and functionality as fields in the `metadata` object.
     */
    extendedMetadata?: pulumi.Input<{[key: string]: any}>;
    /**
     * Custom metadata key/value pairs for the resource action.
     */
    metadata?: pulumi.Input<{[key: string]: any}>;
    /**
     * The name assigned to the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * The unique OCID associated with the recommendation.
     */
    recommendationId?: pulumi.Input<string>;
    /**
     * The unique OCID associated with the resource action.
     */
    resourceActionId?: pulumi.Input<string>;
    /**
     * The unique OCID associated with the resource.
     */
    resourceId?: pulumi.Input<string>;
    /**
     * The kind of resource.
     */
    resourceType?: pulumi.Input<string>;
    /**
     * The resource action's current state.
     */
    state?: pulumi.Input<string>;
    /**
     * (Updatable) The status of the resource action.
     */
    status?: pulumi.Input<string>;
    /**
     * The date and time the resource action details were created, in the format defined by RFC3339.
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * The date and time that the resource action entered its current status. The format is defined by RFC3339.
     */
    timeStatusBegin?: pulumi.Input<string>;
    /**
     * (Updatable) The date and time the current status will change. The format is defined by RFC3339.
     */
    timeStatusEnd?: pulumi.Input<string>;
    /**
     * The date and time the resource action details were last updated, in the format defined by RFC3339.
     */
    timeUpdated?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ResourceAction resource.
 */
export interface ResourceActionArgs {
    /**
     * The unique OCID associated with the resource action.
     */
    resourceActionId: pulumi.Input<string>;
    /**
     * (Updatable) The status of the resource action.
     */
    status: pulumi.Input<string>;
    /**
     * (Updatable) The date and time the current status will change. The format is defined by RFC3339.
     */
    timeStatusEnd?: pulumi.Input<string>;
}
