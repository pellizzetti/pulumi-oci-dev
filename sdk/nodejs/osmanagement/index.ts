// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export * from "./getManagedInstance";
export * from "./getManagedInstanceGroup";
export * from "./getManagedInstanceGroups";
export * from "./getManagedInstances";
export * from "./getSoftwareSource";
export * from "./getSoftwareSources";
export * from "./managedInstanceGroup";
export * from "./managedInstanceManagement";
export * from "./softwareSource";

// Import resources to register:
import { ManagedInstanceGroup } from "./managedInstanceGroup";
import { ManagedInstanceManagement } from "./managedInstanceManagement";
import { SoftwareSource } from "./softwareSource";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "oci:osmanagement/managedInstanceGroup:ManagedInstanceGroup":
                return new ManagedInstanceGroup(name, <any>undefined, { urn })
            case "oci:osmanagement/managedInstanceManagement:ManagedInstanceManagement":
                return new ManagedInstanceManagement(name, <any>undefined, { urn })
            case "oci:osmanagement/softwareSource:SoftwareSource":
                return new SoftwareSource(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("oci", "osmanagement/managedInstanceGroup", _module)
pulumi.runtime.registerResourceModule("oci", "osmanagement/managedInstanceManagement", _module)
pulumi.runtime.registerResourceModule("oci", "osmanagement/softwareSource", _module)
