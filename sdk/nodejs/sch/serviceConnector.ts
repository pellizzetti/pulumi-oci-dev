// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * This resource provides the Service Connector resource in Oracle Cloud Infrastructure Service Connector Hub service.
 *
 * Creates a new service connector in the specified compartment.
 * A service connector is a logically defined flow for moving data from
 * a source service to a destination service in Oracle Cloud Infrastructure.
 * For general information about service connectors, see
 * [Service Connector Hub Overview](https://docs.cloud.oracle.com/iaas/Content/service-connector-hub/overview.htm).
 *
 * For purposes of access control, you must provide the
 * [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment where
 * you want the service connector to reside. Notice that the service connector
 * doesn't have to be in the same compartment as the source or target services.
 * For information about access control and compartments, see
 * [Overview of the IAM Service](https://docs.cloud.oracle.com/iaas/Content/Identity/Concepts/overview.htm).
 *
 * After you send your request, the new service connector's state is temporarily
 * CREATING. When the state changes to ACTIVE, data begins transferring from the
 * source service to the target service. For instructions on deactivating and
 * activating service connectors, see
 * [To activate or deactivate a service connector](https://docs.cloud.oracle.com/iaas/Content/service-connector-hub/overview.htm).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testServiceConnector = new oci.sch.ServiceConnector("testServiceConnector", {
 *     compartmentId: _var.compartment_id,
 *     displayName: _var.service_connector_display_name,
 *     source: {
 *         kind: _var.service_connector_source_kind,
 *         cursor: {
 *             kind: _var.service_connector_source_cursor_kind,
 *         },
 *         logSources: [{
 *             compartmentId: _var.compartment_id,
 *             logGroupId: oci_logging_log_group.test_log_group.id,
 *             logId: oci_logging_log.test_log.id,
 *         }],
 *         streamId: oci_streaming_stream.test_stream.id,
 *     },
 *     target: {
 *         kind: _var.service_connector_target_kind,
 *         batchRolloverSizeInMbs: _var.service_connector_target_batch_rollover_size_in_mbs,
 *         batchRolloverTimeInMs: _var.service_connector_target_batch_rollover_time_in_ms,
 *         bucket: _var.service_connector_target_bucket,
 *         compartmentId: _var.compartment_id,
 *         enableFormattedMessaging: _var.service_connector_target_enable_formatted_messaging,
 *         functionId: oci_functions_function.test_function.id,
 *         logGroupId: oci_logging_log_group.test_log_group.id,
 *         metric: _var.service_connector_target_metric,
 *         metricNamespace: _var.service_connector_target_metric_namespace,
 *         namespace: _var.service_connector_target_namespace,
 *         objectNamePrefix: _var.service_connector_target_object_name_prefix,
 *         streamId: oci_streaming_stream.test_stream.id,
 *         topicId: oci_ons_notification_topic.test_notification_topic.id,
 *     },
 *     definedTags: {
 *         "foo-namespace.bar-key": "value",
 *     },
 *     description: _var.service_connector_description,
 *     freeformTags: {
 *         "bar-key": "value",
 *     },
 *     tasks: [{
 *         kind: _var.service_connector_tasks_kind,
 *         batchSizeInKbs: _var.service_connector_tasks_batch_size_in_kbs,
 *         batchTimeInSec: _var.service_connector_tasks_batch_time_in_sec,
 *         condition: _var.service_connector_tasks_condition,
 *         functionId: oci_functions_function.test_function.id,
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * ServiceConnectors can be imported using the `id`, e.g.
 *
 * ```sh
 *  $ pulumi import oci:sch/serviceConnector:ServiceConnector test_service_connector "id"
 * ```
 */
export class ServiceConnector extends pulumi.CustomResource {
    /**
     * Get an existing ServiceConnector resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ServiceConnectorState, opts?: pulumi.CustomResourceOptions): ServiceConnector {
        return new ServiceConnector(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:sch/serviceConnector:ServiceConnector';

    /**
     * Returns true if the given object is an instance of ServiceConnector.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ServiceConnector {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ServiceConnector.__pulumiType;
    }

    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the metric.
     */
    public readonly compartmentId!: pulumi.Output<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    public readonly definedTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * (Updatable) The description of the resource. Avoid entering confidential information.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * (Updatable) A user-friendly name. It does not have to be unique, and it is changeable. Avoid entering confidential information.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    public readonly freeformTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * A message describing the current state in more detail. For example, the message might provide actionable information for a resource in a `FAILED` state.
     */
    public /*out*/ readonly lifecyleDetails!: pulumi.Output<string>;
    /**
     * (Updatable) An object that represents the source of the flow defined by the service connector. An example source is the VCNFlow logs within the NetworkLogs group. For more information about flows defined by service connectors, see [Service Connector Hub Overview](https://docs.cloud.oracle.com/iaas/Content/service-connector-hub/overview.htm).
     */
    public readonly source!: pulumi.Output<outputs.sch.ServiceConnectorSource>;
    /**
     * (Updatable) The target state for the service connector. Could be set to `ACTIVE` or `INACTIVE`.
     */
    public readonly state!: pulumi.Output<string>;
    /**
     * The system tags associated with this resource, if any. The system tags are set by Oracle Cloud Infrastructure services. Each key is predefined and scoped to namespaces. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{orcl-cloud: {free-tier-retain: true}}`
     */
    public /*out*/ readonly systemTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * (Updatable) An object that represents the target of the flow defined by the service connector. An example target is a stream. For more information about flows defined by service connectors, see [Service Connector Hub Overview](https://docs.cloud.oracle.com/iaas/Content/service-connector-hub/overview.htm).
     */
    public readonly target!: pulumi.Output<outputs.sch.ServiceConnectorTarget>;
    /**
     * (Updatable) The list of tasks.
     */
    public readonly tasks!: pulumi.Output<outputs.sch.ServiceConnectorTask[]>;
    /**
     * The date and time when the service connector was created. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2020-01-25T21:10:29.600Z`
     */
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    /**
     * The date and time when the service connector was updated. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2020-01-25T21:10:29.600Z`
     */
    public /*out*/ readonly timeUpdated!: pulumi.Output<string>;

    /**
     * Create a ServiceConnector resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ServiceConnectorArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ServiceConnectorArgs | ServiceConnectorState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ServiceConnectorState | undefined;
            inputs["compartmentId"] = state ? state.compartmentId : undefined;
            inputs["definedTags"] = state ? state.definedTags : undefined;
            inputs["description"] = state ? state.description : undefined;
            inputs["displayName"] = state ? state.displayName : undefined;
            inputs["freeformTags"] = state ? state.freeformTags : undefined;
            inputs["lifecyleDetails"] = state ? state.lifecyleDetails : undefined;
            inputs["source"] = state ? state.source : undefined;
            inputs["state"] = state ? state.state : undefined;
            inputs["systemTags"] = state ? state.systemTags : undefined;
            inputs["target"] = state ? state.target : undefined;
            inputs["tasks"] = state ? state.tasks : undefined;
            inputs["timeCreated"] = state ? state.timeCreated : undefined;
            inputs["timeUpdated"] = state ? state.timeUpdated : undefined;
        } else {
            const args = argsOrState as ServiceConnectorArgs | undefined;
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if ((!args || args.source === undefined) && !opts.urn) {
                throw new Error("Missing required property 'source'");
            }
            if ((!args || args.target === undefined) && !opts.urn) {
                throw new Error("Missing required property 'target'");
            }
            inputs["compartmentId"] = args ? args.compartmentId : undefined;
            inputs["definedTags"] = args ? args.definedTags : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["displayName"] = args ? args.displayName : undefined;
            inputs["freeformTags"] = args ? args.freeformTags : undefined;
            inputs["source"] = args ? args.source : undefined;
            inputs["state"] = args ? args.state : undefined;
            inputs["target"] = args ? args.target : undefined;
            inputs["tasks"] = args ? args.tasks : undefined;
            inputs["lifecyleDetails"] = undefined /*out*/;
            inputs["systemTags"] = undefined /*out*/;
            inputs["timeCreated"] = undefined /*out*/;
            inputs["timeUpdated"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(ServiceConnector.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ServiceConnector resources.
 */
export interface ServiceConnectorState {
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the metric.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) The description of the resource. Avoid entering confidential information.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) A user-friendly name. It does not have to be unique, and it is changeable. Avoid entering confidential information.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * A message describing the current state in more detail. For example, the message might provide actionable information for a resource in a `FAILED` state.
     */
    lifecyleDetails?: pulumi.Input<string>;
    /**
     * (Updatable) An object that represents the source of the flow defined by the service connector. An example source is the VCNFlow logs within the NetworkLogs group. For more information about flows defined by service connectors, see [Service Connector Hub Overview](https://docs.cloud.oracle.com/iaas/Content/service-connector-hub/overview.htm).
     */
    source?: pulumi.Input<inputs.sch.ServiceConnectorSource>;
    /**
     * (Updatable) The target state for the service connector. Could be set to `ACTIVE` or `INACTIVE`.
     */
    state?: pulumi.Input<string>;
    /**
     * The system tags associated with this resource, if any. The system tags are set by Oracle Cloud Infrastructure services. Each key is predefined and scoped to namespaces. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{orcl-cloud: {free-tier-retain: true}}`
     */
    systemTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) An object that represents the target of the flow defined by the service connector. An example target is a stream. For more information about flows defined by service connectors, see [Service Connector Hub Overview](https://docs.cloud.oracle.com/iaas/Content/service-connector-hub/overview.htm).
     */
    target?: pulumi.Input<inputs.sch.ServiceConnectorTarget>;
    /**
     * (Updatable) The list of tasks.
     */
    tasks?: pulumi.Input<pulumi.Input<inputs.sch.ServiceConnectorTask>[]>;
    /**
     * The date and time when the service connector was created. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2020-01-25T21:10:29.600Z`
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * The date and time when the service connector was updated. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2020-01-25T21:10:29.600Z`
     */
    timeUpdated?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ServiceConnector resource.
 */
export interface ServiceConnectorArgs {
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the metric.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) The description of the resource. Avoid entering confidential information.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) A user-friendly name. It does not have to be unique, and it is changeable. Avoid entering confidential information.
     */
    displayName: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) An object that represents the source of the flow defined by the service connector. An example source is the VCNFlow logs within the NetworkLogs group. For more information about flows defined by service connectors, see [Service Connector Hub Overview](https://docs.cloud.oracle.com/iaas/Content/service-connector-hub/overview.htm).
     */
    source: pulumi.Input<inputs.sch.ServiceConnectorSource>;
    /**
     * (Updatable) The target state for the service connector. Could be set to `ACTIVE` or `INACTIVE`.
     */
    state?: pulumi.Input<string>;
    /**
     * (Updatable) An object that represents the target of the flow defined by the service connector. An example target is a stream. For more information about flows defined by service connectors, see [Service Connector Hub Overview](https://docs.cloud.oracle.com/iaas/Content/service-connector-hub/overview.htm).
     */
    target: pulumi.Input<inputs.sch.ServiceConnectorTarget>;
    /**
     * (Updatable) The list of tasks.
     */
    tasks?: pulumi.Input<pulumi.Input<inputs.sch.ServiceConnectorTask>[]>;
}
