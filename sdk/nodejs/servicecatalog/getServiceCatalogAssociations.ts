// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Service Catalog Associations in Oracle Cloud Infrastructure Service Catalog service.
 *
 * Lists all the resource associations for a specific service catalog.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testServiceCatalogAssociations = oci.servicecatalog.getServiceCatalogAssociations({
 *     entityId: oci_service_catalog_entity.test_entity.id,
 *     entityType: _var.service_catalog_association_entity_type,
 *     serviceCatalogAssociationId: oci_service_catalog_service_catalog_association.test_service_catalog_association.id,
 *     serviceCatalogId: oci_service_catalog_service_catalog.test_service_catalog.id,
 * });
 * ```
 */
export function getServiceCatalogAssociations(args?: GetServiceCatalogAssociationsArgs, opts?: pulumi.InvokeOptions): Promise<GetServiceCatalogAssociationsResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("oci:servicecatalog/getServiceCatalogAssociations:getServiceCatalogAssociations", {
        "entityId": args.entityId,
        "entityType": args.entityType,
        "filters": args.filters,
        "serviceCatalogAssociationId": args.serviceCatalogAssociationId,
        "serviceCatalogId": args.serviceCatalogId,
    }, opts);
}

/**
 * A collection of arguments for invoking getServiceCatalogAssociations.
 */
export interface GetServiceCatalogAssociationsArgs {
    /**
     * The unique identifier of the entity associated with service catalog.
     */
    entityId?: string;
    /**
     * The type of the application in the service catalog.
     */
    entityType?: string;
    filters?: inputs.servicecatalog.GetServiceCatalogAssociationsFilter[];
    /**
     * The unique identifier for the service catalog association.
     */
    serviceCatalogAssociationId?: string;
    /**
     * The unique identifier for the service catalog.
     */
    serviceCatalogId?: string;
}

/**
 * A collection of values returned by getServiceCatalogAssociations.
 */
export interface GetServiceCatalogAssociationsResult {
    /**
     * Identifier of the entity being associated with service catalog.
     */
    readonly entityId?: string;
    /**
     * The type of the entity that is associated with the service catalog.
     */
    readonly entityType?: string;
    readonly filters?: outputs.servicecatalog.GetServiceCatalogAssociationsFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The list of service_catalog_association_collection.
     */
    readonly serviceCatalogAssociationCollections: outputs.servicecatalog.GetServiceCatalogAssociationsServiceCatalogAssociationCollection[];
    readonly serviceCatalogAssociationId?: string;
    /**
     * Identifier of the service catalog.
     */
    readonly serviceCatalogId?: string;
}
