// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * This resource provides the Container Scan Target resource in Oracle Cloud Infrastructure Vulnerability Scanning service.
 *
 * Creates a new ContainerScanTarget
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testContainerScanTarget = new oci.vulnerabilityscanning.ContainerScanTarget("testContainerScanTarget", {
 *     compartmentId: _var.compartment_id,
 *     containerScanRecipeId: oci_vulnerability_scanning_container_scan_recipe.test_container_scan_recipe.id,
 *     targetRegistry: {
 *         compartmentId: _var.compartment_id,
 *         type: _var.container_scan_target_target_registry_type,
 *         repositories: _var.container_scan_target_target_registry_repositories,
 *         url: _var.container_scan_target_target_registry_url,
 *     },
 *     definedTags: {
 *         "foo-namespace.bar-key": "value",
 *     },
 *     description: _var.container_scan_target_description,
 *     displayName: _var.container_scan_target_display_name,
 *     freeformTags: {
 *         "bar-key": "value",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * ContainerScanTargets can be imported using the `id`, e.g.
 *
 * ```sh
 *  $ pulumi import oci:vulnerabilityscanning/containerScanTarget:ContainerScanTarget test_container_scan_target "id"
 * ```
 */
export class ContainerScanTarget extends pulumi.CustomResource {
    /**
     * Get an existing ContainerScanTarget resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ContainerScanTargetState, opts?: pulumi.CustomResourceOptions): ContainerScanTarget {
        return new ContainerScanTarget(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:vulnerabilityscanning/containerScanTarget:ContainerScanTarget';

    /**
     * Returns true if the given object is an instance of ContainerScanTarget.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ContainerScanTarget {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ContainerScanTarget.__pulumiType;
    }

    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to perform the scans in. All listed repositories must be in the compartment.
     */
    public readonly compartmentId!: pulumi.Output<string>;
    /**
     * (Updatable) ID of the container scan recipe this target applies.
     */
    public readonly containerScanRecipeId!: pulumi.Output<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    public readonly definedTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * (Updatable) Target description.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * (Updatable) User friendly name of container scan target. If not present, will be auto-generated.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    public readonly freeformTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * The current state of the config.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    public /*out*/ readonly systemTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * (Updatable) Registry information for a container scan target
     */
    public readonly targetRegistry!: pulumi.Output<outputs.vulnerabilityscanning.ContainerScanTargetTargetRegistry>;
    /**
     * Date and time the target was created, format as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)
     */
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    /**
     * Date and time the target was last updated, format as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)
     */
    public /*out*/ readonly timeUpdated!: pulumi.Output<string>;

    /**
     * Create a ContainerScanTarget resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ContainerScanTargetArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ContainerScanTargetArgs | ContainerScanTargetState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ContainerScanTargetState | undefined;
            inputs["compartmentId"] = state ? state.compartmentId : undefined;
            inputs["containerScanRecipeId"] = state ? state.containerScanRecipeId : undefined;
            inputs["definedTags"] = state ? state.definedTags : undefined;
            inputs["description"] = state ? state.description : undefined;
            inputs["displayName"] = state ? state.displayName : undefined;
            inputs["freeformTags"] = state ? state.freeformTags : undefined;
            inputs["state"] = state ? state.state : undefined;
            inputs["systemTags"] = state ? state.systemTags : undefined;
            inputs["targetRegistry"] = state ? state.targetRegistry : undefined;
            inputs["timeCreated"] = state ? state.timeCreated : undefined;
            inputs["timeUpdated"] = state ? state.timeUpdated : undefined;
        } else {
            const args = argsOrState as ContainerScanTargetArgs | undefined;
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.containerScanRecipeId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'containerScanRecipeId'");
            }
            if ((!args || args.targetRegistry === undefined) && !opts.urn) {
                throw new Error("Missing required property 'targetRegistry'");
            }
            inputs["compartmentId"] = args ? args.compartmentId : undefined;
            inputs["containerScanRecipeId"] = args ? args.containerScanRecipeId : undefined;
            inputs["definedTags"] = args ? args.definedTags : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["displayName"] = args ? args.displayName : undefined;
            inputs["freeformTags"] = args ? args.freeformTags : undefined;
            inputs["targetRegistry"] = args ? args.targetRegistry : undefined;
            inputs["state"] = undefined /*out*/;
            inputs["systemTags"] = undefined /*out*/;
            inputs["timeCreated"] = undefined /*out*/;
            inputs["timeUpdated"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(ContainerScanTarget.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ContainerScanTarget resources.
 */
export interface ContainerScanTargetState {
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to perform the scans in. All listed repositories must be in the compartment.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * (Updatable) ID of the container scan recipe this target applies.
     */
    containerScanRecipeId?: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) Target description.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) User friendly name of container scan target. If not present, will be auto-generated.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * The current state of the config.
     */
    state?: pulumi.Input<string>;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    systemTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) Registry information for a container scan target
     */
    targetRegistry?: pulumi.Input<inputs.vulnerabilityscanning.ContainerScanTargetTargetRegistry>;
    /**
     * Date and time the target was created, format as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * Date and time the target was last updated, format as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)
     */
    timeUpdated?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ContainerScanTarget resource.
 */
export interface ContainerScanTargetArgs {
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to perform the scans in. All listed repositories must be in the compartment.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * (Updatable) ID of the container scan recipe this target applies.
     */
    containerScanRecipeId: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) Target description.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) User friendly name of container scan target. If not present, will be auto-generated.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) Registry information for a container scan target
     */
    targetRegistry: pulumi.Input<inputs.vulnerabilityscanning.ContainerScanTargetTargetRegistry>;
}
