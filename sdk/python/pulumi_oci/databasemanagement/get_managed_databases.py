# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = [
    'GetManagedDatabasesResult',
    'AwaitableGetManagedDatabasesResult',
    'get_managed_databases',
]

@pulumi.output_type
class GetManagedDatabasesResult:
    """
    A collection of values returned by getManagedDatabases.
    """
    def __init__(__self__, compartment_id=None, filters=None, id=None, managed_database_collections=None, name=None):
        if compartment_id and not isinstance(compartment_id, str):
            raise TypeError("Expected argument 'compartment_id' to be a str")
        pulumi.set(__self__, "compartment_id", compartment_id)
        if filters and not isinstance(filters, list):
            raise TypeError("Expected argument 'filters' to be a list")
        pulumi.set(__self__, "filters", filters)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if managed_database_collections and not isinstance(managed_database_collections, list):
            raise TypeError("Expected argument 'managed_database_collections' to be a list")
        pulumi.set(__self__, "managed_database_collections", managed_database_collections)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)

    @property
    @pulumi.getter(name="compartmentId")
    def compartment_id(self) -> str:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which the Managed Database Group resides.
        """
        return pulumi.get(self, "compartment_id")

    @property
    @pulumi.getter
    def filters(self) -> Optional[Sequence['outputs.GetManagedDatabasesFilterResult']]:
        return pulumi.get(self, "filters")

    @property
    @pulumi.getter
    def id(self) -> Optional[str]:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database Group.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="managedDatabaseCollections")
    def managed_database_collections(self) -> Sequence['outputs.GetManagedDatabasesManagedDatabaseCollectionResult']:
        """
        The list of managed_database_collection.
        """
        return pulumi.get(self, "managed_database_collections")

    @property
    @pulumi.getter
    def name(self) -> Optional[str]:
        """
        The name of the Managed Database.
        """
        return pulumi.get(self, "name")


class AwaitableGetManagedDatabasesResult(GetManagedDatabasesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetManagedDatabasesResult(
            compartment_id=self.compartment_id,
            filters=self.filters,
            id=self.id,
            managed_database_collections=self.managed_database_collections,
            name=self.name)


def get_managed_databases(compartment_id: Optional[str] = None,
                          filters: Optional[Sequence[pulumi.InputType['GetManagedDatabasesFilterArgs']]] = None,
                          id: Optional[str] = None,
                          name: Optional[str] = None,
                          opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetManagedDatabasesResult:
    """
    This data source provides the list of Managed Databases in Oracle Cloud Infrastructure Database Management service.

    Gets the Managed Database for a specific ID or the list of Managed Databases in a specific compartment.
    Managed Databases can also be filtered based on the name parameter. Only one of the parameters, ID or name
    should be provided. If none of these parameters is provided, all the Managed Databases in the compartment are listed.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_oci as oci

    test_managed_databases = oci.databasemanagement.get_managed_databases(compartment_id=var["compartment_id"],
        id=var["managed_database_id"],
        name=var["managed_database_name"])
    ```


    :param str compartment_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
    :param str id: The identifier of the resource.
    :param str name: A filter to return only resources that match the entire name.
    """
    __args__ = dict()
    __args__['compartmentId'] = compartment_id
    __args__['filters'] = filters
    __args__['id'] = id
    __args__['name'] = name
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('oci:databasemanagement/getManagedDatabases:getManagedDatabases', __args__, opts=opts, typ=GetManagedDatabasesResult).value

    return AwaitableGetManagedDatabasesResult(
        compartment_id=__ret__.compartment_id,
        filters=__ret__.filters,
        id=__ret__.id,
        managed_database_collections=__ret__.managed_database_collections,
        name=__ret__.name)
