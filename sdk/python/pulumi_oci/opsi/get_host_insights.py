# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = [
    'GetHostInsightsResult',
    'AwaitableGetHostInsightsResult',
    'get_host_insights',
]

@pulumi.output_type
class GetHostInsightsResult:
    """
    A collection of values returned by getHostInsights.
    """
    def __init__(__self__, compartment_id=None, filters=None, host_insight_summary_collections=None, host_types=None, id=None, states=None, statuses=None):
        if compartment_id and not isinstance(compartment_id, str):
            raise TypeError("Expected argument 'compartment_id' to be a str")
        pulumi.set(__self__, "compartment_id", compartment_id)
        if filters and not isinstance(filters, list):
            raise TypeError("Expected argument 'filters' to be a list")
        pulumi.set(__self__, "filters", filters)
        if host_insight_summary_collections and not isinstance(host_insight_summary_collections, list):
            raise TypeError("Expected argument 'host_insight_summary_collections' to be a list")
        pulumi.set(__self__, "host_insight_summary_collections", host_insight_summary_collections)
        if host_types and not isinstance(host_types, list):
            raise TypeError("Expected argument 'host_types' to be a list")
        pulumi.set(__self__, "host_types", host_types)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if states and not isinstance(states, list):
            raise TypeError("Expected argument 'states' to be a list")
        pulumi.set(__self__, "states", states)
        if statuses and not isinstance(statuses, list):
            raise TypeError("Expected argument 'statuses' to be a list")
        pulumi.set(__self__, "statuses", statuses)

    @property
    @pulumi.getter(name="compartmentId")
    def compartment_id(self) -> Optional[str]:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
        """
        return pulumi.get(self, "compartment_id")

    @property
    @pulumi.getter
    def filters(self) -> Optional[Sequence['outputs.GetHostInsightsFilterResult']]:
        return pulumi.get(self, "filters")

    @property
    @pulumi.getter(name="hostInsightSummaryCollections")
    def host_insight_summary_collections(self) -> Sequence['outputs.GetHostInsightsHostInsightSummaryCollectionResult']:
        """
        The list of host_insight_summary_collection.
        """
        return pulumi.get(self, "host_insight_summary_collections")

    @property
    @pulumi.getter(name="hostTypes")
    def host_types(self) -> Optional[Sequence[str]]:
        """
        Operations Insights internal representation of the host type. Possible value is EXTERNAL-HOST.
        """
        return pulumi.get(self, "host_types")

    @property
    @pulumi.getter
    def id(self) -> Optional[str]:
        """
        The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the host insight resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def states(self) -> Optional[Sequence[str]]:
        """
        The current state of the host.
        """
        return pulumi.get(self, "states")

    @property
    @pulumi.getter
    def statuses(self) -> Optional[Sequence[str]]:
        """
        Indicates the status of a host insight in Operations Insights
        """
        return pulumi.get(self, "statuses")


class AwaitableGetHostInsightsResult(GetHostInsightsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetHostInsightsResult(
            compartment_id=self.compartment_id,
            filters=self.filters,
            host_insight_summary_collections=self.host_insight_summary_collections,
            host_types=self.host_types,
            id=self.id,
            states=self.states,
            statuses=self.statuses)


def get_host_insights(compartment_id: Optional[str] = None,
                      filters: Optional[Sequence[pulumi.InputType['GetHostInsightsFilterArgs']]] = None,
                      host_types: Optional[Sequence[str]] = None,
                      id: Optional[str] = None,
                      states: Optional[Sequence[str]] = None,
                      statuses: Optional[Sequence[str]] = None,
                      opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetHostInsightsResult:
    """
    This data source provides the list of Host Insights in Oracle Cloud Infrastructure Opsi service.

    Gets a list of host insights based on the query parameters specified. Either compartmentId or id query parameter must be specified.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_oci as oci

    test_host_insights = oci.opsi.get_host_insights(compartment_id=var["compartment_id"],
        host_types=var["host_insight_host_type"],
        id=var["host_insight_id"],
        states=var["host_insight_state"],
        statuses=var["host_insight_status"])
    ```


    :param str compartment_id: The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
    :param Sequence[str] host_types: Filter by one or more host types. Possible value is EXTERNAL-HOST.
    :param str id: Optional host insight resource [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the host insight resource.
    :param Sequence[str] states: Lifecycle states
    :param Sequence[str] statuses: Resource Status
    """
    __args__ = dict()
    __args__['compartmentId'] = compartment_id
    __args__['filters'] = filters
    __args__['hostTypes'] = host_types
    __args__['id'] = id
    __args__['states'] = states
    __args__['statuses'] = statuses
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('oci:opsi/getHostInsights:getHostInsights', __args__, opts=opts, typ=GetHostInsightsResult).value

    return AwaitableGetHostInsightsResult(
        compartment_id=__ret__.compartment_id,
        filters=__ret__.filters,
        host_insight_summary_collections=__ret__.host_insight_summary_collections,
        host_types=__ret__.host_types,
        id=__ret__.id,
        states=__ret__.states,
        statuses=__ret__.statuses)
